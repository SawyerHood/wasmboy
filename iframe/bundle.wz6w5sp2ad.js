var WasmBoyIframe=function(){"use strict";function U(){}function F(U){return U()}function Q(){return Object.create(null)}function R(U){U.forEach(F)}function V(U){return"function"==typeof U}function B(U,F){return U!=U?F==F:U!==F||U&&"object"==typeof U||"function"==typeof U}function l(F,Q,R){F.$$.on_destroy.push(function(F,...Q){if(null==F)return U;const R=F.subscribe(...Q);return R.unsubscribe?()=>R.unsubscribe():R}(Q,R))}function d(U,F){U.appendChild(F)}function t(U,F,Q){U.insertBefore(F,Q||null)}function e(U){U.parentNode.removeChild(U)}function J(U){return document.createElement(U)}function n(U){return document.createElementNS("http://www.w3.org/2000/svg",U)}function k(U){return document.createTextNode(U)}function a(){return k(" ")}function S(){return k("")}function N(U,F,Q,R){return U.addEventListener(F,Q,R),()=>U.removeEventListener(F,Q,R)}function Z(U,F,Q){null==Q?U.removeAttribute(F):U.getAttribute(F)!==Q&&U.setAttribute(F,Q)}function E(U,F){F=""+F,U.data!==F&&(U.data=F)}let W;function r(U){W=U}function C(){if(!W)throw new Error("Function called outside component initialization");return W}const h=[],T=[],i=[],o=[],p=Promise.resolve();let s=!1;function c(U){i.push(U)}let m=!1;const D=new Set;function M(){if(!m){m=!0;do{for(let U=0;U<h.length;U+=1){const F=h[U];r(F),G(F.$$)}for(h.length=0;T.length;)T.pop()();for(let U=0;U<i.length;U+=1){const F=i[U];D.has(F)||(D.add(F),F())}i.length=0}while(h.length);for(;o.length;)o.pop()();s=!1,m=!1,D.clear()}}function G(U){if(null!==U.fragment){U.update(),R(U.before_update);const F=U.dirty;U.dirty=[-1],U.fragment&&U.fragment.p(U.ctx,F),U.after_update.forEach(c)}}const u=new Set;let Y;function v(){Y={r:0,c:[],p:Y}}function z(){Y.r||R(Y.c),Y=Y.p}function b(U,F){U&&U.i&&(u.delete(U),U.i(F))}function L(U,F,Q,R){if(U&&U.o){if(u.has(U))return;u.add(U),Y.c.push(()=>{u.delete(U),R&&(Q&&U.d(1),R())}),U.o(F)}}function I(U,F){const Q=F.token={};function R(U,R,V,B){if(F.token!==Q)return;F.resolved=B;let l=F.ctx;void 0!==V&&(l=l.slice(),l[V]=B);const d=U&&(F.current=U)(l);let t=!1;F.block&&(F.blocks?F.blocks.forEach((U,Q)=>{Q!==R&&U&&(v(),L(U,1,1,()=>{F.blocks[Q]=null}),z())}):F.block.d(1),d.c(),b(d,1),d.m(F.mount(),F.anchor),t=!0),F.block=d,F.blocks&&(F.blocks[R]=d),t&&M()}if((V=U)&&"object"==typeof V&&"function"==typeof V.then){const Q=C();if(U.then(U=>{r(Q),R(F.then,1,F.value,U),r(null)},U=>{r(Q),R(F.catch,2,F.error,U),r(null)}),F.current!==F.pending)return R(F.pending,0),!0}else{if(F.current!==F.then)return R(F.then,1,F.value,U),!0;F.resolved=U}var V}function y(U){U&&U.c()}function O(U,Q,B){const{fragment:l,on_mount:d,on_destroy:t,after_update:e}=U.$$;l&&l.m(Q,B),c(()=>{const Q=d.map(F).filter(V);t?t.push(...Q):R(Q),U.$$.on_mount=[]}),e.forEach(c)}function X(U,F){const Q=U.$$;null!==Q.fragment&&(R(Q.on_destroy),Q.fragment&&Q.fragment.d(F),Q.on_destroy=Q.fragment=null,Q.ctx=[])}function g(U,F){-1===U.$$.dirty[0]&&(h.push(U),s||(s=!0,p.then(M)),U.$$.dirty.fill(0)),U.$$.dirty[F/31|0]|=1<<F%31}function x(F,V,B,l,d,t,e=[-1]){const J=W;r(F);const n=V.props||{},k=F.$$={fragment:null,ctx:null,props:t,update:U,not_equal:d,bound:Q(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(J?J.$$.context:[]),callbacks:Q(),dirty:e};let a=!1;k.ctx=B?B(F,n,(U,Q,...R)=>{const V=R.length?R[0]:Q;return k.ctx&&d(k.ctx[U],k.ctx[U]=V)&&(k.bound[U]&&k.bound[U](V),a&&g(F,U)),Q}):[],k.update(),a=!0,R(k.before_update),k.fragment=!!l&&l(k.ctx),V.target&&(V.hydrate?k.fragment&&k.fragment.l(function(U){return Array.from(U.childNodes)}(V.target)):k.fragment&&k.fragment.c(),V.intro&&b(F.$$.fragment),O(F,V.target,V.anchor),M()),r(J)}class K{$destroy(){X(this,1),this.$destroy=U}$on(U,F){const Q=this.$$.callbacks[U]||(this.$$.callbacks[U]=[]);return Q.push(F),()=>{const U=Q.indexOf(F);-1!==U&&Q.splice(U,1)}}$set(){}}const w=[];function j(F,Q=U){let R;const V=[];function l(U){if(B(F,U)&&(F=U,R)){const U=!w.length;for(let U=0;U<V.length;U+=1){const Q=V[U];Q[1](),w.push(Q,F)}if(U){for(let U=0;U<w.length;U+=2)w[U][0](w[U+1]);w.length=0}}}return{set:l,update:function(U){l(U(F))},subscribe:function(B,d=U){const t=[B,d];return V.push(t),1===V.length&&(R=Q(l)||U),B(F),()=>{const U=V.indexOf(t);-1!==U&&V.splice(U,1),0===V.length&&(R(),R=null)}}}}const f=j(!1),H=j(!1),P=j(!1),A=j(0),_=()=>A.set(0),q=j(0);let $;const UU={subscribe:j({message:void 0,timeout:void 0},U=>($=U,()=>{})).subscribe};const FU=(U,F)=>{F||(F=2e3),$&&$({message:U,timeout:F})},QU=new URLSearchParams(document.location.search.substring(1)),RU=j(QU.get("play-poster")),VU=j(QU.get("rom-url")),BU=j(QU.get("rom-name"));function lU(F){let Q,R,V;return{c(){Q=n("svg"),R=n("path"),V=n("path"),Z(R,"d","M8 5v14l11-7z"),Z(R,"fill","#fff"),Z(V,"d","M0 0h24v24H0z"),Z(V,"fill","none"),Z(Q,"xmlns","http://www.w3.org/2000/svg"),Z(Q,"height","24"),Z(Q,"viewBox","0 0 24 24"),Z(Q,"width","24"),Z(Q,"class","svelte-1cmb9l6")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V)},p:U,i:U,o:U,d(U){U&&e(Q)}}}class dU extends K{constructor(U){super(),x(this,U,null,lU,B,{})}}function tU(U){let F,Q;return{c(){F=J("img"),Z(F,"class","play-poster__image svelte-4p8uqe"),F.src!==(Q=U[0])&&Z(F,"src",Q),Z(F,"alt","Wasm boy play poster")},m(U,Q){t(U,F,Q)},p(U,R){1&R&&F.src!==(Q=U[0])&&Z(F,"src",Q)},d(U){U&&e(F)}}}function eU(U){let F,Q,R,V,B,l,n,k=U[0]&&tU(U);const S=new dU({});return{c(){F=J("div"),k&&k.c(),Q=a(),R=J("div"),V=a(),B=J("button"),y(S.$$.fragment),Z(R,"class","play-poster__shade svelte-4p8uqe"),Z(B,"class","play-poster__play-button svelte-4p8uqe"),Z(F,"class","play-poster svelte-4p8uqe")},m(U,e){t(U,F,e),k&&k.m(F,null),d(F,Q),d(F,R),d(F,V),d(F,B),O(S,B,null),l=!0,n=N(B,"click",JU)},p(U,[R]){U[0]?k?k.p(U,R):(k=tU(U),k.c(),k.m(F,Q)):k&&(k.d(1),k=null)},i(U){l||(b(S.$$.fragment,U),l=!0)},o(U){L(S.$$.fragment,U),l=!1},d(U){U&&e(F),k&&k.d(),X(S),n()}}}function JU(){f.set(!0)}function nU(U,F,Q){let R;return l(U,RU,U=>Q(0,R=U)),[R]}class kU extends K{constructor(U){super(),x(this,U,nU,eU,B,{})}}const aU={name:"wasmboy-plugin REQUIRED",graphics:()=>{},audio:()=>{},saveState:()=>{},canvas:()=>{},breakpoint:()=>{},ready:()=>{},play:()=>{},pause:()=>{},loadedAndStarted:()=>{}};const SU=new class{constructor(){this.plugins={},this.pluginIdCounter=0}addPlugin(U){if(!U&&"object"!=typeof U)throw Error("Invalid Plugin Object");if(!U.name)throw Error('Added plugin must have a "name" property');const F=this.pluginIdCounter;return this.plugins[this.pluginIdCounter]=U,this.pluginIdCounter++,()=>{this.removePlugin(F)}}removePlugin(U){delete this.plugins[U]}runHook(U){if(!aU[U.key]||"function"!=typeof aU[U.key])throw Error("No such hook as "+U.key);Object.keys(this.plugins).forEach(F=>{if((F=this.plugins[F])[U.key]){let Q=void 0;try{Q=F[U.key].apply(null,U.params)}catch(Q){console.error(`There was an error running the '${U.key}' hook, on the ${F.name} plugin.`),console.error(Q)}U.callback&&U.callback(Q)}})}},NU="CONNECT",ZU="INSTANTIATE_WASM",EU="CLEAR_MEMORY",WU="GET_MEMORY",rU="SET_MEMORY",CU="GET_CONSTANTS",hU="CONFIG",TU="RESET_AUDIO_QUEUE",iU="PLAY",oU="BREAKPOINT",pU="PAUSE",sU="UPDATED",cU="CRASHED",mU="SET_JOYPAD_STATE",DU="AUDIO_LATENCY",MU="RUN_WASM_EXPORT",GU="GET_WASM_MEMORY_SECTION",uU="GET_WASM_CONSTANT",YU="FORCE_OUTPUT_FRAME",vU="SET_SPEED",zU="IS_GBC",bU="LIB",LU="GRAPHICS",IU="MEMORY",yU="CONTROLLER",OU="AUDIO",XU="BOOT_ROM",gU="CARTRIDGE_RAM",xU="CARTRIDGE_ROM",KU="CARTRIDGE_HEADER",wU="GAMEBOY_MEMORY",jU="PALETTE_MEMORY",fU="INTERNAL_STATE";function HU(U){return U.data?U.data:U}const PU=new class{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0,this.imageDataArrayChanged=!1}initialize(U,F){return this.updateGraphicsCallback=F,this.frameQueue=[],(async()=>{this.canvasElement=U,this.canvasContext=this.canvasElement.getContext("2d"),this.canvasElement.width=160,this.canvasElement.height=144,this.canvasImageData=this.canvasContext.createImageData(this.canvasElement.width,this.canvasElement.height),this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ",this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),SU.runHook({key:"canvas",params:[this.canvasElement,this.canvasContext,this.canvasImageData],callback:U=>{U&&(U.canvasElement&&(this.canvasElement=U.canvasElement),U.canvasContext&&(this.canvasContext=U.canvasContext),U.canvasImageData&&(this.canvasImageData=U.canvasImageData))}}),this.worker&&await this.worker.postMessage({type:CU})})()}setWorker(U){this.worker=U,this.worker.addMessageListener(U=>{switch((U=HU(U)).message.type){case sU:this.imageDataArray=new Uint8ClampedArray(U.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){this.imageDataArrayChanged&&(this.imageDataArrayChanged=!1,this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray),SU.runHook({key:"graphics",params:[this.imageDataArray],callback:U=>{U&&(this.imageDataArray=U)}}),this.canvasImageData.data.set(this.imageDataArray),this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),this.canvasContext.putImageData(this.canvasImageData,0,0))}};function AU(U,F){F=F||{};var Q=U.numberOfChannels,R=U.sampleRate,V=3===(F=F.float32?3:1)?32:16;if(2===Q){var B=U.getChannelData(0);U=U.getChannelData(1);for(var l=B.length+U.length,d=new Float32Array(l),t=0,e=0;t<l;)d[t++]=B[e],d[t++]=U[e],e++;B=d}else B=U.getChannelData(0);if(t=Q*(d=V/8),U=new ArrayBuffer(44+B.length*d),_U(l=new DataView(U),0,"RIFF"),l.setUint32(4,36+B.length*d,!0),_U(l,8,"WAVE"),_U(l,12,"fmt "),l.setUint32(16,16,!0),l.setUint16(20,F,!0),l.setUint16(22,Q,!0),l.setUint32(24,R,!0),l.setUint32(28,R*t,!0),l.setUint16(32,t,!0),l.setUint16(34,V,!0),_U(l,36,"data"),l.setUint32(40,B.length*d,!0),1===F)for(Q=44,R=0;R<B.length;R++,Q+=2)F=Math.max(-1,Math.min(1,B[R])),l.setInt16(Q,0>F?32768*F:32767*F,!0);else for(Q=44,R=0;R<B.length;R++,Q+=4)l.setFloat32(Q,B[R],!0);return U}function _U(U,F,Q){for(var R=0;R<Q.length;R++)U.setUint8(F+R,Q.charCodeAt(R))}class qU{constructor(U){this.id=U,this.audioPlaytime=this.audioBuffer=this.audioContext=void 0,this.audioSources=[],this.gainNode=void 0,this.recording=this.libMuted=this.muted=!1,this.recordingAnchor=this.recordingAudioBuffer=this.recordingRightBuffers=this.recordingLeftBuffers=void 0}createAudioContextIfNone(){this.audioContext||"undefined"==typeof window||(this.audioContext=new(window.AudioContext||window.webkitAudioContext),!0==!!this.audioContext&&(this.gainNode=this.audioContext.createGain()))}getCurrentTime(){if(this.createAudioContextIfNone(),this.audioContext)return this.audioContext.currentTime}getPlayTime(){return this.audioPlaytime}resumeAudioContext(){this.createAudioContextIfNone(),this.audioContext&&"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}playAudio(U,F,Q,R,V){if(this.audioContext){F=new Float32Array(F),Q=new Float32Array(Q),this.audioBuffer=this.audioContext.createBuffer(2,U,44100),this._setSamplesToAudioBuffer(this.audioBuffer,F,Q),this.recording&&(this.recordingLeftBuffers.push(F),this.recordingRightBuffers.push(Q)),(Q=this.audioContext.createBufferSource()).buffer=this.audioBuffer,Q.playbackRate.setValueAtTime(R,this.audioContext.currentTime);var B=Q;for(V&&(V=V(this.audioContext,B,this.id))&&(B=V),SU.runHook({key:"audio",params:[this.audioContext,B,this.id],callback:U=>{U&&(B.connect(U),B=U)}}),this.gainNode&&(B.connect(this.gainNode),B=this.gainNode),B.connect(this.audioContext.destination),F=(V=this.audioContext.currentTime)+.1,this.audioPlaytime=this.audioPlaytime||F,this.audioPlaytime<V&&(this.cancelAllAudio(),this.audioPlaytime=F),Q.start(this.audioPlaytime),this.audioPlaytime+=U/(44100*R);this.audioSources[this.audioSources.length-1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:Q,playTime:this.audioPlaytime}),setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}}cancelAllAudio(U){if(this.audioContext){for(let F=0;F<this.audioSources.length;F++)(U||this.audioSources[F].playTime>this.audioPlaytime)&&this.audioSources[F].source.stop();this.audioSources=[],this.audioPlaytime=this.audioContext.currentTime+.1}}mute(){this.muted||(this._setGain(0),this.muted=!0)}unmute(){this.muted&&(this._setGain(1),this.muted=!1)}hasRecording(){return!!this.recordingAudioBuffer}startRecording(){this.recording||(this.recording=!0,this.recordingLeftBuffers=[],this.recordingRightBuffers=[],this.recordingAudioBuffer=void 0)}stopRecording(){if(this.recording){this.recording=!1;var U=U=>{let F=0;U.forEach(U=>{F+=U.length});const Q=new Float32Array(F);let R=0;return U.forEach(U=>{Q.set(U,R),R+=U.length}),Q},F=U(this.recordingLeftBuffers);U=U(this.recordingRightBuffers),this.recordingAudioBuffer=this.audioContext.createBuffer(2,F.length,44100),this._setSamplesToAudioBuffer(this.recordingAudioBuffer,F,U),this.recordingRightBuffer=this.recordingLeftBuffer=void 0}}downloadRecordingAsWav(U){if(this.recordingAudioBuffer){this.recordingAnchor||(this.recordingAnchor=document.createElement("a"),document.body.appendChild(this.recordingAnchor),this.recordingAnchor.style="display: none");var F=AU(this.recordingAudioBuffer);F=new window.Blob([new DataView(F)],{type:"audio/wav"}),F=window.URL.createObjectURL(F),this.recordingAnchor.href=F,U=U?`${U}.wav`:`wasmboy-${(new Date).toLocaleDateString(void 0,{month:"2-digit",day:"2-digit",year:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})}.wav`,this.recordingAnchor.download=U,this.recordingAnchor.click(),window.URL.revokeObjectURL(F)}}getRecordingAsWavBase64EncodedString(){if(this.recordingAudioBuffer){var U=AU(this.recordingAudioBuffer);return`data:audio/wav;base64,${this._arrayBufferToBase64(U)}`}}getRecordingAsAudioBuffer(){return this.recordingAudioBuffer}_libMute(){this._setGain(0),this.libMuted=!0}_libUnmute(){this.libMuted&&(this._setGain(1),this.libMuted=!1)}_setGain(U){this.createAudioContextIfNone(),this.gainNode&&this.gainNode.gain.setValueAtTime(U,this.audioContext.currentTime)}_setSamplesToAudioBuffer(U,F,Q){U.copyToChannel?(U.copyToChannel(F,0,0),U.copyToChannel(Q,1,0)):(U.getChannelData(0).set(F),U.getChannelData(1).set(Q))}_arrayBufferToBase64(U){let F="",Q=(U=new Uint8Array(U)).byteLength;for(var R=0;R<Q;R++)F+=String.fromCharCode(U[R]);return window.btoa(F)}}const $U=new class{constructor(){this.updateAudioCallback=this.worker=void 0,this.gbChannels={master:new qU("master"),channel1:new qU("channel1"),channel2:new qU("channel2"),channel3:new qU("channel3"),channel4:new qU("channel4")},this._createAudioContextIfNone(),"undefined"!=typeof window&&(this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),this.gbChannels.channel3._libMute(),this.gbChannels.channel4._libMute()),this.averageTimeStretchFps=[],this.speed=1,this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION=this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(U){return(async()=>(this.updateAudioCallback=U,this.averageTimeStretchFps=[],this.speed=1,this._createAudioContextIfNone(),this.cancelAllAudio(),this.worker.postMessage({type:CU})))()}setWorker(U){this.worker=U,this.worker.addMessageListener(U=>{switch((U=HU(U)).message.type){case sU:{this.playAudio(U.message),U=0;let F=this.gbChannels.master.getCurrentTime(),Q=this.gbChannels.master.getPlayTime();F&&0<F&&(U=Q-F),this.worker.postMessageIgnoreResponse({type:DU,latency:U})}}})}getAudioChannels(){return this.gbChannels}setSpeed(U){this.speed=U,this.cancelAllAudio(!0),this.resetTimeStretch()}resetTimeStretch(){this.averageTimeStretchFps=[]}playAudio(U){var F=U.fps,Q=U.allowFastSpeedStretching;let R=U.numberOfSamples;var V=F||60;const B=Math.abs(F-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);for(B&&15<=B&&this.resetTimeStretch(),this.averageTimeStretchFps.push(F),171<this.averageTimeStretchFps.length&&this.averageTimeStretchFps.shift(),57<=this.averageTimeStretchFps.length&&(V=this.averageTimeStretchFps.reduce((U,F)=>U+F),V=Math.floor(V/this.averageTimeStretchFps.length)),F=1,(57>V||Q)&&1===this.speed&&(0>=(F*=V/60)&&(F=.01)),F*=this.speed,this.gbChannels.master.playAudio(R,U.audioBuffer.left,U.audioBuffer.right,F,this.updateAudioCallback),Q=0;4>Q;Q++)U[`channel${V=Q+1}Buffer`]&&this.gbChannels[`channel${V}`].playAudio(R,U[`channel${V}Buffer`].left,U[`channel${V}Buffer`].right,F,this.updateAudioCallback);U=!(this.gbChannels.channel1.muted||this.gbChannels.channel2.muted||this.gbChannels.channel3.muted||this.gbChannels.channel4.muted),this.gbChannels.master.muted&&U?(this.gbChannels.master.unmute(),this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),this.gbChannels.channel3._libMute(),this.gbChannels.channel4._libMute()):this.gbChannels.master.muted||U||(this.gbChannels.master.mute(),this.gbChannels.channel1._libUnmute(),this.gbChannels.channel2._libUnmute(),this.gbChannels.channel3._libUnmute(),this.gbChannels.channel4._libUnmute())}resumeAudioContext(){this._applyOnAllChannels("resumeAudioContext")}cancelAllAudio(U){this._applyOnAllChannels("cancelAllAudio",[U])}_createAudioContextIfNone(){this._applyOnAllChannels("createAudioContextIfNone")}_applyOnAllChannels(U,F){Object.keys(this.gbChannels).forEach(Q=>{this.gbChannels[Q][U].apply(this.gbChannels[Q],F)})}};function UF(U,F){var Q=Object.keys(U);if(Object.getOwnPropertySymbols){var R=Object.getOwnPropertySymbols(U);F&&(R=R.filter((function(F){return Object.getOwnPropertyDescriptor(U,F).enumerable}))),Q.push.apply(Q,R)}return Q}function FF(U){for(var F=1;F<arguments.length;F++){var Q=null!=arguments[F]?arguments[F]:{};F%2?UF(Object(Q),!0).forEach((function(F){var R=Q[F];F in U?Object.defineProperty(U,F,{value:R,enumerable:!0,configurable:!0,writable:!0}):U[F]=R})):Object.getOwnPropertyDescriptors?Object.defineProperties(U,Object.getOwnPropertyDescriptors(Q)):UF(Object(Q)).forEach((function(F){Object.defineProperty(U,F,Object.getOwnPropertyDescriptor(Q,F))}))}return U}var QF="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function RF(U,F){return U(F={exports:{}},F.exports),F.exports}var VF=RF((function(U){!function(){function F(U){return new Promise((function(F,Q){U.onsuccess=function(){F(U.result)},U.onerror=function(){Q(U.error)}}))}function Q(U,Q,R){var V,B=new Promise((function(B,l){F(V=U[Q].apply(U,R)).then(B,l)}));return B.request=V,B}function R(U,F,R){var V=Q(U,F,R);return V.then((function(U){if(U)return new e(U,V.request)}))}function V(U,F,Q){Q.forEach((function(Q){Object.defineProperty(U.prototype,Q,{get:function(){return this[F][Q]},set:function(U){this[F][Q]=U}})}))}function B(U,F,R,V){V.forEach((function(V){V in R.prototype&&(U.prototype[V]=function(){return Q(this[F],V,arguments)})}))}function l(U,F,Q,R){R.forEach((function(R){R in Q.prototype&&(U.prototype[R]=function(){return this[F][R].apply(this[F],arguments)})}))}function d(U,F,Q,V){V.forEach((function(V){V in Q.prototype&&(U.prototype[V]=function(){return R(this[F],V,arguments)})}))}function t(U){this._index=U}function e(U,F){this._cursor=U,this._request=F}function J(U){this._store=U}function n(U){this._tx=U,this.complete=new Promise((function(F,Q){U.oncomplete=function(){F()},U.onerror=function(){Q(U.error)},U.onabort=function(){Q(U.error)}}))}function k(U,F,Q){this._db=U,this.oldVersion=F,this.transaction=new n(Q)}function a(U){this._db=U}V(t,"_index",["name","keyPath","multiEntry","unique"]),B(t,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),d(t,"_index",IDBIndex,["openCursor","openKeyCursor"]),V(e,"_cursor",["direction","key","primaryKey","value"]),B(e,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach((function(U){U in IDBCursor.prototype&&(e.prototype[U]=function(){var Q=this,R=arguments;return Promise.resolve().then((function(){return Q._cursor[U].apply(Q._cursor,R),F(Q._request).then((function(U){if(U)return new e(U,Q._request)}))}))})})),J.prototype.createIndex=function(){return new t(this._store.createIndex.apply(this._store,arguments))},J.prototype.index=function(){return new t(this._store.index.apply(this._store,arguments))},V(J,"_store",["name","keyPath","indexNames","autoIncrement"]),B(J,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" ")),d(J,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),l(J,"_store",IDBObjectStore,["deleteIndex"]),n.prototype.objectStore=function(){return new J(this._tx.objectStore.apply(this._tx,arguments))},V(n,"_tx",["objectStoreNames","mode"]),l(n,"_tx",IDBTransaction,["abort"]),k.prototype.createObjectStore=function(){return new J(this._db.createObjectStore.apply(this._db,arguments))},V(k,"_db",["name","version","objectStoreNames"]),l(k,"_db",IDBDatabase,["deleteObjectStore","close"]),a.prototype.transaction=function(){return new n(this._db.transaction.apply(this._db,arguments))},V(a,"_db",["name","version","objectStoreNames"]),l(a,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach((function(U){[J,t].forEach((function(F){U in F.prototype&&(F.prototype[U.replace("open","iterate")]=function(){var F=Array.prototype.slice.call(arguments),Q=F[F.length-1],R=this._store||this._index,V=R[U].apply(R,F.slice(0,-1));V.onsuccess=function(){Q(V.result)}})}))})),[t,J].forEach((function(U){U.prototype.getAll||(U.prototype.getAll=function(U,F){var Q=this,R=[];return new Promise((function(V){Q.iterateCursor(U,(function(U){U?(R.push(U.value),void 0!==F&&R.length==F?V(R):U.continue()):V(R)}))}))})})),U.exports={open:function(U,F,R){var V=(U=Q(indexedDB,"open",[U,F])).request;return V&&(V.onupgradeneeded=function(U){R&&R(new k(V.result,U.oldVersion,V.transaction))}),U.then((function(U){return new a(U)}))},delete:function(U){return Q(indexedDB,"deleteDatabase",[U])}},U.exports.default=U.exports}()})),BF=RF((function(U){U.exports="undefined"!=typeof indexedDB?VF:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}}));let lF=!1;if("undefined"!=typeof window){const U=BF.open("wasmboy",1,U=>{U.createObjectStore("keyval")});lF={get:F=>U.then(U=>U.transaction("keyval").objectStore("keyval").get(F)),set:(F,Q)=>U.then(U=>((U=U.transaction("keyval","readwrite")).objectStore("keyval").put(Q,F),U.complete)),delete:F=>U.then(U=>((U=U.transaction("keyval","readwrite")).objectStore("keyval").delete(F),U.complete)),clear:()=>U.then(U=>((U=U.transaction("keyval","readwrite")).objectStore("keyval").clear(),U.complete)),keys:()=>U.then(U=>{U=U.transaction("keyval");const F=[],Q=U.objectStore("keyval");return(Q.iterateKeyCursor||Q.iterateCursor).call(Q,U=>{U&&(F.push(U.key),U.continue())}),U.complete.then(()=>F)})}}else lF={get:()=>{},set:()=>{},delete:()=>{},clear:()=>{},keys:()=>{}};const dF=lF;let tF={parse:function(U){let F=tF.bin.readUshort,Q=tF.bin.readUint;var R;let V={};for(R=(U=new Uint8Array(U)).length-4;101010256!=Q(U,R);)R--;let B=F(U,R=R+4+4);F(U,R+=2),Q(U,R+=2),R=Q(U,R+=4);for(let l=0;l<B;l++){Q(U,R),R+=4,R+=4,R+=4,Q(U,R+=4);let B=Q(U,R+=4),l=Q(U,R+=4),d=F(U,R+=4),t=F(U,R+2),e=F(U,R+4);R+=6;let J=Q(U,R+=8);R+=4,R+=d+t+e,tF._readLocal(U,J,V,B,l)}return V},_readLocal:function(U,F,Q,R,V){var B=tF.bin.readUshort,l=tF.bin.readUint;l(U,F),B(U,F+=4),B(U,F+=2);let d=B(U,F+=2);l(U,F+=2),l(U,F+=4),l=B(U,F=F+4+8);let t=B(U,F+=2);if(F+=2,B=tF.bin.readUTF8(U,F,l),F=F+l+t,U=new Uint8Array(U.buffer,F),0==d)Q[B]=new Uint8Array(U.buffer.slice(F,F+R));else{if(8!=d)throw"unknown compression method: "+d;F=new Uint8Array(V),tF.inflateRaw(U,F),Q[B]=F}},inflateRaw:function(U,F){return tF.F.inflate(U,F)},inflate:function(U,F){return tF.inflateRaw(new Uint8Array(U.buffer,U.byteOffset+2,U.length-6),F)},deflate:function(U,F){null==F&&(F={level:6});let Q=0,R=new Uint8Array(50+Math.floor(1.1*U.length));return R[Q]=120,R[Q+1]=156,Q=tF.F.deflateRaw(U,R,Q+2,F.level),U=tF.adler(U,0,U.length),R[Q+0]=U>>>24&255,R[Q+1]=U>>>16&255,R[Q+2]=U>>>8&255,R[Q+3]=U>>>0&255,new Uint8Array(R.buffer,0,Q+4)},deflateRaw:function(U,F){null==F&&(F={level:6});let Q,R=new Uint8Array(50+Math.floor(1.1*U.length));return Q=tF.F.deflateRaw(U,R,Q,F.level),new Uint8Array(R.buffer,0,Q)},encode:function(U){var F=0;let Q=tF.bin.writeUint,R=tF.bin.writeUshort;var V={};for(var B in U){var l=!tF._noNeed(B),d=U[B];let F=tF.crc.crc(d,0,d.length);V[B]={cpr:l,usize:d.length,crc:F,file:l?tF.deflateRaw(d):d}}for(let U in V)F+=V[U].file.length+30+46+2*tF.bin.sizeUTF8(U);for(var t in U=new Uint8Array(F+22),F=0,B=[],V)l=V[t],B.push(F),F=tF._writeHeader(U,F,t,l,0);t=0,l=F;for(let Q in V)d=V[Q],B.push(F),F=tF._writeHeader(U,F,Q,d,1,B[t++]);return V=F-l,Q(U,F,101010256),R(U,F=F+4+4,t),R(U,F+=2,t),Q(U,F+=2,V),Q(U,F+4,l),U.buffer},_noNeed:function(U){return U=U.split(".").pop().toLowerCase(),-1!="png,jpg,jpeg,zip".indexOf(U)},_writeHeader:function(U,F,Q,R,V,B){let l=tF.bin.writeUint,d=tF.bin.writeUshort,t=R.file;return l(U,F,0==V?67324752:33639248),F+=4,1==V&&(F+=2),d(U,F,20),d(U,F+=2,0),d(U,F+=2,R.cpr?8:0),l(U,F+=2,0),l(U,F+=4,R.crc),l(U,F+=4,t.length),l(U,F+=4,R.usize),d(U,F+=4,tF.bin.sizeUTF8(Q)),d(U,F+=2,0),F+=2,1==V&&(l(U,F=F+2+2+6,B),F+=4),F+=Q=tF.bin.writeUTF8(U,F,Q),0==V&&(U.set(t,F),F+=t.length),F}};var eF;{let U=new Uint32Array(256);for(let F=0;256>F;F++){let Q=F;for(let U=0;8>U;U++)Q=1&Q?3988292384^Q>>>1:Q>>>1;U[F]=Q}eF=U}tF.crc={table:eF,update:function(U,F,Q,R){for(let V=0;V<R;V++)U=tF.crc.table[255&(U^F[Q+V])]^U>>>8;return U},crc:function(U,F,Q){return 4294967295^tF.crc.update(4294967295,U,F,Q)}},tF.adler=function(U,F,Q){let R=1,V=0,B=F;for(F+=Q;B<F;){for(Q=Math.min(B+5552,F);B<Q;)R+=U[B++],V+=R;R%=65521,V%=65521}return V<<16|R},tF.bin={readUshort:function(U,F){return U[F]|U[F+1]<<8},writeUshort:function(U,F,Q){U[F]=255&Q,U[F+1]=Q>>8&255},readUint:function(U,F){return 16777216*U[F+3]+(U[F+2]<<16|U[F+1]<<8|U[F])},writeUint:function(U,F,Q){U[F]=255&Q,U[F+1]=Q>>8&255,U[F+2]=Q>>16&255,U[F+3]=Q>>24&255},readASCII:function(U,F,Q){let R="";for(let V=0;V<Q;V++)R+=String.fromCharCode(U[F+V]);return R},writeASCII:function(U,F,Q){for(let R=0;R<Q.length;R++)U[F+R]=Q.charCodeAt(R)},pad:function(U){return 2>U.length?"0"+U:U},readUTF8:function(U,F,Q){let R,V="";for(let R=0;R<Q;R++)V+="%"+tF.bin.pad(U[F+R].toString(16));try{R=decodeURIComponent(V)}catch(R){return tF.bin.readASCII(U,F,Q)}return R},writeUTF8:function(U,F,Q){let R=Q.length,V=0;for(let B=0;B<R;B++){let R=Q.charCodeAt(B);if(0==(4294967168&R))U[F+V]=R,V++;else if(0==(4294965248&R))U[F+V]=192|R>>6,U[F+V+1]=128|R>>0&63,V+=2;else if(0==(4294901760&R))U[F+V]=224|R>>12,U[F+V+1]=128|R>>6&63,U[F+V+2]=128|R>>0&63,V+=3;else{if(0!=(4292870144&R))throw"e";U[F+V]=240|R>>18,U[F+V+1]=128|R>>12&63,U[F+V+2]=128|R>>6&63,U[F+V+3]=128|R>>0&63,V+=4}}return V},sizeUTF8:function(U){let F=U.length,Q=0;for(let R=0;R<F;R++){let F=U.charCodeAt(R);if(0==(4294967168&F))Q++;else if(0==(4294965248&F))Q+=2;else if(0==(4294901760&F))Q+=3;else{if(0!=(4292870144&F))throw"e";Q+=4}}return Q}},tF.F={},tF.F.deflateRaw=function(U,F,Q,R){var V=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][R];let B=tF.F.U,l=tF.F._goodIndex;var d=tF.F._putsE;let t=0;Q<<=3;let e=0,J=U.length;if(0==R){for(;t<J;)d(F,Q,t+(V=Math.min(65535,J-t))==J?1:0),Q=tF.F._copyExact(U,t,V,F,Q+8),t+=V;return Q>>>3}d=B.lits,R=B.strt;let n=B.prev,k=0,a=0,S=0,N=0,Z=0;for(2<J&&(Z=tF.F._hash(U,0),R[Z]=0),t=0;t<J;t++){var E=Z;if(t+1<J-2){Z=tF.F._hash(U,t+1);var W=t+1&32767;n[W]=R[Z],R[Z]=W}if(e<=t){if((14e3<k||26697<a)&&(e<t&&(d[k]=t-e,k+=2,e=t),Q=tF.F._writeBlock(t==J-1||e==J?1:0,d,k,N,U,S,t-S,F,Q),k=a=N=0,S=t),W=0,t<J-2&&(W=tF.F._bestMatch(U,t,n,E,Math.min(V[2],J-t),V[3])),0!=W){E=W>>>16,W&=65535;let U=l(E,B.of0);B.lhst[257+U]++;let F=l(W,B.df0);B.dhst[F]++,N+=B.exb[U]+B.dxb[F],d[k]=E<<23|t-e,d[k+1]=W<<16|U<<8|F,k+=2,e=t+E}else B.lhst[U[t]]++;a++}}for(S==t&&0!=U.length||(e<t&&(d[k]=t-e,k+=2),Q=tF.F._writeBlock(1,d,k,N,U,S,t-S,F,Q));0!=(7&Q);)Q++;return Q>>>3},tF.F._bestMatch=function(U,F,Q,R,V,B){var l=32767&F;let d=Q[l],t=l-d+32768&32767;if(d==l||R!=tF.F._hash(U,F-t))return 0;let e=R=0,J=Math.min(32767,F);for(;t<=J&&0!=--B&&d!=l;){if((0==R||U[F+R]==U[F+R-t])&&(l=tF.F._howLong(U,F,t))>R){if(e=t,(R=l)>=V)break;t+2<l&&(l=t+2);let U=0;for(let R=0;R<l-2;R++){let V=F-t+R+32768&32767,B=V-Q[V]+32768&32767;B>U&&(U=B,d=V)}}d=Q[l=d],t+=l-d+32768&32767}return R<<16|e},tF.F._howLong=function(U,F,Q){if(U[F]!=U[F-Q]||U[F+1]!=U[F+1-Q]||U[F+2]!=U[F+2-Q])return 0;let R=F,V=Math.min(U.length,F+258);for(F+=3;F<V&&U[F]==U[F-Q];)F++;return F-R},tF.F._hash=function(U,F){return(U[F]<<8|U[F+1])+(U[F+2]<<4)&65535},tF.saved=0,tF.F._writeBlock=function(U,F,Q,R,V,B,l,d,t){let e,J,n,k,a=tF.F.U,S=tF.F._putsF,N=tF.F._putsE;a.lhst[256]++;var Z=tF.F.getTrees(),E=Z[0];e=Z[1],J=Z[2],n=Z[3],k=Z[4];var W=Z[5],r=Z[6];Z=Z[7];var C=32+(0==(t+3&7)?0:8-(t+3&7))+(l<<3);let h=R+tF.F.contSize(a.fltree,a.lhst)+tF.F.contSize(a.fdtree,a.dhst);R=R+tF.F.contSize(a.ltree,a.lhst)+tF.F.contSize(a.dtree,a.dhst),R+=14+3*W+tF.F.contSize(a.itree,a.ihst)+(2*a.ihst[16]+3*a.ihst[17]+7*a.ihst[18]);for(var T=0;286>T;T++)a.lhst[T]=0;for(T=0;30>T;T++)a.dhst[T]=0;for(T=0;19>T;T++)a.ihst[T]=0;if(C=C<h&&C<R?0:h<R?1:2,S(d,t,U),S(d,t+1,C),t+=3,0==C){for(;0!=(7&t);)t++;t=tF.F._copyExact(V,B,l,d,t)}else{let R,h;if(1==C&&(R=a.fltree,h=a.fdtree),2==C){for(tF.F.makeCodes(a.ltree,E),tF.F.revCodes(a.ltree,E),tF.F.makeCodes(a.dtree,e),tF.F.revCodes(a.dtree,e),tF.F.makeCodes(a.itree,J),tF.F.revCodes(a.itree,J),R=a.ltree,h=a.dtree,N(d,t,n-257),N(d,t+=5,k-1),N(d,t+=5,W-4),t+=4,U=0;U<W;U++)N(d,t+3*U,a.itree[1+(a.ordr[U]<<1)]);t=tF.F._codeTiny(r,a.itree,d,t+3*W),t=tF.F._codeTiny(Z,a.itree,d,t)}for(W=0;W<Q;W+=2){for(r=(U=F[W])>>>23,U=B+(8388607&U);B<U;)t=tF.F._writeLit(V[B++],R,d,t);0!=r&&(U=(E=F[W+1])>>16,l=E>>8&255,E&=255,N(d,t=tF.F._writeLit(257+l,R,d,t),r-a.of0[l]),t+=a.exb[l],S(d,t=tF.F._writeLit(E,h,d,t),U-a.df0[E]),t+=a.dxb[E],B+=r)}t=tF.F._writeLit(256,R,d,t)}return t},tF.F._copyExact=function(U,F,Q,R,V){let B=V>>>3;return R[B]=Q,R[B+1]=Q>>>8,R[B+2]=255-R[B],R[B+3]=255-R[B+1],B+=4,R.set(new Uint8Array(U.buffer,F,Q),B),V+(Q+4<<3)},tF.F.getTrees=function(){let U=tF.F.U,F=tF.F._hufTree(U.lhst,U.ltree,15),Q=tF.F._hufTree(U.dhst,U.dtree,15),R=[],V=tF.F._lenCodes(U.ltree,R),B=[],l=tF.F._lenCodes(U.dtree,B);for(var d=0;d<R.length;d+=2)U.ihst[R[d]]++;for(d=0;d<B.length;d+=2)U.ihst[B[d]]++;d=tF.F._hufTree(U.ihst,U.itree,7);let t=19;for(;4<t&&0==U.itree[1+(U.ordr[t-1]<<1)];)t--;return[F,Q,d,V,l,t,R,B]},tF.F.getSecond=function(U){let F=[];for(let Q=0;Q<U.length;Q+=2)F.push(U[Q+1]);return F},tF.F.nonZero=function(U){let F="";for(let Q=0;Q<U.length;Q+=2)0!=U[Q+1]&&(F+=(Q>>1)+",");return F},tF.F.contSize=function(U,F){let Q=0;for(let R=0;R<F.length;R++)Q+=F[R]*U[1+(R<<1)];return Q},tF.F._codeTiny=function(U,F,Q,R){for(let V=0;V<U.length;V+=2){let B=U[V],l=U[V+1];R=tF.F._writeLit(B,F,Q,R);let d=16==B?2:17==B?3:7;15<B&&(tF.F._putsE(Q,R,l,d),R+=d)}return R},tF.F._lenCodes=function(U,F){let Q=U.length;for(;2!=Q&&0==U[Q-1];)Q-=2;for(let B=0;B<Q;B+=2){var R=U[B+1],V=B+3<Q?U[B+3]:-1;let l=B+5<Q?U[B+5]:-1,d=0==B?-1:U[B-1];if(0==R&&V==R&&l==R){for(V=B+5;V+2<Q&&U[V+2]==R;)V+=2;11>(R=Math.min(V+1-B>>>1,138))?F.push(17,R-3):F.push(18,R-11),B+=2*R-2}else if(R==d&&V==R&&l==R){for(V=B+5;V+2<Q&&U[V+2]==R;)V+=2;R=Math.min(V+1-B>>>1,6),F.push(16,R-3),B+=2*R-2}else F.push(R,0)}return Q>>>1},tF.F._hufTree=function(U,F,Q){var R=[],V=U.length,B=F.length,l=0;for(l=0;l<B;l+=2)F[l]=0,F[l+1]=0;for(l=0;l<V;l++)0!=U[l]&&R.push({lit:l,f:U[l]});if(U=R.length,V=R.slice(0),0==U)return 0;if(1==U)return R=0==(Q=R[0].lit)?1:0,F[1+(Q<<1)]=1,F[1+(R<<1)]=1;R.sort((function(U,F){return U.f-F.f})),l=R[0],B=R[1];let d=0,t=1,e=2;for(R[0]={lit:-1,f:l.f+B.f,l:l,r:B,d:0};t!=U-1;)l=d!=t&&(e==U||R[d].f<R[e].f)?R[d++]:R[e++],B=d!=t&&(e==U||R[d].f<R[e].f)?R[d++]:R[e++],R[t++]={lit:-1,f:l.f+B.f,l:l,r:B};for((R=tF.F.setDepth(R[t-1],0))>Q&&(tF.F.restrictDepth(V,Q,R),R=Q),l=0;l<U;l++)F[1+(V[l].lit<<1)]=V[l].d;return R},tF.F.setDepth=function(U,F){return-1!=U.lit?U.d=F:Math.max(tF.F.setDepth(U.l,F+1),tF.F.setDepth(U.r,F+1))},tF.F.restrictDepth=function(U,F,Q){let R=0,V=1<<Q-F,B=0;for(U.sort((function(U,F){return F.d==U.d?U.f-F.f:F.d-U.d})),R=0;R<U.length&&U[R].d>F;R++){let l=U[R].d;U[R].d=F,B+=V-(1<<Q-l)}for(B>>>=Q-F;0<B;)(Q=U[R].d)<F?(U[R].d++,B-=1<<F-Q-1):R++;for(;0<=R;R--)U[R].d==F&&0>B&&(U[R].d--,B++);0!=B&&console.log("debt left")},tF.F._goodIndex=function(U,F){let Q=0;return F[16|Q]<=U&&(Q|=16),F[8|Q]<=U&&(Q|=8),F[4|Q]<=U&&(Q|=4),F[2|Q]<=U&&(Q|=2),F[1|Q]<=U&&(Q|=1),Q},tF.F._writeLit=function(U,F,Q,R){return tF.F._putsF(Q,R,F[U<<1]),R+F[1+(U<<1)]},tF.F.inflate=function(U,F){if(3==U[0]&&0==U[1])return F||new Uint8Array(0);var Q=tF.F;let R=Q._bitsF,V=Q._bitsE,B=Q._decodeTiny,l=Q.makeCodes,d=Q.codes2map,t=Q._get17;Q=Q.U;let e=null==F;e&&(F=new Uint8Array(U.length>>2<<3));let J=0;var n,k;let a=k=n=0;for(var S,N=0;0==J;){J=R(U,N,1);var Z=R(U,N+1,2);if(N+=3,0==Z)0!=(7&N)&&(N+=8-(7&N)),Z=U[(N=4+(N>>>3))-4]|U[N-3]<<8,e&&(F=tF.F._check(F,a+Z)),F.set(new Uint8Array(U.buffer,U.byteOffset+N,Z),a),N=N+Z<<3,a+=Z;else{if(e&&(F=tF.F._check(F,a+131072)),1==Z){var E=Q.flmap;S=Q.fdmap,n=511,k=31}if(2==Z){for(n=V(U,N,5)+257,k=V(U,N+5,5)+1,E=V(U,N+10,4)+4,N+=14,S=0;38>S;S+=2)Q.itree[S]=0,Q.itree[S+1]=0;for(Z=1,S=0;S<E;S++){var W=V(U,N+3*S,3);Q.itree[1+(Q.ordr[S]<<1)]=W,W>Z&&(Z=W)}N+=3*E,l(Q.itree,Z),d(Q.itree,Z,Q.imap),E=Q.lmap,S=Q.dmap,n=(1<<((W=B(Q.imap,(1<<Z)-1,n,U,N,Q.ltree))>>>24))-1,N+=16777215&W,l(Q.ltree,W>>>24),d(Q.ltree,W>>>24,E),k=(1<<((Z=B(Q.imap,(1<<Z)-1,k,U,N,Q.dtree))>>>24))-1,N+=16777215&Z,l(Q.dtree,Z>>>24),d(Q.dtree,Z>>>24,S)}for(;;)if(N+=15&(Z=E[t(U,N)&n]),0==(W=Z>>>4)>>>8)F[a++]=W;else{if(256==W)break;{Z=a+W-254,264<W&&(Z=a+((W=Q.ldef[W-257])>>>3)+V(U,N,7&W),N+=7&W),N+=15&(W=S[t(U,N)&k]);let B=((W=Q.ddef[W>>>4])>>>4)+R(U,N,15&W);for(N+=15&W;a<Z;)F[a]=F[a++-B],F[a]=F[a++-B],F[a]=F[a++-B],F[a]=F[a++-B];a=Z}}}}return F.length==a?F:F.slice(0,a)},tF.F._check=function(U,F){let Q=U.length;if(F<=Q)return U;F=new Uint8Array(Q<<1);for(let R=0;R<Q;R+=4)F[R]=U[R],F[R+1]=U[R+1],F[R+2]=U[R+2],F[R+3]=U[R+3];return F},tF.F._decodeTiny=function(U,F,Q,R,V,B){let l=V,d=tF.F._bitsE,t=tF.F._get17,e=Q<<1,J=Q=0;for(;Q<e;){var n=U[t(R,V)&F];V+=15&n;var k=n>>>4;if(15>=k)B[Q]=0,B[Q+1]=k,k>J&&(J=k),Q+=2;else{let U=n=0;for(16==k?(U=3+d(R,V,2)<<1,V+=2,n=B[Q-1]):17==k?(U=3+d(R,V,3)<<1,V+=3):18==k&&(U=11+d(R,V,7)<<1,V+=7),k=Q+U;Q<k;)B[Q]=0,B[Q+1]=n,Q+=2}}for(U=B.length;Q<U;)B[Q+1]=0,Q+=2;return J<<24|V-l},tF.F.makeCodes=function(U,F){var Q=tF.F.U;let R=U.length;var V;let B;var l=Q.bl_count;for(V=0;V<=F;V++)l[V]=0;for(V=1;V<R;V+=2)l[U[V]]++;for(Q=Q.next_code,V=0,l[0]=0,B=1;B<=F;B++)V=V+l[B-1]<<1,Q[B]=V;for(F=0;F<R;F+=2)0!=(l=U[F+1])&&(U[F]=Q[l],Q[l]++)},tF.F.codes2map=function(U,F,Q){let R=U.length,V=tF.F.U.rev15;for(let d=0;d<R;d+=2)if(0!=U[d+1]){var B=U[d+1];let R=d>>1<<4|B;var l=F-B;for(l=(B=U[d]<<l)+(1<<l);B!=l;)Q[V[B]>>>15-F]=R,B++}},tF.F.revCodes=function(U,F){let Q=tF.F.U.rev15,R=15-F;for(let V=0;V<U.length;V+=2)U[V]=Q[U[V]<<F-U[V+1]]>>>R},tF.F._putsE=function(U,F,Q){Q<<=7&F,U[F>>>=3]|=Q,U[F+1]|=Q>>>8},tF.F._putsF=function(U,F,Q){Q<<=7&F,U[F>>>=3]|=Q,U[F+1]|=Q>>>8,U[F+2]|=Q>>>16},tF.F._bitsE=function(U,F,Q){return(U[F>>>3]|U[1+(F>>>3)]<<8)>>>(7&F)&(1<<Q)-1},tF.F._bitsF=function(U,F,Q){return(U[F>>>3]|U[1+(F>>>3)]<<8|U[2+(F>>>3)]<<16)>>>(7&F)&(1<<Q)-1},tF.F._get17=function(U,F){return(U[F>>>3]|U[1+(F>>>3)]<<8|U[2+(F>>>3)]<<16)>>>(7&F)},tF.F._get25=function(U,F){return(U[F>>>3]|U[1+(F>>>3)]<<8|U[2+(F>>>3)]<<16|U[3+(F>>>3)]<<24)>>>(7&F)},tF.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15e3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};{let U=tF.F.U;for(let F=0;32768>F;F++){let Q=F;Q=(2863311530&Q)>>>1|(1431655765&Q)<<1,Q=(3435973836&Q)>>>2|(858993459&Q)<<2,Q=(4042322160&Q)>>>4|(252645135&Q)<<4,Q=(4278255360&Q)>>>8|(16711935&Q)<<8,U.rev15[F]=(Q>>>16|Q<<16)>>>17}for(let F=0;32>F;F++)U.ldef[F]=U.of0[F]<<3|U.exb[F],U.ddef[F]=U.df0[F]<<4|U.dxb[F];let F=0;for(;143>=F;F++)U.fltree.push(0,8);for(;255>=F;F++)U.fltree.push(0,9);for(;279>=F;F++)U.fltree.push(0,7);for(;287>=F;F++)U.fltree.push(0,8);for(tF.F.makeCodes(U.fltree,9),tF.F.codes2map(U.fltree,9,U.flmap),tF.F.revCodes(U.fltree,9),F=0;32>F;F++)U.fdtree.push(0,5);tF.F.makeCodes(U.fdtree,5),tF.F.codes2map(U.fdtree,5,U.fdmap),tF.F.revCodes(U.fdtree,5);for(let F=0;19>F;F++)U.itree.push(0,0);for(let F=0;286>F;F++)U.ltree.push(0,0);for(let F=0;30>F;F++)U.dtree.push(0,0)}const JF=(U,F)=>(async()=>{if(ArrayBuffer.isView(U)&&U.constructor===Uint8Array)return{ROM:U};if("object"==typeof U&&U.size){var Q=await nF(U);return U.name.toLowerCase().endsWith(".zip")&&(Q=await kF(Q)),{ROM:Q,name:U.name}}Q={},F&&F.headers&&(Q.headers=F.headers);var R=await fetch(U,Q).then(U=>U.ok?U.arrayBuffer():Promise.reject(U));return Q=U,F&&F.fileName&&(Q=F.fileName),R=new Uint8Array(R),Q.toLowerCase().endsWith(".zip")&&(R=await kF(R)),{ROM:R,name:Q}})(),nF=async U=>await new Promise(F=>{const Q=new FileReader;Q.onload=()=>{const U=new Uint8Array(Q.result);F(U)},Q.readAsArrayBuffer(U)}),kF=async U=>{const F=await tF.parse(U);let Q=!1;if(Object.keys(F).some(U=>{const R=U.toLowerCase();return!!(R.includes(".gb")||R.includes(".gbc")||R.includes(".bin"))&&(Q=F[U],!0)}),!Q)throw Error("Could not find a ROM in zip...");return Q},aF={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};function SF(){let U=Object.assign({},aF);return U.wasmboyMemory.wasmBoyInternalState=this.internalState,U.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory,U.wasmboyMemory.gameBoyMemory=this.gameboyMemory,U.wasmboyMemory.cartridgeRam=this.cartridgeRam,U.date=Date.now(),U.isAuto=!1,this.saveStateCallback&&this.saveStateCallback(U),SU.runHook({key:"saveState",params:[U]}),U}function NF(){if(!this.internalState)return null;const U=SF.bind(this)(),F=Object.keys(U.wasmboyMemory);for(let Q=0;Q<F.length;Q++)U.wasmboyMemory[F[Q]]=Array.prototype.slice.call(U.wasmboyMemory[F[Q]]);return U.isAuto=!0,localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:U})),null}function ZF(){return(async()=>{var U=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);if(U){var F=JSON.parse(U);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE),U=new Uint8Array(F.header);const Q=new Uint8Array(F.cartridgeRam);if(F=F.saveState){const U=Object.keys(F.wasmboyMemory);for(let Q=0;Q<U.length;Q++)F.wasmboyMemory[U[Q]]=new Uint8Array(F.wasmboyMemory[U[Q]])}await this.saveCartridgeRam(U,Q),await this.saveState(U,F)}})()}function EF(){return window.addEventListener("beforeunload",()=>{NF.bind(this)()},!1),window.addEventListener("unload",()=>{NF.bind(this)()},!1),window.addEventListener("pagehide",()=>{NF.bind(this)()},!1),document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&NF.bind(this)()}),ZF.bind(this)()}const WF=new class{constructor(){this.saveStateCallback=this.maxNumberOfAutoSaveStates=this.worker=void 0,this.loadedCartridgeMemoryState={ROM:!1,RAM:!1,BOOT:!1},this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRomFileName=this.cartridgeRom=this.bootRom=void 0,this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE",this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0,this.SUPPORTED_BOOT_ROM_TYPES={GB:"GB",GBC:"GBC"}}initialize(U,F,Q){return this.maxNumberOfAutoSaveStates=F,this.saveStateCallback=Q,(async()=>{await this._initializeConstants(),U||await EF.call(this)})()}setWorker(U){this.worker=U,this.worker.addMessageListener(U=>{switch((U=HU(U)).message.type){case sU:{const F=Object.keys(U.message);delete F.type,F.includes(XU)&&(this.bootRom=new Uint8Array(U.message[XU])),F.includes(xU)&&(this.cartridgeRom=new Uint8Array(U.message[xU])),F.includes(gU)&&(this.cartridgeRam=new Uint8Array(U.message[gU])),F.includes(wU)&&(this.gameboyMemory=new Uint8Array(U.message[wU])),F.includes(jU)&&(this.paletteMemory=new Uint8Array(U.message[jU])),F.includes(fU)&&(this.internalState=new Uint8Array(U.message[fU]))}}})}getSavedMemory(){return(async()=>{const U=[],F=await dF.keys();for(let Q=0;Q<F.length;Q++){const R=await dF.get(F[Q]);U.push(R)}return U})()}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:EU}).then(()=>{this.loadedCartridgeMemoryState.ROM=!1,this.loadedCartridgeMemoryState.RAM=!1,this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0})}isValidBootROMType(U){return Object.keys(this.SUPPORTED_BOOT_ROM_TYPES).some(F=>this.SUPPORTED_BOOT_ROM_TYPES[F]===U)}async addBootROM(U,F,Q,R){if(U=U.toUpperCase(),!this.isValidBootROMType(U))throw Error("Invalid Boot ROM type");F=await JF(F,Q),R&&(delete R.name,delete R.ROM),Q="Game Boy",this.SUPPORTED_BOOT_ROM_TYPES.GBC===U&&(Q="Game Boy Color"),R=FF({ROM:F.ROM,name:Q,type:U,date:Date.now()},R),await dF.set("boot-rom-"+U,R)}async getBootROMs(){const U=[];for(let F in this.SUPPORTED_BOOT_ROM_TYPES){const Q=await dF.get("boot-rom-"+F);Q&&U.push(Q)}return U}async loadBootROMIfAvailable(U){if(dF){if(U=U.toUpperCase(),!this.isValidBootROMType(U))throw Error("Invalid Boot ROM type");if(U=await dF.get("boot-rom-"+U)){var F={};F[XU]=U.ROM.buffer,await this.worker.postMessage(FF({type:rU},F)).then(()=>{this.loadedCartridgeMemoryState.BOOT=!0}),await this.worker.postMessage({type:WU,memoryTypes:[XU]}).then(U=>{U=HU(U),this.bootRom=new Uint8Array(U.message[XU])})}}}loadCartridgeRom(U,F){return(async()=>{const Q={};Q[xU]=U.buffer,await this.worker.postMessage(FF({type:rU},Q)).then(()=>{this.loadedCartridgeMemoryState.ROM=!0}),await this.worker.postMessage({type:WU,memoryTypes:[xU,KU]}).then(U=>{U=HU(U),this.cartridgeRom=new Uint8Array(U.message[xU]),this.cartridgeRomFileName=F,this.cartridgeHeader=new Uint8Array(U.message[KU])})})()}saveLoadedCartridge(U){return(async()=>{if(!this.cartridgeHeader)throw Error("Error parsing the cartridge header");let F=await dF.get(this.cartridgeHeader);F||(F={});const Q=await this.getCartridgeInfo();return U&&(delete U.ROM,delete U.header),F.cartridgeRom=FF({ROM:this.cartridgeRom,header:this.cartridgeHeader,fileName:this.cartridgeRomFileName||"Unknown",date:Date.now()},U),F.cartridgeInfo=Q,this.cartridgeRam&&await this.saveCartridgeRam(),await dF.set(this.cartridgeHeader,F),F})()}deleteSavedCartridge(U){return(async()=>{const F=U.cartridgeInfo.header;if(!F)throw Error("Error parsing the cartridge header");let Q=await dF.get(F);if(!Q)throw Error("Could not find the passed cartridge");return delete Q.cartridgeRom,await dF.set(F,Q),Q})()}saveCartridgeRam(U,F){return(async()=>{let Q,R;if(U&&F?(Q=U,R=F):(Q=this.cartridgeHeader,R=this.cartridgeRam),!Q||!R)throw Error("Error parsing the cartridgeRam or cartridge header");let V=await dF.get(Q);V||(V={}),V.cartridgeRam=R,await dF.set(Q,V)})()}loadCartridgeRam(){return(async()=>{var U=this.cartridgeHeader;if(!U)throw Error("Error parsing the cartridge header");const F=await dF.get(U);F&&F.cartridgeRam&&((U={})[gU]=F.cartridgeRam.buffer,await this.worker.postMessage(FF({type:rU},U)).then(()=>{this.loadedCartridgeMemoryState.RAM=!0,this.cartridgeRam=F.cartridgeRam}))})()}saveState(U,F){return(async()=>{let Q,R;if(U&&F?(Q=F,R=U):(Q=SF.call(this),R=this.cartridgeHeader),!R)throw Error("Error parsing the cartridge header");let V=await dF.get(R);if(V||(V={}),V.saveStates||(V.saveStates=[]),Q.isAuto&&this.maxNumberOfAutoSaveStates&&0<this.maxNumberOfAutoSaveStates){const U=[];for(V.saveStates.forEach(F=>{F.isAuto&&U.push(F)}),U.sort((U,F)=>U.date<F.date?-1:U.date>F.date?1:0);0<U.length&&U.length+1>this.maxNumberOfAutoSaveStates;){var B=U.shift();B=this._indexOfSaveStateIndexInSaveStates(B,V.saveStates),V.saveStates.splice(B,1)}0<this.maxNumberOfAutoSaveStates&&V.saveStates.push(Q)}else V.saveStates.push(Q);return await dF.set(R,V),Q})()}loadState(U){return(async()=>{var F=this.cartridgeHeader;if(!F)throw Error("Error getting the cartridge header");if(!U){if(!(F=await dF.get(F))||!F.saveStates)throw Error("No Save State passed, and no cartridge object found");saverState=F.saveStates[0]}(F={})[gU]=U.wasmboyMemory.cartridgeRam.buffer,F[wU]=U.wasmboyMemory.gameBoyMemory.buffer,F[jU]=U.wasmboyMemory.wasmBoyPaletteMemory.buffer,F[fU]=U.wasmboyMemory.wasmBoyInternalState.buffer,await this.worker.postMessage(FF({type:rU},F),[F[gU],F[wU],F[jU],F[fU]]),await this.worker.postMessage({type:WU,memoryTypes:[gU,wU,jU,fU]}).then(U=>{U=HU(U),this.cartridgeRam=U.message[gU],this.gameboyMemory=U.message[wU],this.paletteMemory=U.message[jU],this.internalState=U.message[fU]})})()}deleteState(U,F){return(async()=>{if(!U)throw Error("You must provide a save state to delete");if(F)var Q=F;else this.cartridgeHeader&&(Q=this.cartridgeHeader);if(Q){var R=await dF.get(Q);if(R&&R.saveStates){var V=this._indexOfSaveStateIndexInSaveStates(U,R.saveStates);if(0>V)throw Error("Could not find the passed save state for the related cartridge...");return R.saveStates.splice(V,1),await dF.set(Q,R),U}throw Error("No save states found for the Cartridge...")}throw Error("Please load a ROM, or pass a Cartridge header...")})()}getCartridgeObject(){return dF.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const U={};return U.header=this.cartridgeHeader,U.ROM=this.cartridgeRom,U.RAM=this.cartridgeRam,U.nintendoLogo=U.ROM.slice(260,308),U.title=U.ROM.slice(308,324),U.titleAsString=String.fromCharCode.apply(null,U.title),U.manufacturerCode=U.ROM.slice(319,323),U.CGBFlag=U.ROM[323],U.newLicenseeCode=U.ROM.slice(324,326),U.SGBFlag=U.ROM[326],U.cartridgeType=U.ROM[327],U.ROMSize=U.ROM[328],U.RAMSize=U.ROM[329],U.destinationCode=U.ROM[330],U.oldLicenseeCode=U.ROM[331],U.maskROMVersionNumber=U.ROM[332],U.headerChecksum=U.ROM[333],U.globalChecksum=U.ROM.slice(334,336),U})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:CU}).then(U=>{const F=HU(U);Object.keys(this).forEach(U=>{void 0!==F.message[U]&&(this[U]=F.message[U])})})}_indexOfSaveStateIndexInSaveStates(U,F){let Q=F.indexOf(U);return 0>Q&&F.some((F,R)=>JSON.stringify(Object.keys(U))===JSON.stringify(Object.keys(F))&&U.date===F.date&&U.isAuto===F.isAuto&&(Q=R,!0)),Q}};function rF(U){for(var F=1;F<arguments.length;F++){var Q=null!=arguments[F]?arguments[F]:{},R=Object.keys(Q);"function"==typeof Object.getOwnPropertySymbols&&(R=R.concat(Object.getOwnPropertySymbols(Q).filter((function(U){return Object.getOwnPropertyDescriptor(Q,U).enumerable})))),R.forEach((function(F){var R=Q[F];F in U?Object.defineProperty(U,F,{value:R,enumerable:!0,configurable:!0,writable:!0}):U[F]=R}))}return U}let CF={DPAD_UP:"DPAD_UP",DPAD_RIGHT:"DPAD_RIGHT",DPAD_DOWN:"DPAD_DOWN",DPAD_LEFT:"DPAD_LEFT",LEFT_ANALOG_HORIZONTAL_AXIS:"LEFT_ANALOG_HORIZONTAL_AXIS",LEFT_ANALOG_VERTICAL_AXIS:"LEFT_ANALOG_VERTICAL_AXIS",LEFT_ANALOG_UP:"LEFT_ANALOG_UP",LEFT_ANALOG_RIGHT:"LEFT_ANALOG_RIGHT",LEFT_ANALOG_DOWN:"LEFT_ANALOG_DOWN",LEFT_ANALOG_LEFT:"LEFT_ANALOG_LEFT",RIGHT_ANALOG_HORIZONTAL_AXIS:"RIGHT_ANALOG_HORIZONTAL_AXIS",RIGHT_ANALOG_VERTICAL_AXIS:"RIGHT_ANALOG_VERTICAL_AXIS",RIGHT_ANALOG_UP:"RIGHT_ANALOG_UP",RIGHT_ANALOG_RIGHT:"RIGHT_ANALOG_RIGHT",RIGHT_ANALOG_DOWN:"RIGHT_ANALOG_DOWN",RIGHT_ANALOG_LEFT:"RIGHT_ANALOG_LEFT",A:"A",B:"B",X:"X",Y:"Y",LEFT_TRIGGER:"LEFT_TRIGGER",LEFT_BUMPER:"LEFT_BUMPER",RIGHT_TRIGGER:"RIGHT_TRIGGER",RIGHT_BUMPER:"RIGHT_BUMPER",SELECT:"SELECT",START:"START",SPECIAL:"SPECIAL"};class hF{constructor(){}enable(){throw Error("enable() must be overridden")}disable(){throw Error("disable() must be overridden")}getState(){throw Error("getState() must be overridden")}}let TF="input textarea button select option optgroup label datalist".split(" "),iF=["Alt","Control","Meta","OS"];class oF extends hF{constructor(){super(),this.keymap={},Object.keys(CF).forEach(U=>{this.keymap[U]={keys:[],value:void 0}}),this.enableIgnoreWhenInputElementFocused(),this.enableIgnoreWhenModifierState(),this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if("undefined"==typeof window)throw Error("Keyboard can only be used with a browser environment");window.addEventListener("keyup",this._boundUpdateKeymapValues),window.addEventListener("keydown",this._boundUpdateKeymapValues)}disable(){if("undefined"==typeof window)throw Error("Keyboard can only be used with a browser environment");window.removeEventListener("keyup",this._boundUpdateKeymapValues),window.removeEventListener("keydown",this._boundUpdateKeymapValues)}getState(){let U=rF({},CF);return Object.keys(this.keymap).forEach(F=>{U[F]=this.keymap[F].value}),Object.keys(U).forEach(F=>{"string"==typeof U[F]&&delete U[F]}),U}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(U,F){if(!U||!F||0===U.length)throw Error("Could not set the specificed keyboard keys to input");"string"==typeof U&&(U=[U]),this.keymap[F].keys=U}_isFocusedOnInputElement(){return TF.some(U=>!(!document.activeElement||document.activeElement.tagName.toLowerCase()!==U.toLowerCase()))}_isInModifierState(U){return iF.some(F=>U.getModifierState(F)||U.code===F)}_updateKeymapValues(U){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(U)||(U.preventDefault(),Object.keys(this.keymap).some(F=>this.keymap[F].keys.some(Q=>Q===U.code&&(this.keymap[F].value="keydown"===U.type,!0))))}}class pF extends hF{constructor(){super(),this.gamepadAnalogStickDeadZone=.25,this.keymap={}}enable(){}disable(){}getState(U){U||(U=0);let F=this._getGamepads()[U];if(!F)return!1;Object.keys(this.keymap).forEach(U=>{if(this.keymap[U].buttons)this.keymap[U].value=this.keymap[U].buttons.some(U=>this._isButtonPressed(F,U));else if(this.keymap[U].axis){let Q=this._getAnalogStickAxis(F,this.keymap[U].axis);this.keymap[U].value=Q}});let Q=rF({},CF);return Object.keys(this.keymap).forEach(U=>{Q[U]=this.keymap[U].value}),Q[CF.LEFT_ANALOG_DOWN]=Q.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone,Q[CF.LEFT_ANALOG_UP]=Q.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone,Q[CF.LEFT_ANALOG_RIGHT]=Q.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone,Q[CF.LEFT_ANALOG_LEFT]=Q.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone,Q[CF.RIGHT_ANALOG_DOWN]=Q.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone,Q[CF.RIGHT_ANALOG_UP]=Q.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone,Q[CF.RIGHT_ANALOG_RIGHT]=Q.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone,Q[CF.RIGHT_ANALOG_LEFT]=Q.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone,Object.keys(Q).forEach(U=>{"string"==typeof Q[U]&&delete Q[U]}),Q}setGamepadButtonsToResponsiveGamepadInput(U,F){if(!U||!F||0===U.length)throw Error("Could not set the specificed buttons to input");"number"==typeof U&&(U=[U]),this.keymap[F]={},this.keymap[F].buttons=U}setGamepadAxisToResponsiveGamepadInput(U,F){if(void 0===U||!F)throw Error("Could not set the specificed buttons to input");if("number"==typeof axes)throw Error("Must pass in an axis id");this.keymap[F]={},this.keymap[F].axis=U}_isButtonPressed(U,F){return!!U.buttons[F]&&U.buttons[F].pressed}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(U,F){return U&&U.axes[F]||0}}let sF="touchstart touchmove touchend mousedown mousemove mouseup mouseleave".split(" ");class cF{constructor(U){if(!U)throw Error("Touch inputs require an element.");this.listeners=[],this.element=U,this._addTouchStyles(),this.boundingClientRect=void 0,this._updateElementBoundingClientRect(),this.active=!1,this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this),this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles(),this.stopListening(),this.element=void 0}listen(){if(!this.element)throw Error("You must supply an element first with add()");window.addEventListener("resize",this.boundUpdateElementRect),sF.forEach(U=>{this.element.addEventListener(U,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error("You must supply an element first with add()");window.removeEventListener("resize",this.boundUpdateElementRect),sF.forEach(U=>{this.element.removeEventListener(U,this.boundTouchEvent)})}_touchEvent(U){if(U&&(!U.type.includes("touch")||U.touches)){U.preventDefault();var F="touchstart"===U.type||"touchmove"===U.type||"mousedown"===U.type,Q="mousemove"===U.type,R=!F&&!Q;this._updateActiveStatus(F,R),this._updateTouchStyles(F,Q,R),this.onTouchEvent&&this.onTouchEvent(U,F,Q,R)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect="none"}_removeTouchStyles(){this.element.style.userSelect=""}_updateTouchStyles(U,F){F||(U?this.element.classList.add("active"):this.element.classList.remove("active"))}_updateActiveStatus(U,F){this.active&&F?this.active=!1:!this.active&&U&&(this.active=!0)}}function mF(U,F){let Q;return U.type.includes("touch")?Q=U.touches[0]:U.type.includes("mouse")&&(Q=U),{rectCenterX:(F.right-F.left)/2,rectCenterY:(F.bottom-F.top)/2,touchX:Q.clientX-F.left,touchY:Q.clientY-F.top}}class DF extends cF{constructor(U,F){super(U),this.config=F||{allowMultipleDirections:!1},this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(U){if(this.active){var{rectCenterX:U,rectCenterY:F,touchX:Q,touchY:R}=mF(U,this.boundingClientRect);if(!(Q>U+this.boundingClientRect.width/2+50)){this._resetState();var V=this.boundingClientRect.width/20,B=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(Q,V),this.setVerticalState(R,B)):Math.abs(U-Q)+this.boundingClientRect.width/8>Math.abs(F-R)?this.setHorizontalState(Q,V):this.setVerticalState(R)}}else this._resetState()}setHorizontalState(U,F){F&&Math.abs(this.boundingClientRect.width/2-U)<=F||(U<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(U,F){F&&Math.abs(this.boundingClientRect.height/2-U)<F||(U<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}class MF extends cF{constructor(U){super(U),this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1},this.element.style.transform="translate(0px, 0px)",this.deadzone=.5}onTouchEvent(U){if(this.active){var{rectCenterX:U,rectCenterY:F,touchX:Q,touchY:R}=mF(U,this.boundingClientRect);1<(Q=(Q-U)/U)?Q=1:-1>Q&&(Q=-1),1<(R=(R-F)/F)?R=1:-1>R&&(R=-1),this.element.style.transform=`translate(${U*Q/2}px, ${F*R/2}px)`,this.state.HORIZONTAL_AXIS=Q,this.state.VERTICAL_AXIS=R,this.state.UP=!1,this.state.RIGHT=!1,this.state.DOWN=!1,this.state.LEFT=!1,Math.abs(Q)>this.deadzone&&(0<Q?this.state.RIGHT=!0:0>Q&&(this.state.LEFT=!0)),Math.abs(R)>this.deadzone&&(0<R?this.state.DOWN=!0:0>R&&(this.state.UP=!0))}else this._resetState()}}class GF extends cF{constructor(U,F){super(U),this.input=F}}let uF="LEFT",YF="RIGHT";class vF extends hF{constructor(){super(),this.enabled=!1,this.dpads=[],this.leftAnalogs=[],this.rightAnalogs=[],this.buttons=[]}enable(){if("undefined"==typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!0,this.dpads.forEach(U=>U.listen()),this.leftAnalogs.forEach(U=>U.listen()),this.rightAnalogs.forEach(U=>U.listen()),this.buttons.forEach(U=>U.listen())}disable(){if("undefined"==typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!1,this.dpads.forEach(U=>U.stopListening()),this.leftAnalogs.forEach(U=>U.stopListening()),this.rightAnalogs.forEach(U=>U.stopListening()),this.buttons.forEach(U=>U.stopListening())}getState(){let U=rF({},CF);return this.buttons.forEach(F=>{U[F.input]=F.active}),this.dpads.forEach(F=>{Object.keys(F.state).forEach(Q=>{U[Q]=F.state[Q]||U[Q]})}),0<this.leftAnalogs.length&&(U.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,U.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,U.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,U.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,U.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,U.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT),0<this.rightAnalogs.length&&(U.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,U.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,U.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,U.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,U.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,U.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT),Object.keys(U).forEach(F=>{"string"==typeof U[F]&&delete U[F]}),U}addButtonInput(U,F){let Q=new GF(U,F);return this.enabled&&Q.listen(),this.buttons.push(Q),()=>{Q.stopListening(),this.buttons.splice(this.buttons.indexOf(Q),1)}}addDpadInput(U,F){let Q=new DF(U,F);return this.enabled&&Q.listen(),this.dpads.push(Q),()=>{Q.stopListening(),this.dpads.splice(this.dpads.indexOf(Q),1)}}addLeftAnalogInput(U){this.addAnalogInput(U,uF)}addRightAnalogInput(U){this.addAnalogInput(U,YF)}addAnalogInput(U,F){let Q=new MF(U);return this.enabled&&Q.listen(),F===uF?(this.leftAnalogs.push(Q),()=>{Q.stopListening(),this.leftAnalogs.splice(this.leftAnalogs.indexOf(Q),1)}):(this.rightAnalogs.push(Q),()=>{Q.stopListening(),this.rightAnalogs.splice(this.rightAnalogs.indexOf(Q),1)})}}let zF=new class{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=CF,this._enabled=!1,this._multipleDirectionInput=!0,this.Keyboard=new oF,this.Gamepad=new pF,this.TouchInput=new vF,this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowUp","Numpad8"],CF.DPAD_UP),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyW"],CF.LEFT_ANALOG_UP),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyI"],CF.RIGHT_ANALOG_UP),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],CF.DPAD_UP),this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowRight","Numpad6"],CF.DPAD_RIGHT),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyD"],CF.LEFT_ANALOG_RIGHT),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyL"],CF.RIGHT_ANALOG_RIGHT),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],CF.DPAD_RIGHT),this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowDown","Numpad5","Numpad2"],CF.DPAD_DOWN),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyS"],CF.LEFT_ANALOG_DOWN),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyK"],CF.RIGHT_ANALOG_DOWN),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],CF.DPAD_DOWN),this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowLeft","Numpad4"],CF.DPAD_LEFT),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyA"],CF.LEFT_ANALOG_LEFT),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyJ"],CF.RIGHT_ANALOG_LEFT),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],CF.DPAD_LEFT),this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],CF.LEFT_ANALOG_HORIZONTAL_AXIS),this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],CF.LEFT_ANALOG_VERTICAL_AXIS),this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],CF.RIGHT_ANALOG_HORIZONTAL_AXIS),this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],CF.RIGHT_ANALOG_VERTICAL_AXIS),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyX","Semicolon","Numpad7"],CF.A),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],CF.A),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyZ","Escape","Quote","Backspace","Numpad9"],CF.B),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],CF.B),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyC"],CF.X),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],CF.X),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyV"],CF.Y),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],CF.Y),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyQ"],CF.LEFT_TRIGGER),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],CF.LEFT_TRIGGER),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyE"],CF.LEFT_BUMPER),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],CF.LEFT_BUMPER),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyU"],CF.RIGHT_TRIGGER),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],CF.RIGHT_TRIGGER),this.Keyboard.setKeysToResponsiveGamepadInput(["KeyO"],CF.RIGHT_BUMPER),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],CF.RIGHT_BUMPER),this.Keyboard.setKeysToResponsiveGamepadInput(["Enter","Numpad3"],CF.START),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],CF.START),this.Keyboard.setKeysToResponsiveGamepadInput(["ShiftRight","ShiftLeft","Tab","Numpad1"],CF.SELECT),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],CF.SELECT),this.Keyboard.setKeysToResponsiveGamepadInput(["Space","Backslash","Backquote"],CF.SPECIAL),this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],CF.SPECIAL),this.plugins=[],this.inputChangeMap={},this.inputChangeOldState={},this.cancelInputChangeListener=void 0}getVersion(){return"1.0.0"}enable(){this.Keyboard.enable(),this.Gamepad.enable(),this.TouchInput.enable(),0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval(),this._enabled=!0}disable(){this.Keyboard.disable(),this.Gamepad.disable(),this.TouchInput.disable(),this.cancelInputChangeListener&&(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0),this._enabled=!1}isEnabled(){return this._enabled}addPlugin(U){return this.plugins.push(U),U.onAddPlugin&&U.onAddPlugin(),()=>{U.onRemovePlugin&&U.onRemovePlugin(),this.plugins.splice(this.plugins.indexOf(U),1)}}getState(){if(!this._enabled)return{};let U=rF({},CF),F=this.Gamepad.getState(),Q=this.TouchInput.getState(),R=this.Keyboard.getState();return U=rF({},CF),Object.keys(U).forEach(V=>{U[V]=F[V]||Q[V]||R[V]}),["LEFT","RIGHT"].forEach(F=>{[CF[`${F}_ANALOG_HORIZONTAL_AXIS`],CF[`${F}_ANALOG_VERTICAL_AXIS`]].forEach((Q,R)=>{"number"!=typeof U[Q]&&(0!==R&&2!==R||(U[Q]=U[CF[`${F}_ANALOG_RIGHT`]]?1:U[CF[`${F}_ANALOG_LEFT`]]?-1:0),1!==R&&3!==R||(U[Q]=U[CF[`${F}_ANALOG_UP`]]?-1:U[CF[`${F}_ANALOG_DOWN`]]?1:0))})}),U.UP=U.DPAD_UP||U.LEFT_ANALOG_UP,U.RIGHT=U.DPAD_RIGHT||U.LEFT_ANALOG_RIGHT,U.DOWN=U.DPAD_DOWN||U.LEFT_ANALOG_DOWN,U.LEFT=U.DPAD_LEFT||U.LEFT_ANALOG_LEFT,Object.keys(U).forEach(F=>{void 0!==U[F]&&"string"!=typeof U[F]||(U[F]=!1)}),this.plugins.forEach(F=>{F.onGetState&&(F=F.onGetState(U))&&(this.state=F)}),U}onInputsChange(U,F){return"string"==typeof U&&(U=[U]),this.inputChangeMap[U]={codes:U,callback:F},this.cancelInputChangeListener||this._startInputChangeInterval(),()=>{delete this.inputChangeMap[U]}}_startInputChangeInterval(){let U=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(U)}_inputChangeIntervalHandler(){let U=this.getState(),F=[];Object.keys(U).forEach(Q=>{U[Q]!==this.inputChangeOldState[Q]&&F.push(Q)}),Object.keys(this.inputChangeMap).forEach(Q=>{this.inputChangeMap[Q].codes.some(U=>F.includes(U))&&this.inputChangeMap[Q].callback(U)}),this.inputChangeOldState=U}};const bF=new class{constructor(){this.worker=void 0,this.isEnabled=!1,this.ResponsiveGamepad=zF,zF.addPlugin({onGetState:U=>{const F=U.B;return U.A=U.A||U.X,U.B=F||U.Y,U}})}initialize(){return this.isEnabled||this.enableDefaultJoypad(),Promise.resolve()}setWorker(U){this.worker=U}updateController(){if(!this.isEnabled)return{};const U=zF.getState();return this.setJoypadState(U),U}setJoypadState(U){this.worker.postMessageIgnoreResponse({type:mU,setJoypadStateParamsAsArray:[U.UP?1:0,U.RIGHT?1:0,U.DOWN?1:0,U.LEFT?1:0,U.A?1:0,U.B?1:0,U.SELECT?1:0,U.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0,zF.enable()}disableDefaultJoypad(){this.isEnabled=!1,zF.disable()}};let LF=0;const IF=()=>{var U=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);return LF++,U=`${U}-${LF}`,1e5<LF&&(LF=0),U};function yF(U,F,Q){return F||(F=IF()),{workerId:Q,messageId:F,message:U}}class OF{constructor(U,F){let Q;this.id=IF(),F&&(this.id=F),this.messageListeners=[],U=atob(U.split(",")[1]);try{Q=new Blob([U],{type:"application/javascript"})}catch(F){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,Q=new BlobBuilder,Q.append(U),Q=Q.getBlob()}this.worker=new Worker(URL.createObjectURL(Q)),this.worker.onmessage=this._onMessageHandler.bind(this)}postMessageIgnoreResponse(U,F){U=yF(U,void 0,this.id),this.worker.postMessage(U,F)}postMessage(U,F){const Q=yF(U,void 0,this.id),R=Q.messageId,V=new Promise((F,Q)=>{let V=setTimeout(()=>{console.warn("Message dropped",U),this.removeMessageListener(R),Q()},1e3);this.addMessageListener((U,Q)=>{(U=HU(U)).messageId===R&&(clearTimeout(V),V=void 0,this.removeMessageListener(Q.id),F(U))})});return this.worker.postMessage(Q,F),V}addMessageListener(U){this.messageListeners.push({id:IF(),callback:U})}removeMessageListener(U){let F;this.messageListeners.some((Q,R)=>Q.id===U&&(F=R,!0)),void 0!==F&&this.messageListeners.splice(F,1)}_onMessageHandler(U){this.messageListeners.forEach(F=>{F.callback(U,F)})}}async function XF(){this.initialized||(this.loadedAndStarted=this.ready=!1,await this._instantiateWorkers(),this.coreType=(await this.worker.postMessage({type:ZU})).message.type,await WF.initialize(this.options.headless,this.options.maxNumberOfAutoSaveStates,this.options.saveStateCallback),await WF.clearMemory(),this.initialized=!0)}function gF(U,F){const Q=async()=>{!this.options.headless&&WF.getLoadedCartridgeMemoryState().RAM&&await WF.saveCartridgeRam();const Q=await JF(U,F);await WF.loadCartridgeRom(Q.ROM,Q.name),this.options.enableBootROMIfAvailable&&((await WF.getCartridgeInfo()).CGBFlag?await WF.loadBootROMIfAvailable(WF.SUPPORTED_BOOT_ROM_TYPES.GBC):await WF.loadBootROMIfAvailable(WF.SUPPORTED_BOOT_ROM_TYPES.GB)),this.loadedROM=U,await this.worker.postMessage({type:hU,config:[WF.loadedCartridgeMemoryState.BOOT?1:0,this.options.isGbcEnabled?1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0,this.options.enableAudioDebugging?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,isGbcColorizationEnabled:this.options.isGbcColorizationEnabled,gbcColorizationPalette:this.options.gbcColorizationPalette,enableAudioDebugging:this.options.enableAudioDebugging,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause(),await XF.bind(this)(),this.options.headless?await Q():(await Promise.all([PU.initialize(this.canvasElement,this.options.updateGraphicsCallback),$U.initialize(this.options.updateAudioCallback),bF.initialize()]),await Q(),await WF.loadCartridgeRam()),this.ready=!0,this.options.onReady&&this.options.onReady(),SU.runHook({key:"ready"})})()}for(var xF=RF((function(U){(function(){if("undefined"!=typeof performance&&null!==performance&&performance.now)U.exports=function(){return performance.now()};else if("undefined"!=typeof process&&null!==process&&process.hrtime){U.exports=function(){return(Q()-R)/1e6};var F=process.hrtime,Q=function(){var U=F();return 1e9*U[0]+U[1]},R=Q()-1e9*process.uptime()}else if(Date.now){U.exports=function(){return Date.now()-V};var V=Date.now()}else U.exports=function(){return(new Date).getTime()-V},V=(new Date).getTime()}).call(QF)})),KF="undefined"==typeof window?QF:window,wF=["moz","webkit"],jF=KF.requestAnimationFrame,fF=KF.cancelAnimationFrame||KF.cancelRequestAnimationFrame,HF=0;!jF&&HF<wF.length;HF++)jF=KF[wF[HF]+"RequestAnimationFrame"],fF=KF[wF[HF]+"CancelAnimationFrame"]||KF[wF[HF]+"CancelRequestAnimationFrame"];if(!jF||!fF){var PF=0,AF=0,_F=[];jF=function(U){if(0===_F.length){var F=xF(),Q=Math.max(0,1e3/60-(F-PF));PF=Q+F,setTimeout((function(){for(var U=_F.slice(0),F=_F.length=0;F<U.length;F++)if(!U[F].cancelled)try{U[F].callback(PF)}catch(U){setTimeout((function(){throw U}),0)}}),Math.round(Q))}return _F.push({handle:++AF,callback:U,cancelled:!1}),AF},fF=function(U){for(var F=0;F<_F.length;F++)_F[F].handle===U&&(_F[F].cancelled=!0)}}function qF(U){return jF.call(KF,U)}function $F(){if(this.paused)return!0;let U=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?U=!0:this.frameSkipCounter=0),U||PU.renderFrame(),bF.updateController(),this.renderId=qF(()=>{$F.call(this)})}qF.cancel=null,qF.polyfill=null;var UQ=RF((function(U){var F=function(U){function Q(U,F,R,V){if(void 0===U)return Q[0];if(void 0!==F){if(10!=+F||R){var B=R||"0123456789abcdefghijklmnopqrstuvwxyz";U=String(U),V||(U=U.toLowerCase(),B=B.toLowerCase());var l=U.length,d=Math.abs(F);for(R={},V=0;V<B.length;V++)R[B[V]]=V;for(V=0;V<l;V++)if("-"!==(B=U[V])&&B in R&&R[B]>=d&&("1"!==B||1!==d))throw Error(B+" is not a valid digit in base "+F+".");for(F=b(F),l=[],V=(d="-"===U[0])?1:0;V<U.length;V++)if((B=U[V])in R)l.push(b(R[B]));else{if("<"!==B)throw Error(B+" is not a valid character");B=V;do{V++}while(">"!==U[V]&&V<U.length);l.push(b(U.slice(B+1,V)))}F=u(l,F,d)}else F=b(U);return F}return b(U)}function R(U,F){this.value=U,this.sign=F,this.isSmall=!1}function V(U){this.value=U,this.sign=0>U,this.isSmall=!0}function B(U){this.value=U}function l(U){return-9007199254740992<U&&9007199254740992>U}function d(U){return 1e7>U?[U]:1e14>U?[U%1e7,Math.floor(U/1e7)]:[U%1e7,Math.floor(U/1e7)%1e7,Math.floor(U/1e14)]}function t(U){e(U);var F=U.length;if(4>F&&0>o(U,L))switch(F){case 0:return 0;case 1:return U[0];case 2:return U[0]+1e7*U[1];default:return U[0]+1e7*(U[1]+1e7*U[2])}return U}function e(U){for(var F=U.length;0===U[--F];);U.length=F+1}function J(U){for(var F=Array(U),Q=-1;++Q<U;)F[Q]=0;return F}function n(U){return 0<U?Math.floor(U):Math.ceil(U)}function k(U,F){var Q,R=U.length,V=F.length,B=Array(R),l=0;for(Q=0;Q<V;Q++){var d=U[Q]+F[Q]+l;l=1e7<=d?1:0,B[Q]=d-1e7*l}for(;Q<R;)l=1e7===(d=U[Q]+l)?1:0,B[Q++]=d-1e7*l;return 0<l&&B.push(l),B}function a(U,F){return U.length>=F.length?k(U,F):k(F,U)}function S(U,F){var Q,R=U.length,V=Array(R);for(Q=0;Q<R;Q++){var B=U[Q]-1e7+F;F=Math.floor(B/1e7),V[Q]=B-1e7*F,F+=1}for(;0<F;)V[Q++]=F%1e7,F=Math.floor(F/1e7);return V}function N(U,F){var Q,R=U.length,V=F.length,B=Array(R),l=0;for(Q=0;Q<V;Q++){var d=U[Q]-l-F[Q];0>d?(d+=1e7,l=1):l=0,B[Q]=d}for(Q=V;Q<R;Q++){if(!(0>(d=U[Q]-l))){B[Q++]=d;break}d+=1e7,B[Q]=d}for(;Q<R;Q++)B[Q]=U[Q];return e(B),B}function Z(U,F,Q){var B,l=U.length,d=Array(l);for(F=-F,B=0;B<l;B++){var e=U[B]+F;F=Math.floor(e/1e7),e%=1e7,d[B]=0>e?e+1e7:e}return"number"==typeof(d=t(d))?(Q&&(d=-d),new V(d)):new R(d,Q)}function E(U,F){var Q,R=U.length,V=F.length,B=J(R+V);for(Q=0;Q<R;++Q)for(var l=U[Q],d=0;d<V;++d){var t=F[d];t=l*t+B[Q+d];var n=Math.floor(t/1e7);B[Q+d]=t-1e7*n,B[Q+d+1]+=n}return e(B),B}function W(U,F){var Q,R=U.length,V=Array(R),B=0;for(Q=0;Q<R;Q++){var l=U[Q]*F+B;B=Math.floor(l/1e7),V[Q]=l-1e7*B}for(;0<B;)V[Q++]=B%1e7,B=Math.floor(B/1e7);return V}function r(U,F){for(var Q=[];0<F--;)Q.push(0);return Q.concat(U)}function C(U,F,Q){return new R(1e7>U?W(F,U):E(F,d(U)),Q)}function h(U){var F,Q=U.length,R=J(Q+Q);for(F=0;F<Q;F++){for(var V=U[F],B=-V*V,l=F;l<Q;l++){var d=U[l];d=2*V*d+R[F+l]+B,B=Math.floor(d/1e7),R[F+l]=d-1e7*B}R[F+Q]=B}return e(R),R}function T(U,F){var Q=U.length,R=J(Q),V=0;for(--Q;0<=Q;--Q){var B=n((V=1e7*V+U[Q])/F);V-=B*F,R[Q]=0|B}return[R,0|V]}function i(U,F){if(F=b(F),I)return[new B(U.value/F.value),new B(U.value%F.value)];var l=U.value,k=F.value;if(0===k)throw Error("Cannot divide by zero");if(U.isSmall)return F.isSmall?[new V(n(l/k)),new V(l%k)]:[Q[0],U];if(F.isSmall){if(1===k)return[U,Q[0]];if(-1==k)return[U.negate(),Q[0]];if(1e7>(k=Math.abs(k)))return l=t((k=T(l,k))[0]),k=k[1],U.sign&&(k=-k),"number"==typeof l?(U.sign!==F.sign&&(l=-l),[new V(l),new V(k)]):[new R(l,U.sign!==F.sign),new V(k)];k=d(k)}var a=o(l,k);if(-1===a)return[Q[0],U];if(0===a)return[Q[U.sign===F.sign?1:-1],Q[0]];if(200>=l.length+k.length){var S=k,Z=l.length;k=S.length,a=J(S.length);var E,r,C,h=S[k-1],i=Math.ceil(1e7/(2*h));for(l=W(l,i),S=W(S,i),l.length<=Z&&l.push(0),S.push(0),h=S[k-1],E=Z-k;0<=E;E--){Z=9999999,l[E+k]!==h&&(Z=Math.floor((1e7*l[E+k]+l[E+k-1])/h));var p=r=0,s=S.length;for(C=0;C<s;C++){r+=Z*S[C];var c=Math.floor(r/1e7);p+=l[E+C]-(r-1e7*c),r=c,0>p?(l[E+C]=p+1e7,p=-1):(l[E+C]=p,p=0)}for(;0!==p;){for(--Z,C=r=0;C<s;C++)0>(r+=l[E+C]-1e7+S[C])?(l[E+C]=r+1e7,r=0):(l[E+C]=r,r=1);p+=r}a[E]=Z}l=T(l,i)[0],k=[t(a),t(l)]}else{for(a=l.length,h=k.length,i=[],S=[];a;)if(S.unshift(l[--a]),e(S),0>o(S,k))i.push(0);else{E=1e7*S[(Z=S.length)-1]+S[Z-2],r=1e7*k[h-1]+k[h-2],Z>h&&(E=1e7*(E+1)),Z=Math.ceil(E/r);do{if(0>=o(E=W(k,Z),S))break;Z--}while(Z);i.push(Z),S=N(S,E)}i.reverse(),k=[t(i),t(S)]}return l=k[0],F=U.sign!==F.sign,k=k[1],U=U.sign,"number"==typeof l?(F&&(l=-l),l=new V(l)):l=new R(l,F),"number"==typeof k?(U&&(k=-k),k=new V(k)):k=new R(k,U),[l,k]}function o(U,F){if(U.length!==F.length)return U.length>F.length?1:-1;for(var Q=U.length-1;0<=Q;Q--)if(U[Q]!==F[Q])return U[Q]>F[Q]?1:-1;return 0}function p(U){return!(U=U.abs()).isUnit()&&(!!(U.equals(2)||U.equals(3)||U.equals(5))||!(U.isEven()||U.isDivisibleBy(3)||U.isDivisibleBy(5))&&(!!U.lesser(49)||void 0))}function s(U,Q){for(var R,V,B,l=U.prev(),d=l,t=0;d.isEven();)d=d.divide(2),t++;V=0;U:for(;V<Q.length;V++)if(!U.lesser(Q[V])&&(B=F(Q[V]).modPow(d,U),!B.isUnit()&&!B.equals(l))){for(R=t-1;0!=R&&!(B=B.square().mod(U)).isUnit();R--)if(B.equals(l))continue U;return!1}return!0}function c(U,Q,R){Q=b(Q);var V=U.isNegative(),B=Q.isNegative();U=V?U.not():U;var l=B?Q.not():Q;for(Q=[];!U.isZero()||!l.isZero();){var d=(U=i(U,X))[1].toJSNumber();V&&(d=X-1-d);var t=(l=i(l,X))[1].toJSNumber();B&&(t=X-1-t),U=U[0],l=l[0],Q.push(R(d,t))}for(R=0!==R(V?1:0,B?1:0)?F(-1):F(0),V=Q.length-1;0<=V;--V)R=R.multiply(X).add(F(Q[V]));return R}function m(U){return(U="number"==typeof(U=U.value)?1073741824|U:"bigint"==typeof U?U|BigInt(1073741824):U[0]+1e7*U[1]|1073758208)&-U}function D(U,F){return U=b(U),F=b(F),U.greater(F)?U:F}function M(U,F){return U=b(U),F=b(F),U.lesser(F)?U:F}function G(U,F){if(U=b(U).abs(),F=b(F).abs(),U.equals(F))return U;if(U.isZero())return F;if(F.isZero())return U;for(var R,V=Q[1];U.isEven()&&F.isEven();)R=M(m(U),m(F)),U=U.divide(R),F=F.divide(R),V=V.multiply(R);for(;U.isEven();)U=U.divide(m(U));do{for(;F.isEven();)F=F.divide(m(F));U.greater(F)&&(R=F,F=U,U=R),F=F.subtract(U)}while(!F.isZero());return V.isUnit()?U:U.multiply(V)}function u(U,F,R){var V,B=Q[0],l=Q[1];for(V=U.length-1;0<=V;V--)B=B.add(U[V].times(l)),l=l.times(F);return R?B.negate():B}function Y(U,Q){if((Q=F(Q)).isZero()){if(U.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.")}if(Q.equals(-1))return U.isZero()?{value:[0],isNegative:!1}:U.isNegative()?{value:[].concat.apply([],Array.apply(null,Array(-U.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1}:((Q=Array.apply(null,Array(U.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1])).unshift([1]),{value:[].concat.apply([],Q),isNegative:!1});var R=!1;if(U.isNegative()&&Q.isPositive()&&(R=!0,U=U.abs()),Q.isUnit())return U.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(U.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:R};for(var V,B=[];U.isNegative()||0<=U.compareAbs(Q);)V=U.divmod(Q),U=V.quotient,(V=V.remainder).isNegative()&&(V=Q.minus(V).abs(),U=U.next()),B.push(V.toJSNumber());return B.push(U.toJSNumber()),{value:B.reverse(),isNegative:R}}function v(U,F,Q){return((U=Y(U,F)).isNegative?"-":"")+U.value.map((function(U){var F=Q;return U=U<(F=F||"0123456789abcdefghijklmnopqrstuvwxyz").length?F[U]:"<"+U+">"})).join("")}function z(U){if(l(+U)){var F=+U;if(F===n(F))return I?new B(BigInt(F)):new V(F);throw Error("Invalid integer: "+U)}(F="-"===U[0])&&(U=U.slice(1));var Q=U.split(/e/i);if(2<Q.length)throw Error("Invalid integer: "+Q.join("e"));if(2===Q.length){if("+"===(U=Q[1])[0]&&(U=U.slice(1)),(U=+U)!==n(U)||!l(U))throw Error("Invalid integer: "+U+" is not a valid exponent.");var d=(Q=Q[0]).indexOf(".");if(0<=d&&(U-=Q.length-d-1,Q=Q.slice(0,d)+Q.slice(d+1)),0>U)throw Error("Cannot include negative exponent part for integers");U=Q+=Array(U+1).join("0")}if(!/^([0-9][0-9]*)$/.test(U))throw Error("Invalid integer: "+U);if(I)return new B(BigInt(F?"-"+U:U));Q=[];for(var t=(d=U.length)-7;0<d;)Q.push(+U.slice(t,d)),0>(t-=7)&&(t=0),d-=7;return e(Q),new R(Q,F)}function b(U){if("number"==typeof U){if(I)U=new B(BigInt(U));else if(l(U)){if(U!==n(U))throw Error(U+" is not an integer.");U=new V(U)}else U=z(U.toString());return U}return"string"==typeof U?z(U):"bigint"==typeof U?new B(U):U}var L=d(9007199254740992),I="function"==typeof BigInt;R.prototype=Object.create(Q.prototype),V.prototype=Object.create(Q.prototype),B.prototype=Object.create(Q.prototype),R.prototype.add=function(U){if(U=b(U),this.sign!==U.sign)return this.subtract(U.negate());var F=this.value,Q=U.value;return U.isSmall?new R(S(F,Math.abs(Q)),this.sign):new R(a(F,Q),this.sign)},R.prototype.plus=R.prototype.add,V.prototype.add=function(U){U=b(U);var F=this.value;if(0>F!==U.sign)return this.subtract(U.negate());var Q=U.value;if(U.isSmall){if(l(F+Q))return new V(F+Q);Q=d(Math.abs(Q))}return new R(S(Q,Math.abs(F)),0>F)},V.prototype.plus=V.prototype.add,B.prototype.add=function(U){return new B(this.value+b(U).value)},B.prototype.plus=B.prototype.add,R.prototype.subtract=function(U){var F=b(U);if(this.sign!==F.sign)return this.add(F.negate());U=this.value;var Q=F.value;return F.isSmall?Z(U,Math.abs(Q),this.sign):(F=this.sign,0<=o(U,Q)?U=N(U,Q):(U=N(Q,U),F=!F),"number"==typeof(U=t(U))?(F&&(U=-U),U=new V(U)):U=new R(U,F),U)},R.prototype.minus=R.prototype.subtract,V.prototype.subtract=function(U){U=b(U);var F=this.value;if(0>F!==U.sign)return this.add(U.negate());var Q=U.value;return U.isSmall?new V(F-Q):Z(Q,Math.abs(F),0<=F)},V.prototype.minus=V.prototype.subtract,B.prototype.subtract=function(U){return new B(this.value-b(U).value)},B.prototype.minus=B.prototype.subtract,R.prototype.negate=function(){return new R(this.value,!this.sign)},V.prototype.negate=function(){var U=this.sign,F=new V(-this.value);return F.sign=!U,F},B.prototype.negate=function(){return new B(-this.value)},R.prototype.abs=function(){return new R(this.value,!1)},V.prototype.abs=function(){return new V(Math.abs(this.value))},B.prototype.abs=function(){return new B(0<=this.value?this.value:-this.value)},R.prototype.multiply=function(U){var F=b(U);U=this.value;var V=F.value,B=this.sign!==F.sign;if(F.isSmall){if(0===V)return Q[0];if(1===V)return this;if(-1===V)return this.negate();if(1e7>(V=Math.abs(V)))return new R(W(U,V),B);V=d(V)}F=U.length;var l=V.length;return new R(0<-.012*F-.012*l+15e-6*F*l?function U(F,Q){var R=Math.max(F.length,Q.length);if(30>=R)return E(F,Q);R=Math.ceil(R/2);var V=F.slice(R);F=F.slice(0,R);var B=Q.slice(R),l=Q.slice(0,R);Q=U(F,l);var d=U(V,B);return V=U(a(F,V),a(l,B)),e(R=a(a(Q,r(N(N(V,Q),d),R)),r(d,2*R))),R}(U,V):E(U,V),B)},R.prototype.times=R.prototype.multiply,V.prototype._multiplyBySmall=function(U){return l(U.value*this.value)?new V(U.value*this.value):C(Math.abs(U.value),d(Math.abs(this.value)),this.sign!==U.sign)},R.prototype._multiplyBySmall=function(U){return 0===U.value?Q[0]:1===U.value?this:-1===U.value?this.negate():C(Math.abs(U.value),this.value,this.sign!==U.sign)},V.prototype.multiply=function(U){return b(U)._multiplyBySmall(this)},V.prototype.times=V.prototype.multiply,B.prototype.multiply=function(U){return new B(this.value*b(U).value)},B.prototype.times=B.prototype.multiply,R.prototype.square=function(){return new R(h(this.value),!1)},V.prototype.square=function(){var U=this.value*this.value;return l(U)?new V(U):new R(h(d(Math.abs(this.value))),!1)},B.prototype.square=function(){return new B(this.value*this.value)},R.prototype.divmod=function(U){return{quotient:(U=i(this,U))[0],remainder:U[1]}},B.prototype.divmod=V.prototype.divmod=R.prototype.divmod,R.prototype.divide=function(U){return i(this,U)[0]},B.prototype.over=B.prototype.divide=function(U){return new B(this.value/b(U).value)},V.prototype.over=V.prototype.divide=R.prototype.over=R.prototype.divide,R.prototype.mod=function(U){return i(this,U)[1]},B.prototype.mod=B.prototype.remainder=function(U){return new B(this.value%b(U).value)},V.prototype.remainder=V.prototype.mod=R.prototype.remainder=R.prototype.mod,R.prototype.pow=function(U){var F,R=b(U),B=this.value;if(0===(U=R.value))return Q[1];if(0===B)return Q[0];if(1===B)return Q[1];if(-1===B)return R.isEven()?Q[1]:Q[-1];if(R.sign)return Q[0];if(!R.isSmall)throw Error("The exponent "+R.toString()+" is too large.");if(this.isSmall&&l(F=Math.pow(B,U)))return new V(n(F));for(F=this,R=Q[1];1&U&&(R=R.times(F),--U),0!==U;)U/=2,F=F.square();return R},V.prototype.pow=R.prototype.pow,B.prototype.pow=function(U){var F=b(U),R=this.value;U=F.value;var V=BigInt(0),l=BigInt(1),d=BigInt(2);if(U===V)return Q[1];if(R===V)return Q[0];if(R===l)return Q[1];if(R===BigInt(-1))return F.isEven()?Q[1]:Q[-1];if(F.isNegative())return new B(V);for(F=this,R=Q[1];(U&l)===l&&(R=R.times(F),--U),U!==V;)U/=d,F=F.square();return R},R.prototype.modPow=function(U,F){if(U=b(U),(F=b(F)).isZero())throw Error("Cannot take modPow with modulus 0");var R=Q[1],V=this.mod(F);for(U.isNegative()&&(U=U.multiply(Q[-1]),V=V.modInv(F));U.isPositive();){if(V.isZero())return Q[0];U.isOdd()&&(R=R.multiply(V).mod(F)),U=U.divide(2),V=V.square().mod(F)}return R},B.prototype.modPow=V.prototype.modPow=R.prototype.modPow,R.prototype.compareAbs=function(U){return(U=b(U)).isSmall?1:o(this.value,U.value)},V.prototype.compareAbs=function(U){U=b(U);var F=Math.abs(this.value),Q=U.value;return U.isSmall?F===(Q=Math.abs(Q))?0:F>Q?1:-1:-1},B.prototype.compareAbs=function(U){var F=this.value;return(F=0<=F?F:-F)===(U=0<=(U=b(U).value)?U:-U)?0:F>U?1:-1},R.prototype.compare=function(U){return 1/0===U?-1:-1/0===U?1:(U=b(U),this.sign!==U.sign?U.sign?1:-1:U.isSmall?this.sign?-1:1:o(this.value,U.value)*(this.sign?-1:1))},R.prototype.compareTo=R.prototype.compare,V.prototype.compare=function(U){if(1/0===U)return-1;if(-1/0===U)return 1;U=b(U);var F=this.value,Q=U.value;return U.isSmall?F==Q?0:F>Q?1:-1:0>F!==U.sign?0>F?-1:1:0>F?1:-1},V.prototype.compareTo=V.prototype.compare,B.prototype.compare=function(U){if(1/0===U)return-1;if(-1/0===U)return 1;var F=this.value;return F===(U=b(U).value)?0:F>U?1:-1},B.prototype.compareTo=B.prototype.compare,R.prototype.equals=function(U){return 0===this.compare(U)},B.prototype.eq=B.prototype.equals=V.prototype.eq=V.prototype.equals=R.prototype.eq=R.prototype.equals,R.prototype.notEquals=function(U){return 0!==this.compare(U)},B.prototype.neq=B.prototype.notEquals=V.prototype.neq=V.prototype.notEquals=R.prototype.neq=R.prototype.notEquals,R.prototype.greater=function(U){return 0<this.compare(U)},B.prototype.gt=B.prototype.greater=V.prototype.gt=V.prototype.greater=R.prototype.gt=R.prototype.greater,R.prototype.lesser=function(U){return 0>this.compare(U)},B.prototype.lt=B.prototype.lesser=V.prototype.lt=V.prototype.lesser=R.prototype.lt=R.prototype.lesser,R.prototype.greaterOrEquals=function(U){return 0<=this.compare(U)},B.prototype.geq=B.prototype.greaterOrEquals=V.prototype.geq=V.prototype.greaterOrEquals=R.prototype.geq=R.prototype.greaterOrEquals,R.prototype.lesserOrEquals=function(U){return 0>=this.compare(U)},B.prototype.leq=B.prototype.lesserOrEquals=V.prototype.leq=V.prototype.lesserOrEquals=R.prototype.leq=R.prototype.lesserOrEquals,R.prototype.isEven=function(){return 0==(1&this.value[0])},V.prototype.isEven=function(){return 0==(1&this.value)},B.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},R.prototype.isOdd=function(){return 1==(1&this.value[0])},V.prototype.isOdd=function(){return 1==(1&this.value)},B.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},R.prototype.isPositive=function(){return!this.sign},V.prototype.isPositive=function(){return 0<this.value},B.prototype.isPositive=V.prototype.isPositive,R.prototype.isNegative=function(){return this.sign},V.prototype.isNegative=function(){return 0>this.value},B.prototype.isNegative=V.prototype.isNegative,R.prototype.isUnit=function(){return!1},V.prototype.isUnit=function(){return 1===Math.abs(this.value)},B.prototype.isUnit=function(){return this.abs().value===BigInt(1)},R.prototype.isZero=function(){return!1},V.prototype.isZero=function(){return 0===this.value},B.prototype.isZero=function(){return this.value===BigInt(0)},R.prototype.isDivisibleBy=function(U){return!(U=b(U)).isZero()&&(!!U.isUnit()||(0===U.compareAbs(2)?this.isEven():this.mod(U).isZero()))},B.prototype.isDivisibleBy=V.prototype.isDivisibleBy=R.prototype.isDivisibleBy,R.prototype.isPrime=function(Q){var R=p(this);if(R!==U)return R;var V=(R=this.abs()).bitLength();if(64>=V)return s(R,[2,3,5,7,11,13,17,19,23,29,31,37]);V=Math.log(2)*V.toJSNumber(),Q=Math.ceil(!0===Q?2*Math.pow(V,2):V),V=[];for(var B=0;B<Q;B++)V.push(F(B+2));return s(R,V)},B.prototype.isPrime=V.prototype.isPrime=R.prototype.isPrime,R.prototype.isProbablePrime=function(Q,R){var V=p(this);if(V!==U)return V;V=this.abs(),Q=Q===U?5:Q;for(var B=[],l=0;l<Q;l++)B.push(F.randBetween(2,V.minus(2),R));return s(V,B)},B.prototype.isProbablePrime=V.prototype.isProbablePrime=R.prototype.isProbablePrime,R.prototype.modInv=function(U){for(var Q,R,V,B=F.zero,l=F.one,d=b(U),t=this.abs();!t.isZero();)Q=d.divide(t),R=B,V=d,B=l,d=t,l=R.subtract(Q.multiply(l)),t=V.subtract(Q.multiply(t));if(!d.isUnit())throw Error(this.toString()+" and "+U.toString()+" are not co-prime");return-1===B.compare(0)&&(B=B.add(U)),this.isNegative()?B.negate():B},B.prototype.modInv=V.prototype.modInv=R.prototype.modInv,R.prototype.next=function(){var U=this.value;return this.sign?Z(U,1,this.sign):new R(S(U,1),this.sign)},V.prototype.next=function(){var U=this.value;return 9007199254740992>U+1?new V(U+1):new R(L,!1)},B.prototype.next=function(){return new B(this.value+BigInt(1))},R.prototype.prev=function(){var U=this.value;return this.sign?new R(S(U,1),!0):Z(U,1,this.sign)},V.prototype.prev=function(){var U=this.value;return-9007199254740992<U-1?new V(U-1):new R(L,!0)},B.prototype.prev=function(){return new B(this.value-BigInt(1))};for(var y=[1];1e7>=2*y[y.length-1];)y.push(2*y[y.length-1]);var O=y.length,X=y[O-1];R.prototype.shiftLeft=function(U){if(U=b(U).toJSNumber(),!(1e7>=Math.abs(U)))throw Error(String(U)+" is too large for shifting.");if(0>U)return this.shiftRight(-U);var F=this;if(F.isZero())return F;for(;U>=O;)F=F.multiply(X),U-=O-1;return F.multiply(y[U])},B.prototype.shiftLeft=V.prototype.shiftLeft=R.prototype.shiftLeft,R.prototype.shiftRight=function(U){var F;if(U=b(U).toJSNumber(),!(1e7>=Math.abs(U)))throw Error(String(U)+" is too large for shifting.");if(0>U)return this.shiftLeft(-U);for(F=this;U>=O;){if(F.isZero()||F.isNegative()&&F.isUnit())return F;F=(F=i(F,X))[1].isNegative()?F[0].prev():F[0],U-=O-1}return(F=i(F,y[U]))[1].isNegative()?F[0].prev():F[0]},B.prototype.shiftRight=V.prototype.shiftRight=R.prototype.shiftRight,R.prototype.not=function(){return this.negate().prev()},B.prototype.not=V.prototype.not=R.prototype.not,R.prototype.and=function(U){return c(this,U,(function(U,F){return U&F}))},B.prototype.and=V.prototype.and=R.prototype.and,R.prototype.or=function(U){return c(this,U,(function(U,F){return U|F}))},B.prototype.or=V.prototype.or=R.prototype.or,R.prototype.xor=function(U){return c(this,U,(function(U,F){return U^F}))},B.prototype.xor=V.prototype.xor=R.prototype.xor,R.prototype.bitLength=function(){var U=this;return 0>U.compareTo(F(0))&&(U=U.negate().subtract(F(1))),0===U.compareTo(F(0))?F(0):F(function U(Q,R){if(0>=R.compareTo(Q)){var V=U(Q,R.square(R)),B=V.p;return V=V.e,0>=(R=B.multiply(R)).compareTo(Q)?{p:R,e:2*V+1}:{p:B,e:2*V}}return{p:F(1),e:0}}(U,F(2)).e).add(F(1))},B.prototype.bitLength=V.prototype.bitLength=R.prototype.bitLength,R.prototype.toArray=function(U){return Y(this,U)},V.prototype.toArray=function(U){return Y(this,U)},B.prototype.toArray=function(U){return Y(this,U)},R.prototype.toString=function(F,Q){if(F===U&&(F=10),10!==F)return v(this,F,Q);Q=(F=this.value).length;for(var R,V=String(F[--Q]);0<=--Q;)R=String(F[Q]),V+="0000000".slice(R.length)+R;return(this.sign?"-":"")+V},V.prototype.toString=function(F,Q){return F===U&&(F=10),10!=F?v(this,F,Q):String(this.value)},B.prototype.toString=V.prototype.toString,B.prototype.toJSON=R.prototype.toJSON=V.prototype.toJSON=function(){return this.toString()},R.prototype.valueOf=function(){return parseInt(this.toString(),10)},R.prototype.toJSNumber=R.prototype.valueOf,V.prototype.valueOf=function(){return this.value},V.prototype.toJSNumber=V.prototype.valueOf,B.prototype.valueOf=B.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var g=0;1e3>g;g++)Q[g]=b(g),0<g&&(Q[-g]=b(-g));return Q.one=Q[1],Q.zero=Q[0],Q.minusOne=Q[-1],Q.max=D,Q.min=M,Q.gcd=G,Q.lcm=function(U,F){return U=b(U).abs(),F=b(F).abs(),U.divide(G(U,F)).multiply(F)},Q.isInstance=function(U){return U instanceof R||U instanceof V||U instanceof B},Q.randBetween=function(U,F,R){U=b(U),F=b(F),R=R||Math.random;var V=M(U,F);if((U=D(U,F).subtract(V).add(1)).isSmall)return V.add(Math.floor(R()*U));U=Y(U,1e7).value,F=[];for(var B=!0,l=0;l<U.length;l++){var d=B?U[l]:1e7,t=n(R()*d);F.push(t),t<d&&(B=!1)}return V.add(Q.fromArray(F,1e7,!1))},Q.fromArray=function(U,F,Q){return u(U.map(b),b(F||10),Q)},Q}();U.hasOwnProperty("exports")&&(U.exports=F)}));let FQ=void 0;const QQ=async(U,F)=>{if(tQ.worker)return HU(U=await tQ.worker.postMessage({type:MU,export:U,parameters:F})).message.response},RQ=async(U,F)=>{if(tQ.worker)return U=HU(U=await tQ.worker.postMessage({type:GU,start:U,end:F})),new Uint8Array(U.message.response)},VQ=async U=>{if(tQ.worker)return HU(U=await tQ.worker.postMessage({type:uU,constant:U})).message.response},BQ={};function lQ(U){const F=HU(U);if(F.message)switch(BQ[F.message.type]&&BQ[F.message.type].forEach(U=>U(F.message)),F.message.type){case sU:this.fps=F.message.fps;break;case oU:(async()=>{await this.pause(),this.options.breakpointCallback&&this.options.breakpointCallback(),SU.runHook({key:"breakpoint"})})();break;case cU:(async()=>{await this.pause(),console.log("Wasmboy Crashed!");let U=await QQ("getProgramCounter");var F=await VQ("GAMEBOY_INTERNAL_MEMORY_LOCATION");F=await RQ(F+U,F+U+1),console.log(`Program Counter: 0x${U.toString(16)}`),console.log(`Opcode: 0x${F[0].toString(16)}`)})()}}let dQ=!1;const tQ=new class{constructor(){this.canvasElement=this.coreType=this.worker=void 0,this.loadedROM=this.renderId=this.initialized=this.loadedAndStarted=this.ready=this.paused=!1,this.fps=0,this.speed=1,this._resetConfig(),"undefined"!=typeof window&&(window.addEventListener("beforeunload",(function(){dQ=!0})),window.document.addEventListener("visibilitychange",()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||setTimeout(()=>{dQ||this.pause()},0)}))}config(U,F){return(async()=>{if(await this.pause(),await this.setCanvas(F),!U&&this.options||this._resetConfig(),U&&(Object.keys(U).forEach(F=>{void 0!==this.options[F]&&(this.options[F]=U[F])}),U.gameboySpeed)){let F=Math.floor(60*U.gameboySpeed);0>=F&&(F=1),this.options.gameboyFrameRate=F}})()}getConfig(){return this.options}setCanvas(U){return U?(async()=>{await this.pause(),this.canvasElement=U,await PU.initialize(this.canvasElement,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}addBootROM(U,F,Q,R){return WF.addBootROM(U,F,Q,R)}getBootROMs(){return WF.getBootROMs()}loadROM(U,F){return gF.bind(this)(U,F)}play(){return(async()=>{this.ready&&(this.loadedAndStarted||(this.loadedAndStarted=!0,this.options.onLoadedAndStarted&&this.options.onLoadedAndStarted(),SU.runHook({key:"loadedAndStarted"})),this.options.onPlay&&this.options.onPlay(),SU.runHook({key:"play"}),this.options.headless||($U.resumeAudioContext(),$U.resetTimeStretch()),await this.worker.postMessage({type:TU}),this.paused=!1,this.updateId||await this.worker.postMessage({type:iU}),this.renderId||this.options.headless||(this.renderId=qF(()=>{$F.call(this)})))})()}pause(){return(async()=>{this.paused=!0,this.ready&&this.options.onPause&&this.options.onPause(),SU.runHook({key:"pause"}),function(){fF.apply(KF,arguments)}(this.renderId),this.renderId=!1,this.options.headless||$U.cancelAllAudio(!0),this.worker&&await this.worker.postMessage({type:pU}),await new Promise(U=>{qF(()=>{U()})})})()}reset(U){return(async()=>{if(this.config(U,this.canvasElement),this.loadedROM)return this.loadROM(this.loadedROM)})()}getSavedMemory(){return WF.getSavedMemory()}saveLoadedCartridge(U){return WF.saveLoadedCartridge(U)}deleteSavedCartridge(U){return WF.deleteSavedCartridge(U)}saveState(){return(async()=>(await this.pause(),await WF.saveState()))()}getSaveStates(){return(async()=>{let U=await WF.getCartridgeObject();return U?U.saveStates:[]})()}loadState(U){return(async()=>{await this.pause(),await WF.loadState(U)})()}deleteState(U){return(async()=>{await WF.deleteState(U)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}getSpeed(){return this.speed}setSpeed(U){0>=U&&(U=.1),(async()=>{this.worker&&(this.speed=U,$U.setSpeed(U),await this.worker.postMessageIgnoreResponse({type:vU,speed:U})),await new Promise(U=>{qF(()=>{U()})})})()}isGBC(){return(async()=>HU(await tQ.worker.postMessage({type:zU})).message.response)()}_resetConfig(){this.fpsTimeStamps=[],this.frameSkipCounter=0,this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,enableAudioDebugging:!1,gameboyFrameRate:60,frameSkip:0,enableBootROMIfAvailable:!0,isGbcEnabled:!0,isGbcColorizationEnabled:!0,gbcColorizationPalette:null,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,maxNumberOfAutoSaveStates:10,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,breakpointCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await(async()=>{const U=new OF("data:application/javascript;base64,",bU),F=new OF("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGU9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGw7Y29uc3Qgbj0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6aChmKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgYj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApO2ZvcihsZXQgYz0wOzE0ND5jOysrYyl7bGV0IGU9NDgwKmMsZj02NDAqYztmb3IobGV0IGM9MDsxNjA+YzsrK2Mpe2NvbnN0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bSgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9CmEubWVzc2FnZS5wb3J0c1swXTttKG4sbCk7aChmKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmwucG9zdE1lc3NhZ2UoZih7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",LU),Q=new OF("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGM9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHQ9KGEpPT57Y29uc3QgYj1hLmRhdGE/YS5kYXRhOmE7aWYoYi5tZXNzYWdlKXN3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGQoYi5tZXNzYWdlLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e2NvbnN0IGE9e3R5cGU6IlVQREFURUQiLG51bWJlck9mU2FtcGxlczpiLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczpiLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzpiLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSxjPVtdO1siYXVkaW9CdWZmZXIiLCJjaGFubmVsMUJ1ZmZlciIsImNoYW5uZWwyQnVmZmVyIiwiY2hhbm5lbDNCdWZmZXIiLCJjaGFubmVsNEJ1ZmZlciJdLmZvckVhY2goKGQpPT57aWYoYi5tZXNzYWdlW2RdKXt7dmFyIGY9Cm5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtkXSk7dmFyIGc9Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZyk7dmFyIGg9bmV3IEZsb2F0MzJBcnJheShnKTtsZXQgYz0wO2cqPTI7Zm9yKHZhciBlPTA7ZTxnO2UrPTIpYVtjXT1xKGZbZV0pLGMrKztjPTA7Zm9yKGU9MTtlPGc7ZSs9MiloW2NdPXEoZltlXSksYysrO2Y9YS5idWZmZXI7aD1oLmJ1ZmZlcn1hW2RdPXt9O2FbZF0ubGVmdD1mO2FbZF0ucmlnaHQ9aDtjLnB1c2goZik7Yy5wdXNoKGgpfX0pO20oZChhKSxjKX19fTtwKChhKT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",OU),R=new OF("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",yU),V=new OF("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",IU),B=[];return[F,Q,R,V].forEach(F=>{const Q=new MessageChannel,R=new Promise(R=>{let V=0;U.postMessage({type:NU,workerId:F.id,ports:[Q.port1]},[Q.port1]).then(()=>{V++,2<=V&&R()}),F.postMessage({type:NU,workerId:U.id,ports:[Q.port2]},[Q.port2]).then(()=>{V++,2<=V&&R()})});B.push(R)}),await Promise.all(B),PU.setWorker(F),$U.setWorker(Q),bF.setWorker(R),WF.setWorker(V),U})(),this.worker.addMessageListener(lQ.bind(this)))})()}};"web-assembly webassembly gameboy emulator emulation assemblyscript gameboy-color".split(" ");var eQ="0.5.1";var JQ={config:tQ.config.bind(tQ),getCoreType:tQ.getCoreType.bind(tQ),getConfig:tQ.getConfig.bind(tQ),setCanvas:tQ.setCanvas.bind(tQ),getCanvas:tQ.getCanvas.bind(tQ),addBootROM:tQ.addBootROM.bind(tQ),getBootROMs:tQ.getBootROMs.bind(tQ),loadROM:tQ.loadROM.bind(tQ),play:tQ.play.bind(tQ),pause:tQ.pause.bind(tQ),reset:tQ.reset.bind(tQ),addPlugin:SU.addPlugin.bind(SU),isPlaying:()=>!tQ.paused,isPaused:()=>tQ.paused,isReady:()=>tQ.ready,isLoadedAndStarted:()=>tQ.loadedAndStarted,getVersion:()=>eQ,getSavedMemory:tQ.getSavedMemory.bind(tQ),saveLoadedCartridge:tQ.saveLoadedCartridge.bind(tQ),deleteSavedCartridge:tQ.deleteSavedCartridge.bind(tQ),saveState:tQ.saveState.bind(tQ),getSaveStates:tQ.getSaveStates.bind(tQ),loadState:tQ.loadState.bind(tQ),deleteState:tQ.deleteState.bind(tQ),getFPS:tQ.getFPS.bind(tQ),setSpeed:tQ.setSpeed.bind(tQ),isGBC:tQ.isGBC.bind(tQ),ResponsiveGamepad:bF.ResponsiveGamepad,enableDefaultJoypad:bF.enableDefaultJoypad.bind(bF),disableDefaultJoypad:bF.disableDefaultJoypad.bind(bF),setJoypadState:bF.setJoypadState.bind(bF),resumeAudioContext:$U.resumeAudioContext.bind($U),_getAudioChannels:$U.getAudioChannels.bind($U),_getCartridgeInfo:WF.getCartridgeInfo.bind(WF),_runNumberOfFrames:async U=>{await tQ.pause();const F=()=>{FQ=qF(()=>{FQ&&(tQ.worker.postMessage({type:YU}),PU.renderFrame(),F())})};F();for(let F=0;F<U;F++)await QQ("executeFrame",[]);FQ=void 0,tQ.worker.postMessage({type:YU}),PU.renderFrame()},_runWasmExport:QQ,_getWasmMemorySection:RQ,_getWasmConstant:VQ,_getStepsAsString:async U=>{var F=await QQ("getStepsPerStepSet");const Q=await QQ("getStepSets"),R=await QQ("getSteps");return F=UQ(F).multiply(Q).add(R),U?F.toString(U):F.toString(10)},_getCyclesAsString:async U=>{var F=await QQ("getCyclesPerCycleSet");const Q=await QQ("getCycleSets"),R=await QQ("getCycles");return F=UQ(F).multiply(Q).add(R),U?F.toString(U):F.toString(10)}};function nQ(U){let F,Q,R={ctx:U,current:null,token:null,pending:ZQ,then:NQ,catch:kQ,error:9};return I(Q=U[3],R),{c(){F=J("div"),R.block.c(),Z(F,"class","status svelte-1r43jy9")},m(U,Q){t(U,F,Q),R.block.m(F,R.anchor=null),R.mount=()=>F,R.anchor=null},p(F,Q){{const V=(U=F).slice();R.block.p(V,Q)}},d(U){U&&e(F),R.block.d(),R.token=null,R=null}}}function kQ(U){let F,Q,R,V,B=U[9].message+"";function l(U,F){return U[2]?SQ:aQ}let n=l(U),S=n(U);return{c(){F=J("div"),S.c(),Q=a(),R=J("h3"),V=k(B),Z(F,"class","error")},m(U,B){t(U,F,B),S.m(F,null),d(F,Q),d(F,R),d(R,V)},p(U,R){n===(n=l(U))&&S?S.p(U,R):(S.d(1),S=n(U),S&&(S.c(),S.m(F,Q)))},d(U){U&&e(F),S.d()}}}function aQ(F){let Q;return{c(){Q=J("h3"),Q.textContent="Error!"},m(U,F){t(U,Q,F)},p:U,d(U){U&&e(Q)}}}function SQ(U){let F,Q,R,V;return{c(){F=J("h2"),Q=k("Error loading "),R=k(U[2]),V=k(" ...")},m(U,B){t(U,F,B),d(F,Q),d(F,R),d(F,V)},p(U,F){4&F&&E(R,U[2])},d(U){U&&e(F)}}}function NQ(F){return{c:U,m:U,p:U,d:U}}function ZQ(U){let F,Q;function R(U,F){return U[2]?WQ:EQ}let V=R(U),B=V(U);return{c(){B.c(),F=a(),Q=J("div"),Z(Q,"class","donut")},m(U,R){B.m(U,R),t(U,F,R),t(U,Q,R)},p(U,Q){V===(V=R(U))&&B?B.p(U,Q):(B.d(1),B=V(U),B&&(B.c(),B.m(F.parentNode,F)))},d(U){B.d(U),U&&e(F),U&&e(Q)}}}function EQ(F){let Q;return{c(){Q=J("h2"),Q.textContent="Loading..."},m(U,F){t(U,Q,F)},p:U,d(U){U&&e(Q)}}}function WQ(U){let F,Q,R,V;return{c(){F=J("h2"),Q=k("Loading "),R=k(U[2]),V=k(" ...")},m(U,B){t(U,F,B),d(F,Q),d(F,R),d(F,V)},p(U,F){4&F&&E(R,U[2])},d(U){U&&e(F)}}}function rQ(F){let Q,R,V,B,l=!1===F[1]&&nQ(F);return{c(){Q=J("div"),R=J("canvas"),V=a(),l&&l.c(),B=S(),Z(R,"class","svelte-1r43jy9"),Z(Q,"class","canvas-container svelte-1r43jy9"),Z(Q,"style",F[0])},m(U,F){t(U,Q,F),d(Q,R),t(U,V,F),l&&l.m(U,F),t(U,B,F)},p(U,[F]){1&F&&Z(Q,"style",U[0]),!1===U[1]?l?l.p(U,F):(l=nQ(U),l.c(),l.m(B.parentNode,B)):l&&(l.d(1),l=null)},i:U,o:U,d(U){U&&e(Q),U&&e(V),l&&l.d(U),U&&e(B)}}}function CQ(U,F,Q){let R,V,B,d,t;l(U,VU,U=>Q(5,R=U)),l(U,f,U=>Q(6,V=U)),l(U,H,U=>Q(1,B=U)),l(U,BU,U=>Q(2,d=U));let e=new Promise(U=>{t=U});var J;J=t,C().$$.on_mount.push(J);let n="display: none";const k=(async()=>{await e;const U=document.querySelector(".canvas-container > canvas"),F={name:"EmbedPlugin",saveState:F=>{U&&(F.screenshotCanvasDataURL=U.toDataURL())},play:()=>P.set(!0),pause:()=>{P.set(!1),FU("Paused",-1)}};await JQ.config({isGbcEnabled:!0,isGbcColorizationEnabled:!0,isAudioEnabled:!0,gameboyFrameRate:60,maxNumberOfAutoSaveStates:3}),await JQ.setCanvas(U),JQ.addPlugin(F),await JQ.loadROM(R),await JQ.play(),Q(0,n="display: block"),H.set(!0),P.set(!0)})().catch(U=>{throw console.error(U),U});return P.subscribe(async U=>{!JQ.isPlaying()&&U?await JQ.play():JQ.isPlaying()&&!U&&await JQ.pause()}),q.subscribe(()=>{V&&B&&JQ.saveState().then(()=>{JQ.play(),FU("State Saved!")}).catch(()=>{FU("Error saving the state...")})}),[n,B,d,k]}class hQ extends K{constructor(U){super(),x(this,U,CQ,rQ,B,{})}}function TQ(U,F,Q){const R=U.slice();return R[5]=F[Q],R}function iQ(F){let Q,R,V=F[4].message+"";return{c(){Q=J("p"),R=k(V),function(U,F,Q,R){U.style.setProperty(F,Q,R?"important":"")}(Q,"color","red")},m(U,F){t(U,Q,F),d(Q,R)},p:U,d(U){U&&e(Q)}}}function oQ(U){let F,Q=U[3],R=[];for(let F=0;F<Q.length;F+=1)R[F]=pQ(TQ(U,Q,F));return{c(){F=J("ul");for(let U=0;U<R.length;U+=1)R[U].c();Z(F,"class","svelte-17y6lo8")},m(U,Q){t(U,F,Q);for(let U=0;U<R.length;U+=1)R[U].m(F,null)},p(U,V){if(3&V){let B;for(Q=U[3],B=0;B<Q.length;B+=1){const l=TQ(U,Q,B);R[B]?R[B].p(l,V):(R[B]=pQ(l),R[B].c(),R[B].m(F,null))}for(;B<R.length;B+=1)R[B].d(1);R.length=Q.length}},d(U){U&&e(F),function(U,F){for(let Q=0;Q<U.length;Q+=1)U[Q]&&U[Q].d(F)}(R,U)}}}function pQ(U){let F,Q,R,V,B,l,n,S,E,W,r,C,h,T=new Date(U[5].date).toLocaleString()+"",i=U[5].isAuto?"Auto Save":"Manual Save";function o(...F){return U[2](U[5],...F)}return{c(){F=J("li"),Q=J("button"),R=J("img"),B=a(),l=J("div"),n=J("h2"),S=k(T),E=a(),W=J("h4"),r=k(i),C=a(),R.src!==(V=U[5].screenshotCanvasDataURL)&&Z(R,"src",V),Z(R,"alt","Save State Screenshot"),Z(R,"class","svelte-17y6lo8"),Z(l,"class","svelte-17y6lo8"),Z(Q,"class","svelte-17y6lo8"),Z(F,"class","svelte-17y6lo8")},m(U,V){t(U,F,V),d(F,Q),d(Q,R),d(Q,B),d(Q,l),d(l,n),d(n,S),d(l,E),d(l,W),d(W,r),d(F,C),h=N(Q,"click",o)},p(F,Q){U=F},d(U){U&&e(F),h()}}}function sQ(F){let Q;return{c(){Q=J("div"),Z(Q,"class","donut svelte-17y6lo8")},m(U,F){t(U,Q,F)},p:U,d(U){U&&e(Q)}}}function cQ(F){let Q,R,V={ctx:F,current:null,token:null,pending:sQ,then:oQ,catch:iQ,value:3,error:4};return I(R=F[0],V),{c(){Q=S(),V.block.c()},m(U,F){t(U,Q,F),V.block.m(U,V.anchor=F),V.mount=()=>Q.parentNode,V.anchor=Q},p(U,[Q]){{const R=(F=U).slice();R[3]=V.resolved,V.block.p(R,Q)}},i:U,o:U,d(U){U&&e(Q),V.block.d(U),V.token=null,V=null}}}function mQ(U){const F=JQ.getSaveStates().then(U=>(U.sort((U,F)=>U.date>F.date?-1:U.date<F.date?1:0),Promise.resolve(U))).catch(U=>{throw console.error(U),U}),Q=async U=>{await JQ.loadState(U),await JQ.play(),_(),FU("State Loaded!")};return[F,Q,(U,F)=>Q(U)]}class DQ extends K{constructor(U){super(),x(this,U,mQ,cQ,B,{})}}var MQ="0.5.1";function GQ(U){let F,Q,R,V;return{c(){F=J("li"),Q=J("b"),Q.textContent="ROM Name:",R=a(),V=k(U[0])},m(U,B){t(U,F,B),d(F,Q),d(F,R),d(F,V)},p(U,F){1&F&&E(V,U[0])},d(U){U&&e(F)}}}function uQ(U){let F,Q,R,V,B;return{c(){F=J("li"),Q=J("b"),Q.textContent="ROM URL:",R=a(),V=J("a"),B=k(U[1]),Z(V,"href",U[1]),Z(V,"target","_blank"),Z(V,"class","svelte-iqykeu")},m(U,l){t(U,F,l),d(F,Q),d(F,R),d(F,V),d(V,B)},p(U,F){2&F&&E(B,U[1]),2&F&&Z(V,"href",U[1])},d(U){U&&e(F)}}}function YQ(U){let F,Q,R,V,B;return{c(){F=J("li"),Q=J("b"),Q.textContent="Play Poster:",R=a(),V=J("a"),B=k(U[2]),Z(V,"href",U[2]),Z(V,"target","_blank"),Z(V,"class","svelte-iqykeu")},m(U,l){t(U,F,l),d(F,Q),d(F,R),d(F,V),d(V,B)},p(U,F){4&F&&E(B,U[2]),4&F&&Z(V,"href",U[2])},d(U){U&&e(F)}}}function vQ(F){let Q,R,V,B,l,n,k,S,N,E,W,r,C,h,T,i,o,p,s,c,m,D,M,G,u,Y,v,z,b,L,I=F[0]&&GQ(F),y=F[1]&&uQ(F),O=F[2]&&YQ(F);return{c(){Q=J("div"),R=J("h1"),R.textContent="WasmBoy Embed Player",V=a(),B=J("p"),B.innerHTML='This is a dynamic GameBoy / GameBoy color ROM player powered by WasmBoy. WasmBoy is a Game Boy / Game Boy Color emulation library, 🎮written for WebAssembly using <a href="https://github.com/AssemblyScript/assemblyscript" target="_blank" class="svelte-iqykeu">AssemblyScript</a>. 🚀 This embed is built with <a href="https://svelte.dev/" target="_blank" class="svelte-iqykeu">Svelte</a>, and input is handled by <a href="https://github.com/torch2424/responsive-gamepad" target="_blank" class="svelte-iqykeu">Responsive Gamepad</a>. WasmBoy is written by <a href="https://github.com/torch2424" target="_blank" class="svelte-iqykeu">Aaron Turner (torch2424)</a>, and Licensed under <a href="https://github.com/torch2424/wasmboy/blob/master/LICENSE" target="_blank" class="svelte-iqykeu">GPL 3.0</a>.',l=a(),n=J("div"),n.textContent=`WasmBoy Version: ${MQ}`,k=a(),S=J("h1"),S.textContent="WasmBoy Links",N=a(),E=J("ul"),E.innerHTML='<li><a href="https://github.com/torch2424/wasmboy" target="_blank" class="svelte-iqykeu">Github Repo</a></li>  \n    <li><a href="https://www.npmjs.com/package/wasmboy" target="_blank" class="svelte-iqykeu">NPM Package</a></li>',W=a(),r=J("h1"),r.textContent="Embed Configuration",C=a(),h=J("ul"),I&&I.c(),T=a(),y&&y.c(),i=a(),O&&O.c(),o=a(),p=J("h1"),p.textContent="Help",s=a(),c=J("h2"),c.textContent="Controls",m=a(),D=J("p"),D.innerHTML='This player supports Keyboard and Gamepad input per the default <a href="https://github.com/torch2424/responsive-gamepad" target="_blank" class="svelte-iqykeu">Responsive Gamepad</a> configuration. For keyboard controls: Directional (Dpad) controls are handled by the arrows keys, or WASD on your keyboard. The A button is controlled by the &quot;Z&quot; key. The B button is controlled by the &quot;X&quot; key. Start is handled by the &quot;Enter&quot; key. Select is handled by the &quot;Shift&quot; key.',M=a(),G=J("h2"),G.textContent="Saves States / Loading States",u=a(),Y=J("p"),Y.textContent="Save states can be made by clicking the save icon in the control bar at the bottom of the page. Save states will also be made whenever you navigate away from the running iframe, or when the page is refreshed. Save states can be loaded by clicking the load icon in the control bar, and choosing the appropiate save state represented by the screenshot, and time at which the save states was made. Save states are stored locally in your browser in the IndexedDB API. Meaning they are not backed up to a server, and can be accidentally deleted when clearing your browser cache.",v=a(),z=J("h2"),z.textContent="Reporting Bugs / Making Suggestions",b=a(),L=J("p"),L.innerHTML='Please feel free to file any bugs, suggestions, issues, etc.. At the <a href="https://github.com/torch2424/wasmboy" target="_blank" class="svelte-iqykeu">WasmBoy Github repo</a>.',Z(Q,"class","about svelte-iqykeu")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V),d(Q,B),d(Q,l),d(Q,n),d(Q,k),d(Q,S),d(Q,N),d(Q,E),d(Q,W),d(Q,r),d(Q,C),d(Q,h),I&&I.m(h,null),d(h,T),y&&y.m(h,null),d(h,i),O&&O.m(h,null),d(Q,o),d(Q,p),d(Q,s),d(Q,c),d(Q,m),d(Q,D),d(Q,M),d(Q,G),d(Q,u),d(Q,Y),d(Q,v),d(Q,z),d(Q,b),d(Q,L)},p(U,[F]){U[0]?I?I.p(U,F):(I=GQ(U),I.c(),I.m(h,T)):I&&(I.d(1),I=null),U[1]?y?y.p(U,F):(y=uQ(U),y.c(),y.m(h,i)):y&&(y.d(1),y=null),U[2]?O?O.p(U,F):(O=YQ(U),O.c(),O.m(h,null)):O&&(O.d(1),O=null)},i:U,o:U,d(U){U&&e(Q),I&&I.d(),y&&y.d(),O&&O.d()}}}function zQ(U,F,Q){let R,V,B;return l(U,BU,U=>Q(0,R=U)),l(U,VU,U=>Q(1,V=U)),l(U,RU,U=>Q(2,B=U)),[R,V,B]}class bQ extends K{constructor(U){super(),x(this,U,zQ,vQ,B,{})}}function LQ(F){let Q,R,V;return{c(){Q=n("svg"),R=n("path"),V=n("path"),Z(R,"d","M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"),Z(R,"fill","#fff"),Z(V,"d","M0 0h24v24H0z"),Z(V,"fill","none"),Z(Q,"xmlns","http://www.w3.org/2000/svg"),Z(Q,"height","24"),Z(Q,"viewBox","0 0 24 24"),Z(Q,"width","24"),Z(Q,"class","svelte-1cmb9l6")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V)},p:U,i:U,o:U,d(U){U&&e(Q)}}}class IQ extends K{constructor(U){super(),x(this,U,null,LQ,B,{})}}function yQ(U){let F,Q,R,V,B,l,n,k,S,E;function W(U,F){return 1===U[0]?XQ:2===U[0]?OQ:void 0}let r=W(U),C=r&&r(U);const h=new IQ({}),T=[xQ,gQ],i=[];function o(U,F){return 1===U[0]?0:2===U[0]?1:-1}return~(n=o(U))&&(k=i[n]=T[n](U)),{c(){F=J("dialog"),Q=J("div"),C&&C.c(),R=a(),V=J("button"),y(h.$$.fragment),B=a(),l=J("div"),k&&k.c(),Z(V,"class","icon-button"),Z(Q,"class","modal-header svelte-1315onv"),Z(l,"class","modal-content svelte-1315onv"),Z(F,"class","svelte-1315onv")},m(e,J){t(e,F,J),d(F,Q),C&&C.m(Q,null),d(Q,R),d(Q,V),O(h,V,null),d(F,B),d(F,l),~n&&i[n].m(l,null),S=!0,E=N(V,"click",U[1])},p(U,F){r!==(r=W(U))&&(C&&C.d(1),C=r&&r(U),C&&(C.c(),C.m(Q,R)));let V=n;n=o(U),n!==V&&(k&&(v(),L(i[V],1,1,()=>{i[V]=null}),z()),~n?(k=i[n],k||(k=i[n]=T[n](U),k.c()),b(k,1),k.m(l,null)):k=null)},i(U){S||(b(h.$$.fragment,U),b(k),S=!0)},o(U){L(h.$$.fragment,U),L(k),S=!1},d(U){U&&e(F),C&&C.d(),X(h),~n&&i[n].d(),E()}}}function OQ(U){let F;return{c(){F=J("h2"),F.textContent="About",Z(F,"class","svelte-1315onv")},m(U,Q){t(U,F,Q)},d(U){U&&e(F)}}}function XQ(U){let F;return{c(){F=J("h2"),F.textContent="Load State",Z(F,"class","svelte-1315onv")},m(U,Q){t(U,F,Q)},d(U){U&&e(F)}}}function gQ(U){let F;const Q=new bQ({});return{c(){y(Q.$$.fragment)},m(U,R){O(Q,U,R),F=!0},i(U){F||(b(Q.$$.fragment,U),F=!0)},o(U){L(Q.$$.fragment,U),F=!1},d(U){X(Q,U)}}}function xQ(U){let F;const Q=new DQ({});return{c(){y(Q.$$.fragment)},m(U,R){O(Q,U,R),F=!0},i(U){F||(b(Q.$$.fragment,U),F=!0)},o(U){L(Q.$$.fragment,U),F=!1},d(U){X(Q,U)}}}function KQ(U){let F,Q,R=U[0]>0&&yQ(U);return{c(){R&&R.c(),F=S()},m(U,V){R&&R.m(U,V),t(U,F,V),Q=!0},p(U,[Q]){U[0]>0?R?(R.p(U,Q),b(R,1)):(R=yQ(U),R.c(),b(R,1),R.m(F.parentNode,F)):R&&(v(),L(R,1,1,()=>{R=null}),z())},i(U){Q||(b(R),Q=!0)},o(U){L(R),Q=!1},d(U){R&&R.d(U),U&&e(F)}}}function wQ(U,F,Q){let R;l(U,A,U=>Q(0,R=U));return[R,()=>{_()}]}class jQ extends K{constructor(U){super(),x(this,U,wQ,KQ,B,{})}}function fQ(F){let Q,R,V;return{c(){Q=n("svg"),R=n("path"),V=n("path"),Z(R,"d","M0 0h24v24H0z"),Z(R,"fill","none"),Z(V,"d","M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z"),Z(V,"fill","#fff"),Z(Q,"xmlns","http://www.w3.org/2000/svg"),Z(Q,"height","24"),Z(Q,"viewBox","0 0 24 24"),Z(Q,"width","24"),Z(Q,"class","svelte-1cmb9l6")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V)},p:U,i:U,o:U,d(U){U&&e(Q)}}}class HQ extends K{constructor(U){super(),x(this,U,null,fQ,B,{})}}function PQ(F){let Q,R,V;return{c(){Q=n("svg"),R=n("path"),V=n("path"),Z(R,"d","M0 0h24v24H0z"),Z(R,"fill","none"),Z(V,"d","M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"),Z(V,"fill","#fff"),Z(Q,"xmlns","http://www.w3.org/2000/svg"),Z(Q,"height","24"),Z(Q,"viewBox","0 0 24 24"),Z(Q,"width","24"),Z(Q,"class","svelte-1cmb9l6")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V)},p:U,i:U,o:U,d(U){U&&e(Q)}}}class AQ extends K{constructor(U){super(),x(this,U,null,PQ,B,{})}}function _Q(F){let Q,R,V;return{c(){Q=n("svg"),R=n("path"),V=n("path"),Z(R,"d","M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"),Z(R,"fill","#fff"),Z(V,"d","M0 0h24v24H0z"),Z(V,"fill","none"),Z(Q,"xmlns","http://www.w3.org/2000/svg"),Z(Q,"height","24"),Z(Q,"viewBox","0 0 24 24"),Z(Q,"width","24"),Z(Q,"class","svelte-1cmb9l6")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V)},p:U,i:U,o:U,d(U){U&&e(Q)}}}class qQ extends K{constructor(U){super(),x(this,U,null,_Q,B,{})}}function $Q(F){let Q,R,V;return{c(){Q=n("svg"),R=n("path"),V=n("path"),Z(R,"d","M0 0h24v24H0z"),Z(R,"fill","none"),Z(V,"d","M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"),Z(V,"fill","#fff"),Z(Q,"xmlns","http://www.w3.org/2000/svg"),Z(Q,"height","24"),Z(Q,"viewBox","0 0 24 24"),Z(Q,"width","24"),Z(Q,"class","svelte-1cmb9l6")},m(U,F){t(U,Q,F),d(Q,R),d(Q,V)},p:U,i:U,o:U,d(U){U&&e(Q)}}}class UR extends K{constructor(U){super(),x(this,U,null,$Q,B,{})}}function FR(U){let F,Q,R=U[2].message+"";return{c(){F=J("div"),Q=k(R),Z(F,"class","status svelte-5kbxka")},m(U,R){t(U,F,R),d(F,Q)},p(U,F){4&F&&R!==(R=U[2].message+"")&&E(Q,R)},d(U){U&&e(F)}}}function QR(U){let F;const Q=new dU({});return{c(){y(Q.$$.fragment)},m(U,R){O(Q,U,R),F=!0},i(U){F||(b(Q.$$.fragment,U),F=!0)},o(U){L(Q.$$.fragment,U),F=!1},d(U){X(Q,U)}}}function RR(U){let F;const Q=new HQ({});return{c(){y(Q.$$.fragment)},m(U,R){O(Q,U,R),F=!0},i(U){F||(b(Q.$$.fragment,U),F=!0)},o(U){L(Q.$$.fragment,U),F=!1},d(U){X(Q,U)}}}function VR(U){let F,Q,V,B,l,n,k,S,E,W,r,C,h,T,i,o,p,s,c=U[0]&&FR(U);const m=[RR,QR],D=[];function M(U,F){return U[1]?0:1}n=M(U),k=D[n]=m[n](U);const G=new AQ({}),u=new qQ({}),Y=new UR({});return{c(){F=J("footer"),c&&c.c(),Q=a(),V=J("ul"),B=J("li"),l=J("button"),k.c(),S=a(),E=J("li"),W=J("button"),y(G.$$.fragment),r=a(),C=J("li"),h=J("button"),y(u.$$.fragment),T=a(),i=J("li"),o=J("button"),y(Y.$$.fragment),Z(l,"class","icon-button"),Z(W,"class","icon-button"),Z(h,"class","icon-button"),Z(o,"class","icon-button"),Z(V,"class","controls-buttons svelte-5kbxka"),Z(F,"class","controls-bar svelte-5kbxka")},m(R,e){t(R,F,e),c&&c.m(F,null),d(F,Q),d(F,V),d(V,B),d(B,l),D[n].m(l,null),d(V,S),d(V,E),d(E,W),O(G,W,null),d(V,r),d(V,C),d(C,h),O(u,h,null),d(V,T),d(V,i),d(i,o),O(Y,o,null),p=!0,s=[N(l,"click",U[3]),N(W,"click",U[4]),N(h,"click",U[5]),N(o,"click",U[6])]},p(U,[R]){U[0]?c?c.p(U,R):(c=FR(U),c.c(),c.m(F,Q)):c&&(c.d(1),c=null);let V=n;n=M(U),n!==V&&(v(),L(D[V],1,1,()=>{D[V]=null}),z(),k=D[n],k||(k=D[n]=m[n](U),k.c()),b(k,1),k.m(l,null))},i(U){p||(b(k),b(G.$$.fragment,U),b(u.$$.fragment,U),b(Y.$$.fragment,U),p=!0)},o(U){L(k),L(G.$$.fragment,U),L(u.$$.fragment,U),L(Y.$$.fragment,U),p=!1},d(U){U&&e(F),c&&c.d(),D[n].d(),X(G),X(u),X(Y),R(s)}}}function BR(U,F,Q){let R,V;l(U,P,U=>Q(1,R=U)),l(U,UU,U=>Q(2,V=U));let B,d=!1;UU.subscribe(U=>{if(B&&clearTimeout(B),Q(0,d=!0),U.timeout<0)return!1;B=setTimeout(()=>{Q(0,d=!1),B=void 0},U.timeout)});return[d,R,V,()=>{R?(P.set(!1),FU("Paused",-1)):(P.set(!0),FU("Playing!"))},()=>{q.update(U=>U+1)},()=>{A.set(1)},()=>{A.set(2)}]}class lR extends K{constructor(U){super(),x(this,U,BR,VR,B,{})}}function dR(U,F){U.onload=function(){this.onerror=this.onload=null,F(null,U)},U.onerror=function(){this.onerror=this.onload=null,F(new Error("Failed to load "+this.src),U)}}function tR(U,F){U.onreadystatechange=function(){"complete"!=this.readyState&&"loaded"!=this.readyState||(this.onreadystatechange=null,F(null,U))}}function eR(U){let F,Q,R;const V=new hQ({});let B=U[1]&&nR(U);return{c(){y(V.$$.fragment),F=a(),B&&B.c(),Q=S()},m(U,l){O(V,U,l),t(U,F,l),B&&B.m(U,l),t(U,Q,l),R=!0},p(U,F){U[1]?B?b(B,1):(B=nR(U),B.c(),b(B,1),B.m(Q.parentNode,Q)):B&&(v(),L(B,1,1,()=>{B=null}),z())},i(U){R||(b(V.$$.fragment,U),b(B),R=!0)},o(U){L(V.$$.fragment,U),L(B),R=!1},d(U){X(V,U),U&&e(F),B&&B.d(U),U&&e(Q)}}}function JR(F){let Q;const R=new kU({});return{c(){y(R.$$.fragment)},m(U,F){O(R,U,F),Q=!0},p:U,i(U){Q||(b(R.$$.fragment,U),Q=!0)},o(U){L(R.$$.fragment,U),Q=!1},d(U){X(R,U)}}}function nR(U){let F,Q;const R=new jQ({}),V=new lR({});return{c(){y(R.$$.fragment),F=a(),y(V.$$.fragment)},m(U,B){O(R,U,B),t(U,F,B),O(V,U,B),Q=!0},i(U){Q||(b(R.$$.fragment,U),b(V.$$.fragment,U),Q=!0)},o(U){L(R.$$.fragment,U),L(V.$$.fragment,U),Q=!1},d(U){X(R,U),U&&e(F),X(V,U)}}}function kR(U){let F,Q,R,V;const B=[JR,eR],l=[];function d(U,F){return!1===U[0]?0:1}return Q=d(U),R=l[Q]=B[Q](U),{c(){F=J("main"),R.c(),Z(F,"class","app svelte-16eszze")},m(U,R){t(U,F,R),l[Q].m(F,null),V=!0},p(U,[V]){let t=Q;Q=d(U),Q===t?l[Q].p(U,V):(v(),L(l[t],1,1,()=>{l[t]=null}),z(),R=l[Q],R||(R=l[Q]=B[Q](U),R.c()),b(R,1),R.m(F,null))},i(U){V||(b(R),V=!0)},o(U){L(R),V=!1},d(U){U&&e(F),l[Q].d()}}}function aR(U,F,Q){let R,V;return l(U,f,U=>Q(0,R=U)),l(U,H,U=>Q(1,V=U)),"undefined"!=typeof window&&function(U,F,Q){var R=document.head||document.getElementsByTagName("head")[0],V=document.createElement("script");"function"==typeof F&&(Q=F,F={}),F=F||{},Q=Q||function(){},V.type=F.type||"text/javascript",V.charset=F.charset||"utf8",V.async=!("async"in F)||!!F.async,V.src=U,F.attrs&&function(U,F){for(var Q in F)U.setAttribute(Q,F[Q])}(V,F.attrs),F.text&&(V.text=""+F.text),("onload"in V?dR:tR)(V,Q),V.onload||dR(V,Q),R.appendChild(V)}("https://www.googletagmanager.com/gtag/js?id=UA-125276735-3",(U,F)=>{function Q(){window.dataLayer.push(arguments)}U?console.error(U):(window.dataLayer=window.dataLayer||[],Q("js",new Date),Q("config","UA-125276735-3"))}),[R,V]}return new class extends K{constructor(U){super(),x(this,U,aR,kR,B,{})}}({target:document.body})}();
//# sourceMappingURL=bundle.wz6w5sp2ad.js.map
