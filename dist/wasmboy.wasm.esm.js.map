{"version":3,"file":"wasmboy.wasm.esm.js","sources":["../lib/worker/constants.js","../lib/worker/util.js","../lib/graphics/graphics.js","../lib/graphics/constants.js","../node_modules/audiobuffer-to-wav/dist/index.esm.js","../lib/audio/gbchannel.js","../lib/audio/audio.js","../node_modules/idb/lib/idb.js","../node_modules/idb/lib/node.js","../lib/memory/idb.js","../lib/memory/state.js","../lib/memory/autosave.js","../lib/memory/memory.js","../node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","../lib/controller/gbplugin.js","../lib/controller/controller.js","../lib/worker/smartworker.js","../lib/worker/instantiate.js","worker/wasmboy.wasm.worker.js","worker/graphics.worker.js","worker/audio.worker.js","worker/controller.worker.js","worker/memory.worker.js","../lib/3p/UZIP.js","../lib/wasmboy/fetchrom.js","../lib/wasmboy/loadrom.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../lib/wasmboy/render.js","../node_modules/big-integer/BigInteger.js","../lib/debug/debug.js","../lib/wasmboy/onmessage.js","../lib/wasmboy/wasmboy.js","../lib/index.js"],"sourcesContent":["export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  BREAKPOINT: 'BREAKPOINT',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT',\n  FORCE_OUTPUT_FRAME: 'FORCE_OUTPUT_FRAME',\n  SET_SPEED: 'SET_SPEED',\n  IS_GBC: 'IS_GBC'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","import { GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT } from './constants';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.worker = undefined;\n    this.updateGraphicsCallback = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n    this.imageDataArray = undefined;\n    this.imageDataArrayChanged = false;\n  }\n\n  initialize(canvasElement, updateGraphicsCallback) {\n    this.updateGraphicsCallback = updateGraphicsCallback;\n\n    // Initialiuze our cached wasm constants\n    // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressGRAPHICS_OUTPUT_LOCATION.valueOf();\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    const initializeTask = async () => {\n      // Prepare our canvas\n      this.canvasElement = canvasElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n      this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n      this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n      this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n      // Add some css for smooth 8-bit canvas scaling\n      // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n      // https://caniuse.com/#feat=css-crisp-edges\n      this.canvasElement.style = `\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      `;\n\n      // Fill the canvas with a blank screen\n      // using client width since we are not requiring a width and height oin the canvas\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n      // TODO: Mention respopnsive canvas scaling in the docs\n      this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n      // Finally make sure we set our constants for our worker\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n        });\n      }\n    };\n\n    return initializeTask();\n  }\n\n  // Function to set our worker\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);\n          this.imageDataArrayChanged = true;\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    // Check if we have new graphics to show\n    if (!this.imageDataArrayChanged) {\n      return;\n    }\n    this.imageDataArrayChanged = false;\n\n    // Check for a callback for accessing image data\n    if (this.updateGraphicsCallback) {\n      this.updateGraphicsCallback(this.imageDataArray);\n    }\n\n    // Add our new imageData\n    this.canvasImageData.data.set(this.imageDataArray);\n\n    this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n    this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n","// Some shared constants by the graphics lib and worker\n\nexport const GAMEBOY_CAMERA_WIDTH = 160;\nexport const GAMEBOY_CAMERA_HEIGHT = 144;\n","function index(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport default index;\n","// Gameboy Channel Output\n// With outputting to Web Audio API\n\nimport toWav from 'audiobuffer-to-wav';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\n// Some constants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\n\nconst WASMBOY_SAMPLE_RATE = 48000;\n\nexport default class GbChannelWebAudio {\n  constructor(id) {\n    this.id = id;\n\n    this.audioContext = undefined;\n    this.audioBuffer = undefined;\n    // The play time for our audio samples\n    this.audioPlaytime = undefined;\n    this.audioSources = [];\n\n    // Gain Node for muting\n    this.gainNode = undefined;\n    this.muted = false;\n    this.libMuted = false;\n\n    // Our buffer for recording PCM Samples as they come\n    this.recording = false;\n    this.recordingLeftBuffers = undefined;\n    this.recordingRightBuffers = undefined;\n    this.recordingAudioBuffer = undefined;\n    this.recordingAnchor = undefined;\n\n    // Additional Audio Nodes for connecting\n    this.additionalAudioNodes = [];\n  }\n\n  createAudioContextIfNone() {\n    if (!this.audioContext && typeof window !== 'undefined') {\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n      // Set up our nodes\n      this.gainNode = this.audioContext.createGain();\n    }\n  }\n\n  getCurrentTime() {\n    this.createAudioContextIfNone();\n    return this.audioContext.currentTime;\n  }\n\n  getPlayTime() {\n    return this.audioPlaytime;\n  }\n\n  resumeAudioContext() {\n    this.createAudioContextIfNone();\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n      this.audioPlaytime = this.audioContext.currentTime;\n    }\n  }\n\n  playAudio(numberOfSamples, leftChannelBuffer, rightChannelBuffer, playbackRate, updateAudioCallback) {\n    // Get our buffers as floats\n    const leftChannelBufferAsFloat = new Float32Array(leftChannelBuffer);\n    const rightChannelBufferAsFloat = new Float32Array(rightChannelBuffer);\n\n    // Create an audio buffer, with a left and right channel\n    this.audioBuffer = this.audioContext.createBuffer(2, numberOfSamples, WASMBOY_SAMPLE_RATE);\n    this._setSamplesToAudioBuffer(this.audioBuffer, leftChannelBufferAsFloat, rightChannelBufferAsFloat);\n\n    if (this.recording) {\n      this.recordingLeftBuffers.push(leftChannelBufferAsFloat);\n      this.recordingRightBuffers.push(rightChannelBufferAsFloat);\n    }\n\n    // Get an AudioBufferSourceNode.\n    // This is the AudioNode to use when we want to play an AudioBuffer\n    let source = this.audioContext.createBufferSource();\n\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = this.audioBuffer;\n\n    // Set our playback rate for time resetretching\n    source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n    let lastAdditionalNode = source;\n    this.additionalAudioNodes.forEach(node => {\n      lastAdditionalNode.connect(node);\n      lastAdditionalNode = node;\n    });\n\n    // Connect to our gain node for volume control\n    lastAdditionalNode.connect(this.gainNode);\n\n    // Call our callback, if we have one\n    let finalNode = this.gainNode;\n    if (updateAudioCallback) {\n      const responseNode = updateAudioCallback(this.audioContext, this.gainNode, this.id);\n      if (responseNode) {\n        finalNode = responseNode;\n      }\n    }\n\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    finalNode.connect(this.audioContext.destination);\n\n    // Check if we made it in time\n    // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n    let audioContextCurrentTime = this.audioContext.currentTime;\n    let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    this.audioPlaytime = this.audioPlaytime || audioContextCurrentTimeWithLatency;\n    if (this.audioPlaytime < audioContextCurrentTime) {\n      // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n      this.cancelAllAudio();\n      this.audioPlaytime = audioContextCurrentTimeWithLatency;\n    }\n\n    // start the source playing\n    source.start(this.audioPlaytime);\n\n    // Set our new audio playtime goal\n    const sourcePlaybackLength = numberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate);\n    this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n    // Cancel all audio sources on the tail that play before us\n    while (\n      this.audioSources[this.audioSources.length - 1] &&\n      this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime\n    ) {\n      this.audioSources[this.audioSources.length - 1].source.stop();\n      this.audioSources.pop();\n    }\n\n    // Add the source so we can stop this if needed\n    this.audioSources.push({\n      source: source,\n      playTime: this.audioPlaytime\n    });\n\n    // Shift ourselves out when finished\n    const timeUntilSourceEnds = this.audioPlaytime - this.audioContext.currentTime + 500;\n    setTimeout(() => {\n      this.audioSources.shift();\n    }, timeUntilSourceEnds);\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Cancel all audio That was queued to play\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (stopCurrentAudio || this.audioSources[i].playTime > this.audioPlaytime) {\n        this.audioSources[i].source.stop();\n      }\n    }\n\n    this.audioSources = [];\n\n    // Reset our audioPlaytime\n    this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n  }\n\n  mute() {\n    if (!this.muted) {\n      this._setGain(0);\n      this.muted = true;\n    }\n  }\n\n  unmute() {\n    if (this.muted) {\n      this._setGain(1);\n      this.muted = false;\n    }\n  }\n\n  hasRecording() {\n    return !!this.recordingAudioBuffer;\n  }\n\n  startRecording() {\n    if (!this.recording) {\n      this.recording = true;\n      this.recordingLeftBuffers = [];\n      this.recordingRightBuffers = [];\n      this.recordingAudioBuffer = undefined;\n    }\n  }\n\n  stopRecording() {\n    // Check if we were recoridng\n    if (!this.recording) {\n      return;\n    }\n\n    this.recording = false;\n\n    // Create a left/right buffer from all the buffers stored\n    const createBufferFromBuffers = buffers => {\n      let totalLength = 0;\n      buffers.forEach(buffer => {\n        totalLength += buffer.length;\n      });\n\n      const totalBuffer = new Float32Array(totalLength);\n      let currentLength = 0;\n      buffers.forEach(buffer => {\n        totalBuffer.set(buffer, currentLength);\n        currentLength += buffer.length;\n      });\n\n      return totalBuffer;\n    };\n\n    const totalLeftBuffer = createBufferFromBuffers(this.recordingLeftBuffers);\n    const totalRightBuffer = createBufferFromBuffers(this.recordingRightBuffers);\n    this.recordingAudioBuffer = this.audioContext.createBuffer(2, totalLeftBuffer.length, WASMBOY_SAMPLE_RATE);\n    this._setSamplesToAudioBuffer(this.recordingAudioBuffer, totalLeftBuffer, totalRightBuffer);\n\n    this.recordingLeftBuffer = undefined;\n    this.recordingRightBuffer = undefined;\n  }\n\n  downloadRecordingAsWav(filename) {\n    if (!this.recordingAudioBuffer) {\n      return;\n    }\n\n    // Check if we need to create our anchor tag\n    // Which is used to download the audio\n    if (!this.recordingAnchor) {\n      this.recordingAnchor = document.createElement('a');\n      document.body.appendChild(this.recordingAnchor);\n      this.recordingAnchor.style = 'display: none';\n    }\n\n    // Create our wav as a downloadable blob\n    const wav = toWav(this.recordingAudioBuffer);\n    const blob = new window.Blob([new DataView(wav)], {\n      type: 'audio/wav'\n    });\n\n    // Create our url / download name\n    const url = window.URL.createObjectURL(blob);\n    this.recordingAnchor.href = url;\n    let downloadName;\n    if (filename) {\n      downloadName = `${filename}.wav`;\n    } else {\n      const shortDateWithTime = new Date().toLocaleDateString(undefined, {\n        month: '2-digit',\n        day: '2-digit',\n        year: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n      downloadName = `wasmboy-${shortDateWithTime}.wav`;\n    }\n    this.recordingAnchor.download = downloadName;\n\n    // Download our wav\n    this.recordingAnchor.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  getRecordingAsWavBase64EncodedString() {\n    if (!this.recordingAudioBuffer) {\n      return;\n    }\n\n    // Create our wav as a downloadable blob\n    const wav = toWav(this.recordingAudioBuffer);\n    const base64String = this._arrayBufferToBase64(wav);\n\n    return `data:audio/wav;base64,${base64String}`;\n  }\n\n  _libMute() {\n    this._setGain(0);\n    this.libMuted = true;\n  }\n\n  _libUnmute() {\n    if (this.libMuted) {\n      this._setGain(1);\n      this.libMuted = false;\n    }\n  }\n\n  _setGain(gain) {\n    this.createAudioContextIfNone();\n    this.gainNode.gain.setValueAtTime(gain, this.audioContext.currentTime);\n  }\n\n  _setSamplesToAudioBuffer(audioBuffer, leftChannelSamples, rightChannelSamples) {\n    if (audioBuffer.copyToChannel) {\n      audioBuffer.copyToChannel(leftChannelSamples, 0, 0);\n      audioBuffer.copyToChannel(rightChannelSamples, 1, 0);\n    } else {\n      // Safari fallback\n      audioBuffer.getChannelData(0).set(leftChannelSamples);\n      audioBuffer.getChannelData(1).set(rightChannelSamples);\n    }\n  }\n\n  // https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string/38858127\n  _arrayBufferToBase64(buffer) {\n    let binary = '';\n    let bytes = new Uint8Array(buffer);\n    let len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n}\n","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nimport GbChannelWebAudio from './gbchannel';\n\n// The minimum fps we can have, before we start time stretching for slowness\nconst SLOW_TIME_STRETCH_MIN_FPS = 57;\n\nclass WasmBoyAudioService {\n  constructor() {\n    // Wasmboy instance and memory\n    this.worker = undefined;\n    this.updateAudioCallback = undefined;\n\n    // Our Channels\n    this.gbChannels = {\n      master: new GbChannelWebAudio('master'),\n      channel1: new GbChannelWebAudio('channel1'),\n      channel2: new GbChannelWebAudio('channel2'),\n      channel3: new GbChannelWebAudio('channel3'),\n      channel4: new GbChannelWebAudio('channel4')\n    };\n    this._createAudioContextIfNone();\n\n    // Mute all the child channels,\n    // As we will assume all channels are enabled\n    if (typeof window !== 'undefined') {\n      this.gbChannels.channel1._libMute();\n      this.gbChannels.channel2._libMute();\n      this.gbChannels.channel3._libMute();\n      this.gbChannels.channel4._libMute();\n    }\n\n    // Average fps for time stretching\n    this.averageTimeStretchFps = [];\n\n    this.speed = 1.0;\n\n    // Our sound output Location, we will initialize this in init\n    this.WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION = 0;\n  }\n\n  initialize(updateAudioCallback) {\n    const initializeTask = async () => {\n      this.updateAudioCallback = updateAudioCallback;\n\n      this.averageTimeStretchFps = [];\n\n      this.speed = 1.0;\n\n      this._createAudioContextIfNone();\n      this.cancelAllAudio();\n\n      // Lastly get our audio constants\n      return this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      });\n    };\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Dont wait for raf.\n          // Audio being shown is not dependent on the browser drawing a frame :)\n\n          // Just send the message directly\n          this.playAudio(eventData.message);\n\n          // Next, send back how much forward latency\n          // we have\n          let latency = 0;\n          let currentTime = this.gbChannels.master.getCurrentTime();\n          let playtime = this.gbChannels.master.getPlayTime();\n          if (currentTime && currentTime > 0) {\n            latency = playtime - currentTime;\n          }\n          this.worker.postMessageIgnoreResponse({\n            type: WORKER_MESSAGE_TYPE.AUDIO_LATENCY,\n            latency\n          });\n          return;\n        }\n      }\n    });\n  }\n\n  getAudioChannels() {\n    return this.gbChannels;\n  }\n\n  setSpeed(speed) {\n    this.speed = speed;\n    this.cancelAllAudio(true);\n    this.resetTimeStretch();\n  }\n\n  resetTimeStretch() {\n    // Simply reset our average FPS counter array\n    this.averageTimeStretchFps = [];\n  }\n\n  // Function to queue up and audio buyffer to be played\n  // Returns a promise so that we may \"sync by audio\"\n  // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n  playAudio(audioMessage) {\n    let currentFps = audioMessage.fps;\n    let allowFastSpeedStretching = audioMessage.allowFastSpeedStretching;\n    let numberOfSamples = audioMessage.numberOfSamples;\n\n    // Find our averageFps\n    let fps = currentFps || 60;\n\n    // Check if we got a huge fps outlier.\n    // If so, let's just reset our average.\n    // This will fix the slow gradual ramp down\n    const fpsDifference = Math.abs(currentFps - this.averageTimeStretchFps[this.averageTimeStretchFps.length - 1]);\n    if (fpsDifference && fpsDifference >= 15) {\n      this.resetTimeStretch();\n    }\n\n    // Find our average fps for time stretching\n    this.averageTimeStretchFps.push(currentFps);\n    // TODO Make the multiplier Const the timeshift speed\n    if (this.averageTimeStretchFps.length > Math.floor(SLOW_TIME_STRETCH_MIN_FPS * 3)) {\n      this.averageTimeStretchFps.shift();\n    }\n\n    // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n    if (this.averageTimeStretchFps.length >= SLOW_TIME_STRETCH_MIN_FPS) {\n      fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      fps = Math.floor(fps / this.averageTimeStretchFps.length);\n    }\n\n    // Find if we should time stretch this sample or not from our current fps\n    let playbackRate = 1.0;\n    let shouldTimeStretch = (fps < SLOW_TIME_STRETCH_MIN_FPS || allowFastSpeedStretching) && this.speed === 1.0;\n    if (shouldTimeStretch) {\n      // Has to be 60 to get accurent playback regarless of fps cap\n      playbackRate = playbackRate * (fps / 60);\n      if (playbackRate <= 0) {\n        playbackRate = 0.01;\n      }\n    }\n\n    // Apply our speed to the playback rate\n    playbackRate = playbackRate * this.speed;\n\n    // Play the master channel\n    this.gbChannels.master.playAudio(\n      numberOfSamples,\n      audioMessage.audioBuffer.left,\n      audioMessage.audioBuffer.right,\n      playbackRate,\n      this.updateAudioCallback\n    );\n\n    // Play on all of our channels if we have buffers for them\n    for (let i = 0; i < 4; i++) {\n      let channelNumber = i + 1;\n\n      if (audioMessage[`channel${channelNumber}Buffer`]) {\n        this.gbChannels[`channel${channelNumber}`].playAudio(\n          numberOfSamples,\n          audioMessage[`channel${channelNumber}Buffer`].left,\n          audioMessage[`channel${channelNumber}Buffer`].right,\n          playbackRate,\n          this.updateAudioCallback\n        );\n      }\n    }\n\n    let playingAllChannels =\n      !this.gbChannels.channel1.muted &&\n      !this.gbChannels.channel2.muted &&\n      !this.gbChannels.channel3.muted &&\n      !this.gbChannels.channel4.muted;\n\n    // Mute and unmute accordingly\n    if (this.gbChannels.master.muted && playingAllChannels) {\n      this.gbChannels.master.unmute();\n\n      // We want to \"force\" mute here\n      // Because master is secretly playing all the audio,\n      // But we want the channels to appear not muted :)\n      this.gbChannels.channel1._libMute();\n      this.gbChannels.channel2._libMute();\n      this.gbChannels.channel3._libMute();\n      this.gbChannels.channel4._libMute();\n    } else if (!this.gbChannels.master.muted && !playingAllChannels) {\n      this.gbChannels.master.mute();\n\n      this.gbChannels.channel1._libUnmute();\n      this.gbChannels.channel2._libUnmute();\n      this.gbChannels.channel3._libUnmute();\n      this.gbChannels.channel4._libUnmute();\n    }\n  }\n\n  // Functions to simply run on all of our channels\n\n  // Ensure that Audio is blessed.\n  // Meaning, the audioContext won't be\n  // affected by any autoplay issues.\n  // https://www.chromium.org/audio-video/autoplay\n  resumeAudioContext() {\n    this._applyOnAllChannels('resumeAudioContext');\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    this._applyOnAllChannels('cancelAllAudio', [stopCurrentAudio]);\n  }\n\n  _createAudioContextIfNone() {\n    this._applyOnAllChannels('createAudioContextIfNone');\n  }\n\n  _applyOnAllChannels(functionKey, argsArray) {\n    Object.keys(this.gbChannels).forEach(gbChannelKey => {\n      this.gbChannels[gbChannelKey][functionKey].apply(this.gbChannels[gbChannelKey], argsArray);\n    });\n  }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\n\n// Need to wrap in rollup replace to stop\n// node commonjs from breaking\n/*ROLLUP_REPLACE_BROWSER\nimport idb from 'idb';\nROLLUP_REPLACE_BROWSER*/\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db\n          .transaction('keyval')\n          .objectStore('keyval')\n          .get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  };\n}\n\nexport const idbKeyval = keyval;\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmboyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  isAuto: undefined\n};\n\n// Function to return a save state of the current memory\nexport function getSaveState() {\n  // Save our internal wasmboy state to memory\n  // Should be done whenever we send back memory\n  // this.wasmInstance.exports.saveState();\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmboyMemory.wasmBoyInternalState = this.internalState;\n  saveState.wasmboyMemory.wasmBoyPaletteMemory = this.paletteMemory;\n  saveState.wasmboyMemory.gameBoyMemory = this.gameboyMemory;\n  saveState.wasmboyMemory.cartridgeRam = this.cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n\n  if (this.saveStateCallback) {\n    this.saveStateCallback(saveState);\n  }\n\n  return saveState;\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Need to add a return value, and force all code in the block to be sync\n// https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n// http://vaughnroyko.com/idbonbeforeunload/\n// https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n// Solution:\n// ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n// Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\n\n// Function to create a save state, and store it as a localstorage token\nfunction _prepareAndStoreAutoSave() {\n  // Check if the game is currently playing\n  if (!this.internalState) {\n    return null;\n  }\n\n  // Get our cartridge ram and header\n  // Use this.cartridgeHeader and this.cartridgeRam\n  //const header = getCartridgeHeader.bind(this)();\n  //const cartridgeRam = getCartridgeRam.bind(this)();\n\n  // Get our save state, and un type our arrays\n  const saveState = getSaveState.bind(this)();\n  const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n  for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n    saveState.wasmboyMemory[saveStateMemoryKeys[i]] = Array.prototype.slice.call(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n  }\n\n  // Set isAuto\n  saveState.isAuto = true;\n\n  // Need to conert types arrays, and back, or selse wll get indexed JSON\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n\n  localStorage.setItem(\n    this.WASMBOY_UNLOAD_STORAGE,\n    JSON.stringify({\n      header: Array.prototype.slice.call(this.cartridgeHeader),\n      cartridgeRam: Array.prototype.slice.call(this.cartridgeRam),\n      saveState: saveState\n    })\n  );\n\n  return null;\n}\n\n// Function to find any autosaves in localstorage, and commit them to our idb\nfunction _findAndCommitAutoSave() {\n  const findAndCommitAutoSaveTask = async () => {\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmboyMemory[saveStateMemoryKeys[i]] = new Uint8Array(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      await this.saveCartridgeRam(header, cartridgeRam);\n      await this.saveState(header, saveState);\n    }\n  };\n\n  return findAndCommitAutoSaveTask();\n}\n\n// Function to set event listeners to run our unload handler\nexport function initializeAutoSave() {\n  // Set listeners to ensure we save our cartridge ram before closing\n  window.addEventListener(\n    'beforeunload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'unload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'pagehide',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  // Mobile Page visibility, for pressing home, closing tabs, task switcher, etc...\n  // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n  document.addEventListener('visibilitychange', () => {\n    // fires when user switches tabs, apps, goes to homescreen, etc.\n    // NOTE: This will not create a new save state in desktop browser,\n    // Because the localstorage string is only picked up on refresh :)\n    // Unless you force kill the browser or something, which is what we want\n    // Anyways\n    if (document.visibilityState === 'hidden') {\n      _prepareAndStoreAutoSave.bind(this)();\n    }\n  });\n\n  // Restore any autosave lingering to be committed\n  return _findAndCommitAutoSave.bind(this)();\n}\n","import { idbKeyval } from './idb';\n\n// Import worker stuff\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\nimport { initializeAutoSave } from './autosave.js';\n\nclass WasmBoyMemoryService {\n  constructor() {\n    this.worker = undefined;\n    this.maxNumberOfAutoSaveStates = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false\n    };\n\n    // Our different types of memory\n    this.cartridgeRom = undefined;\n    this.cartridgeRomFileName = undefined;\n    this.cartridgeHeader = undefined;\n    this.cartridgeRam = undefined;\n    this.gameboyMemory = undefined;\n    this.paletteMemory = undefined;\n    this.internalState = undefined;\n\n    // Going to set the key for idbKeyval as the cartridge header.\n    // Then, for each cartridge, it will return an object.\n    // there will be a cartridgeRam Key, settings Key, and a saveState key\n    // Not going to make one giant object, as we want to keep idb transactions light and fast\n    this.WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n    // Define some constants since calls to wasm are expensive\n    this.WASMBOY_GAME_BYTES_LOCATION = 0;\n    this.WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\n    this.WASMBOY_INTERNAL_STATE_SIZE = 0;\n    this.WASMBOY_INTERNAL_STATE_LOCATION = 0;\n    this.WASMBOY_INTERNAL_MEMORY_SIZE = 0;\n    this.WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\n    this.WASMBOY_PALETTE_MEMORY_SIZE = 0;\n    this.WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n  }\n\n  initialize(headless, maxNumberOfAutoSaveStates, saveStateCallback) {\n    this.maxNumberOfAutoSaveStates = maxNumberOfAutoSaveStates;\n    this.saveStateCallback = saveStateCallback;\n\n    const initializeTask = async () => {\n      await this._initializeConstants();\n\n      if (!headless) {\n        await initializeAutoSave.call(this);\n      }\n    };\n\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n\n    // Also set our handler\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Simply set our memory\n          const memoryTypes = Object.keys(eventData.message);\n          delete memoryTypes.type;\n\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n            this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n            this.cartridgeRam = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n            this.gameboyMemory = new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n            this.paletteMemory = new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n            this.internalState = new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]);\n          }\n\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to get all cartridge objects\n  // Saved in our indexed db\n  getSavedMemory() {\n    const getSavedMemoryTask = async () => {\n      const memory = [];\n      const keys = await idbKeyval.keys();\n\n      for (let i = 0; i < keys.length; i++) {\n        const cartridgeObject = await idbKeyval.get(keys[i]);\n        memory.push(cartridgeObject);\n      }\n\n      return memory;\n    };\n    return getSavedMemoryTask();\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.ROM = false;\n        this.loadedCartridgeMemoryState.RAM = false;\n\n        // Reset everything\n        this.cartridgeRom = undefined;\n        this.cartridgeHeader = undefined;\n        this.cartridgeRam = undefined;\n        this.gameboyMemory = undefined;\n        this.paletteMemory = undefined;\n        this.internalState = undefined;\n      });\n  }\n\n  loadCartridgeRom(ROM, fileName) {\n    const loadTask = async () => {\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_ROM] = ROM.buffer;\n\n      // Don't pass the rom as a transferrable, since,\n      // We want to keep a copy of it for reset\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.ROM = true;\n        });\n\n      // Also get our cartridge header\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_ROM, MEMORY_TYPE.CARTRIDGE_HEADER]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          this.cartridgeRomFileName = fileName;\n          this.cartridgeHeader = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_HEADER]);\n        });\n    };\n\n    return loadTask();\n  }\n\n  saveLoadedCartridge(additionalInfo) {\n    const saveLoadedCartridgeRomTask = async () => {\n      if (!this.cartridgeHeader) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(this.cartridgeHeader);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      const cartridgeInfo = await this.getCartridgeInfo();\n\n      // Remove any keys we don't want to allow\n      // Overriding in the additionalInfo\n      if (additionalInfo) {\n        delete additionalInfo.ROM;\n        delete additionalInfo.header;\n      }\n\n      // In the rare chance we don't know the name, set to unkown.\n      let fileName = this.cartridgeRomFileName || 'Unknown';\n\n      cartridgeObject.cartridgeRom = {\n        ROM: this.cartridgeRom,\n        header: this.cartridgeHeader,\n        fileName: fileName,\n        date: Date.now(),\n        ...additionalInfo\n      };\n\n      cartridgeObject.cartridgeInfo = cartridgeInfo;\n\n      if (this.cartridgeRam) {\n        await this.saveCartridgeRam();\n      }\n\n      await idbKeyval.set(this.cartridgeHeader, cartridgeObject);\n\n      return cartridgeObject;\n    };\n    return saveLoadedCartridgeRomTask();\n  }\n\n  deleteSavedCartridge(cartridge) {\n    const deleteLoadedCartridgeTask = async () => {\n      const cartridgeHeader = cartridge.cartridgeInfo.header;\n\n      if (!cartridgeHeader) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(cartridgeHeader);\n\n      if (!cartridgeObject) {\n        throw new Error('Could not find the passed cartridge');\n      }\n\n      delete cartridgeObject.cartridgeRom;\n\n      await idbKeyval.set(cartridgeHeader, cartridgeObject);\n\n      return cartridgeObject;\n    };\n\n    return deleteLoadedCartridgeTask();\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n    const saveCartridgeRamTask = async () => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if (passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = this.cartridgeHeader;\n        cartridgeRam = this.cartridgeRam;\n      }\n\n      if (!header || !cartridgeRam) {\n        throw new Error('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      let cartridgeObject = await idbKeyval.get(header);\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      // Set the cartridgeRam to our cartridgeObject\n      cartridgeObject.cartridgeRam = cartridgeRam;\n\n      await idbKeyval.set(header, cartridgeObject);\n    };\n\n    return saveCartridgeRamTask();\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n    const loadCartridgeRamTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      const cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.cartridgeRam) {\n        return;\n      }\n\n      // Set the cartridgeRam\n      // Don't transfer, because we want to keep a reference to it\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeObject.cartridgeRam.buffer;\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.RAM = true;\n          this.cartridgeRam = cartridgeObject.cartridgeRam;\n        });\n    };\n    return loadCartridgeRamTask();\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n    const saveStateTask = async () => {\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState.call(this);\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n      if (!cartridgeObject.saveStates) {\n        cartridgeObject.saveStates = [];\n      }\n\n      // Check if we are auto\n      if (saveState.isAuto && this.maxNumberOfAutoSaveStates && this.maxNumberOfAutoSaveStates > 0) {\n        // Make sure we are not exceeding the max number of auto save states\n        const autoSaveStates = [];\n        cartridgeObject.saveStates.forEach(savedState => {\n          if (savedState.isAuto) {\n            autoSaveStates.push(savedState);\n          }\n        });\n\n        // Sort auto save states by date\n        autoSaveStates.sort((a, b) => {\n          if (a.date < b.date) {\n            return -1;\n          }\n\n          if (a.date > b.date) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        while (autoSaveStates.length > 0 && autoSaveStates.length + 1 > this.maxNumberOfAutoSaveStates) {\n          const autoSaveState = autoSaveStates.shift();\n          // Find the save state\n          const saveStateIndex = this._indexOfSaveStateIndexInSaveStates(autoSaveState, cartridgeObject.saveStates);\n          cartridgeObject.saveStates.splice(saveStateIndex, 1);\n        }\n\n        if (this.maxNumberOfAutoSaveStates > 0) {\n          cartridgeObject.saveStates.push(saveState);\n        }\n      } else {\n        cartridgeObject.saveStates.push(saveState);\n      }\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error getting the cartridge header');\n      }\n\n      if (!saveState) {\n        const cartridgeObject = await idbKeyval.get(header);\n        if (!cartridgeObject || !cartridgeObject.saveStates) {\n          throw new Error('No Save State passed, and no cartridge object found');\n          return;\n        }\n        saverState = cartridgeObject.saveStates[0];\n      }\n\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = saveState.wasmboyMemory.cartridgeRam.buffer;\n      workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = saveState.wasmboyMemory.gameBoyMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY] = saveState.wasmboyMemory.wasmBoyPaletteMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE] = saveState.wasmboyMemory.wasmBoyInternalState.buffer;\n\n      await this.worker.postMessage(\n        {\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        },\n        [\n          workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n          workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE]\n        ]\n      );\n\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_RAM, MEMORY_TYPE.GAMEBOY_MEMORY, MEMORY_TYPE.PALETTE_MEMORY, MEMORY_TYPE.INTERNAL_STATE]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRam = eventData.message[MEMORY_TYPE.CARTRIDGE_RAM];\n          this.gameboyMemory = eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY];\n          this.paletteMemory = eventData.message[MEMORY_TYPE.PALETTE_MEMORY];\n          this.internalState = eventData.message[MEMORY_TYPE.INTERNAL_STATE];\n        });\n    };\n\n    return loadStateTask();\n  }\n\n  deleteState(saveState, passedHeader) {\n    const deleteStateTask = async () => {\n      if (!saveState) {\n        throw new Error('You must provide a save state to delete');\n        return;\n      }\n\n      let header;\n      if (passedHeader) {\n        header = passedHeader;\n      } else if (this.cartridgeHeader) {\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Please load a ROM, or pass a Cartridge header...');\n        return;\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.saveStates) {\n        throw new Error('No save states found for the Cartridge...');\n        return;\n      }\n\n      // Find the save state\n      const saveStateIndex = this._indexOfSaveStateIndexInSaveStates(saveState, cartridgeObject.saveStates);\n\n      // If not found, throw an error\n      if (saveStateIndex < 0) {\n        throw new Error('Could not find the passed save state for the related cartridge...');\n        return;\n      }\n\n      cartridgeObject.saveStates.splice(saveStateIndex, 1);\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return deleteStateTask();\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    return idbKeyval.get(this.cartridgeHeader);\n  }\n\n  // Function to return all informationh aboyut the currently loaded cart.\n  // This will include, the ROM, the RAM, the header, and the indivudal pieces of the header\n  // See: http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  getCartridgeInfo() {\n    if (!this.loadedCartridgeMemoryState.ROM) {\n      return Promise.reject('No ROM has been loaded');\n    }\n\n    let getCartridgeInfoTask = async () => {\n      const cartridgeInfo = {};\n\n      cartridgeInfo.header = this.cartridgeHeader;\n      cartridgeInfo.ROM = this.cartridgeRom;\n      cartridgeInfo.RAM = this.cartridgeRam;\n\n      // Now parse our header for additional information\n      cartridgeInfo.nintendoLogo = cartridgeInfo.ROM.slice(0x104, 0x134);\n\n      cartridgeInfo.title = cartridgeInfo.ROM.slice(0x134, 0x144);\n      cartridgeInfo.titleAsString = String.fromCharCode.apply(null, cartridgeInfo.title);\n\n      cartridgeInfo.manufacturerCode = cartridgeInfo.ROM.slice(0x13f, 0x143);\n\n      cartridgeInfo.CGBFlag = cartridgeInfo.ROM[0x143];\n\n      cartridgeInfo.newLicenseeCode = cartridgeInfo.ROM.slice(0x144, 0x146);\n\n      cartridgeInfo.SGBFlag = cartridgeInfo.ROM[0x146];\n\n      cartridgeInfo.cartridgeType = cartridgeInfo.ROM[0x147];\n\n      cartridgeInfo.ROMSize = cartridgeInfo.ROM[0x148];\n\n      cartridgeInfo.RAMSize = cartridgeInfo.ROM[0x149];\n\n      cartridgeInfo.destinationCode = cartridgeInfo.ROM[0x14a];\n\n      cartridgeInfo.oldLicenseeCode = cartridgeInfo.ROM[0x14b];\n\n      cartridgeInfo.maskROMVersionNumber = cartridgeInfo.ROM[0x14c];\n\n      cartridgeInfo.headerChecksum = cartridgeInfo.ROM[0x14d];\n\n      cartridgeInfo.globalChecksum = cartridgeInfo.ROM.slice(0x14e, 0x150);\n\n      return cartridgeInfo;\n    };\n\n    return getCartridgeInfoTask();\n  }\n\n  _initializeConstants() {\n    // Initialize our cached wasm constants\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        Object.keys(this).forEach(key => {\n          if (eventData.message[key] !== undefined) {\n            this[key] = eventData.message[key];\n          }\n        });\n      });\n  }\n\n  _indexOfSaveStateIndexInSaveStates(saveState, saveStates) {\n    // Find the save state\n    let saveStateIndex = saveStates.indexOf(saveState);\n    if (saveStateIndex < 0) {\n      const keysCheck = (a, b) => {\n        return JSON.stringify(Object.keys(a)) === JSON.stringify(Object.keys(b));\n      };\n\n      const dateCheck = (a, b) => {\n        return a.date === b.date;\n      };\n\n      const autoCheck = (a, b) => {\n        return a.isAuto === b.isAuto;\n      };\n\n      saveStates.some((savedState, index) => {\n        if (keysCheck(saveState, savedState) && dateCheck(saveState, savedState) && autoCheck(saveState, savedState)) {\n          saveStateIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return saveStateIndex;\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n","function d(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},e=Object.keys(c);\"function\"===typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));e.forEach(function(b){var e=c[b];b in a?Object.defineProperty(a,b,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[b]=e})}return a}\nlet g={DPAD_UP:\"DPAD_UP\",DPAD_RIGHT:\"DPAD_RIGHT\",DPAD_DOWN:\"DPAD_DOWN\",DPAD_LEFT:\"DPAD_LEFT\",LEFT_ANALOG_HORIZONTAL_AXIS:\"LEFT_ANALOG_HORIZONTAL_AXIS\",LEFT_ANALOG_VERTICAL_AXIS:\"LEFT_ANALOG_VERTICAL_AXIS\",LEFT_ANALOG_UP:\"LEFT_ANALOG_UP\",LEFT_ANALOG_RIGHT:\"LEFT_ANALOG_RIGHT\",LEFT_ANALOG_DOWN:\"LEFT_ANALOG_DOWN\",LEFT_ANALOG_LEFT:\"LEFT_ANALOG_LEFT\",RIGHT_ANALOG_HORIZONTAL_AXIS:\"RIGHT_ANALOG_HORIZONTAL_AXIS\",RIGHT_ANALOG_VERTICAL_AXIS:\"RIGHT_ANALOG_VERTICAL_AXIS\",RIGHT_ANALOG_UP:\"RIGHT_ANALOG_UP\",RIGHT_ANALOG_RIGHT:\"RIGHT_ANALOG_RIGHT\",\nRIGHT_ANALOG_DOWN:\"RIGHT_ANALOG_DOWN\",RIGHT_ANALOG_LEFT:\"RIGHT_ANALOG_LEFT\",A:\"A\",B:\"B\",X:\"X\",Y:\"Y\",LEFT_TRIGGER:\"LEFT_TRIGGER\",LEFT_BUMPER:\"LEFT_BUMPER\",RIGHT_TRIGGER:\"RIGHT_TRIGGER\",RIGHT_BUMPER:\"RIGHT_BUMPER\",SELECT:\"SELECT\",START:\"START\",SPECIAL:\"SPECIAL\"};class h{constructor(){}enable(){throw Error(\"enable() must be overridden\");}disable(){throw Error(\"disable() must be overridden\");}getState(){throw Error(\"getState() must be overridden\");}}\nlet k=\"input textarea button select option optgroup label datalist\".split(\" \"),l=[\"Alt\",\"Control\",\"Meta\",\"OS\"];\nclass m extends h{constructor(){super();this.keymap={};Object.keys(g).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if(\"undefined\"===typeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.addEventListener(\"keyup\",this._boundUpdateKeymapValues);window.addEventListener(\"keydown\",this._boundUpdateKeymapValues)}disable(){if(\"undefined\"===\ntypeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.removeEventListener(\"keyup\",this._boundUpdateKeymapValues);window.removeEventListener(\"keydown\",this._boundUpdateKeymapValues)}getState(){let a=d({},g);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=\n!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed keyboard keys to input\");\"string\"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return k.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return l.some((b)=>a.getModifierState(b)||\na.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value=\"keydown\"===a.type?!0:!1,!0):!1)))}}\nclass n extends h{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let e=d({},g);Object.keys(this.keymap).forEach((a)=>{e[a]=this.keymap[a].value});\ne[g.LEFT_ANALOG_DOWN]=e.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_UP]=e.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_RIGHT]=e.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_LEFT]=e.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_DOWN]=e.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_UP]=e.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;\ne[g.RIGHT_ANALOG_RIGHT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_LEFT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(e).forEach((a)=>{\"string\"===typeof e[a]&&delete e[a]});return e}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed buttons to input\");\"number\"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===\na||!b)throw Error(\"Could not set the specificed buttons to input\");if(\"number\"===typeof axes)throw Error(\"Must pass in an axis id\");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let q=\"touchstart touchmove touchend mousedown mousemove mouseup mouseleave\".split(\" \");\nclass r{constructor(a){if(!a)throw Error(\"Touch inputs require an element.\");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error(\"You must supply an element first with add()\");\nwindow.addEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error(\"You must supply an element first with add()\");window.removeEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes(\"touch\")||a.touches)){a.preventDefault();var b=\"touchstart\"===a.type||\"touchmove\"===a.type||\"mousedown\"===\na.type,c=\"mousemove\"===a.type,e=!b&&!c;this._updateActiveStatus(b,e);this._updateTouchStyles(b,c,e);if(this.onTouchEvent)this.onTouchEvent(a,b,c,e)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect=\"none\"}_removeTouchStyles(){this.element.style.userSelect=\"\"}_updateTouchStyles(a,b){b||(a?this.element.classList.add(\"active\"):this.element.classList.remove(\"active\"))}_updateActiveStatus(a,b){this.active&&b?\nthis.active=!1:!this.active&&a&&(this.active=!0)}}function t(a,b){let c;a.type.includes(\"touch\")?c=a.touches[0]:a.type.includes(\"mouse\")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}\nclass u extends r{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var f=this.boundingClientRect.width/20,p=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(c,\nf),this.setVerticalState(e,p)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-e)?this.setHorizontalState(c,f):this.setVerticalState(e)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}\nclass v extends r{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform=\"translate(0px, 0px)\";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);e=(e-b)/b;1<e?e=1:-1>e&&(e=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*e/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=\ne;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(e)>this.deadzone&&(0<e?this.state.DOWN=!0:0>e&&(this.state.UP=!0))}else this._resetState()}}class w extends r{constructor(a,b){super(a);this.input=b}}let x={LEFT:\"LEFT\",RIGHT:\"RIGHT\"};\nclass y extends h{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");\nthis.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=d({},g);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,\na.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,\na.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new w(a,b);this.enabled&&c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new u(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,x.LEFT)}addRightAnalogInput(a){this.addAnalogInput(a,\nx.RIGHT)}addAnalogInput(a,b){let c=new v(a);this.enabled&&c.listen();if(b===x.LEFT)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}\nclass z{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=g;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new m;this.Gamepad=new n;this.TouchInput=new y;this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowUp\",\"Numpad8\"],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyW\"],g.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyI\"],g.RIGHT_ANALOG_UP);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowRight\",\n\"Numpad6\"],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyD\"],g.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyL\"],g.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowDown\",\"Numpad5\",\"Numpad2\"],g.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyS\"],g.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyK\"],g.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],\ng.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowLeft\",\"Numpad4\"],g.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyA\"],g.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyJ\"],g.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],g.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],g.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],g.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],\ng.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],g.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyX\",\"Semicolon\",\"Numpad7\"],g.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],g.A);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyZ\",\"Escape\",\"Quote\",\"Backspace\",\"Numpad9\"],g.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],g.B);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyC\"],g.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],\ng.X);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyV\"],g.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],g.Y);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyQ\"],g.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],g.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyE\"],g.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],g.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyU\"],g.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],\ng.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyO\"],g.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],g.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"Enter\",\"Numpad3\"],g.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],g.START);this.Keyboard.setKeysToResponsiveGamepadInput([\"ShiftRight\",\"ShiftLeft\",\"Tab\",\"Numpad1\"],g.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],g.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput([\"Space\",\n\"Backslash\",\"Backquote\"],g.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],g.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return\"1.0.0\"}enable(){this.Keyboard.enable();this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&\n(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),1)}}getState(){if(!this._enabled)return{};let a=d({},g),b=this.Gamepad.getState(),c=this.TouchInput.getState(),e=this.Keyboard.getState();a=d({},g);Object.keys(a).forEach((f)=>{a[f]=b[f]||c[f]||e[f]});[\"LEFT\",\"RIGHT\"].forEach((b)=>\n{[g[`${b}_ANALOG_HORIZONTAL_AXIS`],g[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,e)=>{if(\"number\"!==typeof a[c]){if(0===e||2===e)a[c]=a[g[`${b}_ANALOG_RIGHT`]]?1:a[g[`${b}_ANALOG_LEFT`]]?-1:0;if(1===e||3===e)a[c]=a[g[`${b}_ANALOG_UP`]]?-1:a[g[`${b}_ANALOG_DOWN`]]?1:0}})});a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||\"string\"===typeof a[b])a[b]=!1});\nthis.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){\"string\"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>\n{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}let A=new z;var ResponsiveGamepad=A;export{ResponsiveGamepad};\n","// Responsive Gamepad plugin to simulate GB Inputs\n\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nexport default function ResponsiveGamepadPluginGB() {\n  return {\n    onGetState: state => {\n      const gamepadA = state.A;\n      const gamepadB = state.B;\n\n      state.A = gamepadA || state.X;\n      state.B = gamepadB || state.Y;\n\n      return state;\n    }\n  };\n}\n","// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nimport ResponsiveGamepadPluginGB from './gbplugin';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.worker = undefined;\n    this.isEnabled = false;\n\n    // Bind Repsonsive Gamepad to this\n    this.ResponsiveGamepad = ResponsiveGamepad;\n\n    ResponsiveGamepad.addPlugin(ResponsiveGamepadPluginGB());\n  }\n\n  initialize() {\n    if (!this.isEnabled) {\n      this.enableDefaultJoypad();\n    }\n\n    return Promise.resolve();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n  }\n\n  updateController() {\n    if (!this.isEnabled) {\n      return {};\n    }\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.setJoypadState(controllerState);\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n\n  setJoypadState(controllerState) {\n    const setJoypadStateParamsAsArray = [\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    ];\n\n    this.worker.postMessageIgnoreResponse({\n      type: WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE,\n      setJoypadStateParamsAsArray\n    });\n  }\n\n  enableDefaultJoypad() {\n    this.isEnabled = true;\n\n    ResponsiveGamepad.enable();\n  }\n\n  disableDefaultJoypad() {\n    this.isEnabled = false;\n\n    ResponsiveGamepad.disable();\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessageIgnoreResponse(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    this.worker.postMessage(messageObject, transfer);\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise((resolve, reject) => {\n      // Set a timeout before killing the message listener\n      let messageDroppedTimeout = setTimeout(() => {\n        console.warn('Message dropped', message);\n        this.removeMessageListener(messageId);\n        reject();\n      }, 500);\n\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          clearTimeout(messageDroppedTimeout);\n          messageDroppedTimeout = undefined;\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Import our worker urls\n// Only one of the wasmboylib imports will be used. Rollup/Babel handles which one\nimport wasmboyLibWasmWorkerUrl from '../../dist/worker/wasmboy.wasm.worker.js';\nimport wasmboyLibTsWorkerUrl from '../../dist/worker/wasmboy.ts.worker.js';\nimport wasmboyGraphicsWorkerUrl from '../../dist/worker/graphics.worker.js';\nimport wasmboyAudioWorkerUrl from '../../dist/worker/audio.worker.js';\nimport wasmboyControllerWorkerUrl from '../../dist/worker/controller.worker.js';\nimport wasmboyMemoryWorkerUrl from '../../dist/worker/memory.worker.js';\n\n// Import our Smart Worker Interface\nimport { SmartWorker } from './smartworker';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from './constants';\n\n/*ROLLUP_REPLACE_NODE\nconst { MessageChannel } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nexport const instantiateWorkers = async () => {\n  // Create our workers\n  let libWorkerUrl;\n  libWorkerUrl = wasmboyLibWasmWorkerUrl;\n  libWorkerUrl = wasmboyLibTsWorkerUrl;\n\n  const libWorker = new SmartWorker(libWorkerUrl, WORKER_ID.LIB);\n  const graphicsWorker = new SmartWorker(wasmboyGraphicsWorkerUrl, WORKER_ID.GRAPHICS);\n  const audioWorker = new SmartWorker(wasmboyAudioWorkerUrl, WORKER_ID.AUDIO);\n  const controllerWorker = new SmartWorker(wasmboyControllerWorkerUrl, WORKER_ID.CONTROLLER);\n  const memoryWorker = new SmartWorker(wasmboyMemoryWorkerUrl, WORKER_ID.MEMORY);\n  // Create an array of promises for when each worker is ready\n  const workerReadyPromises = [];\n\n  // Add our workers to an array,\n  const childWorkers = [graphicsWorker, audioWorker, controllerWorker, memoryWorker];\n\n  // Create a messaging channel between our main lib worker,\n  // And all of the children workers\n  childWorkers.forEach(childWorker => {\n    // Create our message channel\n    // https://stackoverflow.com/questions/14191394/web-workers-communication-using-messagechannel-html5\n    const messageChannel = new MessageChannel();\n\n    const workerReadyPromise = new Promise(resolve => {\n      // Our resolve function\n      let messagesReceived = 0;\n      const tryResolveWorkerReady = () => {\n        messagesReceived++;\n        if (messagesReceived >= 2) {\n          resolve();\n        }\n      };\n\n      // Post our connect messages\n      libWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: childWorker.id,\n            ports: [messageChannel.port1]\n          },\n          [messageChannel.port1]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n      childWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: libWorker.id,\n            ports: [messageChannel.port2]\n          },\n          [messageChannel.port2]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n    });\n\n    workerReadyPromises.push(workerReadyPromise);\n  });\n\n  // Wait for all workers to be ready\n  await Promise.all(workerReadyPromises);\n\n  // Finally, pass the ready workers to all of our children lib\n  WasmBoyGraphics.setWorker(graphicsWorker);\n  WasmBoyAudio.setWorker(audioWorker);\n  WasmBoyController.setWorker(controllerWorker);\n  WasmBoyMemory.setWorker(memoryWorker);\n\n  // Return the main worker for the main lib\n  return libWorker;\n};\n","export default \"data:application/javascript;base64,\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGU9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGw7Y29uc3Qgbj0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6aChmKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgYj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApO2ZvcihsZXQgYz0wOzE0ND5jOysrYyl7bGV0IGU9NDgwKmMsZj02NDAqYztmb3IobGV0IGM9MDsxNjA+YzsrK2Mpe2NvbnN0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bSgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9CmEubWVzc2FnZS5wb3J0c1swXTttKG4sbCk7aChmKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmwucG9zdE1lc3NhZ2UoZih7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGM9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHQ9KGEpPT57Y29uc3QgYj1hLmRhdGE/YS5kYXRhOmE7aWYoYi5tZXNzYWdlKXN3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGQoYi5tZXNzYWdlLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e2NvbnN0IGE9e3R5cGU6IlVQREFURUQiLG51bWJlck9mU2FtcGxlczpiLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczpiLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzpiLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSxjPVtdO1siYXVkaW9CdWZmZXIiLCJjaGFubmVsMUJ1ZmZlciIsImNoYW5uZWwyQnVmZmVyIiwiY2hhbm5lbDNCdWZmZXIiLCJjaGFubmVsNEJ1ZmZlciJdLmZvckVhY2goKGQpPT57aWYoYi5tZXNzYWdlW2RdKXt7dmFyIGY9Cm5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtkXSk7dmFyIGc9Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZyk7dmFyIGg9bmV3IEZsb2F0MzJBcnJheShnKTtsZXQgYz0wO2cqPTI7Zm9yKHZhciBlPTA7ZTxnO2UrPTIpYVtjXT1xKGZbZV0pLGMrKztjPTA7Zm9yKGU9MTtlPGc7ZSs9MiloW2NdPXEoZltlXSksYysrO2Y9YS5idWZmZXI7aD1oLmJ1ZmZlcn1hW2RdPXt9O2FbZF0ubGVmdD1mO2FbZF0ucmlnaHQ9aDtjLnB1c2goZik7Yy5wdXNoKGgpfX0pO20oZChhKSxjKX19fTtwKChhKT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","// Taken/Modified From: https://github.com/photopea/UZIP.js\n\nlet UZIP = {};\n\n// Make it a hacky es module\nconst uzip = UZIP;\nexport default uzip;\n\nUZIP['parse'] = function(\n  buf // ArrayBuffer\n) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint,\n    o = 0,\n    out = {};\n  let data = new Uint8Array(buf);\n  let eocd = data.length - 4;\n\n  while (rUi(data, eocd) != 0x06054b50) eocd--;\n\n  o = eocd;\n  o += 4; // sign  = 0x06054b50\n  o += 4; // disks = 0;\n  let cnu = rUs(data, o);\n  o += 2;\n  let cnt = rUs(data, o);\n  o += 2;\n\n  let csize = rUi(data, o);\n  o += 4;\n  let coffs = rUi(data, o);\n  o += 4;\n\n  o = coffs;\n  for (let i = 0; i < cnu; i++) {\n    let sign = rUi(data, o);\n    o += 4;\n    o += 4; // versions;\n    o += 4; // flag + compr\n    o += 4; // time\n\n    let crc32 = rUi(data, o);\n    o += 4;\n    let csize = rUi(data, o);\n    o += 4;\n    let usize = rUi(data, o);\n    o += 4;\n\n    let nl = rUs(data, o),\n      el = rUs(data, o + 2),\n      cl = rUs(data, o + 4);\n    o += 6; // name, extra, comment\n    o += 8; // disk, attribs\n\n    let roff = rUi(data, o);\n    o += 4;\n    o += nl + el + cl;\n\n    UZIP._readLocal(data, roff, out, csize, usize);\n  }\n  //console.log(out);\n  return out;\n};\n\nUZIP._readLocal = function(data, o, out, csize, usize) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint;\n  let sign = rUi(data, o);\n  o += 4;\n  let ver = rUs(data, o);\n  o += 2;\n  let gpflg = rUs(data, o);\n  o += 2;\n  //if((gpflg&8)!=0) throw \"unknown sizes\";\n  let cmpr = rUs(data, o);\n  o += 2;\n\n  let time = rUi(data, o);\n  o += 4;\n\n  let crc32 = rUi(data, o);\n  o += 4;\n  //let csize = rUi(data, o);  o+=4;\n  //let usize = rUi(data, o);  o+=4;\n  o += 8;\n\n  let nlen = rUs(data, o);\n  o += 2;\n  let elen = rUs(data, o);\n  o += 2;\n\n  let name = UZIP.bin.readUTF8(data, o, nlen);\n  o += nlen;\n  o += elen;\n\n  //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), \"csize, usize\", csize, usize, nlen, elen, name, o);\n\n  let file = new Uint8Array(data.buffer, o);\n  if (false) {\n  } else if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n  else if (cmpr == 8) {\n    let buf = new Uint8Array(usize);\n    UZIP.inflateRaw(file, buf);\n    //let nbuf = pako[\"inflateRaw\"](file);\n    //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw \"e\";  }\n    out[name] = buf;\n  } else throw 'unknown compression method: ' + cmpr;\n};\n\nUZIP.inflateRaw = function(file, buf) {\n  return UZIP.F.inflate(file, buf);\n};\nUZIP.inflate = function(file, buf) {\n  let CMF = file[0],\n    FLG = file[1];\n  let CM = CMF & 15,\n    CINFO = CMF >>> 4;\n  //console.log(CM, CINFO,CMF,FLG);\n  return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n};\nUZIP.deflate = function(data, opts /*, buf, off*/) {\n  if (opts == null) opts = { level: 6 };\n  let off = 0,\n    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  buf[off] = 120;\n  buf[off + 1] = 156;\n  off += 2;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  let crc = UZIP.adler(data, 0, data.length);\n  buf[off + 0] = (crc >>> 24) & 255;\n  buf[off + 1] = (crc >>> 16) & 255;\n  buf[off + 2] = (crc >>> 8) & 255;\n  buf[off + 3] = (crc >>> 0) & 255;\n  return new Uint8Array(buf.buffer, 0, off + 4);\n};\nUZIP.deflateRaw = function(data, opts) {\n  if (opts == null) opts = { level: 6 };\n  let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  let off;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  return new Uint8Array(buf.buffer, 0, off);\n};\n\nUZIP.encode = function(obj) {\n  let tot = 0,\n    wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let zpd = {};\n  for (let p in obj) {\n    let cpr = !UZIP._noNeed(p),\n      buf = obj[p],\n      crc = UZIP.crc.crc(buf, 0, buf.length);\n    zpd[p] = { cpr: cpr, usize: buf.length, crc: crc, file: cpr ? UZIP.deflateRaw(buf) : buf };\n  }\n\n  for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);\n  tot += 22;\n\n  let data = new Uint8Array(tot),\n    o = 0;\n  let fof = [];\n\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 0);\n  }\n  let i = 0,\n    ioff = o;\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);\n  }\n  let csize = o - ioff;\n\n  wUi(data, o, 0x06054b50);\n  o += 4;\n  o += 4; // disks\n  wUs(data, o, i);\n  o += 2;\n  wUs(data, o, i);\n  o += 2; // number of c d records\n  wUi(data, o, csize);\n  o += 4;\n  wUi(data, o, ioff);\n  o += 4;\n  o += 2;\n  return data.buffer;\n};\n// no need to compress .PNG, .ZIP, .JPEG ....\nUZIP._noNeed = function(fn) {\n  let ext = fn\n    .split('.')\n    .pop()\n    .toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;\n};\n\nUZIP._writeHeader = function(data, o, p, obj, t, roff) {\n  let wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let file = obj.file;\n\n  wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n  if (t == 1) o += 2; // ver made by\n  wUs(data, o, 20);\n  o += 2; // ver\n  wUs(data, o, 0);\n  o += 2; // gflip\n  wUs(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  wUi(data, o, 0);\n  o += 4; // time\n  wUi(data, o, obj.crc);\n  o += 4; // crc32\n  wUi(data, o, file.length);\n  o += 4; // csize\n  wUi(data, o, obj.usize);\n  o += 4; // usize\n\n  wUs(data, o, UZIP.bin.sizeUTF8(p));\n  o += 2; // nlen\n  wUs(data, o, 0);\n  o += 2; // elen\n\n  if (t == 1) {\n    o += 2; // comment length\n    o += 2; // disk number\n    o += 6; // attributes\n    wUi(data, o, roff);\n    o += 4; // usize\n  }\n  let nlen = UZIP.bin.writeUTF8(data, o, p);\n  o += nlen;\n  if (t == 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n  return o;\n};\n\nUZIP.crc = {\n  table: (function() {\n    let tab = new Uint32Array(256);\n    for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ (c >>> 1);\n        else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  })(),\n  update: function(c, buf, off, len) {\n    for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);\n    return c;\n  },\n  crc: function(b, o, l) {\n    return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUZIP.adler = function(data, o, len) {\n  let a = 1,\n    b = 0;\n  let off = o,\n    end = o + len;\n  while (off < end) {\n    let eend = Math.min(off + 5552, end);\n    while (off < eend) {\n      a += data[off++];\n      b += a;\n    }\n    a = a % 65521;\n    b = b % 65521;\n  }\n  return (b << 16) | a;\n};\n\nUZIP.bin = {\n  readUshort: function(buff, p) {\n    return buff[p] | (buff[p + 1] << 8);\n  },\n  writeUshort: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n  },\n  readUint: function(buff, p) {\n    return buff[p + 3] * (256 * 256 * 256) + ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p]);\n  },\n  writeUint: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n    buff[p + 2] = (n >> 16) & 255;\n    buff[p + 3] = (n >> 24) & 255;\n  },\n  readASCII: function(buff, p, l) {\n    let s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function(data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  pad: function(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function(buff, p, l) {\n    let s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UZIP.bin.readASCII(buff, p, l);\n    }\n    return ns;\n  },\n  writeUTF8: function(buff, p, str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        buff[p + i] = code;\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        buff[p + i] = 192 | (code >> 6);\n        buff[p + i + 1] = 128 | ((code >> 0) & 63);\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        buff[p + i] = 224 | (code >> 12);\n        buff[p + i + 1] = 128 | ((code >> 6) & 63);\n        buff[p + i + 2] = 128 | ((code >> 0) & 63);\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        buff[p + i] = 240 | (code >> 18);\n        buff[p + i + 1] = 128 | ((code >> 12) & 63);\n        buff[p + i + 2] = 128 | ((code >> 6) & 63);\n        buff[p + i + 3] = 128 | ((code >> 0) & 63);\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  },\n  sizeUTF8: function(str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  }\n};\n\nUZIP.F = {};\n\nUZIP.F.deflateRaw = function(data, out, opos, lvl) {\n  let opts = [\n    /*\n\t\t ush good_length; /* reduce lazy search above this match length \n\t\t ush max_lazy;    /* do not perform lazy search above this match length \n         ush nice_length; /* quit search above this match length \n\t*/\n    /*      good lazy nice chain */\n    /* 0 */ [0, 0, 0, 0, 0] /* store only */,\n    /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,\n    /* 2 */ [4, 5, 16, 8, 0],\n    /* 3 */ [4, 6, 16, 16, 0],\n\n    /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,\n    /* 5 */ [8, 16, 32, 32, 0],\n    /* 6 */ [8, 16, 128, 128, 0],\n    /* 7 */ [8, 32, 128, 256, 0],\n    /* 8 */ [32, 128, 258, 1024, 1],\n    /* 9 */ [32, 258, 258, 4096, 1]\n  ]; /* max compression */\n\n  let opt = opts[lvl];\n\n  let U = UZIP.F.U,\n    goodIndex = UZIP.F._goodIndex,\n    hash = UZIP.F._hash,\n    putsE = UZIP.F._putsE;\n  let i = 0,\n    pos = opos << 3,\n    cvrd = 0,\n    dlen = data.length;\n\n  if (lvl == 0) {\n    while (i < dlen) {\n      let len = Math.min(0xffff, dlen - i);\n      putsE(out, pos, i + len == dlen ? 1 : 0);\n      pos = UZIP.F._copyExact(data, i, len, out, pos + 8);\n      i += len;\n    }\n    return pos >>> 3;\n  }\n\n  let lits = U.lits,\n    strt = U.strt,\n    prev = U.prev,\n    li = 0,\n    lc = 0,\n    bs = 0,\n    ebits = 0,\n    c = 0,\n    nc = 0; // last_item, literal_count, block_start\n  if (dlen > 2) {\n    nc = UZIP.F._hash(data, 0);\n    strt[nc] = 0;\n  }\n  let nmch = 0,\n    nmci = 0;\n\n  for (i = 0; i < dlen; i++) {\n    c = nc;\n    //*\n    if (i + 1 < dlen - 2) {\n      nc = UZIP.F._hash(data, i + 1);\n      let ii = (i + 1) & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    } //*/\n    if (cvrd <= i) {\n      if (li > 14000 || lc > 26697) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n        pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      let mch = 0;\n      //if(nmci==i) mch= nmch;  else\n      if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      /*\n\t\t\tif(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {\n\t\t\t\tnmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;\n\t\t\t\t//let mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;\n\t\t\t\tif((nmch>>>16)>(mch>>>16)) mch=0;\n\t\t\t}//*/\n      let len = mch >>> 16,\n        dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n      if (mch != 0) {\n        let len = mch >>> 16,\n          dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n        let lgi = goodIndex(len, U.of0);\n        U.lhst[257 + lgi]++;\n        let dgi = goodIndex(dst, U.df0);\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = (len << 23) | (i - cvrd);\n        lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n      lc++;\n    }\n  }\n  if (bs != i || data.length == 0) {\n    if (cvrd < i) {\n      lits[li] = i - cvrd;\n      li += 2;\n      cvrd = i;\n    }\n    pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n    li = 0;\n    lc = 0;\n    li = lc = ebits = 0;\n    bs = i;\n  }\n  while ((pos & 7) != 0) pos++;\n  return pos >>> 3;\n};\nUZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {\n  let ci = i & 0x7fff,\n    pi = prev[ci];\n  //console.log(\"----\", i);\n  let dif = (ci - pi + (1 << 15)) & 0x7fff;\n  if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;\n  let tl = 0,\n    td = 0; // top length, top distance\n  let dlim = Math.min(0x7fff, i);\n  while (dif <= dlim && --chain != 0 && pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/) {\n    if (tl == 0 || data[i + tl] == data[i + tl - dif]) {\n      let cl = UZIP.F._howLong(data, i, dif);\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n        if (dif + 2 < cl) cl = dif + 2;\n        let maxd = 0; // pi does not point to the start of the word\n        for (let j = 0; j < cl - 2; j++) {\n          let ei = (i - dif + j + (1 << 15)) & 0x7fff;\n          let li = prev[ei];\n          let curd = (ei - li + (1 << 15)) & 0x7fff;\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        } //*/\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += (ci - pi + (1 << 15)) & 0x7fff;\n  }\n  return (tl << 16) | td;\n};\nUZIP.F._howLong = function(data, i, dif) {\n  if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;\n  let oi = i,\n    l = Math.min(data.length, i + 258);\n  i += 3;\n  //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n  while (i < l && data[i] == data[i - dif]) i++;\n  return i - oi;\n};\nUZIP.F._hash = function(data, i) {\n  return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\n  //let hash_shift = 0, hash_mask = 255;\n  //let h = data[i+1] % 251;\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  //return h | (data[i]<<8);\n  //return (data[i] | (data[i+1]<<8));\n};\n//UZIP.___toth = 0;\nUZIP.saved = 0;\nUZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  let U = UZIP.F.U,\n    putsF = UZIP.F._putsF,\n    putsE = UZIP.F._putsE;\n\n  //*\n  let T, ML, MD, MH, numl, numd, numh, lset, dset;\n  U.lhst[256]++;\n  T = UZIP.F.getTrees();\n  ML = T[0];\n  MD = T[1];\n  MH = T[2];\n  numl = T[3];\n  numd = T[4];\n  numh = T[5];\n  lset = T[6];\n  dset = T[7];\n\n  let cstSize = (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\n  let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);\n  let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (let j = 0; j < 286; j++) U.lhst[j] = 0;\n  for (let j = 0; j < 30; j++) U.dhst[j] = 0;\n  for (let j = 0; j < 19; j++) U.ihst[j] = 0;\n  //*/\n  let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n  putsF(out, pos, BFINAL);\n  putsF(out, pos + 1, BTYPE);\n  pos += 3;\n\n  let opos = pos;\n  if (BTYPE == 0) {\n    while ((pos & 7) != 0) pos++;\n    pos = UZIP.F._copyExact(data, o0, l0, out, pos);\n  } else {\n    let ltree, dtree;\n    if (BTYPE == 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    }\n    if (BTYPE == 2) {\n      UZIP.F.makeCodes(U.ltree, ML);\n      UZIP.F.revCodes(U.ltree, ML);\n      UZIP.F.makeCodes(U.dtree, MD);\n      UZIP.F.revCodes(U.dtree, MD);\n      UZIP.F.makeCodes(U.itree, MH);\n      UZIP.F.revCodes(U.itree, MH);\n\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      putsE(out, pos, numl - 257);\n      pos += 5; // 286\n      putsE(out, pos, numd - 1);\n      pos += 5; // 30\n      putsE(out, pos, numh - 4);\n      pos += 4; // 19\n\n      for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n      pos += 3 * numh;\n      pos = UZIP.F._codeTiny(lset, U.itree, out, pos);\n      pos = UZIP.F._codeTiny(dset, U.itree, out, pos);\n    }\n\n    let off = o0;\n    for (let si = 0; si < li; si += 2) {\n      let qb = lits[si],\n        len = qb >>> 23,\n        end = off + (qb & ((1 << 23) - 1));\n      while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);\n\n      if (len != 0) {\n        let qc = lits[si + 1],\n          dst = qc >> 16,\n          lgi = (qc >> 8) & 255,\n          dgi = qc & 255;\n        pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);\n        putsE(out, pos, len - U.of0[lgi]);\n        pos += U.exb[lgi];\n\n        pos = UZIP.F._writeLit(dgi, dtree, out, pos);\n        putsF(out, pos, dst - U.df0[dgi]);\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n    pos = UZIP.F._writeLit(256, ltree, out, pos);\n  }\n  //console.log(pos-opos, fxdSize, dynSize, cstSize);\n  return pos;\n};\nUZIP.F._copyExact = function(data, off, len, out, pos) {\n  let p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8);\n  //for(let i=0; i<len; i++) out[p8+i]=data[off+i];\n  return pos + ((len + 4) << 3);\n};\n/*\n\tInteresting facts:\n\t- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\n*/\n\nUZIP.F.getTrees = function() {\n  let U = UZIP.F.U;\n  let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);\n  let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);\n  let lset = [],\n    numl = UZIP.F._lenCodes(U.ltree, lset);\n  let dset = [],\n    numd = UZIP.F._lenCodes(U.dtree, dset);\n  for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n  for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n  let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);\n  let numh = 19;\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n};\nUZIP.F.getSecond = function(a) {\n  let b = [];\n  for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);\n  return b;\n};\nUZIP.F.nonZero = function(a) {\n  let b = '';\n  for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';\n  return b;\n};\nUZIP.F.contSize = function(tree, hst) {\n  let s = 0;\n  for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n  return s;\n};\nUZIP.F._codeTiny = function(set, tree, out, pos) {\n  for (let i = 0; i < set.length; i += 2) {\n    let l = set[i],\n      rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);\n    pos = UZIP.F._writeLit(l, tree, out, pos);\n    let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;\n    if (l > 15) {\n      UZIP.F._putsE(out, pos, rst, rsl);\n      pos += rsl;\n    }\n  }\n  return pos;\n};\nUZIP.F._lenCodes = function(tree, set) {\n  let len = tree.length;\n  while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0\n  for (let i = 0; i < len; i += 2) {\n    let l = tree[i + 1],\n      nxt = i + 3 < len ? tree[i + 3] : -1,\n      nnxt = i + 5 < len ? tree[i + 5] : -1,\n      prv = i == 0 ? -1 : tree[i - 1];\n    if (l == 0 && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);\n      else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l == prv && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else set.push(l, 0);\n  }\n  return len >>> 1;\n};\nUZIP.F._hufTree = function(hst, tree, MAXL) {\n  let list = [],\n    hl = hst.length,\n    tl = tree.length,\n    i = 0;\n  for (i = 0; i < tl; i += 2) {\n    tree[i] = 0;\n    tree[i + 1] = 0;\n  }\n  for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });\n  let end = list.length,\n    l2 = list.slice(0);\n  if (end == 0) return 0; // empty histogram (usually for dist)\n  if (end == 1) {\n    let lit = list[0].lit,\n      l2 = lit == 0 ? 1 : 0;\n    tree[(lit << 1) + 1] = 1;\n    tree[(l2 << 1) + 1] = 1;\n    return 1;\n  }\n  list.sort(function(a, b) {\n    return a.f - b.f;\n  });\n  let a = list[0],\n    b = list[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };\n  while (i1 != end - 1) {\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      a = list[i0++];\n    } else {\n      a = list[i2++];\n    }\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      b = list[i0++];\n    } else {\n      b = list[i2++];\n    }\n    list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };\n  }\n  let maxl = UZIP.F.setDepth(list[i1 - 1], 0);\n  if (maxl > MAXL) {\n    UZIP.F.restrictDepth(l2, MAXL, maxl);\n    maxl = MAXL;\n  }\n  for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;\n  return maxl;\n};\n\nUZIP.F.setDepth = function(t, d) {\n  if (t.lit != -1) {\n    t.d = d;\n    return d;\n  }\n  return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));\n};\n\nUZIP.F.restrictDepth = function(dps, MD, maxl) {\n  let i = 0,\n    bCost = 1 << (maxl - MD),\n    dbt = 0;\n  dps.sort(function(a, b) {\n    return b.d == a.d ? a.f - b.f : b.d - a.d;\n  });\n\n  for (i = 0; i < dps.length; i++)\n    if (dps[i].d > MD) {\n      let od = dps[i].d;\n      dps[i].d = MD;\n      dbt += bCost - (1 << (maxl - od));\n    } else break;\n  dbt = dbt >>> (maxl - MD);\n  while (dbt > 0) {\n    let od = dps[i].d;\n    if (od < MD) {\n      dps[i].d++;\n      dbt -= 1 << (MD - od - 1);\n    } else i++;\n  }\n  for (; i >= 0; i--)\n    if (dps[i].d == MD && dbt < 0) {\n      dps[i].d--;\n      dbt++;\n    }\n  if (dbt != 0) console.log('debt left');\n};\n\nUZIP.F._goodIndex = function(v, arr) {\n  let i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n};\nUZIP.F._writeLit = function(ch, ltree, out, pos) {\n  UZIP.F._putsF(out, pos, ltree[ch << 1]);\n  return pos + ltree[(ch << 1) + 1];\n};\n\nUZIP.F.inflate = function(data, buf) {\n  if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);\n  let F = UZIP.F,\n    bitsF = F._bitsF,\n    bitsE = F._bitsE,\n    decodeTiny = F._decodeTiny,\n    makeCodes = F.makeCodes,\n    codes2map = F.codes2map,\n    get17 = F._get17;\n  let U = F.U;\n\n  let noBuf = buf == null;\n  if (noBuf) buf = new Uint8Array((data.length >> 2) << 3);\n\n  let BFINAL = 0,\n    BTYPE = 0,\n    HLIT = 0,\n    HDIST = 0,\n    HCLEN = 0,\n    ML = 0,\n    MD = 0;\n  let off = 0,\n    pos = 0;\n  let lmap, dmap;\n\n  while (BFINAL == 0) {\n    BFINAL = bitsF(data, pos, 1);\n    BTYPE = bitsF(data, pos + 1, 2);\n    pos += 3;\n    //console.log(BFINAL, BTYPE);\n\n    if (BTYPE == 0) {\n      if ((pos & 7) != 0) pos += 8 - (pos & 7);\n      let p8 = (pos >>> 3) + 4,\n        len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),\n      if (noBuf) buf = UZIP.F._check(buf, off + len);\n      buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off);\n      //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];\n      //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n      pos = (p8 + len) << 3;\n      off += len;\n      continue;\n    }\n    if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));\n    if (BTYPE == 1) {\n      lmap = U.flmap;\n      dmap = U.fdmap;\n      ML = (1 << 9) - 1;\n      MD = (1 << 5) - 1;\n    }\n    if (BTYPE == 2) {\n      HLIT = bitsE(data, pos, 5) + 257;\n      HDIST = bitsE(data, pos + 5, 5) + 1;\n      HCLEN = bitsE(data, pos + 10, 4) + 4;\n      pos += 14;\n\n      let ppos = pos;\n      for (let i = 0; i < 38; i += 2) {\n        U.itree[i] = 0;\n        U.itree[i + 1] = 0;\n      }\n      let tl = 1;\n      for (let i = 0; i < HCLEN; i++) {\n        let l = bitsE(data, pos + i * 3, 3);\n        U.itree[(U.ordr[i] << 1) + 1] = l;\n        if (l > tl) tl = l;\n      }\n      pos += 3 * HCLEN; //console.log(itree);\n      makeCodes(U.itree, tl);\n      codes2map(U.itree, tl, U.imap);\n\n      lmap = U.lmap;\n      dmap = U.dmap;\n\n      let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);\n      ML = (1 << (ml >>> 24)) - 1;\n      pos += ml & 0xffffff;\n      makeCodes(U.ltree, ml >>> 24);\n      codes2map(U.ltree, ml >>> 24, lmap);\n\n      let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);\n      MD = (1 << (md >>> 24)) - 1;\n      pos += md & 0xffffff;\n      makeCodes(U.dtree, md >>> 24);\n      codes2map(U.dtree, md >>> 24, dmap);\n    }\n    //let ooff=off, opos=pos;\n    while (true) {\n      let code = lmap[get17(data, pos) & ML];\n      pos += code & 15;\n      let lit = code >>> 4; //U.lhst[lit]++;\n      if (lit >>> 8 == 0) {\n        buf[off++] = lit;\n      } else if (lit == 256) {\n        break;\n      } else {\n        let end = off + lit - 254;\n        if (lit > 264) {\n          let ebs = U.ldef[lit - 257];\n          end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);\n          pos += ebs & 7;\n        }\n        //UZIP.F.dst[end-off]++;\n\n        let dcode = dmap[get17(data, pos) & MD];\n        pos += dcode & 15;\n        let dlit = dcode >>> 4;\n        let dbs = U.ddef[dlit],\n          dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);\n        pos += dbs & 15;\n\n        //let o0 = off-dst, stp = Math.min(end-off, dst);\n        //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n        //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n        //if(dst==1) buf.fill(buf[off-1], off, end);  else\n        while (off < end) {\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n        }\n        off = end;\n        //while(off!=end) {  buf[off]=buf[off++-dst];  }\n      }\n    }\n    //console.log(off-ooff, (pos-opos)>>>3);\n  }\n  //console.log(UZIP.F.dst);\n  //console.log(tlen, dlen, off-tlen+tcnt);\n  return buf.length == off ? buf : buf.slice(0, off);\n};\nUZIP.F._check = function(buf, len) {\n  let bl = buf.length;\n  if (len <= bl) return buf;\n  let nbuf = new Uint8Array(bl << 1);\n  for (let i = 0; i < bl; i += 4) {\n    nbuf[i] = buf[i];\n    nbuf[i + 1] = buf[i + 1];\n    nbuf[i + 2] = buf[i + 2];\n    nbuf[i + 3] = buf[i + 3];\n  }\n  return nbuf;\n};\n\nUZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {\n  let opos = pos;\n  let bitsE = UZIP.F._bitsE,\n    get17 = UZIP.F._get17;\n  let dlen = len << 1,\n    i = 0,\n    mx = 0;\n  //if(pos<1000) console.log(\"--------\");\n  //console.log(\"----\", pos, \":\",  data[7],data[8], data[9], data[10], data[11]);\n  while (i < dlen) {\n    let code = lmap[get17(data, pos) & LL];\n    pos += code & 15;\n    let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);\n    //if(i<20)console.log(lit, code>>>9, pos);\n    if (lit <= 15) {\n      tree[i] = 0;\n      tree[i + 1] = lit;\n      if (lit > mx) mx = lit;\n      i += 2;\n    } else {\n      let ll = 0,\n        n = 0;\n      if (lit == 16) {\n        n = (3 + bitsE(data, pos, 2)) << 1;\n        pos += 2;\n        ll = tree[i - 1];\n      } else if (lit == 17) {\n        n = (3 + bitsE(data, pos, 3)) << 1;\n        pos += 3;\n      } else if (lit == 18) {\n        n = (11 + bitsE(data, pos, 7)) << 1;\n        pos += 7;\n      }\n      let ni = i + n;\n      while (i < ni) {\n        tree[i] = 0;\n        tree[i + 1] = ll;\n        i += 2;\n      }\n    }\n  }\n  let tl = tree.length;\n  while (i < tl) {\n    tree[i + 1] = 0;\n    i += 2;\n  }\n  return (mx << 24) | (pos - opos);\n};\n\nUZIP.F.makeCodes = function(tree, MAX_BITS) {\n  // code, length\n  let U = UZIP.F.U;\n  let max_code = tree.length;\n  let code, bits, n, i, len;\n\n  let bl_count = U.bl_count;\n  for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;\n  for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;\n\n  let next_code = U.next_code; // smallest code for each length\n\n  code = 0;\n  bl_count[0] = 0;\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n\n  for (n = 0; n < max_code; n += 2) {\n    len = tree[n + 1];\n    if (len != 0) {\n      tree[n] = next_code[len];\n      next_code[len]++;\n    }\n  }\n};\nUZIP.F.codes2map = function(tree, MAX_BITS, map) {\n  let max_code = tree.length;\n  let U = UZIP.F.U,\n    r15 = U.rev15;\n  for (let i = 0; i < max_code; i += 2)\n    if (tree[i + 1] != 0) {\n      let lit = i >> 1;\n      let cl = tree[i + 1],\n        val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n      let rest = MAX_BITS - cl,\n        i0 = tree[i] << rest,\n        i1 = i0 + (1 << rest);\n      //tree[i]=r15[i0]>>>(15-MAX_BITS);\n      while (i0 != i1) {\n        let p0 = r15[i0] >>> (15 - MAX_BITS);\n        map[p0] = val;\n        i0++;\n      }\n    }\n};\nUZIP.F.revCodes = function(tree, MAX_BITS) {\n  let r15 = UZIP.F.U.rev15,\n    imb = 15 - MAX_BITS;\n  for (let i = 0; i < tree.length; i += 2) {\n    let i0 = tree[i] << (MAX_BITS - tree[i + 1]);\n    tree[i] = r15[i0] >>> imb;\n  }\n};\n\nUZIP.F._putsE = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n};\nUZIP.F._putsF = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n};\n\nUZIP.F._bitsE = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) & ((1 << length) - 1);\n};\nUZIP.F._bitsF = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7)) & ((1 << length) - 1);\n};\n/*\nUZIP.F._get9 = function(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nUZIP.F._get17 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7);\n};\nUZIP.F._get25 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16) | (dt[(pos >>> 3) + 3] << 24)) >>> (pos & 7);\n};\n\nUZIP.F.U = {\n  next_code: new Uint16Array(16),\n  bl_count: new Uint16Array(16),\n  ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n  of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n  exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n  ldef: new Uint16Array(32),\n  df0: [\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    65535,\n    65535\n  ],\n  dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n  ddef: new Uint32Array(32),\n  flmap: new Uint16Array(512),\n  fltree: [],\n  fdmap: new Uint16Array(32),\n  fdtree: [],\n  lmap: new Uint16Array(32768),\n  ltree: [],\n  dmap: new Uint16Array(32768),\n  dtree: [],\n  imap: new Uint16Array(512),\n  itree: [],\n  //rev9 : new Uint16Array(  512)\n  rev15: new Uint16Array(1 << 15),\n  lhst: new Uint32Array(286),\n  dhst: new Uint32Array(30),\n  ihst: new Uint32Array(19),\n  lits: new Uint32Array(15000),\n  strt: new Uint16Array(1 << 16),\n  prev: new Uint16Array(1 << 15)\n};\n\n(function() {\n  let U = UZIP.F.U;\n  let len = 1 << 15;\n  for (let i = 0; i < len; i++) {\n    let x = i;\n    x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);\n    x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);\n    x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);\n    x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);\n    U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;\n  }\n\n  for (let i = 0; i < 32; i++) {\n    U.ldef[i] = (U.of0[i] << 3) | U.exb[i];\n    U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];\n  }\n\n  let i = 0;\n  for (; i <= 143; i++) U.fltree.push(0, 8);\n  for (; i <= 255; i++) U.fltree.push(0, 9);\n  for (; i <= 279; i++) U.fltree.push(0, 7);\n  for (; i <= 287; i++) U.fltree.push(0, 8);\n  UZIP.F.makeCodes(U.fltree, 9);\n  UZIP.F.codes2map(U.fltree, 9, U.flmap);\n  UZIP.F.revCodes(U.fltree, 9);\n\n  for (i = 0; i < 32; i++) U.fdtree.push(0, 5);\n  UZIP.F.makeCodes(U.fdtree, 5);\n  UZIP.F.codes2map(U.fdtree, 5, U.fdmap);\n  UZIP.F.revCodes(U.fdtree, 5);\n\n  for (let i = 0; i < 19; i++) U.itree.push(0, 0);\n  for (let i = 0; i < 286; i++) U.ltree.push(0, 0);\n  for (let i = 0; i < 30; i++) U.dtree.push(0, 0);\n})();\n","// Modules\nimport uzip from '../3p/UZIP';\n\n// Collection of functions to parse roms\n// Private function to fetch a game\nexport const fetchROMAsByteArray = (ROM, loadOptions) => {\n  const fetchROMAsByteArrayTask = async () => {\n    // Check if we were passed straight bytes\n    if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {\n      return {\n        ROM: ROM\n      };\n    } else if (typeof ROM === 'object' && ROM.size) {\n      // We were passed a file from HTML file input\n\n      // Read the file as a Uint8Array\n      let byteArray = await getROMFromFileReaderAsByteArray(ROM);\n\n      if (ROM.name.toLowerCase().endsWith('.zip')) {\n        byteArray = await parseByteArrayAsZip(byteArray);\n      }\n\n      return {\n        ROM: byteArray,\n        name: ROM.name\n      };\n    } else {\n      // We were passed a URL\n\n      // Fetch the file\n      // First check if we have headers\n      const fetchHeaders = {};\n      if (loadOptions && loadOptions.headers) {\n        fetchHeaders.headers = loadOptions.headers;\n      }\n\n      let bytes = await fetch(ROM, fetchHeaders).then(blob => {\n        if (!blob.ok) {\n          return Promise.reject(blob);\n        }\n        return blob.arrayBuffer();\n      });\n\n      let fileName = ROM;\n      if (loadOptions && loadOptions.fileName) {\n        fileName = loadOptions.fileName;\n      }\n\n      // Get our byteArray\n      let byteArray = new Uint8Array(bytes);\n\n      if (fileName.toLowerCase().endsWith('.zip')) {\n        byteArray = await parseByteArrayAsZip(byteArray);\n      }\n\n      return {\n        ROM: byteArray,\n        name: fileName\n      };\n    }\n  };\n\n  return fetchROMAsByteArrayTask();\n};\n\nconst getROMFromFileReaderAsByteArray = async ROM => {\n  const fileReaderByteArray = await new Promise((resolve, reject) => {\n    // Read the file object\n    // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const byteArray = new Uint8Array(fileReader.result);\n      resolve(byteArray);\n    };\n    fileReader.readAsArrayBuffer(ROM);\n  });\n  return fileReaderByteArray;\n};\n\n// Function to parse and find the gb files within an archive\nconst parseByteArrayAsZip = async byteArray => {\n  // Parse the zip using UZIP\n  const unzipObject = await uzip.parse(byteArray);\n\n  // Find the ROM in the output\n  let foundROM = false;\n  const unzipObjectKeys = Object.keys(unzipObject);\n  unzipObjectKeys.some(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc')) {\n      foundROM = unzipObject[key];\n      return true;\n    }\n    return false;\n  });\n\n  if (!foundROM) {\n    throw new Error('Could not find a ROM in zip...');\n  }\n\n  return foundROM;\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Fetch our rom\nimport { fetchROMAsByteArray } from './fetchrom';\n\n// Get our worker message types\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\n\n// Finish request for wasm module, and fetch game\n// NOTE: **Should bind the wasmboy this here**\nexport function loadROMToWasmBoy(ROM, fetchHeaders) {\n  // Getting started with wasm\n  // http://webassembly.org/getting-started/js-api/\n  this.ready = false;\n  this.loadedAndStarted = false;\n\n  const initializeTask = async () => {\n    // Get our promises\n    const initPromises = [fetchROMAsByteArray(ROM, fetchHeaders), this._instantiateWorkers()];\n\n    if (!this.options.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n      initPromises.push(WasmBoyMemory.saveCartridgeRam());\n    }\n\n    let fetchROMObject;\n    await Promise.all(initPromises).then(responses => {\n      fetchROMObject = responses[0];\n    });\n\n    // Now tell the wasm module to instantiate wasm\n    const response = await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.INSTANTIATE_WASM\n    });\n\n    this.coreType = response.message.type;\n\n    return fetchROMObject;\n  };\n\n  const loadROMAndConfigTask = async fetchROMObject => {\n    // Clear what is currently in memory, then load the cartridge memory\n    await WasmBoyMemory.clearMemory();\n\n    // TODO: Handle passing a boot rom\n    await WasmBoyMemory.loadCartridgeRom(fetchROMObject.ROM, fetchROMObject.name);\n\n    // Save the game that we loaded if we need to reload the game\n    this.loadedROM = ROM;\n\n    // Run our initialization on the core\n    await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.CONFIG,\n      config: [\n        0, // TODO: Include Boot Rom\n        this.options.isGbcEnabled ? 1 : 0,\n        this.options.audioBatchProcessing ? 1 : 0,\n        this.options.graphicsBatchProcessing ? 1 : 0,\n        this.options.timersBatchProcessing ? 1 : 0,\n        this.options.graphicsDisableScanlineRendering ? 1 : 0,\n        this.options.audioAccumulateSamples ? 1 : 0,\n        this.options.tileRendering ? 1 : 0,\n        this.options.tileCaching ? 1 : 0,\n        this.options.enableAudioDebugging ? 1 : 0\n      ],\n      options: {\n        gameboyFrameRate: this.options.gameboyFrameRate,\n        headless: this.options.headless,\n        isAudioEnabled: this.options.isAudioEnabled,\n        isGbcColorizationEnabled: this.options.isGbcColorizationEnabled,\n        gbcColorizationPalette: this.options.gbcColorizationPalette,\n        enableAudioDebugging: this.options.enableAudioDebugging,\n        frameSkip: this.options.frameSkip\n      }\n    });\n  };\n\n  const loadROMTask = async () => {\n    // Pause wasmBoy\n    await this.pause();\n\n    // Initialize any needed parts of wasmboy\n    let fetchROMObject = await initializeTask();\n\n    // Check if we are running headless\n    if (this.options.headless) {\n      await WasmBoyMemory.initialize(this.options.headless, this.options.maxNumberOfAutoSaveStates, this.options.saveStateCallback);\n\n      await loadROMAndConfigTask(fetchROMObject);\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    } else {\n      // Finally intialize all of our services\n      // Initialize our services\n      await Promise.all([\n        WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback),\n        WasmBoyAudio.initialize(this.options.updateAudioCallback),\n        WasmBoyController.initialize(),\n        WasmBoyMemory.initialize(this.options.headless, this.options.maxNumberOfAutoSaveStates, this.options.saveStateCallback)\n      ]);\n\n      await loadROMAndConfigTask(fetchROMObject);\n\n      // Load the game's cartridge ram\n      await WasmBoyMemory.loadCartridgeRam();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    }\n  };\n\n  return loadROMTask();\n}\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Imports\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyController } from '../controller/controller';\n\n// Function to render our emulator output\nexport function render() {\n  // Don't run if paused\n  if (this.paused) {\n    return true;\n  }\n\n  // Check if we have frameskip\n  let shouldSkipRenderingFrame = false;\n  if (this.frameSkip && this.frameSkip > 0) {\n    this.frameSkipCounter++;\n\n    if (this.frameSkipCounter < this.frameSkip) {\n      shouldSkipRenderingFrame = true;\n    } else {\n      this.frameSkipCounter = 0;\n    }\n  }\n\n  // Render the display\n  if (!shouldSkipRenderingFrame) {\n    WasmBoyGraphics.renderFrame();\n  }\n\n  // Update our controller\n  WasmBoyController.updateController();\n\n  this.renderId = raf(() => {\n    render.call(this);\n  });\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { WasmBoyLib } from '../wasmboy/wasmboy';\nimport { WasmBoyGraphics } from '../graphics/graphics';\n\nimport { waitForLibWorkerMessageType } from '../wasmboy/onmessage';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// https://www.npmjs.com/package/big-integer\nimport bigInt from 'big-integer';\n\nlet currentRaf = undefined;\nconst forceOutputFrame = () => {\n  WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.FORCE_OUTPUT_FRAME\n  });\n  WasmBoyGraphics.renderFrame();\n};\n\nexport const runNumberOfFrames = async frames => {\n  await WasmBoyLib.pause();\n\n  // Set up a raf function to continually update the canvas\n  const rafUpdateCanvas = () => {\n    currentRaf = raf(() => {\n      if (currentRaf) {\n        forceOutputFrame();\n        rafUpdateCanvas();\n      }\n    });\n  };\n  rafUpdateCanvas();\n\n  for (let i = 0; i < frames; i++) {\n    await runWasmExport('executeFrame', []);\n  }\n\n  currentRaf = undefined;\n  forceOutputFrame();\n};\n\nexport const runWasmExport = async (exportKey, parameters) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n    export: exportKey,\n    parameters\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getWasmMemorySection = async (start, end) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION,\n    start,\n    end\n  });\n\n  const eventData = getEventData(event);\n  return new Uint8Array(eventData.message.response);\n};\n\nexport const getWasmConstant = async constantKey => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n    constant: constantKey\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getStepsAsString = async radix => {\n  const stepsPerStepSet = await runWasmExport('getStepsPerStepSet');\n  const stepSets = await runWasmExport('getStepSets');\n  const steps = await runWasmExport('getSteps');\n\n  const bigSteps = bigInt(stepsPerStepSet)\n    .multiply(stepSets)\n    .add(steps);\n\n  if (radix) {\n    return bigSteps.toString(radix);\n  }\n  return bigSteps.toString(10);\n};\n\nexport const getCyclesAsString = async radix => {\n  const cyclesPerCycleSet = await runWasmExport('getCyclesPerCycleSet');\n  const cycleSets = await runWasmExport('getCycleSets');\n  const cycles = await runWasmExport('getCycles');\n\n  const bigCycles = bigInt(cyclesPerCycleSet)\n    .multiply(cycleSets)\n    .add(cycles);\n\n  if (radix) {\n    return bigCycles.toString(radix);\n  }\n  return bigCycles.toString(10);\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { runWasmExport, getWasmMemorySection, getWasmConstant } from '../debug/debug';\n\nconst messageRequests = {};\n\nexport function waitForLibWorkerMessageType(messageType) {\n  if (!messageRequests[messageType]) {\n    messageRequests[messageType] = [];\n  }\n  const promise = new Promise(resolve => {\n    messageRequests[messageType].push(resolve);\n  });\n\n  return promise;\n}\n\n// Functions to handle the lib worker messages\nexport function libWorkerOnMessage(event) {\n  const eventData = getEventData(event);\n\n  if (!eventData.message) {\n    return;\n  }\n\n  if (messageRequests[eventData.message.type]) {\n    messageRequests[eventData.message.type].forEach(request => request(eventData.message));\n  }\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.UPDATED: {\n      this.fps = eventData.message.fps;\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.BREAKPOINT: {\n      const breakpointTask = async () => {\n        await this.pause();\n        if (this.options.breakpointCallback) {\n          this.options.breakpointCallback();\n        }\n      };\n      breakpointTask();\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.CRASHED: {\n      const crashedTask = async () => {\n        await this.pause();\n\n        console.log('Wasmboy Crashed!');\n\n        let programCounter = await runWasmExport('getProgramCounter');\n        let gameboyMemoryConstant = await getWasmConstant('GAMEBOY_INTERNAL_MEMORY_LOCATION');\n        let opcode = await getWasmMemorySection(gameboyMemoryConstant + programCounter, gameboyMemoryConstant + programCounter + 1);\n\n        console.log(`Program Counter: 0x${programCounter.toString(16)}`);\n        console.log(`Opcode: 0x${opcode[0].toString(16)}`);\n      };\n      crashedTask();\n      return;\n    }\n\n    default: {\n      // Do nothing. This catches all messages so yeah\n    }\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Other lib helpers\nimport { instantiateWorkers } from '../worker/instantiate';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { loadROMToWasmBoy } from './loadrom';\nimport { render } from './render';\nimport { libWorkerOnMessage } from './onmessage';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\nlet isWindowUnloading = false;\n\n// Our Main Orchestrator of the WasmBoy lib\nclass WasmBoyLibService {\n  // Start the request to our wasm module\n  constructor() {\n    this.worker = undefined;\n    this.coreType = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.loadedAndStarted = false;\n    this.renderId = false;\n    this.loadedROM = false;\n\n    this.fps = 0;\n    this.speed = 1.0;\n\n    // Reset our config and stateful elements that depend on it\n    // this.options is set here\n    this._resetConfig();\n\n    // Add some listeners for when we are put into the background\n    if (typeof window !== 'undefined') {\n      // Calling promises in the hidden visibility change\n      // On page reload, leaks memory\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=932885&can=1&q=torchh2424%40gmail.com&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified\n      // Thus we need this hack, to get around this\n      window.addEventListener('beforeunload', function(event) {\n        isWindowUnloading = true;\n      });\n\n      window.document.addEventListener('visibilitychange', () => {\n        // fires when user switches tabs, apps, goes to homescreen, etc.\n        if (document.visibilityState === 'hidden') {\n          if (this.options && this.options.disablePauseOnHidden) {\n            return;\n          }\n\n          setTimeout(() => {\n            if (!isWindowUnloading) {\n              // See the comment above about the memory leak\n              // This fires off a bunch of promises, thus a leak\n              this.pause();\n            }\n          }, 0);\n        }\n      });\n    }\n  }\n\n  // Function to initialize/configure Wasmboy\n  config(wasmBoyOptions, canvasElement) {\n    const configTask = async () => {\n      // Pause any currently running game\n      await this.pause();\n\n      // Get our canvas elements\n      await this.setCanvas(canvasElement);\n\n      // Reset our config and stateful elements that depend on it\n      // If we have a new config to take its place\n      if (wasmBoyOptions || !this.options) {\n        this._resetConfig();\n      }\n\n      // set our options\n      if (wasmBoyOptions) {\n        // Set all options\n        Object.keys(wasmBoyOptions).forEach(key => {\n          if (this.options[key] !== undefined) {\n            this.options[key] = wasmBoyOptions[key];\n          }\n        });\n\n        // Aliases\n        // Gameboy Speed / Framerate\n        if (wasmBoyOptions.gameboySpeed) {\n          let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n          if (gameboyFrameRate <= 0) {\n            gameboyFrameRate = 1;\n          }\n          this.options.gameboyFrameRate = gameboyFrameRate;\n        }\n      }\n    };\n\n    return configTask();\n  }\n\n  // Function to return our current configuration as an object\n  getConfig() {\n    return this.options;\n  }\n\n  // Function to get/set our canvas element\n  // Useful for vaporboy\n  setCanvas(canvasElement) {\n    if (!canvasElement) {\n      return Promise.resolve();\n    }\n\n    const setCanvasTask = async () => {\n      await this.pause();\n\n      // Set our new canvas element, and re-run init on graphics to apply styles and things\n      this.canvasElement = canvasElement;\n\n      await WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback);\n    };\n\n    return setCanvasTask();\n  }\n\n  getCanvas() {\n    return this.canvasElement;\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadROM(ROM, fetchHeaders) {\n    const boundLoadROM = loadROMToWasmBoy.bind(this);\n    return boundLoadROM(ROM, fetchHeaders);\n  }\n\n  // Function to start/resume\n  play() {\n    const playTask = async () => {\n      if (!this.ready) {\n        return;\n      }\n      if (!this.loadedAndStarted) {\n        this.loadedAndStarted = true;\n        if (this.options.onLoadedAndStarted) {\n          this.options.onLoadedAndStarted();\n        }\n      }\n      if (this.options.onPlay) {\n        this.options.onPlay();\n      }\n\n      // Bless the audio, this is to fix any autoplay issues\n      if (!this.options.headless) {\n        WasmBoyAudio.resumeAudioContext();\n        WasmBoyAudio.resetTimeStretch();\n      }\n\n      // Reset the audio queue index to stop weird pauses when trying to load a game\n      await this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE\n      });\n\n      // Undo any pause\n      this.paused = false;\n\n      if (!this.updateId) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PLAY\n        });\n      }\n\n      if (!this.renderId && !this.options.headless) {\n        this.renderId = raf(() => {\n          render.call(this);\n        });\n      }\n    };\n\n    return playTask();\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pause() {\n    const pauseTask = async () => {\n      this.paused = true;\n      if (this.ready && this.options.onPause) {\n        this.options.onPause();\n      }\n\n      // Cancel our update and render loop\n      raf.cancel(this.renderId);\n      this.renderId = false;\n\n      // Cancel any playing audio\n      // Audio played with latency may be still going on here\n      if (!this.options.headless) {\n        WasmBoyAudio.cancelAllAudio(true);\n      }\n\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PAUSE\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n\n    return pauseTask();\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n    const resetTask = async () => {\n      this.config(wasmBoyOptions, this.canvasElement);\n      // Reload the game if one was already loaded\n      if (this.loadedROM) {\n        return this.loadROM(this.loadedROM);\n      }\n    };\n\n    return resetTask();\n  }\n\n  getSavedMemory() {\n    return WasmBoyMemory.getSavedMemory();\n  }\n\n  saveLoadedCartridge(additionalInfo) {\n    return WasmBoyMemory.saveLoadedCartridge(additionalInfo);\n  }\n\n  deleteSavedCartridge(cartridge) {\n    return WasmBoyMemory.deleteSavedCartridge(cartridge);\n  }\n\n  saveState() {\n    const saveStateTask = async () => {\n      await this.pause();\n      const saveState = await WasmBoyMemory.saveState();\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  // Function to return the save states for the game\n  getSaveStates() {\n    const getSaveStatesTask = async () => {\n      let cartridgeObject = await WasmBoyMemory.getCartridgeObject();\n      if (!cartridgeObject) {\n        return [];\n      } else {\n        return cartridgeObject.saveStates;\n      }\n    };\n\n    return getSaveStatesTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      await this.pause();\n      await WasmBoyMemory.loadState(saveState);\n    };\n\n    return loadStateTask();\n  }\n\n  deleteState(saveState) {\n    const deleteStateTask = async () => {\n      await WasmBoyMemory.deleteState(saveState);\n    };\n\n    return deleteStateTask();\n  }\n\n  // Simply returns the FPS we get back from the lib worker\n  getFPS() {\n    return this.fps;\n  }\n\n  // Simply returns our current Core Type\n  getCoreType() {\n    return this.coreType;\n  }\n\n  getSpeed() {\n    return this.speed;\n  }\n\n  // Set the speed of the emulator\n  // Should be a float. And by X times as fast\n  setSpeed(speed) {\n    if (speed <= 0) {\n      speed = 0.1;\n    }\n\n    const setSpeedTask = async () => {\n      if (this.worker) {\n        this.speed = speed;\n\n        WasmBoyAudio.setSpeed(speed);\n\n        await this.worker.postMessageIgnoreResponse({\n          type: WORKER_MESSAGE_TYPE.SET_SPEED,\n          speed\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n    setSpeedTask();\n  }\n\n  // Function to return if we currently are playing as a gbc console\n  isGBC() {\n    const isGBCTask = async () => {\n      const event = await WasmBoyLib.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.IS_GBC\n      });\n\n      const eventData = getEventData(event);\n\n      return eventData.message.response;\n    };\n    return isGBCTask();\n  }\n\n  // Private Function to reset options to default\n  _resetConfig() {\n    // Reset Fps Metering\n    this.fpsTimeStamps = [];\n    this.frameSkipCounter = 0;\n\n    // Configurable Options\n    // Set callbacks to null and not undefined,\n    // For when configs are passed, we will be sure to\n    // add them as keys\n    this.options = {\n      headless: false,\n      disablePauseOnHidden: false,\n      isAudioEnabled: true,\n      enableAudioDebugging: false,\n      gameboyFrameRate: 60,\n      frameSkip: 0,\n      includeBootROM: false,\n      isGbcEnabled: true,\n      isGbcColorizationEnabled: true,\n      gbcColorizationPalette: null,\n      audioBatchProcessing: false,\n      graphicsBatchProcessing: false,\n      timersBatchProcessing: false,\n      graphicsDisableScanlineRendering: false,\n      audioAccumulateSamples: false,\n      tileRendering: false,\n      tileCaching: false,\n      maxNumberOfAutoSaveStates: 10,\n      updateGraphicsCallback: null,\n      updateAudioCallback: null,\n      saveStateCallback: null,\n      breakpointCallback: null,\n      onReady: null,\n      onPlay: null,\n      onPause: null,\n      onLoadedAndStarted: null\n    };\n  }\n\n  // Function to instantiate and set up our workers\n  // This ensures we don't create workers twice\n  _instantiateWorkers() {\n    const instantiateWorkersTask = async () => {\n      if (this.worker) {\n        return;\n      } else {\n        this.worker = await instantiateWorkers();\n        this.worker.addMessageListener(libWorkerOnMessage.bind(this));\n      }\n    };\n\n    return instantiateWorkersTask();\n  }\n}\n\nexport const WasmBoyLib = new WasmBoyLibService();\n","// Build our public lib api\nimport { WasmBoyLib } from './wasmboy/wasmboy';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\nimport {\n  runNumberOfFrames,\n  runWasmExport,\n  getWasmMemorySection,\n  getWasmConstant,\n  getStepsAsString,\n  getCyclesAsString\n} from './debug/debug';\n\n// Get our package.json\nimport packageJson from '../package.json';\n\n// Debugging properties prepended with _\n\n// export an object that public exposes parts of the singleton\n// Need to bind to preserve this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\nexport const WasmBoy = {\n  config: WasmBoyLib.config.bind(WasmBoyLib),\n  getCoreType: WasmBoyLib.getCoreType.bind(WasmBoyLib),\n  getConfig: WasmBoyLib.getConfig.bind(WasmBoyLib),\n  setCanvas: WasmBoyLib.setCanvas.bind(WasmBoyLib),\n  getCanvas: WasmBoyLib.getCanvas.bind(WasmBoyLib),\n  loadROM: WasmBoyLib.loadROM.bind(WasmBoyLib),\n  play: WasmBoyLib.play.bind(WasmBoyLib),\n  pause: WasmBoyLib.pause.bind(WasmBoyLib),\n  reset: WasmBoyLib.reset.bind(WasmBoyLib),\n  isPlaying: () => {\n    return !WasmBoyLib.paused;\n  },\n  isPaused: () => {\n    return WasmBoyLib.paused;\n  },\n  isReady: () => {\n    return WasmBoyLib.ready;\n  },\n  isLoadedAndStarted: () => {\n    return WasmBoyLib.loadedAndStarted;\n  },\n  getVersion: () => {\n    return packageJson.version;\n  },\n  getSavedMemory: WasmBoyLib.getSavedMemory.bind(WasmBoyLib),\n  saveLoadedCartridge: WasmBoyLib.saveLoadedCartridge.bind(WasmBoyLib),\n  deleteSavedCartridge: WasmBoyLib.deleteSavedCartridge.bind(WasmBoyLib),\n  saveState: WasmBoyLib.saveState.bind(WasmBoyLib),\n  getSaveStates: WasmBoyLib.getSaveStates.bind(WasmBoyLib),\n  loadState: WasmBoyLib.loadState.bind(WasmBoyLib),\n  deleteState: WasmBoyLib.deleteState.bind(WasmBoyLib),\n  getFPS: WasmBoyLib.getFPS.bind(WasmBoyLib),\n  setSpeed: WasmBoyLib.setSpeed.bind(WasmBoyLib),\n  isGBC: WasmBoyLib.isGBC.bind(WasmBoyLib),\n  ResponsiveGamepad: WasmBoyController.ResponsiveGamepad,\n  enableDefaultJoypad: WasmBoyController.enableDefaultJoypad.bind(WasmBoyController),\n  disableDefaultJoypad: WasmBoyController.disableDefaultJoypad.bind(WasmBoyController),\n  setJoypadState: WasmBoyController.setJoypadState.bind(WasmBoyController),\n  resumeAudioContext: WasmBoyAudio.resumeAudioContext.bind(WasmBoyAudio),\n  _getAudioChannels: WasmBoyAudio.getAudioChannels.bind(WasmBoyAudio),\n  _getCartridgeInfo: WasmBoyMemory.getCartridgeInfo.bind(WasmBoyMemory),\n  _runNumberOfFrames: runNumberOfFrames,\n  _runWasmExport: runWasmExport,\n  _getWasmMemorySection: getWasmMemorySection,\n  _getWasmConstant: getWasmConstant,\n  _getStepsAsString: getStepsAsString,\n  _getCyclesAsString: getCyclesAsString\n};\n"],"names":["WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","BREAKPOINT","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","FORCE_OUTPUT_FRAME","SET_SPEED","IS_GBC","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","getEventData","event","WasmBoyGraphicsService","constructor","undefined","initialize","canvasElement","updateGraphicsCallback","initializeTask","getContext","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","canvasContext","createImageData","width","height","worker","postMessage","type","setWorker","eventData","Uint8ClampedArray","renderFrame","imageDataArrayChanged","imageDataArray","canvasImageData","WasmBoyGraphics","index","buffer","opt","numChannels","numberOfChannels","sampleRate","format","float32","bitDepth","getChannelData","length","inputL","inputR","result","Float32Array","inputIndex","bytesPerSample","blockAlign","ArrayBuffer","samples","view","DataView","writeString","setUint32","setUint16","i","offset","s","Math","max","min","setInt16","setFloat32","string","setUint8","charCodeAt","GbChannelWebAudio","id","createAudioContextIfNone","audioContext","window","createGain","getCurrentTime","currentTime","getPlayTime","audioPlaytime","resumeAudioContext","state","playAudio","numberOfSamples","leftChannelBuffer","rightChannelBuffer","playbackRate","updateAudioCallback","leftChannelBufferAsFloat","rightChannelBufferAsFloat","createBuffer","WASMBOY_SAMPLE_RATE","audioBuffer","recording","source","createBufferSource","lastAdditionalNode","node","gainNode","finalNode","responseNode","destination","audioContextCurrentTime","audioContextCurrentTimeWithLatency","DEFAULT_AUDIO_LATENCY_IN_MILLI","audioSources","playtime","playTime","setTimeout","cancelAllAudio","stopCurrentAudio","mute","muted","unmute","hasRecording","recordingAudioBuffer","startRecording","stopRecording","createBufferFromBuffers","buffers","totalLength","totalBuffer","currentLength","totalLeftBuffer","recordingLeftBuffers","totalRightBuffer","recordingRightBuffers","downloadRecordingAsWav","filename","recordingAnchor","document","wav","toWav","blob","url","downloadName","toLocaleDateString","Date","shortDateWithTime","month","day","year","hour","minute","second","getRecordingAsWavBase64EncodedString","_arrayBufferToBase64","base64String","_libMute","_libUnmute","libMuted","_setGain","gain","_setSamplesToAudioBuffer","leftChannelSamples","rightChannelSamples","binary","bytes","Uint8Array","len","String","WasmBoyAudioService","master","channel1","channel2","channel3","channel4","latency","gbChannels","getAudioChannels","setSpeed","speed","resetTimeStretch","audioMessage","currentFps","allowFastSpeedStretching","fps","fpsDifference","averageTimeStretchFps","SLOW_TIME_STRETCH_MIN_FPS","reduce","accumulator","currentValue","channelNumber","playingAllChannels","_createAudioContextIfNone","_applyOnAllChannels","functionKey","argsArray","Object","gbChannelKey","WasmBoyAudio","promisifyRequest","request","Promise","resolve","reject","onsuccess","request.onsuccess","onerror","request.onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","idbTransaction.oncomplete","idbTransaction.onerror","onabort","idbTransaction.onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","ObjectStore.prototype.createIndex","ObjectStore.prototype.index","IDBObjectStore","objectStore","Transaction.prototype.objectStore","IDBTransaction","createObjectStore","UpgradeDB.prototype.createObjectStore","IDBDatabase","DB.prototype.transaction","funcName","replace","Array","slice","call","callback","nativeObject","getAll","Constructor.prototype.getAll","query","count","instance","items","iterateCursor","push","continue","module","exports","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","request.onupgradeneeded","delete","default","require$$0","keyval","dbPromise","idb","upgradeDB","key","tx","clear","keys","idbKeyval","WASMBOY_SAVE_STATE_SCHEMA","wasmboyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","cartridgeRam","date","isAuto","getSaveState","saveState","internalState","paletteMemory","gameboyMemory","saveStateCallback","_prepareAndStoreAutoSave","saveStateMemoryKeys","localStorage","WASMBOY_UNLOAD_STORAGE","JSON","header","cartridgeHeader","_findAndCommitAutoSave","findAndCommitAutoSaveTask","unloadStorage","unloadStorageObject","saveCartridgeRam","initializeAutoSave","WasmBoyMemoryService","ROM","RAM","headless","maxNumberOfAutoSaveStates","_initializeConstants","memoryTypes","getSavedMemory","getSavedMemoryTask","memory","cartridgeObject","getLoadedCartridgeMemoryState","loadedCartridgeMemoryState","clearMemory","loadCartridgeRom","fileName","loadTask","workerMemoryObject","saveLoadedCartridge","additionalInfo","saveLoadedCartridgeRomTask","Error","cartridgeInfo","getCartridgeInfo","cartridgeRom","cartridgeRomFileName","deleteSavedCartridge","cartridge","deleteLoadedCartridgeTask","passedHeader","passedCartridgeRam","saveCartridgeRamTask","loadCartridgeRam","loadCartridgeRamTask","passedSaveState","saveStateTask","autoSaveStates","savedState","a","b","autoSaveState","saveStateIndex","_indexOfSaveStateIndexInSaveStates","loadState","loadStateTask","saverState","deleteState","deleteStateTask","getCartridgeObject","getCartridgeInfoTask","saveStates","WasmBoyMemory","d","c","e","getOwnPropertySymbols","concat","filter","getOwnPropertyDescriptor","enumerable","configurable","writable","g","DPAD_UP","DPAD_RIGHT","DPAD_DOWN","DPAD_LEFT","LEFT_ANALOG_HORIZONTAL_AXIS","LEFT_ANALOG_VERTICAL_AXIS","LEFT_ANALOG_UP","LEFT_ANALOG_RIGHT","LEFT_ANALOG_DOWN","LEFT_ANALOG_LEFT","RIGHT_ANALOG_HORIZONTAL_AXIS","RIGHT_ANALOG_VERTICAL_AXIS","RIGHT_ANALOG_UP","RIGHT_ANALOG_RIGHT","RIGHT_ANALOG_DOWN","RIGHT_ANALOG_LEFT","A","B","X","Y","LEFT_TRIGGER","LEFT_BUMPER","RIGHT_TRIGGER","RIGHT_BUMPER","SELECT","START","SPECIAL","h","k","l","m","keymap","enableIgnoreWhenInputElementFocused","enableIgnoreWhenModifierState","_boundUpdateKeymapValues","_updateKeymapValues","bind","addEventListener","removeEventListener","ignoreWhenInputElementFocused","ignoreOnModifierState","some","activeElement","tagName","toLowerCase","getModifierState","code","_isFocusedOnInputElement","_isInModifierState","preventDefault","n","gamepadAnalogStickDeadZone","_getGamepads","buttons","_isButtonPressed","axis","_getAnalogStickAxis","axes","pressed","navigator","getGamepads","q","r","listeners","element","_addTouchStyles","boundingClientRect","_updateElementBoundingClientRect","active","boundUpdateElementRect","boundTouchEvent","_touchEvent","_removeTouchStyles","stopListening","includes","touches","_updateActiveStatus","_updateTouchStyles","onTouchEvent","getBoundingClientRect","style","userSelect","classList","add","remove","t","rectCenterX","right","left","rectCenterY","bottom","top","touchX","clientX","touchY","clientY","u","config","allowMultipleDirections","_resetState","f","setHorizontalState","setVerticalState","abs","v","HORIZONTAL_AXIS","VERTICAL_AXIS","UP","RIGHT","DOWN","LEFT","transform","deadzone","w","input","x","y","enabled","dpads","leftAnalogs","rightAnalogs","listen","splice","indexOf","addAnalogInput","z","RESPONSIVE_GAMEPAD_INPUTS","_enabled","_multipleDirectionInput","Keyboard","Gamepad","TouchInput","setKeysToResponsiveGamepadInput","setGamepadButtonsToResponsiveGamepadInput","setGamepadAxisToResponsiveGamepadInput","plugins","inputChangeMap","inputChangeOldState","cancelInputChangeListener","enable","_startInputChangeInterval","disable","onAddPlugin","onRemovePlugin","getState","onGetState","codes","setInterval","_inputChangeIntervalHandler","this.cancelInputChangeListener","clearInterval","ResponsiveGamepadPluginGB","gamepadB","WasmBoyControllerService","ResponsiveGamepad","isEnabled","updateController","controllerState","setJoypadState","setJoypadStateParamsAsArray","enableDefaultJoypad","disableDefaultJoypad","WasmBoyController","idCounter","generateId","randomId","getSmartWorkerMessage","message","messageId","workerId","SmartWorker","workerUrl","workerJs","atob","Blob","BlobBuilder","Worker","URL","_onMessageHandler","postMessageIgnoreResponse","transfer","messageObject","messageIdListener","messageDroppedTimeout","console","responseMessage","messageListener","clearTimeout","addMessageListener","removeMessageListener","messageListenerIndex","instantiateWorkers","libWorker","wasmboyLibWasmWorkerUrl","graphicsWorker","wasmboyGraphicsWorkerUrl","audioWorker","wasmboyAudioWorkerUrl","controllerWorker","wasmboyControllerWorkerUrl","memoryWorker","wasmboyMemoryWorkerUrl","workerReadyPromises","childWorkers","childWorker","messageChannel","MessageChannel","workerReadyPromise","messagesReceived","ports","UZIP","buf","rUs","rUi","o","out","data","eocd","cnu","csize","usize","nl","el","cl","roff","_readLocal","UZIP._readLocal","cmpr","nlen","elen","file","inflateRaw","UZIP.inflateRaw","inflate","UZIP.inflate","deflate","UZIP.deflate","opts","level","off","crc","deflateRaw","UZIP.deflateRaw","encode","UZIP.encode","tot","wUi","wUs","zpd","cpr","fof","ioff","_noNeed","UZIP._noNeed","fn","ext","_writeHeader","UZIP._writeHeader","tab","Uint32Array","table","update","UZIP.adler","end","eend","readUshort","buff","writeUshort","readUint","writeUint","readASCII","writeASCII","pad","readUTF8","ns","decodeURIComponent","writeUTF8","str","strl","ci","sizeUTF8","UZIP.F.deflateRaw","opos","lvl","U","goodIndex","putsE","pos","cvrd","dlen","lits","strt","prev","li","lc","bs","ebits","nc","ii","mch","dst","lgi","dgi","UZIP.F._bestMatch","nice","chain","pi","dif","td","tl","dlim","maxd","j","ei","curd","UZIP.F._howLong","oi","UZIP.F._hash","UZIP.F._writeBlock","BFINAL","o0","l0","putsF","MD","MH","numl","numd","T","ML","numh","lset","dset","cstSize","fxdSize","dynSize","BTYPE","ltree","dtree","si","qb","qc","UZIP.F._copyExact","p8","UZIP.F.getTrees","UZIP.F.getSecond","UZIP.F.nonZero","UZIP.F.contSize","tree","hst","UZIP.F._codeTiny","rst","rsl","UZIP.F._lenCodes","nxt","nnxt","prv","lz","zc","UZIP.F._hufTree","MAXL","list","hl","lit","l2","i0","i1","i2","maxl","UZIP.F.setDepth","UZIP.F.restrictDepth","dps","bCost","dbt","od","UZIP.F._goodIndex","arr","UZIP.F._writeLit","ch","UZIP.F.inflate","F","bitsF","bitsE","decodeTiny","makeCodes","codes2map","get17","noBuf","HLIT","HDIST","dmap","lmap","HCLEN","ml","md","ebs","dcode","dbs","UZIP.F._check","bl","nbuf","UZIP.F._decodeTiny","LL","mx","ll","ni","UZIP.F.makeCodes","MAX_BITS","max_code","bits","bl_count","next_code","UZIP.F.codes2map","map","r15","rest","UZIP.F.revCodes","imb","UZIP.F._putsE","dt","UZIP.F._putsF","UZIP.F._bitsE","UZIP.F._bitsF","UZIP.F._get17","UZIP.F._get25","Uint16Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","imap","itree","rev15","lhst","dhst","ihst","fetchROMAsByteArray","loadOptions","fetchROMAsByteArrayTask","byteArray","getROMFromFileReaderAsByteArray","parseByteArrayAsZip","fetchHeaders","fetch","fileReaderByteArray","fileReader","FileReader","fileReader.onload","unzipObject","uzip","foundROM","unzipObjectKeys","lowercaseKey","loadROMToWasmBoy","initPromises","_instantiateWorkers","options","fetchROMObject","responses","response","loadROMAndConfigTask","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","enableAudioDebugging","gameboyFrameRate","isAudioEnabled","isGbcColorizationEnabled","gbcColorizationPalette","frameSkip","loadROMTask","pause","onReady","performance","now","module.exports","process","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","loadTime","getTime","this","root","global","vendors","raf","caf","suffix","last","queue","frameDuration","_now","next","cp","cancelled","round","handle","raf_1","cancel","render","paused","shouldSkipRenderingFrame","frameSkipCounter","bigInt","Integer","radix","alphabet","caseSensitive","DEFAULT_ALPHABET","text","absBase","base","alphabetValues","parseValue","digits","isNegative","start","parseBaseFromArray","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","MAX_INT","smallToArray","floor","arrayToSmall","trim","compareAbs","MAX_INT_ARR","BASE","createArray","truncate","ceil","l_a","l_b","carry","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractSmall","multiplyLong","a_i","b_j","product","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","multiplySmallAndArray","square","a_j","divModSmall","lambda","quotient","remainder","divisor","divModAny","self","supportsNativeBigInt","negate","comparison","divisorMostSignificantDigit","shift","quotientDigit","part","unshift","xlen","highx","highy","guess","check","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","divide","modPow","bitwise","xSign","ySign","xRem","not","yRem","isZero","xDivMod","highestPower2","xDigit","toJSNumber","yDivMod","yDigit","multiply","roughLOB","LOBMASK_I","BigInt","LOBMASK_BI","integerLogarithm","compareTo","tmp","greater","gcd","pow","times","toBase","valueOf","neg","isPositive","Number","divmod","digit","minus","toBaseString","join","parseStringValue","split","decimalPlace","test","isValid","LOG_BASE","toString","create","BigInteger.prototype.add","plus","SmallInteger.prototype.add","NativeBigInt.prototype.add","BigInteger.prototype.subtract","SmallInteger.prototype.subtract","NativeBigInt.prototype.subtract","BigInteger.prototype.negate","SmallInteger.prototype.negate","small","NativeBigInt.prototype.negate","BigInteger.prototype.abs","SmallInteger.prototype.abs","NativeBigInt.prototype.abs","BigInteger.prototype.multiply","l1","_multiplyBySmall","SmallInteger.prototype._multiplyBySmall","BigInteger.prototype._multiplyBySmall","SmallInteger.prototype.multiply","NativeBigInt.prototype.multiply","BigInteger.prototype.square","SmallInteger.prototype.square","NativeBigInt.prototype.square","BigInteger.prototype.divmod","BigInteger.prototype.divide","over","NativeBigInt.prototype.divide","BigInteger.prototype.mod","NativeBigInt.prototype.remainder","BigInteger.prototype.pow","NativeBigInt.prototype.pow","_0","_1","_2","BigInteger.prototype.modPow","isOdd","BigInteger.prototype.compareAbs","SmallInteger.prototype.compareAbs","NativeBigInt.prototype.compareAbs","compare","BigInteger.prototype.compare","Infinity","SmallInteger.prototype.compare","NativeBigInt.prototype.compare","BigInteger.prototype.equals","eq","notEquals","BigInteger.prototype.notEquals","neq","BigInteger.prototype.greater","gt","BigInteger.prototype.lesser","lt","greaterOrEquals","BigInteger.prototype.greaterOrEquals","geq","lesserOrEquals","BigInteger.prototype.lesserOrEquals","leq","BigInteger.prototype.isEven","SmallInteger.prototype.isEven","NativeBigInt.prototype.isEven","BigInteger.prototype.isOdd","SmallInteger.prototype.isOdd","NativeBigInt.prototype.isOdd","BigInteger.prototype.isPositive","SmallInteger.prototype.isPositive","BigInteger.prototype.isNegative","SmallInteger.prototype.isNegative","BigInteger.prototype.isUnit","SmallInteger.prototype.isUnit","NativeBigInt.prototype.isUnit","BigInteger.prototype.isZero","SmallInteger.prototype.isZero","NativeBigInt.prototype.isZero","BigInteger.prototype.isDivisibleBy","isPrime","BigInteger.prototype.isPrime","strict","bitLength","logN","log","isProbablePrime","BigInteger.prototype.isProbablePrime","iterations","randBetween","modInv","BigInteger.prototype.modInv","zero","newT","one","newR","lastT","lastR","BigInteger.prototype.next","SmallInteger.prototype.next","NativeBigInt.prototype.next","BigInteger.prototype.prev","SmallInteger.prototype.prev","NativeBigInt.prototype.prev","powersOfTwo","powers2Length","BigInteger.prototype.shiftLeft","shiftRight","BigInteger.prototype.shiftRight","remQuo","BigInteger.prototype.not","and","BigInteger.prototype.and","or","BigInteger.prototype.or","xor","BigInteger.prototype.xor","BigInteger.prototype.bitLength","toArray","BigInteger.prototype.toArray","SmallInteger.prototype.toArray","NativeBigInt.prototype.toArray","BigInteger.prototype.toString","zeros","SmallInteger.prototype.toString","toJSON","SmallInteger.prototype.toJSON","BigInteger.prototype.valueOf","parseInt","SmallInteger.prototype.valueOf","NativeBigInt.prototype.toJSNumber","minusOne","lcm","isInstance","Integer.isInstance","low","range","high","random","restricted","fromArray","Integer.fromArray","hasOwnProperty","currentRaf","runWasmExport","exportKey","parameters","WasmBoyLib","export","getWasmMemorySection","getWasmConstant","constantKey","constant","messageRequests","libWorkerOnMessage","breakpointTask","breakpointCallback","crashedTask","programCounter","gameboyMemoryConstant","opcode","isWindowUnloading","WasmBoyLibService","disablePauseOnHidden","wasmBoyOptions","configTask","setCanvas","getConfig","setCanvasTask","getCanvas","loadROM","boundLoadROM","play","playTask","ready","loadedAndStarted","onLoadedAndStarted","onPlay","updateId","renderId","pauseTask","onPause","reset","resetTask","loadedROM","getSaveStates","getSaveStatesTask","getFPS","getCoreType","coreType","getSpeed","setSpeedTask","isGBC","isGBCTask","_resetConfig","includeBootROM","isGbcEnabled","instantiateWorkersTask","WasmBoy","isPlaying","isPaused","isReady","isLoadedAndStarted","getVersion","packageJson","_getAudioChannels","_getCartridgeInfo","_runNumberOfFrames","runNumberOfFrames","frames","rafUpdateCanvas","_runWasmExport","_getWasmMemorySection","_getWasmConstant","_getStepsAsString","getStepsAsString","stepsPerStepSet","stepSets","steps","bigSteps","_getCyclesAsString","getCyclesAsString","cyclesPerCycleSet","cycleSets","cycles","bigCycles"],"mappings":"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"}