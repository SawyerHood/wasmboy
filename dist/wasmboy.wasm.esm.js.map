{"version":3,"file":"wasmboy.wasm.esm.js","sources":["../lib/worker/constants.js","../lib/worker/util.js","../lib/graphics/graphics.js","../lib/graphics/constants.js","../node_modules/audiobuffer-to-wav/dist/index.esm.js","../lib/audio/gbchannel.js","../lib/audio/audio.js","../node_modules/idb/lib/idb.js","../node_modules/idb/lib/node.js","../lib/memory/idb.js","../lib/3p/UZIP.js","../lib/wasmboy/fetchrom.js","../lib/memory/state.js","../lib/memory/autosave.js","../lib/memory/memory.js","../node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","../lib/controller/gbplugin.js","../lib/controller/controller.js","../lib/worker/smartworker.js","../lib/worker/instantiate.js","worker/wasmboy.wasm.worker.js","worker/graphics.worker.js","worker/audio.worker.js","worker/controller.worker.js","worker/memory.worker.js","../lib/wasmboy/load.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../lib/wasmboy/render.js","../node_modules/big-integer/BigInteger.js","../lib/debug/debug.js","../lib/wasmboy/onmessage.js","../lib/wasmboy/wasmboy.js","../lib/index.js"],"sourcesContent":["export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  BREAKPOINT: 'BREAKPOINT',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT',\n  FORCE_OUTPUT_FRAME: 'FORCE_OUTPUT_FRAME',\n  SET_SPEED: 'SET_SPEED',\n  IS_GBC: 'IS_GBC'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  BOOT_ROM: 'BOOT_ROM',\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","import { GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT } from './constants';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.worker = undefined;\n    this.updateGraphicsCallback = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n    this.imageDataArray = undefined;\n    this.imageDataArrayChanged = false;\n  }\n\n  initialize(canvasElement, updateGraphicsCallback) {\n    this.updateGraphicsCallback = updateGraphicsCallback;\n\n    // Initialiuze our cached wasm constants\n    // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressGRAPHICS_OUTPUT_LOCATION.valueOf();\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    const initializeTask = async () => {\n      // Prepare our canvas\n      this.canvasElement = canvasElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n      this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n      this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n      this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n      // Add some css for smooth 8-bit canvas scaling\n      // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n      // https://caniuse.com/#feat=css-crisp-edges\n      this.canvasElement.style = `\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      `;\n\n      // Fill the canvas with a blank screen\n      // using client width since we are not requiring a width and height oin the canvas\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n      // TODO: Mention respopnsive canvas scaling in the docs\n      this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n      // Finally make sure we set our constants for our worker\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n        });\n      }\n    };\n\n    return initializeTask();\n  }\n\n  // Function to set our worker\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);\n          this.imageDataArrayChanged = true;\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    // Check if we have new graphics to show\n    if (!this.imageDataArrayChanged) {\n      return;\n    }\n    this.imageDataArrayChanged = false;\n\n    // Check for a callback for accessing image data\n    if (this.updateGraphicsCallback) {\n      this.updateGraphicsCallback(this.imageDataArray);\n    }\n\n    // Add our new imageData\n    this.canvasImageData.data.set(this.imageDataArray);\n\n    this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n    this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n","// Some shared constants by the graphics lib and worker\n\nexport const GAMEBOY_CAMERA_WIDTH = 160;\nexport const GAMEBOY_CAMERA_HEIGHT = 144;\n","function index(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport default index;\n","// Gameboy Channel Output\n// With outputting to Web Audio API\n\nimport toWav from 'audiobuffer-to-wav';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\n// Some constants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\n\nconst WASMBOY_SAMPLE_RATE = 48000;\n\nexport default class GbChannelWebAudio {\n  constructor(id) {\n    this.id = id;\n\n    this.audioContext = undefined;\n    this.audioBuffer = undefined;\n    // The play time for our audio samples\n    this.audioPlaytime = undefined;\n    this.audioSources = [];\n\n    // Gain Node for muting\n    this.gainNode = undefined;\n    this.muted = false;\n    this.libMuted = false;\n\n    // Our buffer for recording PCM Samples as they come\n    this.recording = false;\n    this.recordingLeftBuffers = undefined;\n    this.recordingRightBuffers = undefined;\n    this.recordingAudioBuffer = undefined;\n    this.recordingAnchor = undefined;\n\n    // Additional Audio Nodes for connecting\n    this.additionalAudioNodes = [];\n  }\n\n  createAudioContextIfNone() {\n    if (!this.audioContext && typeof window !== 'undefined') {\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n      // Set up our nodes\n      if (this.audioContext) {\n        this.gainNode = this.audioContext.createGain();\n      }\n    }\n  }\n\n  getCurrentTime() {\n    this.createAudioContextIfNone();\n\n    if (!this.audioContext) {\n      return;\n    }\n\n    return this.audioContext.currentTime;\n  }\n\n  getPlayTime() {\n    return this.audioPlaytime;\n  }\n\n  resumeAudioContext() {\n    this.createAudioContextIfNone();\n\n    if (!this.audioContext) {\n      return;\n    }\n\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n      this.audioPlaytime = this.audioContext.currentTime;\n    }\n  }\n\n  playAudio(numberOfSamples, leftChannelBuffer, rightChannelBuffer, playbackRate, updateAudioCallback) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Get our buffers as floats\n    const leftChannelBufferAsFloat = new Float32Array(leftChannelBuffer);\n    const rightChannelBufferAsFloat = new Float32Array(rightChannelBuffer);\n\n    // Create an audio buffer, with a left and right channel\n    this.audioBuffer = this.audioContext.createBuffer(2, numberOfSamples, WASMBOY_SAMPLE_RATE);\n    this._setSamplesToAudioBuffer(this.audioBuffer, leftChannelBufferAsFloat, rightChannelBufferAsFloat);\n\n    if (this.recording) {\n      this.recordingLeftBuffers.push(leftChannelBufferAsFloat);\n      this.recordingRightBuffers.push(rightChannelBufferAsFloat);\n    }\n\n    // Get an AudioBufferSourceNode.\n    // This is the AudioNode to use when we want to play an AudioBuffer\n    let source = this.audioContext.createBufferSource();\n\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = this.audioBuffer;\n\n    // Set our playback rate for time resetretching\n    source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n    let lastAdditionalNode = source;\n    this.additionalAudioNodes.forEach(node => {\n      lastAdditionalNode.connect(node);\n      lastAdditionalNode = node;\n    });\n\n    // Connect to our gain node for volume control\n    let finalNode = source;\n    if (this.gainNode) {\n      finalNode = this.gainNode;\n      lastAdditionalNode.connect(this.gainNode);\n    }\n\n    // Call our callback, if we have one\n    if (updateAudioCallback) {\n      const responseNode = updateAudioCallback(this.audioContext, this.gainNode, this.id);\n      if (responseNode) {\n        finalNode = responseNode;\n      }\n    }\n\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    finalNode.connect(this.audioContext.destination);\n\n    // Check if we made it in time\n    // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n    let audioContextCurrentTime = this.audioContext.currentTime;\n    let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    this.audioPlaytime = this.audioPlaytime || audioContextCurrentTimeWithLatency;\n    if (this.audioPlaytime < audioContextCurrentTime) {\n      // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n      this.cancelAllAudio();\n      this.audioPlaytime = audioContextCurrentTimeWithLatency;\n    }\n\n    // start the source playing\n    source.start(this.audioPlaytime);\n\n    // Set our new audio playtime goal\n    const sourcePlaybackLength = numberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate);\n    this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n    // Cancel all audio sources on the tail that play before us\n    while (\n      this.audioSources[this.audioSources.length - 1] &&\n      this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime\n    ) {\n      this.audioSources[this.audioSources.length - 1].source.stop();\n      this.audioSources.pop();\n    }\n\n    // Add the source so we can stop this if needed\n    this.audioSources.push({\n      source: source,\n      playTime: this.audioPlaytime\n    });\n\n    // Shift ourselves out when finished\n    const timeUntilSourceEnds = this.audioPlaytime - this.audioContext.currentTime + 500;\n    setTimeout(() => {\n      this.audioSources.shift();\n    }, timeUntilSourceEnds);\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Cancel all audio That was queued to play\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (stopCurrentAudio || this.audioSources[i].playTime > this.audioPlaytime) {\n        this.audioSources[i].source.stop();\n      }\n    }\n\n    this.audioSources = [];\n\n    // Reset our audioPlaytime\n    this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n  }\n\n  mute() {\n    if (!this.muted) {\n      this._setGain(0);\n      this.muted = true;\n    }\n  }\n\n  unmute() {\n    if (this.muted) {\n      this._setGain(1);\n      this.muted = false;\n    }\n  }\n\n  hasRecording() {\n    return !!this.recordingAudioBuffer;\n  }\n\n  startRecording() {\n    if (!this.recording) {\n      this.recording = true;\n      this.recordingLeftBuffers = [];\n      this.recordingRightBuffers = [];\n      this.recordingAudioBuffer = undefined;\n    }\n  }\n\n  stopRecording() {\n    // Check if we were recoridng\n    if (!this.recording) {\n      return;\n    }\n\n    this.recording = false;\n\n    // Create a left/right buffer from all the buffers stored\n    const createBufferFromBuffers = buffers => {\n      let totalLength = 0;\n      buffers.forEach(buffer => {\n        totalLength += buffer.length;\n      });\n\n      const totalBuffer = new Float32Array(totalLength);\n      let currentLength = 0;\n      buffers.forEach(buffer => {\n        totalBuffer.set(buffer, currentLength);\n        currentLength += buffer.length;\n      });\n\n      return totalBuffer;\n    };\n\n    const totalLeftBuffer = createBufferFromBuffers(this.recordingLeftBuffers);\n    const totalRightBuffer = createBufferFromBuffers(this.recordingRightBuffers);\n    this.recordingAudioBuffer = this.audioContext.createBuffer(2, totalLeftBuffer.length, WASMBOY_SAMPLE_RATE);\n    this._setSamplesToAudioBuffer(this.recordingAudioBuffer, totalLeftBuffer, totalRightBuffer);\n\n    this.recordingLeftBuffer = undefined;\n    this.recordingRightBuffer = undefined;\n  }\n\n  downloadRecordingAsWav(filename) {\n    if (!this.recordingAudioBuffer) {\n      return;\n    }\n\n    // Check if we need to create our anchor tag\n    // Which is used to download the audio\n    if (!this.recordingAnchor) {\n      this.recordingAnchor = document.createElement('a');\n      document.body.appendChild(this.recordingAnchor);\n      this.recordingAnchor.style = 'display: none';\n    }\n\n    // Create our wav as a downloadable blob\n    const wav = toWav(this.recordingAudioBuffer);\n    const blob = new window.Blob([new DataView(wav)], {\n      type: 'audio/wav'\n    });\n\n    // Create our url / download name\n    const url = window.URL.createObjectURL(blob);\n    this.recordingAnchor.href = url;\n    let downloadName;\n    if (filename) {\n      downloadName = `${filename}.wav`;\n    } else {\n      const shortDateWithTime = new Date().toLocaleDateString(undefined, {\n        month: '2-digit',\n        day: '2-digit',\n        year: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n      downloadName = `wasmboy-${shortDateWithTime}.wav`;\n    }\n    this.recordingAnchor.download = downloadName;\n\n    // Download our wav\n    this.recordingAnchor.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  getRecordingAsWavBase64EncodedString() {\n    if (!this.recordingAudioBuffer) {\n      return;\n    }\n\n    // Create our wav as a downloadable blob\n    const wav = toWav(this.recordingAudioBuffer);\n    const base64String = this._arrayBufferToBase64(wav);\n\n    return `data:audio/wav;base64,${base64String}`;\n  }\n\n  getRecordingAsAudioBuffer() {\n    return this.recordingAudioBuffer;\n  }\n\n  _libMute() {\n    this._setGain(0);\n    this.libMuted = true;\n  }\n\n  _libUnmute() {\n    if (this.libMuted) {\n      this._setGain(1);\n      this.libMuted = false;\n    }\n  }\n\n  _setGain(gain) {\n    this.createAudioContextIfNone();\n    if (this.gainNode) {\n      this.gainNode.gain.setValueAtTime(gain, this.audioContext.currentTime);\n    }\n  }\n\n  _setSamplesToAudioBuffer(audioBuffer, leftChannelSamples, rightChannelSamples) {\n    if (audioBuffer.copyToChannel) {\n      audioBuffer.copyToChannel(leftChannelSamples, 0, 0);\n      audioBuffer.copyToChannel(rightChannelSamples, 1, 0);\n    } else {\n      // Safari fallback\n      audioBuffer.getChannelData(0).set(leftChannelSamples);\n      audioBuffer.getChannelData(1).set(rightChannelSamples);\n    }\n  }\n\n  // https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string/38858127\n  _arrayBufferToBase64(buffer) {\n    let binary = '';\n    let bytes = new Uint8Array(buffer);\n    let len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n}\n","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nimport GbChannelWebAudio from './gbchannel';\n\n// The minimum fps we can have, before we start time stretching for slowness\nconst SLOW_TIME_STRETCH_MIN_FPS = 57;\n\nclass WasmBoyAudioService {\n  constructor() {\n    // Wasmboy instance and memory\n    this.worker = undefined;\n    this.updateAudioCallback = undefined;\n\n    // Our Channels\n    this.gbChannels = {\n      master: new GbChannelWebAudio('master'),\n      channel1: new GbChannelWebAudio('channel1'),\n      channel2: new GbChannelWebAudio('channel2'),\n      channel3: new GbChannelWebAudio('channel3'),\n      channel4: new GbChannelWebAudio('channel4')\n    };\n    this._createAudioContextIfNone();\n\n    // Mute all the child channels,\n    // As we will assume all channels are enabled\n    if (typeof window !== 'undefined') {\n      this.gbChannels.channel1._libMute();\n      this.gbChannels.channel2._libMute();\n      this.gbChannels.channel3._libMute();\n      this.gbChannels.channel4._libMute();\n    }\n\n    // Average fps for time stretching\n    this.averageTimeStretchFps = [];\n\n    this.speed = 1.0;\n\n    // Our sound output Location, we will initialize this in init\n    this.WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION = 0;\n  }\n\n  initialize(updateAudioCallback) {\n    const initializeTask = async () => {\n      this.updateAudioCallback = updateAudioCallback;\n\n      this.averageTimeStretchFps = [];\n\n      this.speed = 1.0;\n\n      this._createAudioContextIfNone();\n      this.cancelAllAudio();\n\n      // Lastly get our audio constants\n      return this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      });\n    };\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Dont wait for raf.\n          // Audio being shown is not dependent on the browser drawing a frame :)\n\n          // Just send the message directly\n          this.playAudio(eventData.message);\n\n          // Next, send back how much forward latency\n          // we have\n          let latency = 0;\n          let currentTime = this.gbChannels.master.getCurrentTime();\n          let playtime = this.gbChannels.master.getPlayTime();\n          if (currentTime && currentTime > 0) {\n            latency = playtime - currentTime;\n          }\n          this.worker.postMessageIgnoreResponse({\n            type: WORKER_MESSAGE_TYPE.AUDIO_LATENCY,\n            latency\n          });\n          return;\n        }\n      }\n    });\n  }\n\n  getAudioChannels() {\n    return this.gbChannels;\n  }\n\n  setSpeed(speed) {\n    this.speed = speed;\n    this.cancelAllAudio(true);\n    this.resetTimeStretch();\n  }\n\n  resetTimeStretch() {\n    // Simply reset our average FPS counter array\n    this.averageTimeStretchFps = [];\n  }\n\n  // Function to queue up and audio buyffer to be played\n  // Returns a promise so that we may \"sync by audio\"\n  // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n  playAudio(audioMessage) {\n    let currentFps = audioMessage.fps;\n    let allowFastSpeedStretching = audioMessage.allowFastSpeedStretching;\n    let numberOfSamples = audioMessage.numberOfSamples;\n\n    // Find our averageFps\n    let fps = currentFps || 60;\n\n    // Check if we got a huge fps outlier.\n    // If so, let's just reset our average.\n    // This will fix the slow gradual ramp down\n    const fpsDifference = Math.abs(currentFps - this.averageTimeStretchFps[this.averageTimeStretchFps.length - 1]);\n    if (fpsDifference && fpsDifference >= 15) {\n      this.resetTimeStretch();\n    }\n\n    // Find our average fps for time stretching\n    this.averageTimeStretchFps.push(currentFps);\n    // TODO Make the multiplier Const the timeshift speed\n    if (this.averageTimeStretchFps.length > Math.floor(SLOW_TIME_STRETCH_MIN_FPS * 3)) {\n      this.averageTimeStretchFps.shift();\n    }\n\n    // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n    if (this.averageTimeStretchFps.length >= SLOW_TIME_STRETCH_MIN_FPS) {\n      fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      fps = Math.floor(fps / this.averageTimeStretchFps.length);\n    }\n\n    // Find if we should time stretch this sample or not from our current fps\n    let playbackRate = 1.0;\n    let shouldTimeStretch = (fps < SLOW_TIME_STRETCH_MIN_FPS || allowFastSpeedStretching) && this.speed === 1.0;\n    if (shouldTimeStretch) {\n      // Has to be 60 to get accurent playback regarless of fps cap\n      playbackRate = playbackRate * (fps / 60);\n      if (playbackRate <= 0) {\n        playbackRate = 0.01;\n      }\n    }\n\n    // Apply our speed to the playback rate\n    playbackRate = playbackRate * this.speed;\n\n    // Play the master channel\n    this.gbChannels.master.playAudio(\n      numberOfSamples,\n      audioMessage.audioBuffer.left,\n      audioMessage.audioBuffer.right,\n      playbackRate,\n      this.updateAudioCallback\n    );\n\n    // Play on all of our channels if we have buffers for them\n    for (let i = 0; i < 4; i++) {\n      let channelNumber = i + 1;\n\n      if (audioMessage[`channel${channelNumber}Buffer`]) {\n        this.gbChannels[`channel${channelNumber}`].playAudio(\n          numberOfSamples,\n          audioMessage[`channel${channelNumber}Buffer`].left,\n          audioMessage[`channel${channelNumber}Buffer`].right,\n          playbackRate,\n          this.updateAudioCallback\n        );\n      }\n    }\n\n    let playingAllChannels =\n      !this.gbChannels.channel1.muted &&\n      !this.gbChannels.channel2.muted &&\n      !this.gbChannels.channel3.muted &&\n      !this.gbChannels.channel4.muted;\n\n    // Mute and unmute accordingly\n    if (this.gbChannels.master.muted && playingAllChannels) {\n      this.gbChannels.master.unmute();\n\n      // We want to \"force\" mute here\n      // Because master is secretly playing all the audio,\n      // But we want the channels to appear not muted :)\n      this.gbChannels.channel1._libMute();\n      this.gbChannels.channel2._libMute();\n      this.gbChannels.channel3._libMute();\n      this.gbChannels.channel4._libMute();\n    } else if (!this.gbChannels.master.muted && !playingAllChannels) {\n      this.gbChannels.master.mute();\n\n      this.gbChannels.channel1._libUnmute();\n      this.gbChannels.channel2._libUnmute();\n      this.gbChannels.channel3._libUnmute();\n      this.gbChannels.channel4._libUnmute();\n    }\n  }\n\n  // Functions to simply run on all of our channels\n\n  // Ensure that Audio is blessed.\n  // Meaning, the audioContext won't be\n  // affected by any autoplay issues.\n  // https://www.chromium.org/audio-video/autoplay\n  resumeAudioContext() {\n    this._applyOnAllChannels('resumeAudioContext');\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    this._applyOnAllChannels('cancelAllAudio', [stopCurrentAudio]);\n  }\n\n  _createAudioContextIfNone() {\n    this._applyOnAllChannels('createAudioContextIfNone');\n  }\n\n  _applyOnAllChannels(functionKey, argsArray) {\n    Object.keys(this.gbChannels).forEach(gbChannelKey => {\n      this.gbChannels[gbChannelKey][functionKey].apply(this.gbChannels[gbChannelKey], argsArray);\n    });\n  }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\n\n// Need to wrap in rollup replace to stop\n// node commonjs from breaking\n/*ROLLUP_REPLACE_BROWSER\nimport idb from 'idb';\nROLLUP_REPLACE_BROWSER*/\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db\n          .transaction('keyval')\n          .objectStore('keyval')\n          .get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  };\n}\n\nexport const idbKeyval = keyval;\n","// Taken/Modified From: https://github.com/photopea/UZIP.js\n\nlet UZIP = {};\n\n// Make it a hacky es module\nconst uzip = UZIP;\nexport default uzip;\n\nUZIP['parse'] = function(\n  buf // ArrayBuffer\n) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint,\n    o = 0,\n    out = {};\n  let data = new Uint8Array(buf);\n  let eocd = data.length - 4;\n\n  while (rUi(data, eocd) != 0x06054b50) eocd--;\n\n  o = eocd;\n  o += 4; // sign  = 0x06054b50\n  o += 4; // disks = 0;\n  let cnu = rUs(data, o);\n  o += 2;\n  let cnt = rUs(data, o);\n  o += 2;\n\n  let csize = rUi(data, o);\n  o += 4;\n  let coffs = rUi(data, o);\n  o += 4;\n\n  o = coffs;\n  for (let i = 0; i < cnu; i++) {\n    let sign = rUi(data, o);\n    o += 4;\n    o += 4; // versions;\n    o += 4; // flag + compr\n    o += 4; // time\n\n    let crc32 = rUi(data, o);\n    o += 4;\n    let csize = rUi(data, o);\n    o += 4;\n    let usize = rUi(data, o);\n    o += 4;\n\n    let nl = rUs(data, o),\n      el = rUs(data, o + 2),\n      cl = rUs(data, o + 4);\n    o += 6; // name, extra, comment\n    o += 8; // disk, attribs\n\n    let roff = rUi(data, o);\n    o += 4;\n    o += nl + el + cl;\n\n    UZIP._readLocal(data, roff, out, csize, usize);\n  }\n  //console.log(out);\n  return out;\n};\n\nUZIP._readLocal = function(data, o, out, csize, usize) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint;\n  let sign = rUi(data, o);\n  o += 4;\n  let ver = rUs(data, o);\n  o += 2;\n  let gpflg = rUs(data, o);\n  o += 2;\n  //if((gpflg&8)!=0) throw \"unknown sizes\";\n  let cmpr = rUs(data, o);\n  o += 2;\n\n  let time = rUi(data, o);\n  o += 4;\n\n  let crc32 = rUi(data, o);\n  o += 4;\n  //let csize = rUi(data, o);  o+=4;\n  //let usize = rUi(data, o);  o+=4;\n  o += 8;\n\n  let nlen = rUs(data, o);\n  o += 2;\n  let elen = rUs(data, o);\n  o += 2;\n\n  let name = UZIP.bin.readUTF8(data, o, nlen);\n  o += nlen;\n  o += elen;\n\n  //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), \"csize, usize\", csize, usize, nlen, elen, name, o);\n\n  let file = new Uint8Array(data.buffer, o);\n  if (false) {\n  } else if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n  else if (cmpr == 8) {\n    let buf = new Uint8Array(usize);\n    UZIP.inflateRaw(file, buf);\n    //let nbuf = pako[\"inflateRaw\"](file);\n    //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw \"e\";  }\n    out[name] = buf;\n  } else throw 'unknown compression method: ' + cmpr;\n};\n\nUZIP.inflateRaw = function(file, buf) {\n  return UZIP.F.inflate(file, buf);\n};\nUZIP.inflate = function(file, buf) {\n  let CMF = file[0],\n    FLG = file[1];\n  let CM = CMF & 15,\n    CINFO = CMF >>> 4;\n  //console.log(CM, CINFO,CMF,FLG);\n  return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n};\nUZIP.deflate = function(data, opts /*, buf, off*/) {\n  if (opts == null) opts = { level: 6 };\n  let off = 0,\n    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  buf[off] = 120;\n  buf[off + 1] = 156;\n  off += 2;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  let crc = UZIP.adler(data, 0, data.length);\n  buf[off + 0] = (crc >>> 24) & 255;\n  buf[off + 1] = (crc >>> 16) & 255;\n  buf[off + 2] = (crc >>> 8) & 255;\n  buf[off + 3] = (crc >>> 0) & 255;\n  return new Uint8Array(buf.buffer, 0, off + 4);\n};\nUZIP.deflateRaw = function(data, opts) {\n  if (opts == null) opts = { level: 6 };\n  let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  let off;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  return new Uint8Array(buf.buffer, 0, off);\n};\n\nUZIP.encode = function(obj) {\n  let tot = 0,\n    wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let zpd = {};\n  for (let p in obj) {\n    let cpr = !UZIP._noNeed(p),\n      buf = obj[p],\n      crc = UZIP.crc.crc(buf, 0, buf.length);\n    zpd[p] = { cpr: cpr, usize: buf.length, crc: crc, file: cpr ? UZIP.deflateRaw(buf) : buf };\n  }\n\n  for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);\n  tot += 22;\n\n  let data = new Uint8Array(tot),\n    o = 0;\n  let fof = [];\n\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 0);\n  }\n  let i = 0,\n    ioff = o;\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);\n  }\n  let csize = o - ioff;\n\n  wUi(data, o, 0x06054b50);\n  o += 4;\n  o += 4; // disks\n  wUs(data, o, i);\n  o += 2;\n  wUs(data, o, i);\n  o += 2; // number of c d records\n  wUi(data, o, csize);\n  o += 4;\n  wUi(data, o, ioff);\n  o += 4;\n  o += 2;\n  return data.buffer;\n};\n// no need to compress .PNG, .ZIP, .JPEG ....\nUZIP._noNeed = function(fn) {\n  let ext = fn\n    .split('.')\n    .pop()\n    .toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;\n};\n\nUZIP._writeHeader = function(data, o, p, obj, t, roff) {\n  let wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let file = obj.file;\n\n  wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n  if (t == 1) o += 2; // ver made by\n  wUs(data, o, 20);\n  o += 2; // ver\n  wUs(data, o, 0);\n  o += 2; // gflip\n  wUs(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  wUi(data, o, 0);\n  o += 4; // time\n  wUi(data, o, obj.crc);\n  o += 4; // crc32\n  wUi(data, o, file.length);\n  o += 4; // csize\n  wUi(data, o, obj.usize);\n  o += 4; // usize\n\n  wUs(data, o, UZIP.bin.sizeUTF8(p));\n  o += 2; // nlen\n  wUs(data, o, 0);\n  o += 2; // elen\n\n  if (t == 1) {\n    o += 2; // comment length\n    o += 2; // disk number\n    o += 6; // attributes\n    wUi(data, o, roff);\n    o += 4; // usize\n  }\n  let nlen = UZIP.bin.writeUTF8(data, o, p);\n  o += nlen;\n  if (t == 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n  return o;\n};\n\nUZIP.crc = {\n  table: (function() {\n    let tab = new Uint32Array(256);\n    for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ (c >>> 1);\n        else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  })(),\n  update: function(c, buf, off, len) {\n    for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);\n    return c;\n  },\n  crc: function(b, o, l) {\n    return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUZIP.adler = function(data, o, len) {\n  let a = 1,\n    b = 0;\n  let off = o,\n    end = o + len;\n  while (off < end) {\n    let eend = Math.min(off + 5552, end);\n    while (off < eend) {\n      a += data[off++];\n      b += a;\n    }\n    a = a % 65521;\n    b = b % 65521;\n  }\n  return (b << 16) | a;\n};\n\nUZIP.bin = {\n  readUshort: function(buff, p) {\n    return buff[p] | (buff[p + 1] << 8);\n  },\n  writeUshort: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n  },\n  readUint: function(buff, p) {\n    return buff[p + 3] * (256 * 256 * 256) + ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p]);\n  },\n  writeUint: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n    buff[p + 2] = (n >> 16) & 255;\n    buff[p + 3] = (n >> 24) & 255;\n  },\n  readASCII: function(buff, p, l) {\n    let s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function(data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  pad: function(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function(buff, p, l) {\n    let s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UZIP.bin.readASCII(buff, p, l);\n    }\n    return ns;\n  },\n  writeUTF8: function(buff, p, str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        buff[p + i] = code;\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        buff[p + i] = 192 | (code >> 6);\n        buff[p + i + 1] = 128 | ((code >> 0) & 63);\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        buff[p + i] = 224 | (code >> 12);\n        buff[p + i + 1] = 128 | ((code >> 6) & 63);\n        buff[p + i + 2] = 128 | ((code >> 0) & 63);\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        buff[p + i] = 240 | (code >> 18);\n        buff[p + i + 1] = 128 | ((code >> 12) & 63);\n        buff[p + i + 2] = 128 | ((code >> 6) & 63);\n        buff[p + i + 3] = 128 | ((code >> 0) & 63);\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  },\n  sizeUTF8: function(str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  }\n};\n\nUZIP.F = {};\n\nUZIP.F.deflateRaw = function(data, out, opos, lvl) {\n  let opts = [\n    /*\n\t\t ush good_length; /* reduce lazy search above this match length \n\t\t ush max_lazy;    /* do not perform lazy search above this match length \n         ush nice_length; /* quit search above this match length \n\t*/\n    /*      good lazy nice chain */\n    /* 0 */ [0, 0, 0, 0, 0] /* store only */,\n    /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,\n    /* 2 */ [4, 5, 16, 8, 0],\n    /* 3 */ [4, 6, 16, 16, 0],\n\n    /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,\n    /* 5 */ [8, 16, 32, 32, 0],\n    /* 6 */ [8, 16, 128, 128, 0],\n    /* 7 */ [8, 32, 128, 256, 0],\n    /* 8 */ [32, 128, 258, 1024, 1],\n    /* 9 */ [32, 258, 258, 4096, 1]\n  ]; /* max compression */\n\n  let opt = opts[lvl];\n\n  let U = UZIP.F.U,\n    goodIndex = UZIP.F._goodIndex,\n    hash = UZIP.F._hash,\n    putsE = UZIP.F._putsE;\n  let i = 0,\n    pos = opos << 3,\n    cvrd = 0,\n    dlen = data.length;\n\n  if (lvl == 0) {\n    while (i < dlen) {\n      let len = Math.min(0xffff, dlen - i);\n      putsE(out, pos, i + len == dlen ? 1 : 0);\n      pos = UZIP.F._copyExact(data, i, len, out, pos + 8);\n      i += len;\n    }\n    return pos >>> 3;\n  }\n\n  let lits = U.lits,\n    strt = U.strt,\n    prev = U.prev,\n    li = 0,\n    lc = 0,\n    bs = 0,\n    ebits = 0,\n    c = 0,\n    nc = 0; // last_item, literal_count, block_start\n  if (dlen > 2) {\n    nc = UZIP.F._hash(data, 0);\n    strt[nc] = 0;\n  }\n  let nmch = 0,\n    nmci = 0;\n\n  for (i = 0; i < dlen; i++) {\n    c = nc;\n    //*\n    if (i + 1 < dlen - 2) {\n      nc = UZIP.F._hash(data, i + 1);\n      let ii = (i + 1) & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    } //*/\n    if (cvrd <= i) {\n      if (li > 14000 || lc > 26697) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n        pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      let mch = 0;\n      //if(nmci==i) mch= nmch;  else\n      if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      /*\n\t\t\tif(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {\n\t\t\t\tnmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;\n\t\t\t\t//let mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;\n\t\t\t\tif((nmch>>>16)>(mch>>>16)) mch=0;\n\t\t\t}//*/\n      let len = mch >>> 16,\n        dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n      if (mch != 0) {\n        let len = mch >>> 16,\n          dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n        let lgi = goodIndex(len, U.of0);\n        U.lhst[257 + lgi]++;\n        let dgi = goodIndex(dst, U.df0);\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = (len << 23) | (i - cvrd);\n        lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n      lc++;\n    }\n  }\n  if (bs != i || data.length == 0) {\n    if (cvrd < i) {\n      lits[li] = i - cvrd;\n      li += 2;\n      cvrd = i;\n    }\n    pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n    li = 0;\n    lc = 0;\n    li = lc = ebits = 0;\n    bs = i;\n  }\n  while ((pos & 7) != 0) pos++;\n  return pos >>> 3;\n};\nUZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {\n  let ci = i & 0x7fff,\n    pi = prev[ci];\n  //console.log(\"----\", i);\n  let dif = (ci - pi + (1 << 15)) & 0x7fff;\n  if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;\n  let tl = 0,\n    td = 0; // top length, top distance\n  let dlim = Math.min(0x7fff, i);\n  while (dif <= dlim && --chain != 0 && pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/) {\n    if (tl == 0 || data[i + tl] == data[i + tl - dif]) {\n      let cl = UZIP.F._howLong(data, i, dif);\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n        if (dif + 2 < cl) cl = dif + 2;\n        let maxd = 0; // pi does not point to the start of the word\n        for (let j = 0; j < cl - 2; j++) {\n          let ei = (i - dif + j + (1 << 15)) & 0x7fff;\n          let li = prev[ei];\n          let curd = (ei - li + (1 << 15)) & 0x7fff;\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        } //*/\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += (ci - pi + (1 << 15)) & 0x7fff;\n  }\n  return (tl << 16) | td;\n};\nUZIP.F._howLong = function(data, i, dif) {\n  if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;\n  let oi = i,\n    l = Math.min(data.length, i + 258);\n  i += 3;\n  //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n  while (i < l && data[i] == data[i - dif]) i++;\n  return i - oi;\n};\nUZIP.F._hash = function(data, i) {\n  return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\n  //let hash_shift = 0, hash_mask = 255;\n  //let h = data[i+1] % 251;\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  //return h | (data[i]<<8);\n  //return (data[i] | (data[i+1]<<8));\n};\n//UZIP.___toth = 0;\nUZIP.saved = 0;\nUZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  let U = UZIP.F.U,\n    putsF = UZIP.F._putsF,\n    putsE = UZIP.F._putsE;\n\n  //*\n  let T, ML, MD, MH, numl, numd, numh, lset, dset;\n  U.lhst[256]++;\n  T = UZIP.F.getTrees();\n  ML = T[0];\n  MD = T[1];\n  MH = T[2];\n  numl = T[3];\n  numd = T[4];\n  numh = T[5];\n  lset = T[6];\n  dset = T[7];\n\n  let cstSize = (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\n  let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);\n  let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (let j = 0; j < 286; j++) U.lhst[j] = 0;\n  for (let j = 0; j < 30; j++) U.dhst[j] = 0;\n  for (let j = 0; j < 19; j++) U.ihst[j] = 0;\n  //*/\n  let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n  putsF(out, pos, BFINAL);\n  putsF(out, pos + 1, BTYPE);\n  pos += 3;\n\n  let opos = pos;\n  if (BTYPE == 0) {\n    while ((pos & 7) != 0) pos++;\n    pos = UZIP.F._copyExact(data, o0, l0, out, pos);\n  } else {\n    let ltree, dtree;\n    if (BTYPE == 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    }\n    if (BTYPE == 2) {\n      UZIP.F.makeCodes(U.ltree, ML);\n      UZIP.F.revCodes(U.ltree, ML);\n      UZIP.F.makeCodes(U.dtree, MD);\n      UZIP.F.revCodes(U.dtree, MD);\n      UZIP.F.makeCodes(U.itree, MH);\n      UZIP.F.revCodes(U.itree, MH);\n\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      putsE(out, pos, numl - 257);\n      pos += 5; // 286\n      putsE(out, pos, numd - 1);\n      pos += 5; // 30\n      putsE(out, pos, numh - 4);\n      pos += 4; // 19\n\n      for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n      pos += 3 * numh;\n      pos = UZIP.F._codeTiny(lset, U.itree, out, pos);\n      pos = UZIP.F._codeTiny(dset, U.itree, out, pos);\n    }\n\n    let off = o0;\n    for (let si = 0; si < li; si += 2) {\n      let qb = lits[si],\n        len = qb >>> 23,\n        end = off + (qb & ((1 << 23) - 1));\n      while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);\n\n      if (len != 0) {\n        let qc = lits[si + 1],\n          dst = qc >> 16,\n          lgi = (qc >> 8) & 255,\n          dgi = qc & 255;\n        pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);\n        putsE(out, pos, len - U.of0[lgi]);\n        pos += U.exb[lgi];\n\n        pos = UZIP.F._writeLit(dgi, dtree, out, pos);\n        putsF(out, pos, dst - U.df0[dgi]);\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n    pos = UZIP.F._writeLit(256, ltree, out, pos);\n  }\n  //console.log(pos-opos, fxdSize, dynSize, cstSize);\n  return pos;\n};\nUZIP.F._copyExact = function(data, off, len, out, pos) {\n  let p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8);\n  //for(let i=0; i<len; i++) out[p8+i]=data[off+i];\n  return pos + ((len + 4) << 3);\n};\n/*\n\tInteresting facts:\n\t- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\n*/\n\nUZIP.F.getTrees = function() {\n  let U = UZIP.F.U;\n  let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);\n  let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);\n  let lset = [],\n    numl = UZIP.F._lenCodes(U.ltree, lset);\n  let dset = [],\n    numd = UZIP.F._lenCodes(U.dtree, dset);\n  for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n  for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n  let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);\n  let numh = 19;\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n};\nUZIP.F.getSecond = function(a) {\n  let b = [];\n  for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);\n  return b;\n};\nUZIP.F.nonZero = function(a) {\n  let b = '';\n  for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';\n  return b;\n};\nUZIP.F.contSize = function(tree, hst) {\n  let s = 0;\n  for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n  return s;\n};\nUZIP.F._codeTiny = function(set, tree, out, pos) {\n  for (let i = 0; i < set.length; i += 2) {\n    let l = set[i],\n      rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);\n    pos = UZIP.F._writeLit(l, tree, out, pos);\n    let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;\n    if (l > 15) {\n      UZIP.F._putsE(out, pos, rst, rsl);\n      pos += rsl;\n    }\n  }\n  return pos;\n};\nUZIP.F._lenCodes = function(tree, set) {\n  let len = tree.length;\n  while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0\n  for (let i = 0; i < len; i += 2) {\n    let l = tree[i + 1],\n      nxt = i + 3 < len ? tree[i + 3] : -1,\n      nnxt = i + 5 < len ? tree[i + 5] : -1,\n      prv = i == 0 ? -1 : tree[i - 1];\n    if (l == 0 && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);\n      else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l == prv && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else set.push(l, 0);\n  }\n  return len >>> 1;\n};\nUZIP.F._hufTree = function(hst, tree, MAXL) {\n  let list = [],\n    hl = hst.length,\n    tl = tree.length,\n    i = 0;\n  for (i = 0; i < tl; i += 2) {\n    tree[i] = 0;\n    tree[i + 1] = 0;\n  }\n  for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });\n  let end = list.length,\n    l2 = list.slice(0);\n  if (end == 0) return 0; // empty histogram (usually for dist)\n  if (end == 1) {\n    let lit = list[0].lit,\n      l2 = lit == 0 ? 1 : 0;\n    tree[(lit << 1) + 1] = 1;\n    tree[(l2 << 1) + 1] = 1;\n    return 1;\n  }\n  list.sort(function(a, b) {\n    return a.f - b.f;\n  });\n  let a = list[0],\n    b = list[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };\n  while (i1 != end - 1) {\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      a = list[i0++];\n    } else {\n      a = list[i2++];\n    }\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      b = list[i0++];\n    } else {\n      b = list[i2++];\n    }\n    list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };\n  }\n  let maxl = UZIP.F.setDepth(list[i1 - 1], 0);\n  if (maxl > MAXL) {\n    UZIP.F.restrictDepth(l2, MAXL, maxl);\n    maxl = MAXL;\n  }\n  for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;\n  return maxl;\n};\n\nUZIP.F.setDepth = function(t, d) {\n  if (t.lit != -1) {\n    t.d = d;\n    return d;\n  }\n  return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));\n};\n\nUZIP.F.restrictDepth = function(dps, MD, maxl) {\n  let i = 0,\n    bCost = 1 << (maxl - MD),\n    dbt = 0;\n  dps.sort(function(a, b) {\n    return b.d == a.d ? a.f - b.f : b.d - a.d;\n  });\n\n  for (i = 0; i < dps.length; i++)\n    if (dps[i].d > MD) {\n      let od = dps[i].d;\n      dps[i].d = MD;\n      dbt += bCost - (1 << (maxl - od));\n    } else break;\n  dbt = dbt >>> (maxl - MD);\n  while (dbt > 0) {\n    let od = dps[i].d;\n    if (od < MD) {\n      dps[i].d++;\n      dbt -= 1 << (MD - od - 1);\n    } else i++;\n  }\n  for (; i >= 0; i--)\n    if (dps[i].d == MD && dbt < 0) {\n      dps[i].d--;\n      dbt++;\n    }\n  if (dbt != 0) console.log('debt left');\n};\n\nUZIP.F._goodIndex = function(v, arr) {\n  let i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n};\nUZIP.F._writeLit = function(ch, ltree, out, pos) {\n  UZIP.F._putsF(out, pos, ltree[ch << 1]);\n  return pos + ltree[(ch << 1) + 1];\n};\n\nUZIP.F.inflate = function(data, buf) {\n  if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);\n  let F = UZIP.F,\n    bitsF = F._bitsF,\n    bitsE = F._bitsE,\n    decodeTiny = F._decodeTiny,\n    makeCodes = F.makeCodes,\n    codes2map = F.codes2map,\n    get17 = F._get17;\n  let U = F.U;\n\n  let noBuf = buf == null;\n  if (noBuf) buf = new Uint8Array((data.length >> 2) << 3);\n\n  let BFINAL = 0,\n    BTYPE = 0,\n    HLIT = 0,\n    HDIST = 0,\n    HCLEN = 0,\n    ML = 0,\n    MD = 0;\n  let off = 0,\n    pos = 0;\n  let lmap, dmap;\n\n  while (BFINAL == 0) {\n    BFINAL = bitsF(data, pos, 1);\n    BTYPE = bitsF(data, pos + 1, 2);\n    pos += 3;\n    //console.log(BFINAL, BTYPE);\n\n    if (BTYPE == 0) {\n      if ((pos & 7) != 0) pos += 8 - (pos & 7);\n      let p8 = (pos >>> 3) + 4,\n        len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),\n      if (noBuf) buf = UZIP.F._check(buf, off + len);\n      buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off);\n      //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];\n      //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n      pos = (p8 + len) << 3;\n      off += len;\n      continue;\n    }\n    if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));\n    if (BTYPE == 1) {\n      lmap = U.flmap;\n      dmap = U.fdmap;\n      ML = (1 << 9) - 1;\n      MD = (1 << 5) - 1;\n    }\n    if (BTYPE == 2) {\n      HLIT = bitsE(data, pos, 5) + 257;\n      HDIST = bitsE(data, pos + 5, 5) + 1;\n      HCLEN = bitsE(data, pos + 10, 4) + 4;\n      pos += 14;\n\n      let ppos = pos;\n      for (let i = 0; i < 38; i += 2) {\n        U.itree[i] = 0;\n        U.itree[i + 1] = 0;\n      }\n      let tl = 1;\n      for (let i = 0; i < HCLEN; i++) {\n        let l = bitsE(data, pos + i * 3, 3);\n        U.itree[(U.ordr[i] << 1) + 1] = l;\n        if (l > tl) tl = l;\n      }\n      pos += 3 * HCLEN; //console.log(itree);\n      makeCodes(U.itree, tl);\n      codes2map(U.itree, tl, U.imap);\n\n      lmap = U.lmap;\n      dmap = U.dmap;\n\n      let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);\n      ML = (1 << (ml >>> 24)) - 1;\n      pos += ml & 0xffffff;\n      makeCodes(U.ltree, ml >>> 24);\n      codes2map(U.ltree, ml >>> 24, lmap);\n\n      let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);\n      MD = (1 << (md >>> 24)) - 1;\n      pos += md & 0xffffff;\n      makeCodes(U.dtree, md >>> 24);\n      codes2map(U.dtree, md >>> 24, dmap);\n    }\n    //let ooff=off, opos=pos;\n    while (true) {\n      let code = lmap[get17(data, pos) & ML];\n      pos += code & 15;\n      let lit = code >>> 4; //U.lhst[lit]++;\n      if (lit >>> 8 == 0) {\n        buf[off++] = lit;\n      } else if (lit == 256) {\n        break;\n      } else {\n        let end = off + lit - 254;\n        if (lit > 264) {\n          let ebs = U.ldef[lit - 257];\n          end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);\n          pos += ebs & 7;\n        }\n        //UZIP.F.dst[end-off]++;\n\n        let dcode = dmap[get17(data, pos) & MD];\n        pos += dcode & 15;\n        let dlit = dcode >>> 4;\n        let dbs = U.ddef[dlit],\n          dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);\n        pos += dbs & 15;\n\n        //let o0 = off-dst, stp = Math.min(end-off, dst);\n        //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n        //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n        //if(dst==1) buf.fill(buf[off-1], off, end);  else\n        while (off < end) {\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n        }\n        off = end;\n        //while(off!=end) {  buf[off]=buf[off++-dst];  }\n      }\n    }\n    //console.log(off-ooff, (pos-opos)>>>3);\n  }\n  //console.log(UZIP.F.dst);\n  //console.log(tlen, dlen, off-tlen+tcnt);\n  return buf.length == off ? buf : buf.slice(0, off);\n};\nUZIP.F._check = function(buf, len) {\n  let bl = buf.length;\n  if (len <= bl) return buf;\n  let nbuf = new Uint8Array(bl << 1);\n  for (let i = 0; i < bl; i += 4) {\n    nbuf[i] = buf[i];\n    nbuf[i + 1] = buf[i + 1];\n    nbuf[i + 2] = buf[i + 2];\n    nbuf[i + 3] = buf[i + 3];\n  }\n  return nbuf;\n};\n\nUZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {\n  let opos = pos;\n  let bitsE = UZIP.F._bitsE,\n    get17 = UZIP.F._get17;\n  let dlen = len << 1,\n    i = 0,\n    mx = 0;\n  //if(pos<1000) console.log(\"--------\");\n  //console.log(\"----\", pos, \":\",  data[7],data[8], data[9], data[10], data[11]);\n  while (i < dlen) {\n    let code = lmap[get17(data, pos) & LL];\n    pos += code & 15;\n    let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);\n    //if(i<20)console.log(lit, code>>>9, pos);\n    if (lit <= 15) {\n      tree[i] = 0;\n      tree[i + 1] = lit;\n      if (lit > mx) mx = lit;\n      i += 2;\n    } else {\n      let ll = 0,\n        n = 0;\n      if (lit == 16) {\n        n = (3 + bitsE(data, pos, 2)) << 1;\n        pos += 2;\n        ll = tree[i - 1];\n      } else if (lit == 17) {\n        n = (3 + bitsE(data, pos, 3)) << 1;\n        pos += 3;\n      } else if (lit == 18) {\n        n = (11 + bitsE(data, pos, 7)) << 1;\n        pos += 7;\n      }\n      let ni = i + n;\n      while (i < ni) {\n        tree[i] = 0;\n        tree[i + 1] = ll;\n        i += 2;\n      }\n    }\n  }\n  let tl = tree.length;\n  while (i < tl) {\n    tree[i + 1] = 0;\n    i += 2;\n  }\n  return (mx << 24) | (pos - opos);\n};\n\nUZIP.F.makeCodes = function(tree, MAX_BITS) {\n  // code, length\n  let U = UZIP.F.U;\n  let max_code = tree.length;\n  let code, bits, n, i, len;\n\n  let bl_count = U.bl_count;\n  for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;\n  for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;\n\n  let next_code = U.next_code; // smallest code for each length\n\n  code = 0;\n  bl_count[0] = 0;\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n\n  for (n = 0; n < max_code; n += 2) {\n    len = tree[n + 1];\n    if (len != 0) {\n      tree[n] = next_code[len];\n      next_code[len]++;\n    }\n  }\n};\nUZIP.F.codes2map = function(tree, MAX_BITS, map) {\n  let max_code = tree.length;\n  let U = UZIP.F.U,\n    r15 = U.rev15;\n  for (let i = 0; i < max_code; i += 2)\n    if (tree[i + 1] != 0) {\n      let lit = i >> 1;\n      let cl = tree[i + 1],\n        val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n      let rest = MAX_BITS - cl,\n        i0 = tree[i] << rest,\n        i1 = i0 + (1 << rest);\n      //tree[i]=r15[i0]>>>(15-MAX_BITS);\n      while (i0 != i1) {\n        let p0 = r15[i0] >>> (15 - MAX_BITS);\n        map[p0] = val;\n        i0++;\n      }\n    }\n};\nUZIP.F.revCodes = function(tree, MAX_BITS) {\n  let r15 = UZIP.F.U.rev15,\n    imb = 15 - MAX_BITS;\n  for (let i = 0; i < tree.length; i += 2) {\n    let i0 = tree[i] << (MAX_BITS - tree[i + 1]);\n    tree[i] = r15[i0] >>> imb;\n  }\n};\n\nUZIP.F._putsE = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n};\nUZIP.F._putsF = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n};\n\nUZIP.F._bitsE = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) & ((1 << length) - 1);\n};\nUZIP.F._bitsF = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7)) & ((1 << length) - 1);\n};\n/*\nUZIP.F._get9 = function(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nUZIP.F._get17 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7);\n};\nUZIP.F._get25 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16) | (dt[(pos >>> 3) + 3] << 24)) >>> (pos & 7);\n};\n\nUZIP.F.U = {\n  next_code: new Uint16Array(16),\n  bl_count: new Uint16Array(16),\n  ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n  of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n  exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n  ldef: new Uint16Array(32),\n  df0: [\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    65535,\n    65535\n  ],\n  dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n  ddef: new Uint32Array(32),\n  flmap: new Uint16Array(512),\n  fltree: [],\n  fdmap: new Uint16Array(32),\n  fdtree: [],\n  lmap: new Uint16Array(32768),\n  ltree: [],\n  dmap: new Uint16Array(32768),\n  dtree: [],\n  imap: new Uint16Array(512),\n  itree: [],\n  //rev9 : new Uint16Array(  512)\n  rev15: new Uint16Array(1 << 15),\n  lhst: new Uint32Array(286),\n  dhst: new Uint32Array(30),\n  ihst: new Uint32Array(19),\n  lits: new Uint32Array(15000),\n  strt: new Uint16Array(1 << 16),\n  prev: new Uint16Array(1 << 15)\n};\n\n(function() {\n  let U = UZIP.F.U;\n  let len = 1 << 15;\n  for (let i = 0; i < len; i++) {\n    let x = i;\n    x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);\n    x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);\n    x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);\n    x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);\n    U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;\n  }\n\n  for (let i = 0; i < 32; i++) {\n    U.ldef[i] = (U.of0[i] << 3) | U.exb[i];\n    U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];\n  }\n\n  let i = 0;\n  for (; i <= 143; i++) U.fltree.push(0, 8);\n  for (; i <= 255; i++) U.fltree.push(0, 9);\n  for (; i <= 279; i++) U.fltree.push(0, 7);\n  for (; i <= 287; i++) U.fltree.push(0, 8);\n  UZIP.F.makeCodes(U.fltree, 9);\n  UZIP.F.codes2map(U.fltree, 9, U.flmap);\n  UZIP.F.revCodes(U.fltree, 9);\n\n  for (i = 0; i < 32; i++) U.fdtree.push(0, 5);\n  UZIP.F.makeCodes(U.fdtree, 5);\n  UZIP.F.codes2map(U.fdtree, 5, U.fdmap);\n  UZIP.F.revCodes(U.fdtree, 5);\n\n  for (let i = 0; i < 19; i++) U.itree.push(0, 0);\n  for (let i = 0; i < 286; i++) U.ltree.push(0, 0);\n  for (let i = 0; i < 30; i++) U.dtree.push(0, 0);\n})();\n","// Modules\nimport uzip from '../3p/UZIP';\n\n// Collection of functions to parse roms\n// Private function to fetch a game\nexport const fetchROMAsByteArray = (ROM, loadOptions) => {\n  const fetchROMAsByteArrayTask = async () => {\n    // Check if we were passed straight bytes\n    if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {\n      return {\n        ROM: ROM\n      };\n    } else if (typeof ROM === 'object' && ROM.size) {\n      // We were passed a file from HTML file input\n\n      // Read the file as a Uint8Array\n      let byteArray = await getROMFromFileReaderAsByteArray(ROM);\n\n      if (ROM.name.toLowerCase().endsWith('.zip')) {\n        byteArray = await parseByteArrayAsZip(byteArray);\n      }\n\n      return {\n        ROM: byteArray,\n        name: ROM.name\n      };\n    } else {\n      // We were passed a URL\n\n      // Fetch the file\n      // First check if we have headers\n      const fetchHeaders = {};\n      if (loadOptions && loadOptions.headers) {\n        fetchHeaders.headers = loadOptions.headers;\n      }\n\n      let bytes = await fetch(ROM, fetchHeaders).then(blob => {\n        if (!blob.ok) {\n          return Promise.reject(blob);\n        }\n        return blob.arrayBuffer();\n      });\n\n      let fileName = ROM;\n      if (loadOptions && loadOptions.fileName) {\n        fileName = loadOptions.fileName;\n      }\n\n      // Get our byteArray\n      let byteArray = new Uint8Array(bytes);\n\n      if (fileName.toLowerCase().endsWith('.zip')) {\n        byteArray = await parseByteArrayAsZip(byteArray);\n      }\n\n      return {\n        ROM: byteArray,\n        name: fileName\n      };\n    }\n  };\n\n  return fetchROMAsByteArrayTask();\n};\n\nconst getROMFromFileReaderAsByteArray = async ROM => {\n  const fileReaderByteArray = await new Promise((resolve, reject) => {\n    // Read the file object\n    // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const byteArray = new Uint8Array(fileReader.result);\n      resolve(byteArray);\n    };\n    fileReader.readAsArrayBuffer(ROM);\n  });\n  return fileReaderByteArray;\n};\n\n// Function to parse and find the gb files within an archive\nconst parseByteArrayAsZip = async byteArray => {\n  // Parse the zip using UZIP\n  const unzipObject = await uzip.parse(byteArray);\n\n  // Find the ROM in the output\n  let foundROM = false;\n  const unzipObjectKeys = Object.keys(unzipObject);\n  unzipObjectKeys.some(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc') || lowercaseKey.includes('.bin')) {\n      foundROM = unzipObject[key];\n      return true;\n    }\n    return false;\n  });\n\n  if (!foundROM) {\n    throw new Error('Could not find a ROM in zip...');\n  }\n\n  return foundROM;\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmboyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  isAuto: undefined\n};\n\n// Function to return a save state of the current memory\nexport function getSaveState() {\n  // Save our internal wasmboy state to memory\n  // Should be done whenever we send back memory\n  // this.wasmInstance.exports.saveState();\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmboyMemory.wasmBoyInternalState = this.internalState;\n  saveState.wasmboyMemory.wasmBoyPaletteMemory = this.paletteMemory;\n  saveState.wasmboyMemory.gameBoyMemory = this.gameboyMemory;\n  saveState.wasmboyMemory.cartridgeRam = this.cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n\n  if (this.saveStateCallback) {\n    this.saveStateCallback(saveState);\n  }\n\n  return saveState;\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Need to add a return value, and force all code in the block to be sync\n// https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n// http://vaughnroyko.com/idbonbeforeunload/\n// https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n// Solution:\n// ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n// Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\n\n// Function to create a save state, and store it as a localstorage token\nfunction _prepareAndStoreAutoSave() {\n  // Check if the game is currently playing\n  if (!this.internalState) {\n    return null;\n  }\n\n  // Get our cartridge ram and header\n  // Use this.cartridgeHeader and this.cartridgeRam\n  //const header = getCartridgeHeader.bind(this)();\n  //const cartridgeRam = getCartridgeRam.bind(this)();\n\n  // Get our save state, and un type our arrays\n  const saveState = getSaveState.bind(this)();\n  const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n  for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n    saveState.wasmboyMemory[saveStateMemoryKeys[i]] = Array.prototype.slice.call(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n  }\n\n  // Set isAuto\n  saveState.isAuto = true;\n\n  // Need to conert types arrays, and back, or selse wll get indexed JSON\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n\n  localStorage.setItem(\n    this.WASMBOY_UNLOAD_STORAGE,\n    JSON.stringify({\n      header: Array.prototype.slice.call(this.cartridgeHeader),\n      cartridgeRam: Array.prototype.slice.call(this.cartridgeRam),\n      saveState: saveState\n    })\n  );\n\n  return null;\n}\n\n// Function to find any autosaves in localstorage, and commit them to our idb\nfunction _findAndCommitAutoSave() {\n  const findAndCommitAutoSaveTask = async () => {\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmboyMemory[saveStateMemoryKeys[i]] = new Uint8Array(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      await this.saveCartridgeRam(header, cartridgeRam);\n      await this.saveState(header, saveState);\n    }\n  };\n\n  return findAndCommitAutoSaveTask();\n}\n\n// Function to set event listeners to run our unload handler\nexport function initializeAutoSave() {\n  // Set listeners to ensure we save our cartridge ram before closing\n  window.addEventListener(\n    'beforeunload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'unload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'pagehide',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  // Mobile Page visibility, for pressing home, closing tabs, task switcher, etc...\n  // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n  document.addEventListener('visibilitychange', () => {\n    // fires when user switches tabs, apps, goes to homescreen, etc.\n    // NOTE: This will not create a new save state in desktop browser,\n    // Because the localstorage string is only picked up on refresh :)\n    // Unless you force kill the browser or something, which is what we want\n    // Anyways\n    if (document.visibilityState === 'hidden') {\n      _prepareAndStoreAutoSave.bind(this)();\n    }\n  });\n\n  // Restore any autosave lingering to be committed\n  return _findAndCommitAutoSave.bind(this)();\n}\n","import { idbKeyval } from './idb';\n\n// Import worker stuff\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Fetch rom\nimport { fetchROMAsByteArray } from '../wasmboy/fetchrom';\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\nimport { initializeAutoSave } from './autosave.js';\n\nconst BOOT_ROM_KEY = 'boot-rom-';\n\nclass WasmBoyMemoryService {\n  constructor() {\n    this.worker = undefined;\n    this.maxNumberOfAutoSaveStates = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false,\n      BOOT: false\n    };\n\n    // Our different types of memory\n    this.bootRom = undefined;\n    this.cartridgeRom = undefined;\n    this.cartridgeRomFileName = undefined;\n    this.cartridgeHeader = undefined;\n    this.cartridgeRam = undefined;\n    this.gameboyMemory = undefined;\n    this.paletteMemory = undefined;\n    this.internalState = undefined;\n\n    // Going to set the key for idbKeyval as the cartridge header.\n    // Then, for each cartridge, it will return an object.\n    // there will be a cartridgeRam Key, settings Key, and a saveState key\n    // Not going to make one giant object, as we want to keep idb transactions light and fast\n    this.WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n    // Define some constants since calls to wasm are expensive\n    this.WASMBOY_GAME_BYTES_LOCATION = 0;\n    this.WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\n    this.WASMBOY_INTERNAL_STATE_SIZE = 0;\n    this.WASMBOY_INTERNAL_STATE_LOCATION = 0;\n    this.WASMBOY_INTERNAL_MEMORY_SIZE = 0;\n    this.WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\n    this.WASMBOY_PALETTE_MEMORY_SIZE = 0;\n    this.WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n\n    // Define some other constants\n    this.SUPPORTED_BOOT_ROM_TYPES = {\n      GB: 'GB',\n      GBC: 'GBC'\n    };\n  }\n\n  initialize(headless, maxNumberOfAutoSaveStates, saveStateCallback) {\n    this.maxNumberOfAutoSaveStates = maxNumberOfAutoSaveStates;\n    this.saveStateCallback = saveStateCallback;\n\n    const initializeTask = async () => {\n      await this._initializeConstants();\n\n      if (!headless) {\n        await initializeAutoSave.call(this);\n      }\n    };\n\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n\n    // Also set our handler\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Simply set our memory\n          const memoryTypes = Object.keys(eventData.message);\n          delete memoryTypes.type;\n\n          if (memoryTypes.includes(MEMORY_TYPE.BOOT_ROM)) {\n            this.bootRom = new Uint8Array(eventData.message[MEMORY_TYPE.BOOT_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n            this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n            this.cartridgeRam = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n            this.gameboyMemory = new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n            this.paletteMemory = new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n            this.internalState = new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]);\n          }\n\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to get all cartridge objects\n  // Saved in our indexed db\n  getSavedMemory() {\n    const getSavedMemoryTask = async () => {\n      const memory = [];\n      const keys = await idbKeyval.keys();\n\n      for (let i = 0; i < keys.length; i++) {\n        const cartridgeObject = await idbKeyval.get(keys[i]);\n        memory.push(cartridgeObject);\n      }\n\n      return memory;\n    };\n    return getSavedMemoryTask();\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.ROM = false;\n        this.loadedCartridgeMemoryState.RAM = false;\n\n        // Reset everything\n        this.cartridgeRom = undefined;\n        this.cartridgeHeader = undefined;\n        this.cartridgeRam = undefined;\n        this.gameboyMemory = undefined;\n        this.paletteMemory = undefined;\n        this.internalState = undefined;\n      });\n  }\n\n  isValidBootROMType(type) {\n    return Object.keys(this.SUPPORTED_BOOT_ROM_TYPES).some(bootROMTypeKey => {\n      return this.SUPPORTED_BOOT_ROM_TYPES[bootROMTypeKey] === type;\n    });\n  }\n\n  async addBootROM(type, file, fetchHeaders, additionalInfo) {\n    type = type.toUpperCase();\n\n    if (!this.isValidBootROMType(type)) {\n      throw new Error('Invalid Boot ROM type');\n    }\n\n    // Get our fetch rom object\n    const fetchROMObject = await fetchROMAsByteArray(file, fetchHeaders);\n\n    // Remove any keys we don't want to allow\n    // Overriding in the additionalInfo\n    if (additionalInfo) {\n      delete additionalInfo.name;\n      delete additionalInfo.ROM;\n    }\n\n    let name = 'Game Boy';\n    if (this.SUPPORTED_BOOT_ROM_TYPES.GBC === type) {\n      name = 'Game Boy Color';\n    }\n\n    const bootROMObject = {\n      ROM: fetchROMObject.ROM,\n      name,\n      type,\n      date: Date.now(),\n      ...additionalInfo\n    };\n\n    await idbKeyval.set(BOOT_ROM_KEY + type, bootROMObject);\n  }\n\n  async getBootROMs() {\n    const bootROMs = [];\n\n    for (let bootROMType in this.SUPPORTED_BOOT_ROM_TYPES) {\n      const bootROMObject = await idbKeyval.get(BOOT_ROM_KEY + bootROMType);\n\n      if (bootROMObject) {\n        bootROMs.push(bootROMObject);\n      }\n    }\n\n    return bootROMs;\n  }\n\n  async loadBootROMIfAvailable(type) {\n    if (!idbKeyval) {\n      // TODO: Allow headless Boot ROMs\n      return;\n    }\n\n    type = type.toUpperCase();\n\n    if (!this.isValidBootROMType(type)) {\n      throw new Error('Invalid Boot ROM type');\n    }\n\n    // Try to get the boot rom object\n    const bootROMObject = await idbKeyval.get(BOOT_ROM_KEY + type);\n\n    if (!bootROMObject) {\n      // Return silently\n      return;\n    }\n\n    const workerMemoryObject = {};\n    workerMemoryObject[MEMORY_TYPE.BOOT_ROM] = bootROMObject.ROM.buffer;\n\n    // Don't pass the rom as a transferrable, since,\n    // We want to keep a copy of it for reset\n    await this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n        ...workerMemoryObject\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.BOOT = true;\n      });\n\n    // Also get our cartridge header\n    await this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n        memoryTypes: [MEMORY_TYPE.BOOT_ROM]\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        this.bootRom = new Uint8Array(eventData.message[MEMORY_TYPE.BOOT_ROM]);\n      });\n  }\n\n  loadCartridgeRom(ROM, fileName) {\n    const loadTask = async () => {\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_ROM] = ROM.buffer;\n\n      // Don't pass the rom as a transferrable, since,\n      // We want to keep a copy of it for reset\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.ROM = true;\n        });\n\n      // Also get our cartridge header\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_ROM, MEMORY_TYPE.CARTRIDGE_HEADER]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          this.cartridgeRomFileName = fileName;\n          this.cartridgeHeader = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_HEADER]);\n        });\n    };\n\n    return loadTask();\n  }\n\n  saveLoadedCartridge(additionalInfo) {\n    const saveLoadedCartridgeRomTask = async () => {\n      if (!this.cartridgeHeader) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(this.cartridgeHeader);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      const cartridgeInfo = await this.getCartridgeInfo();\n\n      // Remove any keys we don't want to allow\n      // Overriding in the additionalInfo\n      if (additionalInfo) {\n        delete additionalInfo.ROM;\n        delete additionalInfo.header;\n      }\n\n      // In the rare chance we don't know the name, set to unkown.\n      let fileName = this.cartridgeRomFileName || 'Unknown';\n\n      cartridgeObject.cartridgeRom = {\n        ROM: this.cartridgeRom,\n        header: this.cartridgeHeader,\n        fileName: fileName,\n        date: Date.now(),\n        ...additionalInfo\n      };\n\n      cartridgeObject.cartridgeInfo = cartridgeInfo;\n\n      if (this.cartridgeRam) {\n        await this.saveCartridgeRam();\n      }\n\n      await idbKeyval.set(this.cartridgeHeader, cartridgeObject);\n\n      return cartridgeObject;\n    };\n    return saveLoadedCartridgeRomTask();\n  }\n\n  deleteSavedCartridge(cartridge) {\n    const deleteLoadedCartridgeTask = async () => {\n      const cartridgeHeader = cartridge.cartridgeInfo.header;\n\n      if (!cartridgeHeader) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(cartridgeHeader);\n\n      if (!cartridgeObject) {\n        throw new Error('Could not find the passed cartridge');\n      }\n\n      delete cartridgeObject.cartridgeRom;\n\n      await idbKeyval.set(cartridgeHeader, cartridgeObject);\n\n      return cartridgeObject;\n    };\n\n    return deleteLoadedCartridgeTask();\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n    const saveCartridgeRamTask = async () => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if (passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = this.cartridgeHeader;\n        cartridgeRam = this.cartridgeRam;\n      }\n\n      if (!header || !cartridgeRam) {\n        throw new Error('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      let cartridgeObject = await idbKeyval.get(header);\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      // Set the cartridgeRam to our cartridgeObject\n      cartridgeObject.cartridgeRam = cartridgeRam;\n\n      await idbKeyval.set(header, cartridgeObject);\n    };\n\n    return saveCartridgeRamTask();\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n    const loadCartridgeRamTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      const cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.cartridgeRam) {\n        return;\n      }\n\n      // Set the cartridgeRam\n      // Don't transfer, because we want to keep a reference to it\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeObject.cartridgeRam.buffer;\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.RAM = true;\n          this.cartridgeRam = cartridgeObject.cartridgeRam;\n        });\n    };\n    return loadCartridgeRamTask();\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n    const saveStateTask = async () => {\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState.call(this);\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n      if (!cartridgeObject.saveStates) {\n        cartridgeObject.saveStates = [];\n      }\n\n      // Check if we are auto\n      if (saveState.isAuto && this.maxNumberOfAutoSaveStates && this.maxNumberOfAutoSaveStates > 0) {\n        // Make sure we are not exceeding the max number of auto save states\n        const autoSaveStates = [];\n        cartridgeObject.saveStates.forEach(savedState => {\n          if (savedState.isAuto) {\n            autoSaveStates.push(savedState);\n          }\n        });\n\n        // Sort auto save states by date\n        autoSaveStates.sort((a, b) => {\n          if (a.date < b.date) {\n            return -1;\n          }\n\n          if (a.date > b.date) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        while (autoSaveStates.length > 0 && autoSaveStates.length + 1 > this.maxNumberOfAutoSaveStates) {\n          const autoSaveState = autoSaveStates.shift();\n          // Find the save state\n          const saveStateIndex = this._indexOfSaveStateIndexInSaveStates(autoSaveState, cartridgeObject.saveStates);\n          cartridgeObject.saveStates.splice(saveStateIndex, 1);\n        }\n\n        if (this.maxNumberOfAutoSaveStates > 0) {\n          cartridgeObject.saveStates.push(saveState);\n        }\n      } else {\n        cartridgeObject.saveStates.push(saveState);\n      }\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error getting the cartridge header');\n      }\n\n      if (!saveState) {\n        const cartridgeObject = await idbKeyval.get(header);\n        if (!cartridgeObject || !cartridgeObject.saveStates) {\n          throw new Error('No Save State passed, and no cartridge object found');\n          return;\n        }\n        saverState = cartridgeObject.saveStates[0];\n      }\n\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = saveState.wasmboyMemory.cartridgeRam.buffer;\n      workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = saveState.wasmboyMemory.gameBoyMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY] = saveState.wasmboyMemory.wasmBoyPaletteMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE] = saveState.wasmboyMemory.wasmBoyInternalState.buffer;\n\n      await this.worker.postMessage(\n        {\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        },\n        [\n          workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n          workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE]\n        ]\n      );\n\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_RAM, MEMORY_TYPE.GAMEBOY_MEMORY, MEMORY_TYPE.PALETTE_MEMORY, MEMORY_TYPE.INTERNAL_STATE]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRam = eventData.message[MEMORY_TYPE.CARTRIDGE_RAM];\n          this.gameboyMemory = eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY];\n          this.paletteMemory = eventData.message[MEMORY_TYPE.PALETTE_MEMORY];\n          this.internalState = eventData.message[MEMORY_TYPE.INTERNAL_STATE];\n        });\n    };\n\n    return loadStateTask();\n  }\n\n  deleteState(saveState, passedHeader) {\n    const deleteStateTask = async () => {\n      if (!saveState) {\n        throw new Error('You must provide a save state to delete');\n        return;\n      }\n\n      let header;\n      if (passedHeader) {\n        header = passedHeader;\n      } else if (this.cartridgeHeader) {\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Please load a ROM, or pass a Cartridge header...');\n        return;\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.saveStates) {\n        throw new Error('No save states found for the Cartridge...');\n        return;\n      }\n\n      // Find the save state\n      const saveStateIndex = this._indexOfSaveStateIndexInSaveStates(saveState, cartridgeObject.saveStates);\n\n      // If not found, throw an error\n      if (saveStateIndex < 0) {\n        throw new Error('Could not find the passed save state for the related cartridge...');\n        return;\n      }\n\n      cartridgeObject.saveStates.splice(saveStateIndex, 1);\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return deleteStateTask();\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    return idbKeyval.get(this.cartridgeHeader);\n  }\n\n  // Function to return all informationh aboyut the currently loaded cart.\n  // This will include, the ROM, the RAM, the header, and the indivudal pieces of the header\n  // See: http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  getCartridgeInfo() {\n    if (!this.loadedCartridgeMemoryState.ROM) {\n      return Promise.reject('No ROM has been loaded');\n    }\n\n    let getCartridgeInfoTask = async () => {\n      const cartridgeInfo = {};\n\n      cartridgeInfo.header = this.cartridgeHeader;\n      cartridgeInfo.ROM = this.cartridgeRom;\n      cartridgeInfo.RAM = this.cartridgeRam;\n\n      // Now parse our header for additional information\n      cartridgeInfo.nintendoLogo = cartridgeInfo.ROM.slice(0x104, 0x134);\n\n      cartridgeInfo.title = cartridgeInfo.ROM.slice(0x134, 0x144);\n      cartridgeInfo.titleAsString = String.fromCharCode.apply(null, cartridgeInfo.title);\n\n      cartridgeInfo.manufacturerCode = cartridgeInfo.ROM.slice(0x13f, 0x143);\n\n      cartridgeInfo.CGBFlag = cartridgeInfo.ROM[0x143];\n\n      cartridgeInfo.newLicenseeCode = cartridgeInfo.ROM.slice(0x144, 0x146);\n\n      cartridgeInfo.SGBFlag = cartridgeInfo.ROM[0x146];\n\n      cartridgeInfo.cartridgeType = cartridgeInfo.ROM[0x147];\n\n      cartridgeInfo.ROMSize = cartridgeInfo.ROM[0x148];\n\n      cartridgeInfo.RAMSize = cartridgeInfo.ROM[0x149];\n\n      cartridgeInfo.destinationCode = cartridgeInfo.ROM[0x14a];\n\n      cartridgeInfo.oldLicenseeCode = cartridgeInfo.ROM[0x14b];\n\n      cartridgeInfo.maskROMVersionNumber = cartridgeInfo.ROM[0x14c];\n\n      cartridgeInfo.headerChecksum = cartridgeInfo.ROM[0x14d];\n\n      cartridgeInfo.globalChecksum = cartridgeInfo.ROM.slice(0x14e, 0x150);\n\n      return cartridgeInfo;\n    };\n\n    return getCartridgeInfoTask();\n  }\n\n  _initializeConstants() {\n    // Initialize our cached wasm constants\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        Object.keys(this).forEach(key => {\n          if (eventData.message[key] !== undefined) {\n            this[key] = eventData.message[key];\n          }\n        });\n      });\n  }\n\n  _indexOfSaveStateIndexInSaveStates(saveState, saveStates) {\n    // Find the save state\n    let saveStateIndex = saveStates.indexOf(saveState);\n    if (saveStateIndex < 0) {\n      const keysCheck = (a, b) => {\n        return JSON.stringify(Object.keys(a)) === JSON.stringify(Object.keys(b));\n      };\n\n      const dateCheck = (a, b) => {\n        return a.date === b.date;\n      };\n\n      const autoCheck = (a, b) => {\n        return a.isAuto === b.isAuto;\n      };\n\n      saveStates.some((savedState, index) => {\n        if (keysCheck(saveState, savedState) && dateCheck(saveState, savedState) && autoCheck(saveState, savedState)) {\n          saveStateIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return saveStateIndex;\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n","function d(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},e=Object.keys(c);\"function\"===typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));e.forEach(function(b){var e=c[b];b in a?Object.defineProperty(a,b,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[b]=e})}return a}\nlet g={DPAD_UP:\"DPAD_UP\",DPAD_RIGHT:\"DPAD_RIGHT\",DPAD_DOWN:\"DPAD_DOWN\",DPAD_LEFT:\"DPAD_LEFT\",LEFT_ANALOG_HORIZONTAL_AXIS:\"LEFT_ANALOG_HORIZONTAL_AXIS\",LEFT_ANALOG_VERTICAL_AXIS:\"LEFT_ANALOG_VERTICAL_AXIS\",LEFT_ANALOG_UP:\"LEFT_ANALOG_UP\",LEFT_ANALOG_RIGHT:\"LEFT_ANALOG_RIGHT\",LEFT_ANALOG_DOWN:\"LEFT_ANALOG_DOWN\",LEFT_ANALOG_LEFT:\"LEFT_ANALOG_LEFT\",RIGHT_ANALOG_HORIZONTAL_AXIS:\"RIGHT_ANALOG_HORIZONTAL_AXIS\",RIGHT_ANALOG_VERTICAL_AXIS:\"RIGHT_ANALOG_VERTICAL_AXIS\",RIGHT_ANALOG_UP:\"RIGHT_ANALOG_UP\",RIGHT_ANALOG_RIGHT:\"RIGHT_ANALOG_RIGHT\",\nRIGHT_ANALOG_DOWN:\"RIGHT_ANALOG_DOWN\",RIGHT_ANALOG_LEFT:\"RIGHT_ANALOG_LEFT\",A:\"A\",B:\"B\",X:\"X\",Y:\"Y\",LEFT_TRIGGER:\"LEFT_TRIGGER\",LEFT_BUMPER:\"LEFT_BUMPER\",RIGHT_TRIGGER:\"RIGHT_TRIGGER\",RIGHT_BUMPER:\"RIGHT_BUMPER\",SELECT:\"SELECT\",START:\"START\",SPECIAL:\"SPECIAL\"};class h{constructor(){}enable(){throw Error(\"enable() must be overridden\");}disable(){throw Error(\"disable() must be overridden\");}getState(){throw Error(\"getState() must be overridden\");}}\nlet k=\"input textarea button select option optgroup label datalist\".split(\" \"),l=[\"Alt\",\"Control\",\"Meta\",\"OS\"];\nclass m extends h{constructor(){super();this.keymap={};Object.keys(g).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if(\"undefined\"===typeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.addEventListener(\"keyup\",this._boundUpdateKeymapValues);window.addEventListener(\"keydown\",this._boundUpdateKeymapValues)}disable(){if(\"undefined\"===\ntypeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.removeEventListener(\"keyup\",this._boundUpdateKeymapValues);window.removeEventListener(\"keydown\",this._boundUpdateKeymapValues)}getState(){let a=d({},g);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=\n!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed keyboard keys to input\");\"string\"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return k.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return l.some((b)=>a.getModifierState(b)||\na.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value=\"keydown\"===a.type?!0:!1,!0):!1)))}}\nclass n extends h{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let e=d({},g);Object.keys(this.keymap).forEach((a)=>{e[a]=this.keymap[a].value});\ne[g.LEFT_ANALOG_DOWN]=e.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_UP]=e.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_RIGHT]=e.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_LEFT]=e.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_DOWN]=e.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_UP]=e.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;\ne[g.RIGHT_ANALOG_RIGHT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_LEFT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(e).forEach((a)=>{\"string\"===typeof e[a]&&delete e[a]});return e}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed buttons to input\");\"number\"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===\na||!b)throw Error(\"Could not set the specificed buttons to input\");if(\"number\"===typeof axes)throw Error(\"Must pass in an axis id\");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let q=\"touchstart touchmove touchend mousedown mousemove mouseup mouseleave\".split(\" \");\nclass r{constructor(a){if(!a)throw Error(\"Touch inputs require an element.\");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error(\"You must supply an element first with add()\");\nwindow.addEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error(\"You must supply an element first with add()\");window.removeEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes(\"touch\")||a.touches)){a.preventDefault();var b=\"touchstart\"===a.type||\"touchmove\"===a.type||\"mousedown\"===\na.type,c=\"mousemove\"===a.type,e=!b&&!c;this._updateActiveStatus(b,e);this._updateTouchStyles(b,c,e);if(this.onTouchEvent)this.onTouchEvent(a,b,c,e)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect=\"none\"}_removeTouchStyles(){this.element.style.userSelect=\"\"}_updateTouchStyles(a,b){b||(a?this.element.classList.add(\"active\"):this.element.classList.remove(\"active\"))}_updateActiveStatus(a,b){this.active&&b?\nthis.active=!1:!this.active&&a&&(this.active=!0)}}function t(a,b){let c;a.type.includes(\"touch\")?c=a.touches[0]:a.type.includes(\"mouse\")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}\nclass u extends r{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var f=this.boundingClientRect.width/20,p=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(c,\nf),this.setVerticalState(e,p)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-e)?this.setHorizontalState(c,f):this.setVerticalState(e)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}\nclass v extends r{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform=\"translate(0px, 0px)\";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);e=(e-b)/b;1<e?e=1:-1>e&&(e=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*e/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=\ne;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(e)>this.deadzone&&(0<e?this.state.DOWN=!0:0>e&&(this.state.UP=!0))}else this._resetState()}}class w extends r{constructor(a,b){super(a);this.input=b}}let x={LEFT:\"LEFT\",RIGHT:\"RIGHT\"};\nclass y extends h{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");\nthis.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=d({},g);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,\na.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,\na.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new w(a,b);this.enabled&&c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new u(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,x.LEFT)}addRightAnalogInput(a){this.addAnalogInput(a,\nx.RIGHT)}addAnalogInput(a,b){let c=new v(a);this.enabled&&c.listen();if(b===x.LEFT)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}\nclass z{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=g;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new m;this.Gamepad=new n;this.TouchInput=new y;this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowUp\",\"Numpad8\"],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyW\"],g.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyI\"],g.RIGHT_ANALOG_UP);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowRight\",\n\"Numpad6\"],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyD\"],g.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyL\"],g.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowDown\",\"Numpad5\",\"Numpad2\"],g.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyS\"],g.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyK\"],g.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],\ng.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowLeft\",\"Numpad4\"],g.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyA\"],g.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyJ\"],g.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],g.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],g.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],g.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],\ng.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],g.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyX\",\"Semicolon\",\"Numpad7\"],g.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],g.A);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyZ\",\"Escape\",\"Quote\",\"Backspace\",\"Numpad9\"],g.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],g.B);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyC\"],g.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],\ng.X);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyV\"],g.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],g.Y);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyQ\"],g.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],g.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyE\"],g.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],g.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyU\"],g.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],\ng.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyO\"],g.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],g.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"Enter\",\"Numpad3\"],g.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],g.START);this.Keyboard.setKeysToResponsiveGamepadInput([\"ShiftRight\",\"ShiftLeft\",\"Tab\",\"Numpad1\"],g.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],g.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput([\"Space\",\n\"Backslash\",\"Backquote\"],g.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],g.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return\"1.0.0\"}enable(){this.Keyboard.enable();this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&\n(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),1)}}getState(){if(!this._enabled)return{};let a=d({},g),b=this.Gamepad.getState(),c=this.TouchInput.getState(),e=this.Keyboard.getState();a=d({},g);Object.keys(a).forEach((f)=>{a[f]=b[f]||c[f]||e[f]});[\"LEFT\",\"RIGHT\"].forEach((b)=>\n{[g[`${b}_ANALOG_HORIZONTAL_AXIS`],g[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,e)=>{if(\"number\"!==typeof a[c]){if(0===e||2===e)a[c]=a[g[`${b}_ANALOG_RIGHT`]]?1:a[g[`${b}_ANALOG_LEFT`]]?-1:0;if(1===e||3===e)a[c]=a[g[`${b}_ANALOG_UP`]]?-1:a[g[`${b}_ANALOG_DOWN`]]?1:0}})});a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||\"string\"===typeof a[b])a[b]=!1});\nthis.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){\"string\"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>\n{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}let A=new z;var ResponsiveGamepad=A;export{ResponsiveGamepad};\n","// Responsive Gamepad plugin to simulate GB Inputs\n\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nexport default function ResponsiveGamepadPluginGB() {\n  return {\n    onGetState: state => {\n      const gamepadA = state.A;\n      const gamepadB = state.B;\n\n      state.A = gamepadA || state.X;\n      state.B = gamepadB || state.Y;\n\n      return state;\n    }\n  };\n}\n","// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nimport ResponsiveGamepadPluginGB from './gbplugin';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.worker = undefined;\n    this.isEnabled = false;\n\n    // Bind Repsonsive Gamepad to this\n    this.ResponsiveGamepad = ResponsiveGamepad;\n\n    ResponsiveGamepad.addPlugin(ResponsiveGamepadPluginGB());\n  }\n\n  initialize() {\n    if (!this.isEnabled) {\n      this.enableDefaultJoypad();\n    }\n\n    return Promise.resolve();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n  }\n\n  updateController() {\n    if (!this.isEnabled) {\n      return {};\n    }\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.setJoypadState(controllerState);\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n\n  setJoypadState(controllerState) {\n    const setJoypadStateParamsAsArray = [\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    ];\n\n    this.worker.postMessageIgnoreResponse({\n      type: WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE,\n      setJoypadStateParamsAsArray\n    });\n  }\n\n  enableDefaultJoypad() {\n    this.isEnabled = true;\n\n    ResponsiveGamepad.enable();\n  }\n\n  disableDefaultJoypad() {\n    this.isEnabled = false;\n\n    ResponsiveGamepad.disable();\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessageIgnoreResponse(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    this.worker.postMessage(messageObject, transfer);\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise((resolve, reject) => {\n      // Set a timeout before killing the message listener\n      let messageDroppedTimeout = setTimeout(() => {\n        console.warn('Message dropped', message);\n        this.removeMessageListener(messageId);\n        reject();\n      }, 1000);\n\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          clearTimeout(messageDroppedTimeout);\n          messageDroppedTimeout = undefined;\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Import our worker urls\n// Only one of the wasmboylib imports will be used. Rollup/Babel handles which one\nimport wasmboyLibWasmWorkerUrl from '../../dist/worker/wasmboy.wasm.worker.js';\nimport wasmboyLibTsWorkerUrl from '../../dist/worker/wasmboy.ts.worker.js';\nimport wasmboyGraphicsWorkerUrl from '../../dist/worker/graphics.worker.js';\nimport wasmboyAudioWorkerUrl from '../../dist/worker/audio.worker.js';\nimport wasmboyControllerWorkerUrl from '../../dist/worker/controller.worker.js';\nimport wasmboyMemoryWorkerUrl from '../../dist/worker/memory.worker.js';\n\n// Import our Smart Worker Interface\nimport { SmartWorker } from './smartworker';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from './constants';\n\n/*ROLLUP_REPLACE_NODE\nconst { MessageChannel } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nexport const instantiateWorkers = async () => {\n  // Create our workers\n  let libWorkerUrl;\n  libWorkerUrl = wasmboyLibWasmWorkerUrl;\n  libWorkerUrl = wasmboyLibTsWorkerUrl;\n\n  const libWorker = new SmartWorker(libWorkerUrl, WORKER_ID.LIB);\n  const graphicsWorker = new SmartWorker(wasmboyGraphicsWorkerUrl, WORKER_ID.GRAPHICS);\n  const audioWorker = new SmartWorker(wasmboyAudioWorkerUrl, WORKER_ID.AUDIO);\n  const controllerWorker = new SmartWorker(wasmboyControllerWorkerUrl, WORKER_ID.CONTROLLER);\n  const memoryWorker = new SmartWorker(wasmboyMemoryWorkerUrl, WORKER_ID.MEMORY);\n  // Create an array of promises for when each worker is ready\n  const workerReadyPromises = [];\n\n  // Add our workers to an array,\n  const childWorkers = [graphicsWorker, audioWorker, controllerWorker, memoryWorker];\n\n  // Create a messaging channel between our main lib worker,\n  // And all of the children workers\n  childWorkers.forEach(childWorker => {\n    // Create our message channel\n    // https://stackoverflow.com/questions/14191394/web-workers-communication-using-messagechannel-html5\n    const messageChannel = new MessageChannel();\n\n    const workerReadyPromise = new Promise(resolve => {\n      // Our resolve function\n      let messagesReceived = 0;\n      const tryResolveWorkerReady = () => {\n        messagesReceived++;\n        if (messagesReceived >= 2) {\n          resolve();\n        }\n      };\n\n      // Post our connect messages\n      libWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: childWorker.id,\n            ports: [messageChannel.port1]\n          },\n          [messageChannel.port1]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n      childWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: libWorker.id,\n            ports: [messageChannel.port2]\n          },\n          [messageChannel.port2]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n    });\n\n    workerReadyPromises.push(workerReadyPromise);\n  });\n\n  // Wait for all workers to be ready\n  await Promise.all(workerReadyPromises);\n\n  // Finally, pass the ready workers to all of our children lib\n  WasmBoyGraphics.setWorker(graphicsWorker);\n  WasmBoyAudio.setWorker(audioWorker);\n  WasmBoyController.setWorker(controllerWorker);\n  WasmBoyMemory.setWorker(memoryWorker);\n\n  // Return the main worker for the main lib\n  return libWorker;\n};\n","export default \"data:application/javascript;base64,\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGU9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGw7Y29uc3Qgbj0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6aChmKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgYj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApO2ZvcihsZXQgYz0wOzE0ND5jOysrYyl7bGV0IGU9NDgwKmMsZj02NDAqYztmb3IobGV0IGM9MDsxNjA+YzsrK2Mpe2NvbnN0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bSgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9CmEubWVzc2FnZS5wb3J0c1swXTttKG4sbCk7aChmKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmwucG9zdE1lc3NhZ2UoZih7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGM9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHQ9KGEpPT57Y29uc3QgYj1hLmRhdGE/YS5kYXRhOmE7aWYoYi5tZXNzYWdlKXN3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGQoYi5tZXNzYWdlLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e2NvbnN0IGE9e3R5cGU6IlVQREFURUQiLG51bWJlck9mU2FtcGxlczpiLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczpiLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzpiLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSxjPVtdO1siYXVkaW9CdWZmZXIiLCJjaGFubmVsMUJ1ZmZlciIsImNoYW5uZWwyQnVmZmVyIiwiY2hhbm5lbDNCdWZmZXIiLCJjaGFubmVsNEJ1ZmZlciJdLmZvckVhY2goKGQpPT57aWYoYi5tZXNzYWdlW2RdKXt7dmFyIGY9Cm5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtkXSk7dmFyIGc9Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZyk7dmFyIGg9bmV3IEZsb2F0MzJBcnJheShnKTtsZXQgYz0wO2cqPTI7Zm9yKHZhciBlPTA7ZTxnO2UrPTIpYVtjXT1xKGZbZV0pLGMrKztjPTA7Zm9yKGU9MTtlPGc7ZSs9MiloW2NdPXEoZltlXSksYysrO2Y9YS5idWZmZXI7aD1oLmJ1ZmZlcn1hW2RdPXt9O2FbZF0ubGVmdD1mO2FbZF0ucmlnaHQ9aDtjLnB1c2goZik7Yy5wdXNoKGgpfX0pO20oZChhKSxjKX19fTtwKChhKT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Fetch our rom\nimport { fetchROMAsByteArray } from './fetchrom';\n\n// Get our worker message types\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\n\n// Function to initialize the workers / set up wasm module\n// Getting started with wasm\n// http://webassembly.org/getting-started/js-api/\nasync function initialize() {\n  if (this.initialized) {\n    return;\n  }\n\n  this.ready = false;\n  this.loadedAndStarted = false;\n\n  // Instantiate our workers\n  await this._instantiateWorkers();\n\n  // Now tell the wasm module to instantiate wasm\n  const response = await this.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.INSTANTIATE_WASM\n  });\n\n  this.coreType = response.message.type;\n\n  // Set up Memory\n  await WasmBoyMemory.initialize(this.options.headless, this.options.maxNumberOfAutoSaveStates, this.options.saveStateCallback);\n\n  // Clear what is currently in memory, then load the cartridge memory\n  await WasmBoyMemory.clearMemory();\n\n  this.initialized = true;\n}\n\n// Finish request for wasm module, and fetch game\n// NOTE: **Should bind the wasmboy this here**\nexport function loadROMToWasmBoy(ROM, fetchHeaders) {\n  const loadROMAndConfigTask = async () => {\n    // Save cartridge RAM if have it\n    if (!this.options.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n      await WasmBoyMemory.saveCartridgeRam();\n    }\n\n    // Get our fetch rom object\n    const fetchROMObject = await fetchROMAsByteArray(ROM, fetchHeaders);\n\n    await WasmBoyMemory.loadCartridgeRom(fetchROMObject.ROM, fetchROMObject.name);\n\n    // Load a Boot ROM\n    if (this.options.enableBootROMIfAvailable) {\n      // Get the cartridge info\n      const cartridgeInfo = await WasmBoyMemory.getCartridgeInfo();\n\n      if (cartridgeInfo.CGBFlag) {\n        await WasmBoyMemory.loadBootROMIfAvailable(WasmBoyMemory.SUPPORTED_BOOT_ROM_TYPES.GBC);\n      } else {\n        await WasmBoyMemory.loadBootROMIfAvailable(WasmBoyMemory.SUPPORTED_BOOT_ROM_TYPES.GB);\n      }\n    }\n\n    // Save the game that we loaded if we need to reload the game\n    this.loadedROM = ROM;\n\n    // Run our initialization on the core\n    await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.CONFIG,\n      config: [\n        WasmBoyMemory.loadedCartridgeMemoryState.BOOT ? 1 : 0, // Loaded Boot Rom\n        this.options.isGbcEnabled ? 1 : 0,\n        this.options.audioBatchProcessing ? 1 : 0,\n        this.options.graphicsBatchProcessing ? 1 : 0,\n        this.options.timersBatchProcessing ? 1 : 0,\n        this.options.graphicsDisableScanlineRendering ? 1 : 0,\n        this.options.audioAccumulateSamples ? 1 : 0,\n        this.options.tileRendering ? 1 : 0,\n        this.options.tileCaching ? 1 : 0,\n        this.options.enableAudioDebugging ? 1 : 0\n      ],\n      options: {\n        gameboyFrameRate: this.options.gameboyFrameRate,\n        headless: this.options.headless,\n        isAudioEnabled: this.options.isAudioEnabled,\n        isGbcColorizationEnabled: this.options.isGbcColorizationEnabled,\n        gbcColorizationPalette: this.options.gbcColorizationPalette,\n        enableAudioDebugging: this.options.enableAudioDebugging,\n        frameSkip: this.options.frameSkip\n      }\n    });\n  };\n\n  const loadROMTask = async () => {\n    // Pause wasmBoy\n    await this.pause();\n\n    await initialize.bind(this)();\n\n    // Check if we are running headless\n    if (this.options.headless) {\n      await loadROMAndConfigTask();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    } else {\n      // Finally intialize all of our services\n      // Initialize our services\n      // Except memory, which would already be initialized\n      await Promise.all([\n        WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback),\n        WasmBoyAudio.initialize(this.options.updateAudioCallback),\n        WasmBoyController.initialize()\n      ]);\n\n      await loadROMAndConfigTask();\n\n      // Load the game's cartridge ram\n      await WasmBoyMemory.loadCartridgeRam();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    }\n  };\n\n  return loadROMTask();\n}\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Imports\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyController } from '../controller/controller';\n\n// Function to render our emulator output\nexport function render() {\n  // Don't run if paused\n  if (this.paused) {\n    return true;\n  }\n\n  // Check if we have frameskip\n  let shouldSkipRenderingFrame = false;\n  if (this.frameSkip && this.frameSkip > 0) {\n    this.frameSkipCounter++;\n\n    if (this.frameSkipCounter < this.frameSkip) {\n      shouldSkipRenderingFrame = true;\n    } else {\n      this.frameSkipCounter = 0;\n    }\n  }\n\n  // Render the display\n  if (!shouldSkipRenderingFrame) {\n    WasmBoyGraphics.renderFrame();\n  }\n\n  // Update our controller\n  WasmBoyController.updateController();\n\n  this.renderId = raf(() => {\n    render.call(this);\n  });\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { WasmBoyLib } from '../wasmboy/wasmboy';\nimport { WasmBoyGraphics } from '../graphics/graphics';\n\nimport { waitForLibWorkerMessageType } from '../wasmboy/onmessage';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// https://www.npmjs.com/package/big-integer\nimport bigInt from 'big-integer';\n\nlet currentRaf = undefined;\nconst forceOutputFrame = () => {\n  WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.FORCE_OUTPUT_FRAME\n  });\n  WasmBoyGraphics.renderFrame();\n};\n\nexport const runNumberOfFrames = async frames => {\n  await WasmBoyLib.pause();\n\n  // Set up a raf function to continually update the canvas\n  const rafUpdateCanvas = () => {\n    currentRaf = raf(() => {\n      if (currentRaf) {\n        forceOutputFrame();\n        rafUpdateCanvas();\n      }\n    });\n  };\n  rafUpdateCanvas();\n\n  for (let i = 0; i < frames; i++) {\n    await runWasmExport('executeFrame', []);\n  }\n\n  currentRaf = undefined;\n  forceOutputFrame();\n};\n\nexport const runWasmExport = async (exportKey, parameters) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n    export: exportKey,\n    parameters\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getWasmMemorySection = async (start, end) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION,\n    start,\n    end\n  });\n\n  const eventData = getEventData(event);\n  return new Uint8Array(eventData.message.response);\n};\n\nexport const getWasmConstant = async constantKey => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n    constant: constantKey\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getStepsAsString = async radix => {\n  const stepsPerStepSet = await runWasmExport('getStepsPerStepSet');\n  const stepSets = await runWasmExport('getStepSets');\n  const steps = await runWasmExport('getSteps');\n\n  const bigSteps = bigInt(stepsPerStepSet)\n    .multiply(stepSets)\n    .add(steps);\n\n  if (radix) {\n    return bigSteps.toString(radix);\n  }\n  return bigSteps.toString(10);\n};\n\nexport const getCyclesAsString = async radix => {\n  const cyclesPerCycleSet = await runWasmExport('getCyclesPerCycleSet');\n  const cycleSets = await runWasmExport('getCycleSets');\n  const cycles = await runWasmExport('getCycles');\n\n  const bigCycles = bigInt(cyclesPerCycleSet)\n    .multiply(cycleSets)\n    .add(cycles);\n\n  if (radix) {\n    return bigCycles.toString(radix);\n  }\n  return bigCycles.toString(10);\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { runWasmExport, getWasmMemorySection, getWasmConstant } from '../debug/debug';\n\nconst messageRequests = {};\n\nexport function waitForLibWorkerMessageType(messageType) {\n  if (!messageRequests[messageType]) {\n    messageRequests[messageType] = [];\n  }\n  const promise = new Promise(resolve => {\n    messageRequests[messageType].push(resolve);\n  });\n\n  return promise;\n}\n\n// Functions to handle the lib worker messages\nexport function libWorkerOnMessage(event) {\n  const eventData = getEventData(event);\n\n  if (!eventData.message) {\n    return;\n  }\n\n  if (messageRequests[eventData.message.type]) {\n    messageRequests[eventData.message.type].forEach(request => request(eventData.message));\n  }\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.UPDATED: {\n      this.fps = eventData.message.fps;\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.BREAKPOINT: {\n      const breakpointTask = async () => {\n        await this.pause();\n        if (this.options.breakpointCallback) {\n          this.options.breakpointCallback();\n        }\n      };\n      breakpointTask();\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.CRASHED: {\n      const crashedTask = async () => {\n        await this.pause();\n\n        console.log('Wasmboy Crashed!');\n\n        let programCounter = await runWasmExport('getProgramCounter');\n        let gameboyMemoryConstant = await getWasmConstant('GAMEBOY_INTERNAL_MEMORY_LOCATION');\n        let opcode = await getWasmMemorySection(gameboyMemoryConstant + programCounter, gameboyMemoryConstant + programCounter + 1);\n\n        console.log(`Program Counter: 0x${programCounter.toString(16)}`);\n        console.log(`Opcode: 0x${opcode[0].toString(16)}`);\n      };\n      crashedTask();\n      return;\n    }\n\n    default: {\n      // Do nothing. This catches all messages so yeah\n    }\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Other lib helpers\nimport { instantiateWorkers } from '../worker/instantiate';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { loadROMToWasmBoy } from './load';\nimport { render } from './render';\nimport { libWorkerOnMessage } from './onmessage';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\nlet isWindowUnloading = false;\n\n// Our Main Orchestrator of the WasmBoy lib\nclass WasmBoyLibService {\n  // Start the request to our wasm module\n  constructor() {\n    this.worker = undefined;\n    this.coreType = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.loadedAndStarted = false;\n    this.initialized = false;\n    this.renderId = false;\n    this.loadedROM = false;\n\n    this.fps = 0;\n    this.speed = 1.0;\n\n    // Reset our config and stateful elements that depend on it\n    // this.options is set here\n    this._resetConfig();\n\n    // Add some listeners for when we are put into the background\n    if (typeof window !== 'undefined') {\n      // Calling promises in the hidden visibility change\n      // On page reload, leaks memory\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=932885&can=1&q=torchh2424%40gmail.com&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified\n      // Thus we need this hack, to get around this\n      window.addEventListener('beforeunload', function(event) {\n        isWindowUnloading = true;\n      });\n\n      window.document.addEventListener('visibilitychange', () => {\n        // fires when user switches tabs, apps, goes to homescreen, etc.\n        if (document.visibilityState === 'hidden') {\n          if (this.options && this.options.disablePauseOnHidden) {\n            return;\n          }\n\n          setTimeout(() => {\n            if (!isWindowUnloading) {\n              // See the comment above about the memory leak\n              // This fires off a bunch of promises, thus a leak\n              this.pause();\n            }\n          }, 0);\n        }\n      });\n    }\n  }\n\n  // Function to initialize/configure Wasmboy\n  config(wasmBoyOptions, canvasElement) {\n    const configTask = async () => {\n      // Pause any currently running game\n      await this.pause();\n\n      // Get our canvas elements\n      await this.setCanvas(canvasElement);\n\n      // Reset our config and stateful elements that depend on it\n      // If we have a new config to take its place\n      if (wasmBoyOptions || !this.options) {\n        this._resetConfig();\n      }\n\n      // set our options\n      if (wasmBoyOptions) {\n        // Set all options\n        Object.keys(wasmBoyOptions).forEach(key => {\n          if (this.options[key] !== undefined) {\n            this.options[key] = wasmBoyOptions[key];\n          }\n        });\n\n        // Aliases\n        // Gameboy Speed / Framerate\n        if (wasmBoyOptions.gameboySpeed) {\n          let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n          if (gameboyFrameRate <= 0) {\n            gameboyFrameRate = 1;\n          }\n          this.options.gameboyFrameRate = gameboyFrameRate;\n        }\n      }\n    };\n\n    return configTask();\n  }\n\n  // Function to return our current configuration as an object\n  getConfig() {\n    return this.options;\n  }\n\n  // Function to get/set our canvas element\n  // Useful for vaporboy\n  setCanvas(canvasElement) {\n    if (!canvasElement) {\n      return Promise.resolve();\n    }\n\n    const setCanvasTask = async () => {\n      await this.pause();\n\n      // Set our new canvas element, and re-run init on graphics to apply styles and things\n      this.canvasElement = canvasElement;\n\n      await WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback);\n    };\n\n    return setCanvasTask();\n  }\n\n  getCanvas() {\n    return this.canvasElement;\n  }\n\n  // Finish request for wasm module, and fetch boot ROM\n  addBootROM(type, file, fetchHeaders, additionalInfo) {\n    return WasmBoyMemory.addBootROM(type, file, fetchHeaders, additionalInfo);\n  }\n\n  getBootROMs() {\n    return WasmBoyMemory.getBootROMs();\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadROM(ROM, fetchHeaders) {\n    const boundLoadROM = loadROMToWasmBoy.bind(this);\n    return boundLoadROM(ROM, fetchHeaders);\n  }\n\n  // Function to start/resume\n  play() {\n    const playTask = async () => {\n      if (!this.ready) {\n        return;\n      }\n      if (!this.loadedAndStarted) {\n        this.loadedAndStarted = true;\n        if (this.options.onLoadedAndStarted) {\n          this.options.onLoadedAndStarted();\n        }\n      }\n      if (this.options.onPlay) {\n        this.options.onPlay();\n      }\n\n      // Bless the audio, this is to fix any autoplay issues\n      if (!this.options.headless) {\n        WasmBoyAudio.resumeAudioContext();\n        WasmBoyAudio.resetTimeStretch();\n      }\n\n      // Reset the audio queue index to stop weird pauses when trying to load a game\n      await this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE\n      });\n\n      // Undo any pause\n      this.paused = false;\n\n      if (!this.updateId) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PLAY\n        });\n      }\n\n      if (!this.renderId && !this.options.headless) {\n        this.renderId = raf(() => {\n          render.call(this);\n        });\n      }\n    };\n\n    return playTask();\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pause() {\n    const pauseTask = async () => {\n      this.paused = true;\n      if (this.ready && this.options.onPause) {\n        this.options.onPause();\n      }\n\n      // Cancel our update and render loop\n      raf.cancel(this.renderId);\n      this.renderId = false;\n\n      // Cancel any playing audio\n      // Audio played with latency may be still going on here\n      if (!this.options.headless) {\n        WasmBoyAudio.cancelAllAudio(true);\n      }\n\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PAUSE\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n\n    return pauseTask();\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n    const resetTask = async () => {\n      this.config(wasmBoyOptions, this.canvasElement);\n      // Reload the game if one was already loaded\n      if (this.loadedROM) {\n        return this.loadROM(this.loadedROM);\n      }\n    };\n\n    return resetTask();\n  }\n\n  getSavedMemory() {\n    return WasmBoyMemory.getSavedMemory();\n  }\n\n  saveLoadedCartridge(additionalInfo) {\n    return WasmBoyMemory.saveLoadedCartridge(additionalInfo);\n  }\n\n  deleteSavedCartridge(cartridge) {\n    return WasmBoyMemory.deleteSavedCartridge(cartridge);\n  }\n\n  saveState() {\n    const saveStateTask = async () => {\n      await this.pause();\n      const saveState = await WasmBoyMemory.saveState();\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  // Function to return the save states for the game\n  getSaveStates() {\n    const getSaveStatesTask = async () => {\n      let cartridgeObject = await WasmBoyMemory.getCartridgeObject();\n      if (!cartridgeObject) {\n        return [];\n      } else {\n        return cartridgeObject.saveStates;\n      }\n    };\n\n    return getSaveStatesTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      await this.pause();\n      await WasmBoyMemory.loadState(saveState);\n    };\n\n    return loadStateTask();\n  }\n\n  deleteState(saveState) {\n    const deleteStateTask = async () => {\n      await WasmBoyMemory.deleteState(saveState);\n    };\n\n    return deleteStateTask();\n  }\n\n  // Simply returns the FPS we get back from the lib worker\n  getFPS() {\n    return this.fps;\n  }\n\n  // Simply returns our current Core Type\n  getCoreType() {\n    return this.coreType;\n  }\n\n  getSpeed() {\n    return this.speed;\n  }\n\n  // Set the speed of the emulator\n  // Should be a float. And by X times as fast\n  setSpeed(speed) {\n    if (speed <= 0) {\n      speed = 0.1;\n    }\n\n    const setSpeedTask = async () => {\n      if (this.worker) {\n        this.speed = speed;\n\n        WasmBoyAudio.setSpeed(speed);\n\n        await this.worker.postMessageIgnoreResponse({\n          type: WORKER_MESSAGE_TYPE.SET_SPEED,\n          speed\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n    setSpeedTask();\n  }\n\n  // Function to return if we currently are playing as a gbc console\n  isGBC() {\n    const isGBCTask = async () => {\n      const event = await WasmBoyLib.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.IS_GBC\n      });\n\n      const eventData = getEventData(event);\n\n      return eventData.message.response;\n    };\n    return isGBCTask();\n  }\n\n  // Private Function to reset options to default\n  _resetConfig() {\n    // Reset Fps Metering\n    this.fpsTimeStamps = [];\n    this.frameSkipCounter = 0;\n\n    // Configurable Options\n    // Set callbacks to null and not undefined,\n    // For when configs are passed, we will be sure to\n    // add them as keys\n    this.options = {\n      headless: false,\n      disablePauseOnHidden: false,\n      isAudioEnabled: true,\n      enableAudioDebugging: false,\n      gameboyFrameRate: 60,\n      frameSkip: 0,\n      enableBootROMIfAvailable: true,\n      isGbcEnabled: true,\n      isGbcColorizationEnabled: true,\n      gbcColorizationPalette: null,\n      audioBatchProcessing: false,\n      graphicsBatchProcessing: false,\n      timersBatchProcessing: false,\n      graphicsDisableScanlineRendering: false,\n      audioAccumulateSamples: false,\n      tileRendering: false,\n      tileCaching: false,\n      maxNumberOfAutoSaveStates: 10,\n      updateGraphicsCallback: null,\n      updateAudioCallback: null,\n      saveStateCallback: null,\n      breakpointCallback: null,\n      onReady: null,\n      onPlay: null,\n      onPause: null,\n      onLoadedAndStarted: null\n    };\n  }\n\n  // Function to instantiate and set up our workers\n  // This ensures we don't create workers twice\n  _instantiateWorkers() {\n    const instantiateWorkersTask = async () => {\n      if (this.worker) {\n        return;\n      } else {\n        this.worker = await instantiateWorkers();\n        this.worker.addMessageListener(libWorkerOnMessage.bind(this));\n      }\n    };\n\n    return instantiateWorkersTask();\n  }\n}\n\nexport const WasmBoyLib = new WasmBoyLibService();\n","// Build our public lib api\nimport { WasmBoyLib } from './wasmboy/wasmboy';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\nimport {\n  runNumberOfFrames,\n  runWasmExport,\n  getWasmMemorySection,\n  getWasmConstant,\n  getStepsAsString,\n  getCyclesAsString\n} from './debug/debug';\n\n// Get our package.json\nimport packageJson from '../package.json';\n\n// Debugging properties prepended with _\n\n// export an object that public exposes parts of the singleton\n// Need to bind to preserve this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\nexport const WasmBoy = {\n  config: WasmBoyLib.config.bind(WasmBoyLib),\n  getCoreType: WasmBoyLib.getCoreType.bind(WasmBoyLib),\n  getConfig: WasmBoyLib.getConfig.bind(WasmBoyLib),\n  setCanvas: WasmBoyLib.setCanvas.bind(WasmBoyLib),\n  getCanvas: WasmBoyLib.getCanvas.bind(WasmBoyLib),\n  addBootROM: WasmBoyLib.addBootROM.bind(WasmBoyLib),\n  getBootROMs: WasmBoyLib.getBootROMs.bind(WasmBoyLib),\n  loadROM: WasmBoyLib.loadROM.bind(WasmBoyLib),\n  play: WasmBoyLib.play.bind(WasmBoyLib),\n  pause: WasmBoyLib.pause.bind(WasmBoyLib),\n  reset: WasmBoyLib.reset.bind(WasmBoyLib),\n  isPlaying: () => {\n    return !WasmBoyLib.paused;\n  },\n  isPaused: () => {\n    return WasmBoyLib.paused;\n  },\n  isReady: () => {\n    return WasmBoyLib.ready;\n  },\n  isLoadedAndStarted: () => {\n    return WasmBoyLib.loadedAndStarted;\n  },\n  getVersion: () => {\n    return packageJson.version;\n  },\n  getSavedMemory: WasmBoyLib.getSavedMemory.bind(WasmBoyLib),\n  saveLoadedCartridge: WasmBoyLib.saveLoadedCartridge.bind(WasmBoyLib),\n  deleteSavedCartridge: WasmBoyLib.deleteSavedCartridge.bind(WasmBoyLib),\n  saveState: WasmBoyLib.saveState.bind(WasmBoyLib),\n  getSaveStates: WasmBoyLib.getSaveStates.bind(WasmBoyLib),\n  loadState: WasmBoyLib.loadState.bind(WasmBoyLib),\n  deleteState: WasmBoyLib.deleteState.bind(WasmBoyLib),\n  getFPS: WasmBoyLib.getFPS.bind(WasmBoyLib),\n  setSpeed: WasmBoyLib.setSpeed.bind(WasmBoyLib),\n  isGBC: WasmBoyLib.isGBC.bind(WasmBoyLib),\n  ResponsiveGamepad: WasmBoyController.ResponsiveGamepad,\n  enableDefaultJoypad: WasmBoyController.enableDefaultJoypad.bind(WasmBoyController),\n  disableDefaultJoypad: WasmBoyController.disableDefaultJoypad.bind(WasmBoyController),\n  setJoypadState: WasmBoyController.setJoypadState.bind(WasmBoyController),\n  resumeAudioContext: WasmBoyAudio.resumeAudioContext.bind(WasmBoyAudio),\n  _getAudioChannels: WasmBoyAudio.getAudioChannels.bind(WasmBoyAudio),\n  _getCartridgeInfo: WasmBoyMemory.getCartridgeInfo.bind(WasmBoyMemory),\n  _runNumberOfFrames: runNumberOfFrames,\n  _runWasmExport: runWasmExport,\n  _getWasmMemorySection: getWasmMemorySection,\n  _getWasmConstant: getWasmConstant,\n  _getStepsAsString: getStepsAsString,\n  _getCyclesAsString: getCyclesAsString\n};\n"],"names":["WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","BREAKPOINT","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","FORCE_OUTPUT_FRAME","SET_SPEED","IS_GBC","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","BOOT_ROM","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","getEventData","event","WasmBoyGraphicsService","constructor","undefined","initialize","canvasElement","updateGraphicsCallback","initializeTask","getContext","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","canvasContext","createImageData","width","height","worker","postMessage","type","setWorker","eventData","Uint8ClampedArray","renderFrame","imageDataArrayChanged","imageDataArray","canvasImageData","WasmBoyGraphics","index","buffer","opt","numChannels","numberOfChannels","sampleRate","format","float32","bitDepth","getChannelData","length","inputL","inputR","result","Float32Array","inputIndex","bytesPerSample","blockAlign","ArrayBuffer","samples","view","DataView","writeString","setUint32","setUint16","i","offset","s","Math","max","min","setInt16","setFloat32","string","setUint8","charCodeAt","GbChannelWebAudio","id","createAudioContextIfNone","audioContext","window","createGain","getCurrentTime","currentTime","getPlayTime","audioPlaytime","resumeAudioContext","state","playAudio","numberOfSamples","leftChannelBuffer","rightChannelBuffer","playbackRate","updateAudioCallback","leftChannelBufferAsFloat","rightChannelBufferAsFloat","createBuffer","WASMBOY_SAMPLE_RATE","audioBuffer","recording","source","createBufferSource","lastAdditionalNode","node","finalNode","gainNode","responseNode","destination","audioContextCurrentTime","audioContextCurrentTimeWithLatency","DEFAULT_AUDIO_LATENCY_IN_MILLI","audioSources","playtime","playTime","setTimeout","cancelAllAudio","stopCurrentAudio","mute","muted","unmute","hasRecording","recordingAudioBuffer","startRecording","stopRecording","createBufferFromBuffers","buffers","totalLength","totalBuffer","currentLength","totalLeftBuffer","recordingLeftBuffers","totalRightBuffer","recordingRightBuffers","downloadRecordingAsWav","filename","recordingAnchor","document","wav","toWav","blob","url","downloadName","toLocaleDateString","Date","shortDateWithTime","month","day","year","hour","minute","second","getRecordingAsWavBase64EncodedString","_arrayBufferToBase64","base64String","getRecordingAsAudioBuffer","_libMute","_libUnmute","libMuted","_setGain","gain","_setSamplesToAudioBuffer","leftChannelSamples","rightChannelSamples","binary","bytes","Uint8Array","len","String","WasmBoyAudioService","master","channel1","channel2","channel3","channel4","latency","gbChannels","getAudioChannels","setSpeed","speed","resetTimeStretch","audioMessage","currentFps","allowFastSpeedStretching","fps","fpsDifference","averageTimeStretchFps","SLOW_TIME_STRETCH_MIN_FPS","reduce","accumulator","currentValue","channelNumber","playingAllChannels","_createAudioContextIfNone","_applyOnAllChannels","functionKey","argsArray","Object","gbChannelKey","WasmBoyAudio","promisifyRequest","request","Promise","resolve","reject","onsuccess","request.onsuccess","onerror","request.onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","idbTransaction.oncomplete","idbTransaction.onerror","onabort","idbTransaction.onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","ObjectStore.prototype.createIndex","ObjectStore.prototype.index","IDBObjectStore","objectStore","Transaction.prototype.objectStore","IDBTransaction","createObjectStore","UpgradeDB.prototype.createObjectStore","IDBDatabase","DB.prototype.transaction","funcName","replace","Array","slice","call","callback","nativeObject","getAll","Constructor.prototype.getAll","query","count","instance","items","iterateCursor","push","continue","module","exports","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","request.onupgradeneeded","delete","default","require$$0","keyval","dbPromise","idb","upgradeDB","key","tx","clear","keys","idbKeyval","UZIP","buf","rUs","rUi","o","out","data","eocd","cnu","csize","usize","nl","el","cl","roff","_readLocal","UZIP._readLocal","cmpr","nlen","elen","file","inflateRaw","UZIP.inflateRaw","inflate","UZIP.inflate","deflate","UZIP.deflate","opts","level","off","crc","deflateRaw","UZIP.deflateRaw","encode","UZIP.encode","tot","wUi","wUs","zpd","cpr","fof","ioff","_noNeed","UZIP._noNeed","fn","ext","indexOf","_writeHeader","UZIP._writeHeader","t","tab","Uint32Array","n","c","k","table","update","b","l","UZIP.adler","a","end","eend","readUshort","buff","writeUshort","readUint","writeUint","readASCII","writeASCII","pad","readUTF8","ns","decodeURIComponent","e","writeUTF8","str","strl","ci","code","sizeUTF8","UZIP.F.deflateRaw","opos","lvl","U","goodIndex","putsE","pos","cvrd","dlen","lits","strt","prev","li","lc","bs","ebits","nc","ii","mch","dst","lgi","dgi","UZIP.F._bestMatch","nice","chain","pi","dif","td","tl","dlim","maxd","j","ei","curd","UZIP.F._howLong","oi","UZIP.F._hash","UZIP.F._writeBlock","BFINAL","o0","l0","putsF","MD","MH","numl","numd","T","ML","numh","lset","dset","cstSize","fxdSize","dynSize","BTYPE","ltree","dtree","si","qb","qc","UZIP.F._copyExact","p8","UZIP.F.getTrees","UZIP.F.getSecond","UZIP.F.nonZero","UZIP.F.contSize","tree","hst","UZIP.F._codeTiny","rst","rsl","UZIP.F._lenCodes","nxt","nnxt","prv","lz","zc","UZIP.F._hufTree","MAXL","list","hl","lit","f","l2","i0","i1","i2","r","d","maxl","UZIP.F.setDepth","UZIP.F.restrictDepth","dps","bCost","dbt","od","console","UZIP.F._goodIndex","v","arr","UZIP.F._writeLit","ch","UZIP.F.inflate","F","bitsF","bitsE","decodeTiny","makeCodes","codes2map","get17","noBuf","HLIT","HDIST","dmap","lmap","HCLEN","ml","md","ebs","dcode","dbs","UZIP.F._check","bl","nbuf","UZIP.F._decodeTiny","LL","mx","ll","ni","UZIP.F.makeCodes","MAX_BITS","max_code","bits","bl_count","next_code","UZIP.F.codes2map","map","r15","rest","UZIP.F.revCodes","imb","UZIP.F._putsE","dt","UZIP.F._putsF","UZIP.F._bitsE","UZIP.F._bitsF","UZIP.F._get17","UZIP.F._get25","Uint16Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","imap","itree","rev15","lhst","dhst","ihst","x","fetchROMAsByteArray","ROM","loadOptions","fetchROMAsByteArrayTask","byteArray","getROMFromFileReaderAsByteArray","parseByteArrayAsZip","fetchHeaders","fetch","fileName","fileReaderByteArray","fileReader","FileReader","fileReader.onload","unzipObject","uzip","foundROM","unzipObjectKeys","lowercaseKey","Error","WASMBOY_SAVE_STATE_SCHEMA","wasmboyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","cartridgeRam","date","isAuto","getSaveState","saveState","internalState","paletteMemory","gameboyMemory","saveStateCallback","_prepareAndStoreAutoSave","saveStateMemoryKeys","localStorage","WASMBOY_UNLOAD_STORAGE","JSON","header","cartridgeHeader","_findAndCommitAutoSave","findAndCommitAutoSaveTask","unloadStorage","unloadStorageObject","saveCartridgeRam","initializeAutoSave","WasmBoyMemoryService","RAM","BOOT","GB","GBC","headless","maxNumberOfAutoSaveStates","_initializeConstants","memoryTypes","getSavedMemory","getSavedMemoryTask","memory","cartridgeObject","getLoadedCartridgeMemoryState","loadedCartridgeMemoryState","clearMemory","isValidBootROMType","SUPPORTED_BOOT_ROM_TYPES","bootROMTypeKey","addBootROM","additionalInfo","fetchROMObject","bootROMObject","BOOT_ROM_KEY","getBootROMs","bootROMs","bootROMType","loadBootROMIfAvailable","workerMemoryObject","loadCartridgeRom","loadTask","saveLoadedCartridge","saveLoadedCartridgeRomTask","cartridgeInfo","getCartridgeInfo","cartridgeRom","cartridgeRomFileName","deleteSavedCartridge","cartridge","deleteLoadedCartridgeTask","passedHeader","passedCartridgeRam","saveCartridgeRamTask","loadCartridgeRam","loadCartridgeRamTask","passedSaveState","saveStateTask","autoSaveStates","savedState","autoSaveState","saveStateIndex","_indexOfSaveStateIndexInSaveStates","loadState","loadStateTask","saverState","deleteState","deleteStateTask","getCartridgeObject","getCartridgeInfoTask","saveStates","WasmBoyMemory","getOwnPropertySymbols","concat","filter","getOwnPropertyDescriptor","enumerable","configurable","writable","g","DPAD_UP","DPAD_RIGHT","DPAD_DOWN","DPAD_LEFT","LEFT_ANALOG_HORIZONTAL_AXIS","LEFT_ANALOG_VERTICAL_AXIS","LEFT_ANALOG_UP","LEFT_ANALOG_RIGHT","LEFT_ANALOG_DOWN","LEFT_ANALOG_LEFT","RIGHT_ANALOG_HORIZONTAL_AXIS","RIGHT_ANALOG_VERTICAL_AXIS","RIGHT_ANALOG_UP","RIGHT_ANALOG_RIGHT","RIGHT_ANALOG_DOWN","RIGHT_ANALOG_LEFT","A","B","X","Y","LEFT_TRIGGER","LEFT_BUMPER","RIGHT_TRIGGER","RIGHT_BUMPER","SELECT","START","SPECIAL","h","m","keymap","enableIgnoreWhenInputElementFocused","enableIgnoreWhenModifierState","_boundUpdateKeymapValues","_updateKeymapValues","bind","addEventListener","removeEventListener","ignoreWhenInputElementFocused","ignoreOnModifierState","some","activeElement","tagName","toLowerCase","getModifierState","_isFocusedOnInputElement","_isInModifierState","preventDefault","gamepadAnalogStickDeadZone","_getGamepads","buttons","_isButtonPressed","axis","_getAnalogStickAxis","axes","pressed","navigator","getGamepads","q","listeners","element","_addTouchStyles","boundingClientRect","_updateElementBoundingClientRect","active","boundUpdateElementRect","boundTouchEvent","_touchEvent","_removeTouchStyles","stopListening","includes","touches","_updateActiveStatus","_updateTouchStyles","onTouchEvent","getBoundingClientRect","style","userSelect","classList","add","remove","rectCenterX","right","left","rectCenterY","bottom","top","touchX","clientX","touchY","clientY","u","config","allowMultipleDirections","_resetState","setHorizontalState","setVerticalState","abs","HORIZONTAL_AXIS","VERTICAL_AXIS","UP","RIGHT","DOWN","LEFT","transform","deadzone","w","input","y","enabled","dpads","leftAnalogs","rightAnalogs","listen","splice","addAnalogInput","z","RESPONSIVE_GAMEPAD_INPUTS","_enabled","_multipleDirectionInput","Keyboard","Gamepad","TouchInput","setKeysToResponsiveGamepadInput","setGamepadButtonsToResponsiveGamepadInput","setGamepadAxisToResponsiveGamepadInput","plugins","inputChangeMap","inputChangeOldState","cancelInputChangeListener","enable","_startInputChangeInterval","disable","onAddPlugin","onRemovePlugin","getState","onGetState","codes","setInterval","_inputChangeIntervalHandler","this.cancelInputChangeListener","clearInterval","ResponsiveGamepadPluginGB","gamepadB","WasmBoyControllerService","ResponsiveGamepad","isEnabled","updateController","controllerState","setJoypadState","setJoypadStateParamsAsArray","enableDefaultJoypad","disableDefaultJoypad","WasmBoyController","idCounter","generateId","randomId","getSmartWorkerMessage","message","messageId","workerId","SmartWorker","workerUrl","workerJs","atob","Blob","BlobBuilder","Worker","URL","_onMessageHandler","postMessageIgnoreResponse","transfer","messageObject","messageIdListener","messageDroppedTimeout","responseMessage","messageListener","clearTimeout","addMessageListener","removeMessageListener","messageListenerIndex","instantiateWorkers","libWorker","wasmboyLibWasmWorkerUrl","graphicsWorker","wasmboyGraphicsWorkerUrl","audioWorker","wasmboyAudioWorkerUrl","controllerWorker","wasmboyControllerWorkerUrl","memoryWorker","wasmboyMemoryWorkerUrl","workerReadyPromises","childWorkers","childWorker","messageChannel","MessageChannel","workerReadyPromise","messagesReceived","ports","initialized","_instantiateWorkers","response","options","loadROMToWasmBoy","loadROMAndConfigTask","enableBootROMIfAvailable","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","enableAudioDebugging","gameboyFrameRate","isAudioEnabled","isGbcColorizationEnabled","gbcColorizationPalette","frameSkip","loadROMTask","pause","onReady","performance","now","module.exports","process","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","loadTime","getTime","this","root","global","vendors","raf","caf","suffix","last","queue","frameDuration","_now","next","cp","cancelled","round","handle","raf_1","cancel","render","paused","shouldSkipRenderingFrame","frameSkipCounter","bigInt","Integer","radix","alphabet","caseSensitive","DEFAULT_ALPHABET","text","absBase","base","alphabetValues","parseValue","digits","isNegative","start","parseBaseFromArray","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","MAX_INT","smallToArray","floor","arrayToSmall","trim","compareAbs","MAX_INT_ARR","BASE","createArray","truncate","ceil","l_a","l_b","carry","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractSmall","multiplyLong","a_i","b_j","product","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","multiplySmallAndArray","square","a_j","divModSmall","lambda","quotient","remainder","divisor","divModAny","self","supportsNativeBigInt","negate","comparison","divisorMostSignificantDigit","shift","quotientDigit","part","unshift","xlen","highx","highy","guess","check","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","divide","modPow","bitwise","xSign","ySign","xRem","not","yRem","isZero","xDivMod","highestPower2","xDigit","toJSNumber","yDivMod","yDigit","multiply","roughLOB","LOBMASK_I","BigInt","LOBMASK_BI","integerLogarithm","compareTo","tmp","greater","gcd","pow","times","toBase","valueOf","neg","isPositive","Number","divmod","digit","minus","toBaseString","join","parseStringValue","split","decimalPlace","test","isValid","LOG_BASE","toString","create","BigInteger.prototype.add","plus","SmallInteger.prototype.add","NativeBigInt.prototype.add","BigInteger.prototype.subtract","SmallInteger.prototype.subtract","NativeBigInt.prototype.subtract","BigInteger.prototype.negate","SmallInteger.prototype.negate","small","NativeBigInt.prototype.negate","BigInteger.prototype.abs","SmallInteger.prototype.abs","NativeBigInt.prototype.abs","BigInteger.prototype.multiply","l1","_multiplyBySmall","SmallInteger.prototype._multiplyBySmall","BigInteger.prototype._multiplyBySmall","SmallInteger.prototype.multiply","NativeBigInt.prototype.multiply","BigInteger.prototype.square","SmallInteger.prototype.square","NativeBigInt.prototype.square","BigInteger.prototype.divmod","BigInteger.prototype.divide","over","NativeBigInt.prototype.divide","BigInteger.prototype.mod","NativeBigInt.prototype.remainder","BigInteger.prototype.pow","NativeBigInt.prototype.pow","_0","_1","_2","BigInteger.prototype.modPow","isOdd","BigInteger.prototype.compareAbs","SmallInteger.prototype.compareAbs","NativeBigInt.prototype.compareAbs","compare","BigInteger.prototype.compare","Infinity","SmallInteger.prototype.compare","NativeBigInt.prototype.compare","BigInteger.prototype.equals","eq","notEquals","BigInteger.prototype.notEquals","neq","BigInteger.prototype.greater","gt","BigInteger.prototype.lesser","lt","greaterOrEquals","BigInteger.prototype.greaterOrEquals","geq","lesserOrEquals","BigInteger.prototype.lesserOrEquals","leq","BigInteger.prototype.isEven","SmallInteger.prototype.isEven","NativeBigInt.prototype.isEven","BigInteger.prototype.isOdd","SmallInteger.prototype.isOdd","NativeBigInt.prototype.isOdd","BigInteger.prototype.isPositive","SmallInteger.prototype.isPositive","BigInteger.prototype.isNegative","SmallInteger.prototype.isNegative","BigInteger.prototype.isUnit","SmallInteger.prototype.isUnit","NativeBigInt.prototype.isUnit","BigInteger.prototype.isZero","SmallInteger.prototype.isZero","NativeBigInt.prototype.isZero","BigInteger.prototype.isDivisibleBy","isPrime","BigInteger.prototype.isPrime","strict","bitLength","logN","log","isProbablePrime","BigInteger.prototype.isProbablePrime","iterations","randBetween","modInv","BigInteger.prototype.modInv","zero","newT","one","newR","lastT","lastR","BigInteger.prototype.next","SmallInteger.prototype.next","NativeBigInt.prototype.next","BigInteger.prototype.prev","SmallInteger.prototype.prev","NativeBigInt.prototype.prev","powersOfTwo","powers2Length","BigInteger.prototype.shiftLeft","shiftRight","BigInteger.prototype.shiftRight","remQuo","BigInteger.prototype.not","and","BigInteger.prototype.and","or","BigInteger.prototype.or","xor","BigInteger.prototype.xor","BigInteger.prototype.bitLength","toArray","BigInteger.prototype.toArray","SmallInteger.prototype.toArray","NativeBigInt.prototype.toArray","BigInteger.prototype.toString","zeros","SmallInteger.prototype.toString","toJSON","SmallInteger.prototype.toJSON","BigInteger.prototype.valueOf","parseInt","SmallInteger.prototype.valueOf","NativeBigInt.prototype.toJSNumber","minusOne","lcm","isInstance","Integer.isInstance","low","range","high","random","restricted","fromArray","Integer.fromArray","hasOwnProperty","currentRaf","runWasmExport","exportKey","parameters","WasmBoyLib","export","getWasmMemorySection","getWasmConstant","constantKey","constant","messageRequests","libWorkerOnMessage","breakpointTask","breakpointCallback","crashedTask","programCounter","gameboyMemoryConstant","opcode","isWindowUnloading","WasmBoyLibService","disablePauseOnHidden","wasmBoyOptions","configTask","setCanvas","getConfig","setCanvasTask","getCanvas","loadROM","boundLoadROM","play","playTask","ready","loadedAndStarted","onLoadedAndStarted","onPlay","updateId","renderId","pauseTask","onPause","reset","resetTask","loadedROM","getSaveStates","getSaveStatesTask","getFPS","getCoreType","coreType","getSpeed","setSpeedTask","isGBC","isGBCTask","_resetConfig","isGbcEnabled","instantiateWorkersTask","WasmBoy","isPlaying","isPaused","isReady","isLoadedAndStarted","getVersion","packageJson","_getAudioChannels","_getCartridgeInfo","_runNumberOfFrames","runNumberOfFrames","frames","rafUpdateCanvas","_runWasmExport","_getWasmMemorySection","_getWasmConstant","_getStepsAsString","getStepsAsString","stepsPerStepSet","stepSets","steps","bigSteps","_getCyclesAsString","getCyclesAsString","cyclesPerCycleSet","cycleSets","cycles","bigCycles"],"mappings":"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"}