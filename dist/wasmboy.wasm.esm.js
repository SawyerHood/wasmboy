let aa={name:"wasmboy-plugin REQUIRED",graphics:()=>{},audio:()=>{},saveState:()=>{},canvas:()=>{},breakpoint:()=>{},ready:()=>{},play:()=>{},pause:()=>{},loadedAndStarted:()=>{}};
class ba{constructor(){this.plugins={};this.pluginIdCounter=0}addPlugin(a){if(!a&&"object"!==typeof a)throw Error("Invalid Plugin Object");if(!a.name)throw Error('Added plugin must have a "name" property');let b=this.pluginIdCounter;this.plugins[this.pluginIdCounter]=a;this.pluginIdCounter++;return()=>{this.removePlugin(b)}}removePlugin(a){delete this.plugins[a]}runHook(a){if(!aa[a.key]||"function"!==typeof aa[a.key])throw Error("No such hook as "+a.key);Object.keys(this.plugins).forEach(b=>{b=this.plugins[b];
if(b[a.key]){let c=void 0;try{c=b[a.key].apply(null,a.params)}catch(d){console.error(`There was an error running the '${a.key}' hook, on the ${b.name} plugin.`),console.error(d)}a.callback&&a.callback(c)}})}}
let m=new ba,q={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",PLAY:"PLAY",BREAKPOINT:"BREAKPOINT",PAUSE:"PAUSE",UPDATED:"UPDATED",CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",RUN_WASM_EXPORT:"RUN_WASM_EXPORT",
GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT",FORCE_OUTPUT_FRAME:"FORCE_OUTPUT_FRAME",SET_SPEED:"SET_SPEED",IS_GBC:"IS_GBC"},ca={LIB:"LIB",GRAPHICS:"GRAPHICS",MEMORY:"MEMORY",CONTROLLER:"CONTROLLER",AUDIO:"AUDIO"},u={BOOT_ROM:"BOOT_ROM",CARTRIDGE_RAM:"CARTRIDGE_RAM",CARTRIDGE_ROM:"CARTRIDGE_ROM",CARTRIDGE_HEADER:"CARTRIDGE_HEADER",GAMEBOY_MEMORY:"GAMEBOY_MEMORY",PALETTE_MEMORY:"PALETTE_MEMORY",INTERNAL_STATE:"INTERNAL_STATE"};
function C(a){return a.data?a.data:a}
class da{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(this.canvasElement.width,this.canvasElement.height);
this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);m.runHook({key:"canvas",params:[this.canvasElement,this.canvasContext,this.canvasImageData],callback:a=>{a&&(a.canvasElement&&
(this.canvasElement=a.canvasElement),a.canvasContext&&(this.canvasContext=a.canvasContext),a.canvasImageData&&(this.canvasImageData=a.canvasImageData))}});this.worker&&await this.worker.postMessage({type:q.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener(a=>{a=C(a);switch(a.message.type){case q.UPDATED:this.imageDataArray=new Uint8ClampedArray(a.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){this.imageDataArrayChanged&&(this.imageDataArrayChanged=
!1,this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray),m.runHook({key:"graphics",params:[this.imageDataArray],callback:a=>{a&&(this.imageDataArray=a)}}),this.canvasImageData.data.set(this.imageDataArray),this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),this.canvasContext.putImageData(this.canvasImageData,0,0))}}let E=new da;
function ea(a,b){b=b||{};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var e=3===b?32:16;if(2===c){var f=a.getChannelData(0);a=a.getChannelData(1);for(var g=f.length+a.length,k=new Float32Array(g),l=0,n=0;l<g;)k[l++]=f[n],k[l++]=a[n],n++;f=k}else f=a.getChannelData(0);k=e/8;l=c*k;a=new ArrayBuffer(44+f.length*k);g=new DataView(a);fa(g,0,"RIFF");g.setUint32(4,36+f.length*k,!0);fa(g,8,"WAVE");fa(g,12,"fmt ");g.setUint32(16,16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,
!0);g.setUint32(28,d*l,!0);g.setUint16(32,l,!0);g.setUint16(34,e,!0);fa(g,36,"data");g.setUint32(40,f.length*k,!0);if(1===b)for(c=44,d=0;d<f.length;d++,c+=2)b=Math.max(-1,Math.min(1,f[d])),g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=44,d=0;d<f.length;d++,c+=4)g.setFloat32(c,f[d],!0);return a}function fa(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}
class ha{constructor(a){this.id=a;this.audioPlaytime=this.audioBuffer=this.audioContext=void 0;this.audioSources=[];this.gainNode=void 0;this.recording=this.libMuted=this.muted=!1;this.recordingAnchor=this.recordingAudioBuffer=this.recordingRightBuffers=this.recordingLeftBuffers=void 0}createAudioContextIfNone(){this.audioContext||"undefined"===typeof window||(this.audioContext=new (window.AudioContext||window.webkitAudioContext),!0===!!this.audioContext&&(this.gainNode=this.audioContext.createGain()))}getCurrentTime(){this.createAudioContextIfNone();
if(this.audioContext)return this.audioContext.currentTime}getPlayTime(){return this.audioPlaytime}resumeAudioContext(){this.createAudioContextIfNone();this.audioContext&&"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}playAudio(a,b,c,d,e){if(this.audioContext){b=new Float32Array(b);c=new Float32Array(c);this.audioBuffer=this.audioContext.createBuffer(2,a,44100);this._setSamplesToAudioBuffer(this.audioBuffer,b,c);this.recording&&
(this.recordingLeftBuffers.push(b),this.recordingRightBuffers.push(c));c=this.audioContext.createBufferSource();c.buffer=this.audioBuffer;c.playbackRate.setValueAtTime(d,this.audioContext.currentTime);var f=c;e&&(e=e(this.audioContext,f,this.id))&&(f=e);m.runHook({key:"audio",params:[this.audioContext,f,this.id],callback:a=>{a&&(f.connect(a),f=a)}});this.gainNode&&(f.connect(this.gainNode),f=this.gainNode);f.connect(this.audioContext.destination);e=this.audioContext.currentTime;b=e+.1;this.audioPlaytime=
this.audioPlaytime||b;this.audioPlaytime<e&&(this.cancelAllAudio(),this.audioPlaytime=b);c.start(this.audioPlaytime);for(this.audioPlaytime+=a/(44100*d);this.audioSources[this.audioSources.length-1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:c,playTime:this.audioPlaytime});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+
500)}}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();this.audioSources=[];this.audioPlaytime=this.audioContext.currentTime+.1}}mute(){this.muted||(this._setGain(0),this.muted=!0)}unmute(){this.muted&&(this._setGain(1),this.muted=!1)}hasRecording(){return!!this.recordingAudioBuffer}startRecording(){this.recording||(this.recording=!0,this.recordingLeftBuffers=[],this.recordingRightBuffers=
[],this.recordingAudioBuffer=void 0)}stopRecording(){if(this.recording){this.recording=!1;var a=a=>{let b=0;a.forEach(a=>{b+=a.length});const c=new Float32Array(b);let f=0;a.forEach(a=>{c.set(a,f);f+=a.length});return c},b=a(this.recordingLeftBuffers);a=a(this.recordingRightBuffers);this.recordingAudioBuffer=this.audioContext.createBuffer(2,b.length,44100);this._setSamplesToAudioBuffer(this.recordingAudioBuffer,b,a);this.recordingRightBuffer=this.recordingLeftBuffer=void 0}}downloadRecordingAsWav(a){if(this.recordingAudioBuffer){this.recordingAnchor||
(this.recordingAnchor=document.createElement("a"),document.body.appendChild(this.recordingAnchor),this.recordingAnchor.style="display: none");var b=ea(this.recordingAudioBuffer);b=new window.Blob([new DataView(b)],{type:"audio/wav"});b=window.URL.createObjectURL(b);this.recordingAnchor.href=b;a=a?`${a}.wav`:`wasmboy-${(new Date).toLocaleDateString(void 0,{month:"2-digit",day:"2-digit",year:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})}.wav`;this.recordingAnchor.download=a;this.recordingAnchor.click();
window.URL.revokeObjectURL(b)}}getRecordingAsWavBase64EncodedString(){if(this.recordingAudioBuffer){var a=ea(this.recordingAudioBuffer);return`data:audio/wav;base64,${this._arrayBufferToBase64(a)}`}}getRecordingAsAudioBuffer(){return this.recordingAudioBuffer}_libMute(){this._setGain(0);this.libMuted=!0}_libUnmute(){this.libMuted&&(this._setGain(1),this.libMuted=!1)}_setGain(a){this.createAudioContextIfNone();this.gainNode&&this.gainNode.gain.setValueAtTime(a,this.audioContext.currentTime)}_setSamplesToAudioBuffer(a,
b,c){a.copyToChannel?(a.copyToChannel(b,0,0),a.copyToChannel(c,1,0)):(a.getChannelData(0).set(b),a.getChannelData(1).set(c))}_arrayBufferToBase64(a){let b="";a=new Uint8Array(a);let c=a.byteLength;for(var d=0;d<c;d++)b+=String.fromCharCode(a[d]);return window.btoa(b)}}
class ia{constructor(){this.updateAudioCallback=this.worker=void 0;this.gbChannels={master:new ha("master"),channel1:new ha("channel1"),channel2:new ha("channel2"),channel3:new ha("channel3"),channel4:new ha("channel4")};this._createAudioContextIfNone();"undefined"!==typeof window&&(this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),this.gbChannels.channel3._libMute(),this.gbChannels.channel4._libMute());this.averageTimeStretchFps=[];this.speed=1;this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION=
this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION=this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=[];this.speed=1;this._createAudioContextIfNone();this.cancelAllAudio();return this.worker.postMessage({type:q.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener(a=>{a=C(a);switch(a.message.type){case q.UPDATED:{this.playAudio(a.message);
a=0;let b=this.gbChannels.master.getCurrentTime(),d=this.gbChannels.master.getPlayTime();b&&0<b&&(a=d-b);this.worker.postMessageIgnoreResponse({type:q.AUDIO_LATENCY,latency:a})}}})}getAudioChannels(){return this.gbChannels}setSpeed(a){this.speed=a;this.cancelAllAudio(!0);this.resetTimeStretch()}resetTimeStretch(){this.averageTimeStretchFps=[]}playAudio(a){var b=a.fps,c=a.allowFastSpeedStretching;let d=a.numberOfSamples;var e=b||60;let f=Math.abs(b-this.averageTimeStretchFps[this.averageTimeStretchFps.length-
1]);f&&15<=f&&this.resetTimeStretch();this.averageTimeStretchFps.push(b);171<this.averageTimeStretchFps.length&&this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&(e=this.averageTimeStretchFps.reduce((a,b)=>a+b),e=Math.floor(e/this.averageTimeStretchFps.length));b=1;(57>e||c)&&1===this.speed&&(b*=e/60,0>=b&&(b=.01));b*=this.speed;this.gbChannels.master.playAudio(d,a.audioBuffer.left,a.audioBuffer.right,b,this.updateAudioCallback);for(c=0;4>c;c++)e=c+1,a[`channel${e}Buffer`]&&
this.gbChannels[`channel${e}`].playAudio(d,a[`channel${e}Buffer`].left,a[`channel${e}Buffer`].right,b,this.updateAudioCallback);a=!this.gbChannels.channel1.muted&&!this.gbChannels.channel2.muted&&!this.gbChannels.channel3.muted&&!this.gbChannels.channel4.muted;this.gbChannels.master.muted&&a?(this.gbChannels.master.unmute(),this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),this.gbChannels.channel3._libMute(),this.gbChannels.channel4._libMute()):this.gbChannels.master.muted||
a||(this.gbChannels.master.mute(),this.gbChannels.channel1._libUnmute(),this.gbChannels.channel2._libUnmute(),this.gbChannels.channel3._libUnmute(),this.gbChannels.channel4._libUnmute())}resumeAudioContext(){this._applyOnAllChannels("resumeAudioContext")}cancelAllAudio(a){this._applyOnAllChannels("cancelAllAudio",[a])}_createAudioContextIfNone(){this._applyOnAllChannels("createAudioContextIfNone")}_applyOnAllChannels(a,b){Object.keys(this.gbChannels).forEach(c=>{this.gbChannels[c][a].apply(this.gbChannels[c],
b)})}}let G=new ia;function ma(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable}));c.push.apply(c,d)}return c}
function I(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ma(Object(c),!0).forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ma(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}
var na="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{};function oa(a,b){return b={exports:{}},a(b,b.exports),b.exports}
var pa=oa(function(a){(function(){function b(a){return new Promise(function(b,c){a.onsuccess=function(){b(a.result)};a.onerror=function(){c(a.error)}})}function c(a,c,d){var e,f=new Promise(function(f,g){e=a[c].apply(a,d);b(e).then(f,g)});f.request=e;return f}function d(a,b,d){var e=c(a,b,d);return e.then(function(a){if(a)return new n(a,e.request)})}function e(a,b,c){c.forEach(function(c){Object.defineProperty(a.prototype,c,{get:function(){return this[b][c]},set:function(a){this[b][c]=a}})})}function f(a,
b,d,e){e.forEach(function(e){e in d.prototype&&(a.prototype[e]=function(){return c(this[b],e,arguments)})})}function g(a,b,c,d){d.forEach(function(d){d in c.prototype&&(a.prototype[d]=function(){return this[b][d].apply(this[b],arguments)})})}function k(a,b,c,e){e.forEach(function(e){e in c.prototype&&(a.prototype[e]=function(){return d(this[b],e,arguments)})})}function l(a){this._index=a}function n(a,b){this._cursor=a;this._request=b}function z(a){this._store=a}function D(a){this._tx=a;this.complete=
new Promise(function(b,c){a.oncomplete=function(){b()};a.onerror=function(){c(a.error)};a.onabort=function(){c(a.error)}})}function x(a,b,c){this._db=a;this.oldVersion=b;this.transaction=new D(c)}function A(a){this._db=a}e(l,"_index",["name","keyPath","multiEntry","unique"]);f(l,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);k(l,"_index",IDBIndex,["openCursor","openKeyCursor"]);e(n,"_cursor",["direction","key","primaryKey","value"]);f(n,"_cursor",IDBCursor,["update","delete"]);
["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(n.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(a){if(a)return new n(a,c._request)})})})});z.prototype.createIndex=function(){return new l(this._store.createIndex.apply(this._store,arguments))};z.prototype.index=function(){return new l(this._store.index.apply(this._store,arguments))};e(z,"_store",["name",
"keyPath","indexNames","autoIncrement"]);f(z,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));k(z,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(z,"_store",IDBObjectStore,["deleteIndex"]);D.prototype.objectStore=function(){return new z(this._tx.objectStore.apply(this._tx,arguments))};e(D,"_tx",["objectStoreNames","mode"]);g(D,"_tx",IDBTransaction,["abort"]);x.prototype.createObjectStore=function(){return new z(this._db.createObjectStore.apply(this._db,
arguments))};e(x,"_db",["name","version","objectStoreNames"]);g(x,"_db",IDBDatabase,["deleteObjectStore","close"]);A.prototype.transaction=function(){return new D(this._db.transaction.apply(this._db,arguments))};e(A,"_db",["name","version","objectStoreNames"]);g(A,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(a){[z,l].forEach(function(b){a in b.prototype&&(b.prototype[a.replace("open","iterate")]=function(){var b=Array.prototype.slice.call(arguments),c=b[b.length-1],
d=this._store||this._index,e=d[a].apply(d,b.slice(0,-1));e.onsuccess=function(){c(e.result)}})})});[l,z].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(a,b){var c=this,d=[];return new Promise(function(e){c.iterateCursor(a,function(a){a?(d.push(a.value),void 0!==b&&d.length==b?e(d):a.continue()):e(d)})})})});a.exports={open:function(a,b,d){a=c(indexedDB,"open",[a,b]);var e=a.request;e&&(e.onupgradeneeded=function(a){d&&d(new x(e.result,a.oldVersion,e.transaction))});return a.then(function(a){return new A(a)})},
delete:function(a){return c(indexedDB,"deleteDatabase",[a])}};a.exports.default=a.exports})()}),qa=oa(function(a){a.exports="undefined"!=typeof indexedDB?pa:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}});let ta=!1;
if("undefined"!==typeof window){let a=qa.open("wasmboy",1,b=>{b.createObjectStore("keyval")});ta={get(b){return a.then(a=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then(a=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then(a=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then(a=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").clear();
return a.complete})},keys(){return a.then(a=>{a=a.transaction("keyval");let b=[],d=a.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,a=>{a&&(b.push(a.key),a.continue())});return a.complete.then(()=>b)})}}}else ta={get:()=>{},set:()=>{},delete:()=>{},clear:()=>{},keys:()=>{}};
let J=ta,L={parse:function(a){let b=L.bin.readUshort,c=L.bin.readUint;var d;let e={};a=new Uint8Array(a);for(d=a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let f=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=c(a,d);for(let g=0;g<f;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let f=c(a,d);d+=4;let g=c(a,d);d+=4;let n=b(a,d),z=b(a,d+2),D=b(a,d+4);d+=6;d+=8;let x=c(a,d);d+=4;d+=n+z+D;L._readLocal(a,x,e,f,g)}return e},_readLocal:function(a,b,c,d,e){var f=L.bin.readUshort,g=L.bin.readUint;g(a,b);b+=4;f(a,b);b+=2;
f(a,b);b+=2;let k=f(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=f(a,b);b+=2;let l=f(a,b);b+=2;f=L.bin.readUTF8(a,b,g);b=b+g+l;a=new Uint8Array(a.buffer,b);if(0==k)c[f]=new Uint8Array(a.buffer.slice(b,b+d));else if(8==k)b=new Uint8Array(e),L.inflateRaw(a,b),c[f]=b;else throw"unknown compression method: "+k;},inflateRaw:function(a,b){return L.F.inflate(a,b)},inflate:function(a,b){return L.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=
0,d=new Uint8Array(50+Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=L.F.deflateRaw(a,d,c+2,b.level);a=L.adler(a,0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+Math.floor(1.1*a.length)),d;d=L.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=L.bin.writeUint,d=L.bin.writeUshort;var e={};for(var f in a){var g=
!L._noNeed(f),k=a[f];let b=L.crc.crc(k,0,k.length);e[f]={cpr:g,usize:k.length,crc:b,file:g?L.deflateRaw(k):k}}for(let a in e)b+=e[a].file.length+30+46+2*L.bin.sizeUTF8(a);a=new Uint8Array(b+22);b=0;f=[];for(var l in e)g=e[l],f.push(b),b=L._writeHeader(a,b,l,g,0);l=0;g=b;for(let c in e)k=e[c],f.push(b),b=L._writeHeader(a,b,c,k,1,f[l++]);e=b-g;c(a,b,101010256);b=b+4+4;d(a,b,l);b+=2;d(a,b,l);b+=2;c(a,b,e);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},
_writeHeader:function(a,b,c,d,e,f){let g=L.bin.writeUint,k=L.bin.writeUshort,l=d.file;g(a,b,0==e?67324752:33639248);b+=4;1==e&&(b+=2);k(a,b,20);b+=2;k(a,b,0);b+=2;k(a,b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,l.length);b+=4;g(a,b,d.usize);b+=4;k(a,b,L.bin.sizeUTF8(c));b+=2;k(a,b,0);b+=2;1==e&&(b=b+2+2+6,g(a,b,f),b+=4);c=L.bin.writeUTF8(a,b,c);b+=c;0==e&&(a.set(l,b),b+=l.length);return b}};var ua;
{let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}ua=a}L.crc={table:ua,update:function(a,b,c,d){for(let e=0;e<d;e++)a=L.crc.table[(a^b[c+e])&255]^a>>>8;return a},crc:function(a,b,c){return L.crc.update(4294967295,a,b,c)^4294967295}};L.adler=function(a,b,c){let d=1,e=0,f=b;for(b+=c;f<b;){for(c=Math.min(f+5552,b);f<c;)d+=a[f++],e+=d;d%=65521;e%=65521}return e<<16|d};
L.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&255},readASCII:function(a,b,c){let d="";for(let e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,
b,c){let d="",e;for(let e=0;e<c;e++)d+="%"+L.bin.pad(a[b+e].toString(16));try{e=decodeURIComponent(d)}catch(f){return L.bin.readASCII(a,b,c)}return e},writeUTF8:function(a,b,c){let d=c.length,e=0;for(let f=0;f<d;f++){let d=c.charCodeAt(f);if(0==(d&4294967168))a[b+e]=d,e++;else if(0==(d&4294965248))a[b+e]=192|d>>6,a[b+e+1]=128|d>>0&63,e+=2;else if(0==(d&4294901760))a[b+e]=224|d>>12,a[b+e+1]=128|d>>6&63,a[b+e+2]=128|d>>0&63,e+=3;else if(0==(d&4292870144))a[b+e]=240|d>>18,a[b+e+1]=128|d>>12&63,a[b+e+
2]=128|d>>6&63,a[b+e+3]=128|d>>0&63,e+=4;else throw"e";}return e},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=4;else throw"e";}return c}};L.F={};
L.F.deflateRaw=function(a,b,c,d){var e=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let f=L.F.U,g=L.F._goodIndex;var k=L.F._putsE;let l=0;c<<=3;let n=0,z=a.length;if(0==d){for(;l<z;)e=Math.min(65535,z-l),k(b,c,l+e==z?1:0),c=L.F._copyExact(a,l,e,b,c+8),l+=e;return c>>>3}k=f.lits;d=f.strt;let D=f.prev,x=0,A=0,t=0,w=0;let v=0;2<z&&(v=L.F._hash(a,0),d[v]=0);for(l=0;l<z;l++){var B=v;if(l+
1<z-2){v=L.F._hash(a,l+1);var p=l+1&32767;D[p]=d[v];d[v]=p}if(n<=l){if(14E3<x||26697<A)n<l&&(k[x]=l-n,x+=2,n=l),c=L.F._writeBlock(l==z-1||n==z?1:0,k,x,w,a,t,l-t,b,c),x=A=w=0,t=l;p=0;l<z-2&&(p=L.F._bestMatch(a,l,D,B,Math.min(e[2],z-l),e[3]));if(0!=p){B=p>>>16;p&=65535;let a=g(B,f.of0);f.lhst[257+a]++;let b=g(p,f.df0);f.dhst[b]++;w+=f.exb[a]+f.dxb[b];k[x]=B<<23|l-n;k[x+1]=p<<16|a<<8|b;x+=2;n=l+B}else f.lhst[a[l]]++;A++}}if(t!=l||0==a.length)n<l&&(k[x]=l-n,x+=2),c=L.F._writeBlock(1,k,x,w,a,t,l-t,b,c);
for(;0!=(c&7);)c++;return c>>>3};L.F._bestMatch=function(a,b,c,d,e,f){var g=b&32767;let k=c[g],l=g-k+32768&32767;if(k==g||d!=L.F._hash(a,b-l))return 0;let n=d=0,z=Math.min(32767,b);for(;l<=z&&0!=--f&&k!=g;){if(0==d||a[b+d]==a[b+d-l])if(g=L.F._howLong(a,b,l),g>d){d=g;n=l;if(d>=e)break;l+2<g&&(g=l+2);let a=0;for(let d=0;d<g-2;d++){let e=b-l+d+32768&32767,f=e-c[e]+32768&32767;f>a&&(a=f,k=e)}}g=k;k=c[g];l+=g-k+32768&32767}return d<<16|n};
L.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,e=Math.min(a.length,b+258);for(b+=3;b<e&&a[b]==a[b-c];)b++;return b-d};L.F._hash=function(a,b){return(a[b]<<8|a[b+1])+(a[b+2]<<4)&65535};L.saved=0;
L.F._writeBlock=function(a,b,c,d,e,f,g,k,l){let n=L.F.U,z=L.F._putsF,D=L.F._putsE;let x,A,t,w;n.lhst[256]++;var v=L.F.getTrees();var B=v[0];x=v[1];A=v[2];t=v[3];w=v[4];var p=v[5];var M=v[6];v=v[7];var H=(0==(l+3&7)?0:8-(l+3&7))+32+(g<<3);let O=d+L.F.contSize(n.fltree,n.lhst)+L.F.contSize(n.fdtree,n.dhst);d=d+L.F.contSize(n.ltree,n.lhst)+L.F.contSize(n.dtree,n.dhst);d+=14+3*p+L.F.contSize(n.itree,n.ihst)+(2*n.ihst[16]+3*n.ihst[17]+7*n.ihst[18]);for(var F=0;286>F;F++)n.lhst[F]=0;for(F=0;30>F;F++)n.dhst[F]=
0;for(F=0;19>F;F++)n.ihst[F]=0;H=H<O&&H<d?0:O<d?1:2;z(k,l,a);z(k,l+1,H);l+=3;if(0==H){for(;0!=(l&7);)l++;l=L.F._copyExact(e,f,g,k,l)}else{let d,F;1==H&&(d=n.fltree,F=n.fdtree);if(2==H){L.F.makeCodes(n.ltree,B);L.F.revCodes(n.ltree,B);L.F.makeCodes(n.dtree,x);L.F.revCodes(n.dtree,x);L.F.makeCodes(n.itree,A);L.F.revCodes(n.itree,A);d=n.ltree;F=n.dtree;D(k,l,t-257);l+=5;D(k,l,w-1);l+=5;D(k,l,p-4);l+=4;for(a=0;a<p;a++)D(k,l+3*a,n.itree[(n.ordr[a]<<1)+1]);l=L.F._codeTiny(M,n.itree,k,l+3*p);l=L.F._codeTiny(v,
n.itree,k,l)}for(p=0;p<c;p+=2){a=b[p];M=a>>>23;for(a=f+(a&8388607);f<a;)l=L.F._writeLit(e[f++],d,k,l);0!=M&&(B=b[p+1],a=B>>16,g=B>>8&255,B&=255,l=L.F._writeLit(257+g,d,k,l),D(k,l,M-n.of0[g]),l+=n.exb[g],l=L.F._writeLit(B,F,k,l),z(k,l,a-n.df0[B]),l+=n.dxb[B],f+=M)}l=L.F._writeLit(256,d,k,l)}return l};L.F._copyExact=function(a,b,c,d,e){let f=e>>>3;d[f]=c;d[f+1]=c>>>8;d[f+2]=255-d[f];d[f+3]=255-d[f+1];f+=4;d.set(new Uint8Array(a.buffer,b,c),f);return e+(c+4<<3)};
L.F.getTrees=function(){let a=L.F.U,b=L.F._hufTree(a.lhst,a.ltree,15),c=L.F._hufTree(a.dhst,a.dtree,15),d=[],e=L.F._lenCodes(a.ltree,d),f=[],g=L.F._lenCodes(a.dtree,f);for(var k=0;k<d.length;k+=2)a.ihst[d[k]]++;for(k=0;k<f.length;k+=2)a.ihst[f[k]]++;k=L.F._hufTree(a.ihst,a.itree,7);let l=19;for(;4<l&&0==a.itree[(a.ordr[l-1]<<1)+1];)l--;return[b,c,k,e,g,l,d,f]};L.F.getSecond=function(a){let b=[];for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};
L.F.nonZero=function(a){let b="";for(let c=0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};L.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};L.F._codeTiny=function(a,b,c,d){for(let e=0;e<a.length;e+=2){let f=a[e],g=a[e+1];d=L.F._writeLit(f,b,c,d);let k=16==f?2:17==f?3:7;15<f&&(L.F._putsE(c,d,g,k),d+=k)}return d};
L.F._lenCodes=function(a,b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let f=0;f<c;f+=2){var d=a[f+1],e=f+3<c?a[f+3]:-1;let g=f+5<c?a[f+5]:-1,k=0==f?-1:a[f-1];if(0==d&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);f+=2*d-2}else if(d==k&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,6);b.push(16,d-3);f+=2*d-2}else b.push(d,0)}return c>>>1};
L.F._hufTree=function(a,b,c){var d=[],e=a.length,f=b.length,g=0;for(g=0;g<f;g+=2)b[g]=0,b[g+1]=0;for(g=0;g<e;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;e=d.slice(0);if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,b){return a.f-b.f});g=d[0];f=d[1];let k=0,l=1,n=2;for(d[0]={lit:-1,f:g.f+f.f,l:g,r:f,d:0};l!=a-1;)g=k!=l&&(n==a||d[k].f<d[n].f)?d[k++]:d[n++],f=k!=l&&(n==a||d[k].f<d[n].f)?d[k++]:d[n++],d[l++]={lit:-1,f:g.f+f.f,l:g,r:f};d=L.F.setDepth(d[l-
1],0);d>c&&(L.F.restrictDepth(e,c,d),d=c);for(g=0;g<a;g++)b[(e[g].lit<<1)+1]=e[g].d;return d};L.F.setDepth=function(a,b){return-1!=a.lit?a.d=b:Math.max(L.F.setDepth(a.l,b+1),L.F.setDepth(a.r,b+1))};L.F.restrictDepth=function(a,b,c){let d=0,e=1<<c-b,f=0;a.sort(function(a,b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;f+=e-(1<<c-g)}else break;for(f>>>=c-b;0<f;)c=a[d].d,c<b?(a[d].d++,f-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>f&&(a[d].d--,f++);0!=f&&console.log("debt left")};
L.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};L.F._writeLit=function(a,b,c,d){L.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};
L.F.inflate=function(a,b){if(3==a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=L.F;let d=c._bitsF,e=c._bitsE,f=c._decodeTiny,g=c.makeCodes,k=c.codes2map,l=c._get17;c=c.U;let n=null==b;n&&(b=new Uint8Array(a.length>>2<<3));let z=0;var D,x;let A=x=D=0;for(var t=0,w;0==z;){z=d(a,t,1);var v=d(a,t+1,2);t+=3;if(0==v)0!=(t&7)&&(t+=8-(t&7)),t=(t>>>3)+4,v=a[t-4]|a[t-3]<<8,n&&(b=L.F._check(b,A+v)),b.set(new Uint8Array(a.buffer,a.byteOffset+t,v),A),t=t+v<<3,A+=v;else{n&&(b=L.F._check(b,A+131072));if(1==v){var B=
c.flmap;w=c.fdmap;D=511;x=31}if(2==v){D=e(a,t,5)+257;x=e(a,t+5,5)+1;B=e(a,t+10,4)+4;t+=14;for(w=0;38>w;w+=2)c.itree[w]=0,c.itree[w+1]=0;v=1;for(w=0;w<B;w++){var p=e(a,t+3*w,3);c.itree[(c.ordr[w]<<1)+1]=p;p>v&&(v=p)}t+=3*B;g(c.itree,v);k(c.itree,v,c.imap);B=c.lmap;w=c.dmap;p=f(c.imap,(1<<v)-1,D,a,t,c.ltree);D=(1<<(p>>>24))-1;t+=p&16777215;g(c.ltree,p>>>24);k(c.ltree,p>>>24,B);v=f(c.imap,(1<<v)-1,x,a,t,c.dtree);x=(1<<(v>>>24))-1;t+=v&16777215;g(c.dtree,v>>>24);k(c.dtree,v>>>24,w)}for(;;)if(v=B[l(a,
t)&D],t+=v&15,p=v>>>4,0==p>>>8)b[A++]=p;else if(256==p)break;else{v=A+p-254;264<p&&(p=c.ldef[p-257],v=A+(p>>>3)+e(a,t,p&7),t+=p&7);p=w[l(a,t)&x];t+=p&15;p=c.ddef[p>>>4];let f=(p>>>4)+d(a,t,p&15);for(t+=p&15;A<v;)b[A]=b[A++-f],b[A]=b[A++-f],b[A]=b[A++-f],b[A]=b[A++-f];A=v}}}return b.length==A?b:b.slice(0,A)};L.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};
L.F._decodeTiny=function(a,b,c,d,e,f){let g=e,k=L.F._bitsE,l=L.F._get17,n=c<<1,z=c=0;for(;c<n;){var D=a[l(d,e)&b];e+=D&15;var x=D>>>4;if(15>=x)f[c]=0,f[c+1]=x,x>z&&(z=x),c+=2;else{let a=D=0;16==x?(a=3+k(d,e,2)<<1,e+=2,D=f[c-1]):17==x?(a=3+k(d,e,3)<<1,e+=3):18==x&&(a=11+k(d,e,7)<<1,e+=7);for(x=c+a;c<x;)f[c]=0,f[c+1]=D,c+=2}}for(a=f.length;c<a;)f[c+1]=0,c+=2;return z<<24|e-g};
L.F.makeCodes=function(a,b){var c=L.F.U;let d=a.length;var e;let f;var g=c.bl_count;for(e=0;e<=b;e++)g[e]=0;for(e=1;e<d;e+=2)g[a[e]]++;c=c.next_code;e=0;g[0]=0;for(f=1;f<=b;f++)e=e+g[f-1]<<1,c[f]=e;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};L.F.codes2map=function(a,b,c){let d=a.length,e=L.F.U.rev15;for(let k=0;k<d;k+=2)if(0!=a[k+1]){var f=a[k+1];let d=k>>1<<4|f;var g=b-f;f=a[k]<<g;for(g=f+(1<<g);f!=g;)c[e[f]>>>15-b]=d,f++}};
L.F.revCodes=function(a,b){let c=L.F.U.rev15,d=15-b;for(let e=0;e<a.length;e+=2)a[e]=c[a[e]<<b-a[e+1]]>>>d};L.F._putsE=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8};L.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>16};L.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};L.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};
L.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};L.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+3]<<24)>>>(b&7)};
L.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,
10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};
{let a=L.F.U;for(let b=0;32768>b;b++){let c=b;c=(c&2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<16)>>>17}for(let b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];let b=0;for(;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);L.F.makeCodes(a.fltree,9);L.F.codes2map(a.fltree,
9,a.flmap);L.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,5);L.F.makeCodes(a.fdtree,5);L.F.codes2map(a.fdtree,5,a.fdmap);L.F.revCodes(a.fdtree,5);for(let b=0;19>b;b++)a.itree.push(0,0);for(let b=0;286>b;b++)a.ltree.push(0,0);for(let b=0;30>b;b++)a.dtree.push(0,0)}
let xa=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return{ROM:a};if("object"===typeof a&&a.size){var c=await va(a);a.name.toLowerCase().endsWith(".zip")&&(c=await wa(c));return{ROM:c,name:a.name}}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then(a=>a.ok?a.arrayBuffer():Promise.reject(a));c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);c.toLowerCase().endsWith(".zip")&&(d=await wa(d));return{ROM:d,name:c}})(),va=async a=>await new Promise(b=>{const c=
new FileReader;c.onload=()=>{const a=new Uint8Array(c.result);b(a)};c.readAsArrayBuffer(a)}),wa=async a=>{const b=await L.parse(a);let c=!1;Object.keys(b).some(a=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")||d.includes(".bin")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c},ya={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};
function Da(){let a=Object.assign({},ya);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&this.saveStateCallback(a);m.runHook({key:"saveState",params:[a]});return a}
function Ea(){if(!this.internalState)return null;let a=Da.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=0;c<b.length;c++)a.wasmboyMemory[b[c]]=Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}
function Fa(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);a=new Uint8Array(b.header);const c=new Uint8Array(b.cartridgeRam);if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}
function Ga(){window.addEventListener("beforeunload",()=>{Ea.bind(this)()},!1);window.addEventListener("unload",()=>{Ea.bind(this)()},!1);window.addEventListener("pagehide",()=>{Ea.bind(this)()},!1);document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&Ea.bind(this)()});return Fa.bind(this)()}
class Ha{constructor(){this.saveStateCallback=this.maxNumberOfAutoSaveStates=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1,BOOT:!1};this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRomFileName=this.cartridgeRom=this.bootRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=
this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0;this.SUPPORTED_BOOT_ROM_TYPES={GB:"GB",GBC:"GBC"}}initialize(a,b,c){this.maxNumberOfAutoSaveStates=b;this.saveStateCallback=c;return(async()=>{await this._initializeConstants();a||await Ga.call(this)})()}setWorker(a){this.worker=a;this.worker.addMessageListener(a=>{a=C(a);switch(a.message.type){case q.UPDATED:{let b=Object.keys(a.message);delete b.type;b.includes(u.BOOT_ROM)&&
(this.bootRom=new Uint8Array(a.message[u.BOOT_ROM]));b.includes(u.CARTRIDGE_ROM)&&(this.cartridgeRom=new Uint8Array(a.message[u.CARTRIDGE_ROM]));b.includes(u.CARTRIDGE_RAM)&&(this.cartridgeRam=new Uint8Array(a.message[u.CARTRIDGE_RAM]));b.includes(u.GAMEBOY_MEMORY)&&(this.gameboyMemory=new Uint8Array(a.message[u.GAMEBOY_MEMORY]));b.includes(u.PALETTE_MEMORY)&&(this.paletteMemory=new Uint8Array(a.message[u.PALETTE_MEMORY]));b.includes(u.INTERNAL_STATE)&&(this.internalState=new Uint8Array(a.message[u.INTERNAL_STATE]))}}})}getSavedMemory(){return(async()=>
{const a=[],b=await J.keys();for(let c=0;c<b.length;c++){const d=await J.get(b[c]);a.push(d)}return a})()}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:q.CLEAR_MEMORY}).then(()=>{this.loadedCartridgeMemoryState.ROM=!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0})}isValidBootROMType(a){return Object.keys(this.SUPPORTED_BOOT_ROM_TYPES).some(b=>
this.SUPPORTED_BOOT_ROM_TYPES[b]===a)}async addBootROM(a,b,c,d){a=a.toUpperCase();if(!this.isValidBootROMType(a))throw Error("Invalid Boot ROM type");b=await xa(b,c);d&&(delete d.name,delete d.ROM);c="Game Boy";this.SUPPORTED_BOOT_ROM_TYPES.GBC===a&&(c="Game Boy Color");d=I({ROM:b.ROM,name:c,type:a,date:Date.now()},d);await J.set("boot-rom-"+a,d)}async getBootROMs(){let a=[];for(let b in this.SUPPORTED_BOOT_ROM_TYPES){let c=await J.get("boot-rom-"+b);c&&a.push(c)}return a}async loadBootROMIfAvailable(a){if(J){a=
a.toUpperCase();if(!this.isValidBootROMType(a))throw Error("Invalid Boot ROM type");if(a=await J.get("boot-rom-"+a)){var b={};b[u.BOOT_ROM]=a.ROM.buffer;await this.worker.postMessage(I({type:q.SET_MEMORY},b)).then(()=>{this.loadedCartridgeMemoryState.BOOT=!0});await this.worker.postMessage({type:q.GET_MEMORY,memoryTypes:[u.BOOT_ROM]}).then(a=>{a=C(a);this.bootRom=new Uint8Array(a.message[u.BOOT_ROM])})}}}loadCartridgeRom(a,b){return(async()=>{const c={};c[u.CARTRIDGE_ROM]=a.buffer;await this.worker.postMessage(I({type:q.SET_MEMORY},
c)).then(()=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:q.GET_MEMORY,memoryTypes:[u.CARTRIDGE_ROM,u.CARTRIDGE_HEADER]}).then(a=>{a=C(a);this.cartridgeRom=new Uint8Array(a.message[u.CARTRIDGE_ROM]);this.cartridgeRomFileName=b;this.cartridgeHeader=new Uint8Array(a.message[u.CARTRIDGE_HEADER])})})()}saveLoadedCartridge(a){return(async()=>{if(!this.cartridgeHeader)throw Error("Error parsing the cartridge header");let b=await J.get(this.cartridgeHeader);b||(b={});const c=
await this.getCartridgeInfo();a&&(delete a.ROM,delete a.header);b.cartridgeRom=I({ROM:this.cartridgeRom,header:this.cartridgeHeader,fileName:this.cartridgeRomFileName||"Unknown",date:Date.now()},a);b.cartridgeInfo=c;this.cartridgeRam&&await this.saveCartridgeRam();await J.set(this.cartridgeHeader,b);return b})()}deleteSavedCartridge(a){return(async()=>{const b=a.cartridgeInfo.header;if(!b)throw Error("Error parsing the cartridge header");let c=await J.get(b);if(!c)throw Error("Could not find the passed cartridge");
delete c.cartridgeRom;await J.set(b,c);return c})()}saveCartridgeRam(a,b){return(async()=>{let c,d;a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let e=await J.get(c);e||(e={});e.cartridgeRam=d;await J.set(c,e)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await J.get(a);b&&b.cartridgeRam&&(a={},a[u.CARTRIDGE_RAM]=b.cartridgeRam.buffer,
await this.worker.postMessage(I({type:q.SET_MEMORY},a)).then(()=>{this.loadedCartridgeMemoryState.RAM=!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=Da.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let e=await J.get(d);e||(e={});e.saveStates||(e.saveStates=[]);if(c.isAuto&&this.maxNumberOfAutoSaveStates&&0<this.maxNumberOfAutoSaveStates){const a=[];e.saveStates.forEach(b=>{b.isAuto&&a.push(b)});for(a.sort((a,
b)=>a.date<b.date?-1:a.date>b.date?1:0);0<a.length&&a.length+1>this.maxNumberOfAutoSaveStates;){var f=a.shift();f=this._indexOfSaveStateIndexInSaveStates(f,e.saveStates);e.saveStates.splice(f,1)}0<this.maxNumberOfAutoSaveStates&&e.saveStates.push(c)}else e.saveStates.push(c);await J.set(d,e);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");if(!a){b=await J.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");
saverState=b.saveStates[0]}b={};b[u.CARTRIDGE_RAM]=a.wasmboyMemory.cartridgeRam.buffer;b[u.GAMEBOY_MEMORY]=a.wasmboyMemory.gameBoyMemory.buffer;b[u.PALETTE_MEMORY]=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b[u.INTERNAL_STATE]=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(I({type:q.SET_MEMORY},b),[b[u.CARTRIDGE_RAM],b[u.GAMEBOY_MEMORY],b[u.PALETTE_MEMORY],b[u.INTERNAL_STATE]]);await this.worker.postMessage({type:q.GET_MEMORY,memoryTypes:[u.CARTRIDGE_RAM,u.GAMEBOY_MEMORY,
u.PALETTE_MEMORY,u.INTERNAL_STATE]}).then(a=>{a=C(a);this.cartridgeRam=a.message[u.CARTRIDGE_RAM];this.gameboyMemory=a.message[u.GAMEBOY_MEMORY];this.paletteMemory=a.message[u.PALETTE_MEMORY];this.internalState=a.message[u.INTERNAL_STATE]})})()}deleteState(a,b){return(async()=>{if(!a)throw Error("You must provide a save state to delete");if(b)var c=b;else this.cartridgeHeader&&(c=this.cartridgeHeader);if(c){var d=await J.get(c);if(d&&d.saveStates){var e=this._indexOfSaveStateIndexInSaveStates(a,d.saveStates);
if(0>e)throw Error("Could not find the passed save state for the related cartridge...");d.saveStates.splice(e,1);await J.set(c,d);return a}throw Error("No save states found for the Cartridge...");}throw Error("Please load a ROM, or pass a Cartridge header...");})()}getCartridgeObject(){return J.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{let a={};a.header=this.cartridgeHeader;a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,
308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:q.GET_CONSTANTS}).then(a=>
{let b=C(a);Object.keys(this).forEach(a=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}_indexOfSaveStateIndexInSaveStates(a,b){let c=b.indexOf(a);0>c&&b.some((b,e)=>JSON.stringify(Object.keys(a))===JSON.stringify(Object.keys(b))&&a.date===b.date&&a.isAuto===b.isAuto?(c=e,!0):!1);return c}}let N=new Ha;
function Ia(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}
let P={DPAD_UP:"DPAD_UP",DPAD_RIGHT:"DPAD_RIGHT",DPAD_DOWN:"DPAD_DOWN",DPAD_LEFT:"DPAD_LEFT",LEFT_ANALOG_HORIZONTAL_AXIS:"LEFT_ANALOG_HORIZONTAL_AXIS",LEFT_ANALOG_VERTICAL_AXIS:"LEFT_ANALOG_VERTICAL_AXIS",LEFT_ANALOG_UP:"LEFT_ANALOG_UP",LEFT_ANALOG_RIGHT:"LEFT_ANALOG_RIGHT",LEFT_ANALOG_DOWN:"LEFT_ANALOG_DOWN",LEFT_ANALOG_LEFT:"LEFT_ANALOG_LEFT",RIGHT_ANALOG_HORIZONTAL_AXIS:"RIGHT_ANALOG_HORIZONTAL_AXIS",RIGHT_ANALOG_VERTICAL_AXIS:"RIGHT_ANALOG_VERTICAL_AXIS",RIGHT_ANALOG_UP:"RIGHT_ANALOG_UP",RIGHT_ANALOG_RIGHT:"RIGHT_ANALOG_RIGHT",
RIGHT_ANALOG_DOWN:"RIGHT_ANALOG_DOWN",RIGHT_ANALOG_LEFT:"RIGHT_ANALOG_LEFT",A:"A",B:"B",X:"X",Y:"Y",LEFT_TRIGGER:"LEFT_TRIGGER",LEFT_BUMPER:"LEFT_BUMPER",RIGHT_TRIGGER:"RIGHT_TRIGGER",RIGHT_BUMPER:"RIGHT_BUMPER",SELECT:"SELECT",START:"START",SPECIAL:"SPECIAL"};class La{constructor(){}enable(){throw Error("enable() must be overridden");}disable(){throw Error("disable() must be overridden");}getState(){throw Error("getState() must be overridden");}}
let Ma="input textarea button select option optgroup label datalist".split(" "),Na=["Alt","Control","Meta","OS"];
class Oa extends La{constructor(){super();this.keymap={};Object.keys(P).forEach(a=>{this.keymap[a]={keys:[],value:void 0}});this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.addEventListener("keyup",this._boundUpdateKeymapValues);window.addEventListener("keydown",this._boundUpdateKeymapValues)}disable(){if("undefined"===
typeof window)throw Error("Keyboard can only be used with a browser environment");window.removeEventListener("keyup",this._boundUpdateKeymapValues);window.removeEventListener("keydown",this._boundUpdateKeymapValues)}getState(){let a=Ia({},P);Object.keys(this.keymap).forEach(b=>{a[b]=this.keymap[b].value});Object.keys(a).forEach(b=>{"string"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=
!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed keyboard keys to input");"string"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return Ma.some(a=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return Na.some(b=>a.getModifierState(b)||
a.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some(b=>this.keymap[b].keys.some(c=>c===a.code?(this.keymap[b].value="keydown"===a.type?!0:!1,!0):!1)))}}
class Pa extends La{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach(a=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some(a=>this._isButtonPressed(c,a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let d=Ia({},P);Object.keys(this.keymap).forEach(a=>{d[a]=this.keymap[a].value});
d[P.LEFT_ANALOG_DOWN]=d.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[P.LEFT_ANALOG_UP]=d.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[P.LEFT_ANALOG_RIGHT]=d.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[P.LEFT_ANALOG_LEFT]=d.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[P.RIGHT_ANALOG_DOWN]=d.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[P.RIGHT_ANALOG_UP]=d.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;
d[P.RIGHT_ANALOG_RIGHT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[P.RIGHT_ANALOG_LEFT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(d).forEach(a=>{"string"===typeof d[a]&&delete d[a]});return d}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed buttons to input");"number"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===
a||!b)throw Error("Could not set the specificed buttons to input");if("number"===typeof axes)throw Error("Must pass in an axis id");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let Qa="touchstart touchmove touchend mousedown mousemove mouseup mouseleave".split(" ");
class Ra{constructor(a){if(!a)throw Error("Touch inputs require an element.");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error("You must supply an element first with add()");
window.addEventListener("resize",this.boundUpdateElementRect);Qa.forEach(a=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error("You must supply an element first with add()");window.removeEventListener("resize",this.boundUpdateElementRect);Qa.forEach(a=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes("touch")||a.touches)){a.preventDefault();var b="touchstart"===a.type||"touchmove"===a.type||"mousedown"===
a.type,c="mousemove"===a.type,d=!b&&!c;this._updateActiveStatus(b,d);this._updateTouchStyles(b,c,d);if(this.onTouchEvent)this.onTouchEvent(a,b,c,d)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect="none"}_removeTouchStyles(){this.element.style.userSelect=""}_updateTouchStyles(a,b){b||(a?this.element.classList.add("active"):this.element.classList.remove("active"))}_updateActiveStatus(a,b){this.active&&b?
this.active=!1:!this.active&&a&&(this.active=!0)}}function Sa(a,b){let c;a.type.includes("touch")?c=a.touches[0]:a.type.includes("mouse")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}
class $a extends Ra{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:d}=Sa(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var e=this.boundingClientRect.width/20,f=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(c,
e),this.setVerticalState(d,f)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-d)?this.setHorizontalState(c,e):this.setVerticalState(d)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}
class ab extends Ra{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform="translate(0px, 0px)";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:d}=Sa(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);d=(d-b)/b;1<d?d=1:-1>d&&(d=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*d/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=
d;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(d)>this.deadzone&&(0<d?this.state.DOWN=!0:0>d&&(this.state.UP=!0))}else this._resetState()}}class bb extends Ra{constructor(a,b){super(a);this.input=b}}let cb={LEFT:"LEFT",RIGHT:"RIGHT"};
class db extends La{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!0;this.dpads.forEach(a=>a.listen());this.leftAnalogs.forEach(a=>a.listen());this.rightAnalogs.forEach(a=>a.listen());this.buttons.forEach(a=>a.listen())}disable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");
this.enabled=!1;this.dpads.forEach(a=>a.stopListening());this.leftAnalogs.forEach(a=>a.stopListening());this.rightAnalogs.forEach(a=>a.stopListening());this.buttons.forEach(a=>a.stopListening())}getState(){let a=Ia({},P);this.buttons.forEach(b=>{a[b.input]=b.active});this.dpads.forEach(b=>{Object.keys(b.state).forEach(c=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,
a.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,
a.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach(b=>{"string"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new bb(a,b);this.enabled&&c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new $a(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,cb.LEFT)}addRightAnalogInput(a){this.addAnalogInput(a,
cb.RIGHT)}addAnalogInput(a,b){let c=new ab(a);this.enabled&&c.listen();if(b===cb.LEFT)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}
class eb{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=P;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new Oa;this.Gamepad=new Pa;this.TouchInput=new db;this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowUp","Numpad8"],P.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyW"],P.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyI"],P.RIGHT_ANALOG_UP);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],P.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowRight",
"Numpad6"],P.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyD"],P.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyL"],P.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],P.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowDown","Numpad5","Numpad2"],P.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyS"],P.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyK"],P.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],
P.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowLeft","Numpad4"],P.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyA"],P.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyJ"],P.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],P.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],P.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],P.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],
P.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],P.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyX","Semicolon","Numpad7"],P.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],P.A);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyZ","Escape","Quote","Backspace","Numpad9"],P.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],P.B);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyC"],P.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],
P.X);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyV"],P.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],P.Y);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyQ"],P.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],P.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyE"],P.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],P.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyU"],P.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],
P.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyO"],P.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],P.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["Enter","Numpad3"],P.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],P.START);this.Keyboard.setKeysToResponsiveGamepadInput(["ShiftRight","ShiftLeft","Tab","Numpad1"],P.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],P.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput(["Space",
"Backslash","Backquote"],P.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],P.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return"1.0.0"}enable(){this.Keyboard.enable();this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&
(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),1)}}getState(){if(!this._enabled)return{};let a=Ia({},P),b=this.Gamepad.getState(),c=this.TouchInput.getState(),d=this.Keyboard.getState();a=Ia({},P);Object.keys(a).forEach(e=>{a[e]=b[e]||c[e]||d[e]});["LEFT","RIGHT"].forEach(b=>
{[P[`${b}_ANALOG_HORIZONTAL_AXIS`],P[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,d)=>{if("number"!==typeof a[c]){if(0===d||2===d)a[c]=a[P[`${b}_ANALOG_RIGHT`]]?1:a[P[`${b}_ANALOG_LEFT`]]?-1:0;if(1===d||3===d)a[c]=a[P[`${b}_ANALOG_UP`]]?-1:a[P[`${b}_ANALOG_DOWN`]]?1:0}})});a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach(b=>{if(void 0===a[b]||"string"===typeof a[b])a[b]=!1});
this.plugins.forEach(b=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){"string"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach(c=>
{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach(c=>{this.inputChangeMap[c].codes.some(a=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}var fb=new eb;function gb(){return{onGetState:a=>{let b=a.B;a.A=a.A||a.X;a.B=b||a.Y;return a}}}
class hb{constructor(){this.worker=void 0;this.isEnabled=!1;this.ResponsiveGamepad=fb;fb.addPlugin(gb())}initialize(){this.isEnabled||this.enableDefaultJoypad();return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};let a=fb.getState();this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessageIgnoreResponse({type:q.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?
1:0]})}enableDefaultJoypad(){this.isEnabled=!0;fb.enable()}disableDefaultJoypad(){this.isEnabled=!1;fb.disable()}}let Q=new hb,ib=0,jb=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);ib++;a=`${a}-${ib}`;1E5<ib&&(ib=0);return a};function kb(a,b,c){b||(b=jb());return{workerId:c,messageId:b,message:a}}
class lb{constructor(a,b){this.id=jb();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));this.worker.onmessage=this._onMessageHandler.bind(this)}postMessageIgnoreResponse(a,b){a=kb(a,void 0,this.id);this.worker.postMessage(a,b)}postMessage(a,
b,c){c||(c=1E3);let d=kb(a,void 0,this.id),e=d.messageId,f=new Promise((b,d)=>{let f=setTimeout(()=>{console.warn("Message dropped",a);this.removeMessageListener(e);d()},c);this.addMessageListener((a,c)=>{a=C(a);a.messageId===e&&(clearTimeout(f),f=void 0,this.removeMessageListener(c.id),b(a))})});this.worker.postMessage(d,b);return f}addMessageListener(a){this.messageListeners.push({id:jb(),callback:a})}removeMessageListener(a){let b;this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==
b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach(b=>{b.callback(a,b)})}}
let mb=async()=>{const a=new lb("data:application/javascript;base64,",ca.LIB),
b=new lb("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWxldCBlPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGYsaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGwsbj1hPT57YT1hLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJHRVRfQ09OU1RBTlRTX0RPTkUiOmgoZihhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJVUERBVEVEIjp7YT1uZXcgVWludDhDbGFtcGVkQXJyYXkoYS5tZXNzYWdlLmdyYXBoaWNzRnJhbWVCdWZmZXIpO2xldCBiPW5ldyBVaW50OENsYW1wZWRBcnJheSg5MjE2MCk7Zm9yKGxldCBjPTA7MTQ0PmM7KytjKXtsZXQgZT00ODAqYyxmPTY0MCpjO2ZvcihsZXQgYz0wOzE2MD5jOysrYyl7bGV0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bShhPT57YT1hLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpsPWEubWVzc2FnZS5wb3J0c1swXTsKbShuLGwpO2goZih2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGYoe3R5cGU6IkdFVF9DT05TVEFOVFMifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpCg==",
ca.GRAPHICS),c=new lb("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWxldCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGYsbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wLHE9YT0+e2E9KGEtMSkvMTI3LTE7LjAwOD5NYXRoLmFicyhhKSYmKGE9MCk7cmV0dXJuIGEvMi41fSxsLHQ9YT0+e2NvbnN0IGI9YS5kYXRhP2EuZGF0YTphO2lmKGIubWVzc2FnZSlzd2l0Y2goYi5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6bShkKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOntjb25zdCBhPXt0eXBlOiJVUERBVEVEIixudW1iZXJPZlNhbXBsZXM6Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcyxmcHM6Yi5tZXNzYWdlLmZwcyxhbGxvd0Zhc3RTcGVlZFN0cmV0Y2hpbmc6Yi5tZXNzYWdlLmFsbG93RmFzdFNwZWVkU3RyZXRjaGluZ30sYz1bXTtbImF1ZGlvQnVmZmVyIiwiY2hhbm5lbDFCdWZmZXIiLCJjaGFubmVsMkJ1ZmZlciIsImNoYW5uZWwzQnVmZmVyIiwiY2hhbm5lbDRCdWZmZXIiXS5mb3JFYWNoKGQ9PntpZihiLm1lc3NhZ2VbZF0pe3t2YXIgZj1uZXcgVWludDhBcnJheShiLm1lc3NhZ2VbZF0pOwp2YXIgZz1iLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzO2NvbnN0IGE9bmV3IEZsb2F0MzJBcnJheShnKTt2YXIgaD1uZXcgRmxvYXQzMkFycmF5KGcpO2xldCBjPTA7Zyo9Mjtmb3IodmFyIGU9MDtlPGc7ZSs9MilhW2NdPXEoZltlXSksYysrO2M9MDtmb3IoZT0xO2U8ZztlKz0yKWhbY109cShmW2VdKSxjKys7Zj1hLmJ1ZmZlcjtoPWguYnVmZmVyfWFbZF09e307YVtkXS5sZWZ0PWY7YVtkXS5yaWdodD1oO2MucHVzaChmKTtjLnB1c2goaCl9fSk7bShkKGEpLGMpfX19O3AoYT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKQo=",
ca.AUDIO),d=new lb("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1sZXQgYz0idW5kZWZpbmVkIiE9PXR5cGVvZiBzZWxmLGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGYsaz1hPT57fTtnKGE9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmY9CmEubWVzc2FnZS5wb3J0c1swXTtnKGssZik7YT1oKHZvaWQgMCxhLm1lc3NhZ2VJZCk7Yz9zZWxmLnBvc3RNZXNzYWdlKGEsdm9pZCAwKTplLnBvc3RNZXNzYWdlKGEsdm9pZCAwKTticmVhaztjYXNlICJTRVRfSk9ZUEFEX1NUQVRFIjpmLnBvc3RNZXNzYWdlKGgoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCkK",
ca.CONTROLLER),e=new lb("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWxldCBkPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGYsaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGYsaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKGE9PnsidHlwZSIhPT1hJiZkLnB1c2goYi5tZXNzYWdlW2FdKX0pO2NvbnN0IGU9YyhiLm1lc3NhZ2UsYi5tZXNzYWdlSWQpO2E/Zi5wb3N0TWVzc2FnZShlLGQpOmcoZSxkKX0sbT1hPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ0xFQVJfTUVNT1JZX0RPTkUiOmcoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpLFthLm1lc3NhZ2Uud2FzbUJ5dGVNZW1vcnldKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTX0RPTkUiOmcoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJTRVRfTUVNT1JZX0RPTkUiOmcoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfTUVNT1JZIjprKCExLGEpO2JyZWFrO2Nhc2UgIlVQREFURUQiOmsoITEsYSl9fTtsKGE9PnthPWEuZGF0YT9hLmRhdGE6CmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCkK",
ca.MEMORY),f=[];[b,c,d,e].forEach(b=>{const c=new MessageChannel,d=new Promise(d=>{let e=0;a.postMessage({type:q.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{e++;2<=e&&d()});b.postMessage({type:q.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{e++;2<=e&&d()})});f.push(d)});await Promise.all(f);E.setWorker(b);G.setWorker(c);Q.setWorker(d);N.setWorker(e);return a};
async function nb(){this.initialized||(this.loadedAndStarted=this.ready=!1,await this._instantiateWorkers(),this.coreType=(await this.worker.postMessage({type:q.INSTANTIATE_WASM})).message.type,await N.initialize(this.options.headless,this.options.maxNumberOfAutoSaveStates,this.options.saveStateCallback),await N.clearMemory(),this.initialized=!0)}
function ob(a,b){let c=async()=>{!this.options.headless&&N.getLoadedCartridgeMemoryState().RAM&&await N.saveCartridgeRam();const c=await xa(a,b);await N.loadCartridgeRom(c.ROM,c.name);this.options.enableBootROMIfAvailable&&((await N.getCartridgeInfo()).CGBFlag?await N.loadBootROMIfAvailable(N.SUPPORTED_BOOT_ROM_TYPES.GBC):await N.loadBootROMIfAvailable(N.SUPPORTED_BOOT_ROM_TYPES.GB));this.loadedROM=a;await this.worker.postMessage({type:q.CONFIG,config:[N.loadedCartridgeMemoryState.BOOT?1:0,this.options.isGbcEnabled?
1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0,this.options.enableAudioDebugging?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,isGbcColorizationEnabled:this.options.isGbcColorizationEnabled,
gbcColorizationPalette:this.options.gbcColorizationPalette,enableAudioDebugging:this.options.enableAudioDebugging,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();await nb.bind(this)();this.options.headless?await c():(await Promise.all([E.initialize(this.canvasElement,this.options.updateGraphicsCallback),G.initialize(this.options.updateAudioCallback),Q.initialize()]),await c(),await N.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady();m.runHook({key:"ready"})})()}
for(var pb=oa(function(a){(function(){if("undefined"!==typeof performance&&null!==performance&&performance.now)a.exports=function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-f)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var e=1E9*process.uptime();var f=d-e}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-
g},g=(new Date).getTime()}).call(na)}),R="undefined"===typeof window?na:window,qb=["moz","webkit"],rb=R.requestAnimationFrame,sb=R.cancelAnimationFrame||R.cancelRequestAnimationFrame,tb=0;!rb&&tb<qb.length;tb++)rb=R[qb[tb]+"RequestAnimationFrame"],sb=R[qb[tb]+"CancelAnimationFrame"]||R[qb[tb]+"CancelRequestAnimationFrame"];
if(!rb||!sb){var ub=0,vb=0,S=[],wb=1E3/60;rb=function(a){if(0===S.length){var b=pb(),c=Math.max(0,wb-(b-ub));ub=c+b;setTimeout(function(){for(var a=S.slice(0),b=S.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(ub)}catch(f){setTimeout(function(){throw f;},0)}},Math.round(c))}S.push({handle:++vb,callback:a,cancelled:!1});return vb};sb=function(a){for(var b=0;b<S.length;b++)S[b].handle===a&&(S[b].cancelled=!0)}}function T(a){return rb.call(R,a)}T.cancel=function(){sb.apply(R,arguments)};
T.polyfill=function(a){a||(a=R);a.requestAnimationFrame=rb;a.cancelAnimationFrame=sb};function xb(){if(this.paused)return!0;let a=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?a=!0:this.frameSkipCounter=0);a||E.renderFrame();Q.updateController();this.renderId=T(()=>{xb.call(this)})}
var yb=oa(function(a){var b=function(a){function c(a,b,d,e){if("undefined"===typeof a)return c[0];if("undefined"!==typeof b){if(10!==+b||d){var h=d||"0123456789abcdefghijklmnopqrstuvwxyz";a=String(a);e||(a=a.toLowerCase(),h=h.toLowerCase());var r=a.length,f=Math.abs(b);d={};for(e=0;e<h.length;e++)d[h[e]]=e;for(e=0;e<r;e++)if(h=a[e],"-"!==h&&h in d&&d[h]>=f&&("1"!==h||1!==f))throw Error(h+" is not a valid digit in base "+b+".");b=y(b);r=[];for(e=(f="-"===a[0])?1:0;e<a.length;e++)if(h=a[e],h in d)r.push(y(d[h]));
else if("<"===h){h=e;do e++;while(">"!==a[e]&&e<a.length);r.push(y(a.slice(h+1,e)))}else throw Error(h+" is not a valid character");b=Ta(r,b,f)}else b=y(a);return b}return y(a)}function e(a,b){this.value=a;this.sign=b;this.isSmall=!1}function f(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){this.value=a}function k(a){return-9007199254740992<a&&9007199254740992>a}function l(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/1E14)]}function n(a){z(a);
var b=a.length;if(4>b&&0>U(a,za))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function z(a){for(var b=a.length;0===a[--b];);a.length=b+1}function D(a){for(var b=Array(a),c=-1;++c<a;)b[c]=0;return b}function x(a){return 0<a?Math.floor(a):Math.ceil(a)}function A(a,b){var c=a.length,h=b.length,d=Array(c),e=0,r;for(r=0;r<h;r++){var f=a[r]+b[r]+e;e=1E7<=f?1:0;d[r]=f-1E7*e}for(;r<c;)f=a[r]+e,e=1E7===f?1:0,d[r++]=f-1E7*e;0<e&&d.push(e);
return d}function t(a,b){return a.length>=b.length?A(a,b):A(b,a)}function w(a,b){var c=a.length,h=Array(c),d;for(d=0;d<c;d++){var e=a[d]-1E7+b;b=Math.floor(e/1E7);h[d]=e-1E7*b;b+=1}for(;0<b;)h[d++]=b%1E7,b=Math.floor(b/1E7);return h}function v(a,b){var c=a.length,h=b.length,d=Array(c),e=0,r;for(r=0;r<h;r++){var f=a[r]-e-b[r];0>f?(f+=1E7,e=1):e=0;d[r]=f}for(r=h;r<c;r++){f=a[r]-e;if(0>f)f+=1E7;else{d[r++]=f;break}d[r]=f}for(;r<c;r++)d[r]=a[r];z(d);return d}function B(a,b,c){var h=a.length,d=Array(h);
b=-b;var r;for(r=0;r<h;r++){var ja=a[r]+b;b=Math.floor(ja/1E7);ja%=1E7;d[r]=0>ja?ja+1E7:ja}d=n(d);return"number"===typeof d?(c&&(d=-d),new f(d)):new e(d,c)}function p(a,b){var c=a.length,h=b.length,d=D(c+h),e;for(e=0;e<c;++e){var r=a[e];for(var f=0;f<h;++f){var g=b[f];g=r*g+d[e+f];var l=Math.floor(g/1E7);d[e+f]=g-1E7*l;d[e+f+1]+=l}}z(d);return d}function M(a,b){var c=a.length,h=Array(c),d=0,e;for(e=0;e<c;e++){var r=a[e]*b+d;d=Math.floor(r/1E7);h[e]=r-1E7*d}for(;0<d;)h[e++]=d%1E7,d=Math.floor(d/1E7);
return h}function H(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function O(a,b){var c=Math.max(a.length,b.length);if(30>=c)return p(a,b);c=Math.ceil(c/2);var h=a.slice(c);a=a.slice(0,c);var d=b.slice(c),e=b.slice(0,c);b=O(a,e);var f=O(h,d);h=O(t(a,h),t(e,d));c=t(t(b,H(v(v(h,b),f),c)),H(f,2*c));z(c);return c}function F(a,b,c){return 1E7>a?new e(M(b,a),c):new e(p(b,l(a)),c)}function Ja(a){var b=a.length,c=D(b+b),d;for(d=0;d<b;d++){var h=a[d];var e=-(h*h);for(var f=d;f<b;f++){var g=a[f];g=
2*h*g+c[d+f]+e;e=Math.floor(g/1E7);c[d+f]=g-1E7*e}c[d+b]=e}z(c);return c}function Ka(a,b){var c=a.length,d=D(c);var h=0;for(--c;0<=c;--c){h=1E7*h+a[c];var e=x(h/b);h-=e*b;d[c]=e|0}return[d,h|0]}function V(a,b){b=y(b);if(ra)return[new g(a.value/b.value),new g(a.value%b.value)];var d=a.value;var h=b.value;if(0===h)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new f(x(d/h)),new f(d%h)]:[c[0],a];if(b.isSmall){if(1===h)return[a,c[0]];if(-1==h)return[a.negate(),c[0]];h=Math.abs(h);
if(1E7>h)return h=Ka(d,h),d=n(h[0]),h=h[1],a.sign&&(h=-h),"number"===typeof d?(a.sign!==b.sign&&(d=-d),[new f(d),new f(h)]):[new e(d,a.sign!==b.sign),new f(h)];h=l(h)}var r=U(d,h);if(-1===r)return[c[0],a];if(0===r)return[c[a.sign===b.sign?1:-1],c[0]];if(200>=d.length+h.length){var k=h,p=d.length;h=k.length;r=D(k.length);var t=k[h-1],A=Math.ceil(1E7/(2*t));d=M(d,A);k=M(k,A);var w,B,F;d.length<=p&&d.push(0);k.push(0);t=k[h-1];for(w=p-h;0<=w;w--){p=9999999;d[w+h]!==t&&(p=Math.floor((1E7*d[w+h]+d[w+h-
1])/t));var H=B=0;var K=k.length;for(F=0;F<K;F++){B+=p*k[F];var O=Math.floor(B/1E7);H+=d[w+F]-(B-1E7*O);B=O;0>H?(d[w+F]=H+1E7,H=-1):(d[w+F]=H,H=0)}for(;0!==H;){--p;for(F=B=0;F<K;F++)B+=d[w+F]-1E7+k[F],0>B?(d[w+F]=B+1E7,B=0):(d[w+F]=B,B=1);H+=B}r[w]=p}d=Ka(d,A)[0];h=[n(r),n(d)]}else{r=d.length;t=h.length;A=[];for(k=[];r;)if(k.unshift(d[--r]),z(k),0>U(k,h))A.push(0);else{p=k.length;w=1E7*k[p-1]+k[p-2];B=1E7*h[t-1]+h[t-2];p>t&&(w=1E7*(w+1));p=Math.ceil(w/B);do{w=M(h,p);if(0>=U(w,k))break;p--}while(p);
A.push(p);k=v(k,w)}A.reverse();h=[n(A),n(k)]}d=h[0];b=a.sign!==b.sign;h=h[1];a=a.sign;"number"===typeof d?(b&&(d=-d),d=new f(d)):d=new e(d,b);"number"===typeof h?(a&&(h=-h),h=new f(h)):h=new e(h,a);return[d,h]}function U(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function Ua(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;
if(a.lesser(49))return!0}function Aa(a,c){for(var d=a.prev(),h=d,e=0,f,r,g;h.isEven();)h=h.divide(2),e++;r=0;a:for(;r<c.length;r++)if(!a.lesser(c[r])&&(g=b(c[r]).modPow(h,a),!g.isUnit()&&!g.equals(d))){for(f=e-1;0!=f;f--){g=g.square().mod(a);if(g.isUnit())break;if(g.equals(d))continue a}return!1}return!0}function Ba(a,c,d){c=y(c);var h=a.isNegative(),e=c.isNegative();a=h?a.not():a;var f=e?c.not():c;for(c=[];!a.isZero()||!f.isZero();){a=V(a,W);var r=a[1].toJSNumber();h&&(r=W-1-r);f=V(f,W);var g=f[1].toJSNumber();
e&&(g=W-1-g);a=a[0];f=f[0];c.push(d(r,g))}d=0!==d(h?1:0,e?1:0)?b(-1):b(0);for(h=c.length-1;0<=h;--h)d=d.multiply(W).add(b(c[h]));return d}function sa(a){a=a.value;a="number"===typeof a?a|1073741824:"bigint"===typeof a?a|BigInt(1073741824):a[0]+1E7*a[1]|1073758208;return a&-a}function Va(a,c){if(0>=c.compareTo(a)){var d=Va(a,c.square(c)),h=d.p;d=d.e;c=h.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:h,e:2*d}}return{p:b(1),e:0}}function Wa(a,b){a=y(a);b=y(b);return a.greater(b)?a:b}function Ca(a,
b){a=y(a);b=y(b);return a.lesser(b)?a:b}function Xa(a,b){a=y(a).abs();b=y(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d=c[1],h;a.isEven()&&b.isEven();)h=Ca(sa(a),sa(b)),a=a.divide(h),b=b.divide(h),d=d.multiply(h);for(;a.isEven();)a=a.divide(sa(a));do{for(;b.isEven();)b=b.divide(sa(b));a.greater(b)&&(h=b,b=a,a=h);b=b.subtract(a)}while(!b.isZero());return d.isUnit()?a:a.multiply(d)}function Ta(a,b,d){var h=c[0],e=c[1],f;for(f=a.length-1;0<=f;f--)h=h.add(a[f].times(e)),
e=e.times(b);return d?h.negate():h}function ka(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-a.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};c=Array.apply(null,Array(a.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],
c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.isUnit())return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(a.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:d};for(var h=[],e;a.isNegative()||0<=a.compareAbs(c);)e=a.divmod(c),a=e.quotient,e=e.remainder,e.isNegative()&&(e=c.minus(e).abs(),a=a.next()),h.push(e.toJSNumber());h.push(a.toJSNumber());return{value:h.reverse(),isNegative:d}}function Ya(a,b,c){a=ka(a,b);return(a.isNegative?
"-":"")+a.value.map(function(a){var b=c;b=b||"0123456789abcdefghijklmnopqrstuvwxyz";a=a<b.length?b[a]:"<"+a+">";return a}).join("")}function Za(a){if(k(+a)){var b=+a;if(b===x(b))return ra?new g(BigInt(b)):new f(b);throw Error("Invalid integer: "+a);}(b="-"===a[0])&&(a=a.slice(1));var c=a.split(/e/i);if(2<c.length)throw Error("Invalid integer: "+c.join("e"));if(2===c.length){a=c[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==x(a)||!k(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");c=c[0];
var d=c.indexOf(".");0<=d&&(a-=c.length-d-1,c=c.slice(0,d)+c.slice(d+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=c+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);if(ra)return new g(BigInt(b?"-"+a:a));c=[];d=a.length;for(var h=d-7;0<d;)c.push(+a.slice(h,d)),h-=7,0>h&&(h=0),d-=7;z(c);return new e(c,b)}function y(a){if("number"===typeof a){if(ra)a=new g(BigInt(a));else if(k(a)){if(a!==x(a))throw Error(a+" is not an integer.");
a=new f(a)}else a=Za(a.toString());return a}return"string"===typeof a?Za(a):"bigint"===typeof a?new g(a):a}var za=l(9007199254740992),ra="function"===typeof BigInt;e.prototype=Object.create(c.prototype);f.prototype=Object.create(c.prototype);g.prototype=Object.create(c.prototype);e.prototype.add=function(a){a=y(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,c=a.value;return a.isSmall?new e(w(b,Math.abs(c)),this.sign):new e(t(b,c),this.sign)};e.prototype.plus=e.prototype.add;
f.prototype.add=function(a){a=y(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var c=a.value;if(a.isSmall){if(k(b+c))return new f(b+c);c=l(Math.abs(c))}return new e(w(c,Math.abs(b)),0>b)};f.prototype.plus=f.prototype.add;g.prototype.add=function(a){return new g(this.value+y(a).value)};g.prototype.plus=g.prototype.add;e.prototype.subtract=function(a){var b=y(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var c=b.value;if(b.isSmall)return B(a,Math.abs(c),this.sign);
b=this.sign;0<=U(a,c)?a=v(a,c):(a=v(c,a),b=!b);a=n(a);"number"===typeof a?(b&&(a=-a),a=new f(a)):a=new e(a,b);return a};e.prototype.minus=e.prototype.subtract;f.prototype.subtract=function(a){a=y(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?new f(b-c):B(c,Math.abs(b),0<=b)};f.prototype.minus=f.prototype.subtract;g.prototype.subtract=function(a){return new g(this.value-y(a).value)};g.prototype.minus=g.prototype.subtract;e.prototype.negate=function(){return new e(this.value,
!this.sign)};f.prototype.negate=function(){var a=this.sign,b=new f(-this.value);b.sign=!a;return b};g.prototype.negate=function(){return new g(-this.value)};e.prototype.abs=function(){return new e(this.value,!1)};f.prototype.abs=function(){return new f(Math.abs(this.value))};g.prototype.abs=function(){return new g(0<=this.value?this.value:-this.value)};e.prototype.multiply=function(a){var b=y(a);a=this.value;var d=b.value,h=this.sign!==b.sign;if(b.isSmall){if(0===d)return c[0];if(1===d)return this;
if(-1===d)return this.negate();d=Math.abs(d);if(1E7>d)return new e(M(a,d),h);d=l(d)}b=a.length;var f=d.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new e(O(a,d),h):new e(p(a,d),h)};e.prototype.times=e.prototype.multiply;f.prototype._multiplyBySmall=function(a){return k(a.value*this.value)?new f(a.value*this.value):F(Math.abs(a.value),l(Math.abs(this.value)),this.sign!==a.sign)};e.prototype._multiplyBySmall=function(a){return 0===a.value?c[0]:1===a.value?this:-1===a.value?this.negate():F(Math.abs(a.value),
this.value,this.sign!==a.sign)};f.prototype.multiply=function(a){return y(a)._multiplyBySmall(this)};f.prototype.times=f.prototype.multiply;g.prototype.multiply=function(a){return new g(this.value*y(a).value)};g.prototype.times=g.prototype.multiply;e.prototype.square=function(){return new e(Ja(this.value),!1)};f.prototype.square=function(){var a=this.value*this.value;return k(a)?new f(a):new e(Ja(l(Math.abs(this.value))),!1)};g.prototype.square=function(){return new g(this.value*this.value)};e.prototype.divmod=
function(a){a=V(this,a);return{quotient:a[0],remainder:a[1]}};g.prototype.divmod=f.prototype.divmod=e.prototype.divmod;e.prototype.divide=function(a){return V(this,a)[0]};g.prototype.over=g.prototype.divide=function(a){return new g(this.value/y(a).value)};f.prototype.over=f.prototype.divide=e.prototype.over=e.prototype.divide;e.prototype.mod=function(a){return V(this,a)[1]};g.prototype.mod=g.prototype.remainder=function(a){return new g(this.value%y(a).value)};f.prototype.remainder=f.prototype.mod=
e.prototype.remainder=e.prototype.mod;e.prototype.pow=function(a){var b=y(a),d=this.value;a=b.value;var e;if(0===a)return c[1];if(0===d)return c[0];if(1===d)return c[1];if(-1===d)return b.isEven()?c[1]:c[-1];if(b.sign)return c[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");if(this.isSmall&&k(e=Math.pow(d,a)))return new f(x(e));e=this;for(b=c[1];;){a&1&&(b=b.times(e),--a);if(0===a)break;a/=2;e=e.square()}return b};f.prototype.pow=e.prototype.pow;g.prototype.pow=function(a){var b=
y(a),d=this.value;a=b.value;var e=BigInt(0),f=BigInt(1),h=BigInt(2);if(a===e)return c[1];if(d===e)return c[0];if(d===f)return c[1];if(d===BigInt(-1))return b.isEven()?c[1]:c[-1];if(b.isNegative())return new g(e);b=this;for(d=c[1];;){(a&f)===f&&(d=d.times(b),--a);if(a===e)break;a/=h;b=b.square()}return d};e.prototype.modPow=function(a,b){a=y(a);b=y(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");var d=c[1],e=this.mod(b);a.isNegative()&&(a=a.multiply(c[-1]),e=e.modInv(b));for(;a.isPositive();){if(e.isZero())return c[0];
a.isOdd()&&(d=d.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return d};g.prototype.modPow=f.prototype.modPow=e.prototype.modPow;e.prototype.compareAbs=function(a){a=y(a);return a.isSmall?1:U(this.value,a.value)};f.prototype.compareAbs=function(a){a=y(a);var b=Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};g.prototype.compareAbs=function(a){var b=this.value;a=y(a).value;b=0<=b?b:-b;a=0<=a?a:-a;return b===a?0:b>a?1:-1};e.prototype.compare=function(a){if(Infinity===
a)return-1;if(-Infinity===a)return 1;a=y(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:U(this.value,a.value)*(this.sign?-1:1)};e.prototype.compareTo=e.prototype.compare;f.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=y(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==a.sign?0>b?-1:1:0>b?1:-1};f.prototype.compareTo=f.prototype.compare;g.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;var b=
this.value;a=y(a).value;return b===a?0:b>a?1:-1};g.prototype.compareTo=g.prototype.compare;e.prototype.equals=function(a){return 0===this.compare(a)};g.prototype.eq=g.prototype.equals=f.prototype.eq=f.prototype.equals=e.prototype.eq=e.prototype.equals;e.prototype.notEquals=function(a){return 0!==this.compare(a)};g.prototype.neq=g.prototype.notEquals=f.prototype.neq=f.prototype.notEquals=e.prototype.neq=e.prototype.notEquals;e.prototype.greater=function(a){return 0<this.compare(a)};g.prototype.gt=
g.prototype.greater=f.prototype.gt=f.prototype.greater=e.prototype.gt=e.prototype.greater;e.prototype.lesser=function(a){return 0>this.compare(a)};g.prototype.lt=g.prototype.lesser=f.prototype.lt=f.prototype.lesser=e.prototype.lt=e.prototype.lesser;e.prototype.greaterOrEquals=function(a){return 0<=this.compare(a)};g.prototype.geq=g.prototype.greaterOrEquals=f.prototype.geq=f.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals;e.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};
g.prototype.leq=g.prototype.lesserOrEquals=f.prototype.leq=f.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals;e.prototype.isEven=function(){return 0===(this.value[0]&1)};f.prototype.isEven=function(){return 0===(this.value&1)};g.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};e.prototype.isOdd=function(){return 1===(this.value[0]&1)};f.prototype.isOdd=function(){return 1===(this.value&1)};g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};
e.prototype.isPositive=function(){return!this.sign};f.prototype.isPositive=function(){return 0<this.value};g.prototype.isPositive=f.prototype.isPositive;e.prototype.isNegative=function(){return this.sign};f.prototype.isNegative=function(){return 0>this.value};g.prototype.isNegative=f.prototype.isNegative;e.prototype.isUnit=function(){return!1};f.prototype.isUnit=function(){return 1===Math.abs(this.value)};g.prototype.isUnit=function(){return this.abs().value===BigInt(1)};e.prototype.isZero=function(){return!1};
f.prototype.isZero=function(){return 0===this.value};g.prototype.isZero=function(){return this.value===BigInt(0)};e.prototype.isDivisibleBy=function(a){a=y(a);return a.isZero()?!1:a.isUnit()?!0:0===a.compareAbs(2)?this.isEven():this.mod(a).isZero()};g.prototype.isDivisibleBy=f.prototype.isDivisibleBy=e.prototype.isDivisibleBy;e.prototype.isPrime=function(c){var d=Ua(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return Aa(d,[2,3,5,7,11,13,17,19,23,29,31,37]);e=Math.log(2)*e.toJSNumber();
c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return Aa(d,e)};g.prototype.isPrime=f.prototype.isPrime=e.prototype.isPrime;e.prototype.isProbablePrime=function(c,d){var e=Ua(this);if(e!==a)return e;e=this.abs();c=c===a?5:c;for(var f=[],g=0;g<c;g++)f.push(b.randBetween(2,e.minus(2),d));return Aa(e,f)};g.prototype.isProbablePrime=f.prototype.isProbablePrime=e.prototype.isProbablePrime;e.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=y(a),f=this.abs(),g,h,k;!f.isZero();)g=
e.divide(f),h=c,k=e,c=d,e=f,d=h.subtract(g.multiply(d)),f=k.subtract(g.multiply(f));if(!e.isUnit())throw Error(this.toString()+" and "+a.toString()+" are not co-prime");-1===c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};g.prototype.modInv=f.prototype.modInv=e.prototype.modInv;e.prototype.next=function(){var a=this.value;return this.sign?B(a,1,this.sign):new e(w(a,1),this.sign)};f.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new f(a+1):new e(za,!1)};g.prototype.next=
function(){return new g(this.value+BigInt(1))};e.prototype.prev=function(){var a=this.value;return this.sign?new e(w(a,1),!0):B(a,1,this.sign)};f.prototype.prev=function(){var a=this.value;return-9007199254740992<a-1?new f(a-1):new e(za,!0)};g.prototype.prev=function(){return new g(this.value-BigInt(1))};for(var K=[1];1E7>=2*K[K.length-1];)K.push(2*K[K.length-1]);var la=K.length,W=K[la-1];e.prototype.shiftLeft=function(a){a=y(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");
if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=la;)b=b.multiply(W),a-=la-1;return b.multiply(K[a])};g.prototype.shiftLeft=f.prototype.shiftLeft=e.prototype.shiftLeft;e.prototype.shiftRight=function(a){var b;a=y(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftLeft(-a);for(b=this;a>=la;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=V(b,W);b=b[1].isNegative()?b[0].prev():b[0];a-=la-1}b=V(b,K[a]);
return b[1].isNegative()?b[0].prev():b[0]};g.prototype.shiftRight=f.prototype.shiftRight=e.prototype.shiftRight;e.prototype.not=function(){return this.negate().prev()};g.prototype.not=f.prototype.not=e.prototype.not;e.prototype.and=function(a){return Ba(this,a,function(a,b){return a&b})};g.prototype.and=f.prototype.and=e.prototype.and;e.prototype.or=function(a){return Ba(this,a,function(a,b){return a|b})};g.prototype.or=f.prototype.or=e.prototype.or;e.prototype.xor=function(a){return Ba(this,a,function(a,
b){return a^b})};g.prototype.xor=f.prototype.xor=e.prototype.xor;e.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));return 0===a.compareTo(b(0))?b(0):b(Va(a,b(2)).e).add(b(1))};g.prototype.bitLength=f.prototype.bitLength=e.prototype.bitLength;e.prototype.toArray=function(a){return ka(this,a)};f.prototype.toArray=function(a){return ka(this,a)};g.prototype.toArray=function(a){return ka(this,a)};e.prototype.toString=function(b,c){b===a&&(b=10);if(10!==b)return Ya(this,
b,c);b=this.value;c=b.length;for(var d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};f.prototype.toString=function(b,c){b===a&&(b=10);return 10!=b?Ya(this,b,c):String(this.value)};g.prototype.toString=f.prototype.toString;g.prototype.toJSON=e.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()};e.prototype.valueOf=function(){return parseInt(this.toString(),10)};e.prototype.toJSNumber=e.prototype.valueOf;f.prototype.valueOf=function(){return this.value};
f.prototype.toJSNumber=f.prototype.valueOf;g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var X=0;1E3>X;X++)c[X]=y(X),0<X&&(c[-X]=y(-X));c.one=c[1];c.zero=c[0];c.minusOne=c[-1];c.max=Wa;c.min=Ca;c.gcd=Xa;c.lcm=function(a,b){a=y(a).abs();b=y(b).abs();return a.divide(Xa(a,b)).multiply(b)};c.isInstance=function(a){return a instanceof e||a instanceof f||a instanceof g};c.randBetween=function(a,b,d){a=y(a);b=y(b);d=d||Math.random;var e=Ca(a,b);a=Wa(a,b).subtract(e).add(1);
if(a.isSmall)return e.add(Math.floor(d()*a));a=ka(a,1E7).value;b=[];for(var f=!0,g=0;g<a.length;g++){var h=f?a[g]:1E7,k=x(d()*h);b.push(k);k<h&&(f=!1)}return e.add(c.fromArray(b,1E7,!1))};c.fromArray=function(a,b,c){return Ta(a.map(y),y(b||10),c)};return c}();a.hasOwnProperty("exports")&&(a.exports=b)});
let zb=void 0,Z=async(a,b,c)=>{if(Y.worker)return a=await Y.worker.postMessage({type:q.RUN_WASM_EXPORT,export:a,parameters:b},void 0,c),C(a).message.response},Ab=async(a,b)=>{if(Y.worker)return a=await Y.worker.postMessage({type:q.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=C(a),new Uint8Array(a.message.response)},Bb=async a=>{if(Y.worker)return a=await Y.worker.postMessage({type:q.GET_WASM_CONSTANT,constant:a}),C(a).message.response},Cb={};
function Db(a){let b=C(a);if(b.message)switch(Cb[b.message.type]&&Cb[b.message.type].forEach(a=>a(b.message)),b.message.type){case q.UPDATED:this.fps=b.message.fps;break;case q.BREAKPOINT:(async()=>{await this.pause();this.options.breakpointCallback&&this.options.breakpointCallback();m.runHook({key:"breakpoint"})})();break;case q.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let a=await Z("getProgramCounter");var b=await Bb("GAMEBOY_INTERNAL_MEMORY_LOCATION");b=await Ab(b+
a,b+a+1);console.log(`Program Counter: 0x${a.toString(16)}`);console.log(`Opcode: 0x${b[0].toString(16)}`)})()}}let Eb=!1;
class Fb{constructor(){this.canvasElement=this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.initialized=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this.speed=1;this._resetConfig();"undefined"!==typeof window&&(window.addEventListener("beforeunload",function(){Eb=!0}),window.document.addEventListener("visibilitychange",()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||setTimeout(()=>{Eb||this.pause()},0)}))}config(a,b){return(async()=>
{await this.pause();await this.setCanvas(b);!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach(b=>{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=a;await E.initialize(this.canvasElement,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}addBootROM(a,
b,c,d){return N.addBootROM(a,b,c,d)}getBootROMs(){return N.getBootROMs()}loadROM(a,b){return ob.bind(this)(a,b)}play(){return(async()=>{if(this.ready){if(!this.loadedAndStarted){this.loadedAndStarted=!0;if(this.options.onLoadedAndStarted)this.options.onLoadedAndStarted();m.runHook({key:"loadedAndStarted"})}if(this.options.onPlay)this.options.onPlay();m.runHook({key:"play"});this.options.headless||(G.resumeAudioContext(),G.resetTimeStretch());await this.worker.postMessage({type:q.RESET_AUDIO_QUEUE});
this.paused=!1;this.updateId||await this.worker.postMessage({type:q.PLAY});this.renderId||this.options.headless||(this.renderId=T(()=>{xb.call(this)}))}})()}pause(){return(async()=>{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();m.runHook({key:"pause"});T.cancel(this.renderId);this.renderId=!1;this.options.headless||G.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:q.PAUSE});await new Promise(a=>{T(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,
this.canvasElement);if(this.loadedROM)return this.loadROM(this.loadedROM)})()}getSavedMemory(){return N.getSavedMemory()}saveLoadedCartridge(a){return N.saveLoadedCartridge(a)}deleteSavedCartridge(a){return N.deleteSavedCartridge(a)}saveState(){return(async()=>{await this.pause();return await N.saveState()})()}getSaveStates(){return(async()=>{let a=await N.getCartridgeObject();return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await N.loadState(a)})()}deleteState(a){return(async()=>
{await N.deleteState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}getSpeed(){return this.speed}setSpeed(a){0>=a&&(a=.1);(async()=>{this.worker&&(this.speed=a,G.setSpeed(a),await this.worker.postMessageIgnoreResponse({type:q.SET_SPEED,speed:a}));await new Promise(a=>{T(()=>{a()})})})()}isGBC(){return(async()=>{const a=await Y.worker.postMessage({type:q.IS_GBC});return C(a).message.response})()}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=0;this.options={headless:!1,
disablePauseOnHidden:!1,isAudioEnabled:!0,enableAudioDebugging:!1,gameboyFrameRate:60,frameSkip:0,enableBootROMIfAvailable:!0,isGbcEnabled:!0,isGbcColorizationEnabled:!0,gbcColorizationPalette:null,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,maxNumberOfAutoSaveStates:10,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,breakpointCallback:null,onReady:null,
onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await mb(),this.worker.addMessageListener(Db.bind(this)))})()}}let Y=new Fb;
var Gb={name:"wasmboy",description:"Gameboy / Gameboy Color Emulator written for Web Assembly using AssemblyScript. Shell/Debugger in Preact",keywords:"web-assembly webassembly gameboy emulator emulation assemblyscript gameboy-color".split(" "),author:"Aaron Turner",version:"0.6.0",license:"GPL-3.0-or-later",homepage:"https://wasmboy.app",repository:{type:"git",url:"git+https://github.com/torch2424/wasmBoy.git"},bugs:{url:"https://github.com/torch2424/wasmBoy/issues"},main:"dist/wasmboy.wasm.cjs.js",
module:"dist/wasmboy.wasm.esm.js",browser:"dist/wasmboy.wasm.umd.js",iife:"dist/wasmboy.wasm.iife.js",scripts:{prepare:"run-s core:build lib:build",start:'concurrently --kill-others --names "DEBUGGER,CORE,LIB" -c "bgBlue.bold,bgMagenta.bold,bgGreen.bold" "npm run debugger:watch" "npm run core:watch" "npm run lib:watch:wasm"',"start:ts":'concurrently --kill-others --names "DEBUGGER,LIBANDCORETS" -c "bgBlue.bold,bgGreen.bold" "npm run debugger:watch" "npm run lib:watch:ts"',dev:"npm run start",watch:"npm run start",
"dev:ts":"npm run start:ts","watch:ts":"npm run start:ts",build:"run-s core:build lib:build:wasm",deploy:"run-s lib:deploy demo:deploy",prettier:"npm run prettier:lint:fix","prettier:lint":"run-s prettier:lint:message prettier:lint:list","prettier:lint:message":'echo "Listing unlinted files, will show nothing if everything is fine."',"prettier:lint:list":"prettier --config .prettierrc --list-different rollup.*.js preact.config.js demo/**/*.js demo/**/*.css lib/**/*.js core/**/*.ts","prettier:lint:fix":"prettier --config .prettierrc --write rollup.*.js preact.config.js demo/**/*.js demo/**/*.css lib/**/*.js core/**/*.ts",
precommit:"pretty-quick --staged","core:watch":'watch "npm run core:build" core',"core:build":"run-s core:build:asc core:build:dist core:build:done","core:build:asc":"asc core/index.ts -b dist/core/core.untouched.wasm -t dist/core/core.untouched.wat -O3 --converge --sourceMap core/dist/core.untouched.wasm.map --memoryBase 0","core:build:ts":"rollup -c --environment TS","core:build:asc:measure":"npm run core:build:asc -- --measure --noEmit","core:build:ts:measure":"tsc --project core/tsconfig.json --noEmit --extendedDiagnostics",
"core:build:dist":"run-s core:build:dist:mkdir core:build:dist:cp","core:build:dist:mkdir":"mkdir -p build/assets","core:build:dist:cp":"cp dist/core/*.untouched.* build/assets","core:build:done":'echo "Built Core!"',"lib:build":"run-s lib:build:wasm lib:build:ts lib:build:ts:getcoreclosure","lib:watch:wasm":"rollup -c -w --environment WASM","lib:build:wasm":"rollup -c --environment PROD,WASM","lib:watch:ts":"rollup -c -w --environment TS","lib:build:ts":"rollup -c --environment PROD,TS","lib:build:ts:esnext":"rollup -c --environment PROD,TS,ES_NEXT",
"lib:build:ts:getcoreclosure":"rollup -c --environment PROD,TS,GET_CORE_CLOSURE","lib:build:ts:getcoreclosure:closuredebug":"rollup -c --environment PROD,TS,GET_CORE_CLOSURE,CLOSURE_DEBUG","lib:deploy":"run-s core:build lib:build:wasm lib:build:ts lib:deploy:np","lib:deploy:np":"np",test:"npm run test:accuracy","test:accuracy":"run-s build test:accuracy:nobuild","test:accuracy:nobuild":"node --experimental-worker node_modules/mocha/bin/_mocha test/accuracy/accuracy-test.js --exit","test:perf":"npm run test:performance",
"test:performance":"run-s build test:performance:nobuild","test:performance:nobuild":"node --experimental-worker node_modules/mocha/bin/_mocha test/performance/performance-test.js --exit","test:integration":"run-s build test:integration:lib test:integration:headless","test:integration:nobuild":"run-s test:integration:lib test:integration:headless","test:integration:lib":"node --experimental-worker node_modules/mocha/bin/_mocha test/integration/lib-test.js --exit","test:integration:headless":"node --experimental-worker node_modules/mocha/bin/_mocha test/integration/headless-simple.js --timeout 20000 --exit",
"test:core":"run-s build test:core:savestate","test:core:nobuild":"run-s test:core:savestate","test:core:savestate":"node --experimental-worker node_modules/mocha/bin/_mocha test/core/save-state.js --timeout 10000 --exit","debugger:dev":"npm run debugger:watch","debugger:watch":"rollup -c -w --environment DEBUGGER,SERVE","debugger:build":"rollup -c --environment DEBUGGER","debugger:build:skiplib":"rollup -c --environment DEBUGGER,SKIP_LIB","benchmark:build":"rollup -c --environment PROD,TS,BENCHMARK",
"benchmark:build:skiplib":"rollup -c --environment PROD,TS,BENCHMARK,SKIP_LIB","benchmark:dev":"npm run benchmark:watch","benchmark:watch":"rollup -c -w --environment BENCHMARK,SERVE","amp:build":"rollup -c --environment PROD,TS,AMP","amp:build:skiplib":"rollup -c --environment PROD,TS,AMP,SKIP_LIB","amp:dev":"npm run amp:watch","amp:watch":"rollup -c -w --environment AMP,SERVE","iframe:dev":"npm run iframe:watch","iframe:watch":"rollup -c -w --environment IFRAME,SERVE","iframe:serve":"serve build/iframe -p 8080",
"iframe:build":"rollup -c --environment IFRAME","iframe:build:skiplib":"rollup -c --environment IFRAME,SKIP_LIB","demo:build":"run-s core:build lib:build demo:build:apps","demo:build:apps":"run-s debugger:build:skiplib benchmark:build:skiplib amp:build:skiplib iframe:build:skiplib","demo:cname":"echo 'wasmboy.app' > build/CNAME","demo:dist":"cp -r dist/ build/dist","demo:gh-pages":"gh-pages -d build","demo:deploy":"run-s demo:build demo:dist demo:cname demo:gh-pages","wasmerboy:build":"asc demo/wasmerboy/index.ts -b demo/wasmerboy/dist/wasmerboy.wasm -O3 --converge --use abort=wasi_abort --runtime stub --memoryBase 8324096",
"wasmerboy:start":"cd demo/wasmerboy && wapm run wasmerboy --dir=tobutobugirl tobutobugirl/tobutobugirl.gb && cd .."},files:["dist","core","lib","README.md","LICENSE"],dependencies:{"audiobuffer-to-wav":"git+https://github.com/torch2424/audiobuffer-to-wav.git#es-module-rollup",idb:"^2.1.3",raf:"^3.4.0","responsive-gamepad":"1.1.0"},devDependencies:{"@ampproject/rollup-plugin-closure-compiler":"^0.26.0","@babel/core":"^7.1.2","@babel/plugin-proposal-class-properties":"^7.1.0","@babel/plugin-proposal-export-default-from":"^7.2.0",
"@babel/plugin-proposal-object-rest-spread":"^7.0.0","@babel/plugin-transform-react-jsx":"^7.0.0","@phosphor/commands":"^1.6.1","@phosphor/default-theme":"^0.1.0","@phosphor/messaging":"^1.2.2","@phosphor/widgets":"^1.6.0","@rollup/plugin-commonjs":"^11.0.2","@rollup/plugin-node-resolve":"^7.1.1","@wasmer/io-devices-lib-assemblyscript":"^0.1.3","as-wasi":"git+https://github.com/jedisct1/as-wasi.git",assemblyscript:"^0.15.1","babel-plugin-filter-imports":"^2.0.3","babel-preset-env":"^1.6.1","big-integer":"^1.6.38",
"browser-detect":"^0.2.28",bulma:"^0.7.1","chart.js":"^2.7.3","chartjs-plugin-downsample":"^1.0.2",chota:"^0.5.2",concurrently:"^3.5.1","devtools-detect":"^2.2.0","gb-instructions-opcodes":"0.0.4","gh-pages":"^1.1.0","hash-generator":"^0.1.0",husky:"^1.0.0-rc.8","load-script":"^1.0.0","markdown-table":"^1.1.1",microseconds:"^0.1.0",mocha:"^5.0.1","normalize.css":"^8.0.1",np:"^3.1.0","npm-run-all":"^4.1.5","performance-now":"^2.1.0","pngjs-image":"^0.11.7","postcss-import":"^12.0.1",preact:"^8.2.1",
"preact-compat":"^3.17.0","preact-portal":"^1.1.3","preact-virtual-list":"^0.3.1",prettier:"^1.12.1","pretty-quick":"^1.6.0",pubx:"0.0.3","recursive-readdir-sync":"^1.0.6",rollup:"^0.66.1","rollup-plugin-babel":"^4.0.3","rollup-plugin-bundle-size":"^1.0.2","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-copy-glob":"^0.3.1","rollup-plugin-delete":"^0.1.2","rollup-plugin-hash":"^1.3.0","rollup-plugin-json":"^3.1.0","rollup-plugin-livereload":"^1.3.0","rollup-plugin-node-resolve":"^3.4.0","rollup-plugin-postcss":"^1.6.2",
"rollup-plugin-replace":"^2.1.0","rollup-plugin-serve":"^0.6.0","rollup-plugin-svelte":"^5.1.1","rollup-plugin-terser":"^5.2.0","rollup-plugin-typescript":"^1.0.0","rollup-plugin-url":"^2.1.0",serve:"^11.3.2","shared-gb":"git+https://github.com/torch2424/shared-gb-js.git","source-map-loader":"^0.2.4","stats-lite":"^2.2.0",svelte:"^3.19.2",terser:"^4.6.6",traverse:"^0.6.6",tslib:"^1.9.3",typescript:"^3.1.3","uglifyjs-webpack-plugin":"^1.2.3","url-loader":"^1.0.1",valoo:"^2.1.0",watch:"^1.0.2","webpack-dev-server":"^3.11.0"}};
let Hb={config:Y.config.bind(Y),getCoreType:Y.getCoreType.bind(Y),getConfig:Y.getConfig.bind(Y),setCanvas:Y.setCanvas.bind(Y),getCanvas:Y.getCanvas.bind(Y),addBootROM:Y.addBootROM.bind(Y),getBootROMs:Y.getBootROMs.bind(Y),loadROM:Y.loadROM.bind(Y),play:Y.play.bind(Y),pause:Y.pause.bind(Y),reset:Y.reset.bind(Y),addPlugin:m.addPlugin.bind(m),isPlaying:()=>!Y.paused,isPaused:()=>Y.paused,isReady:()=>Y.ready,isLoadedAndStarted:()=>Y.loadedAndStarted,getVersion:()=>Gb.version,getSavedMemory:Y.getSavedMemory.bind(Y),
saveLoadedCartridge:Y.saveLoadedCartridge.bind(Y),deleteSavedCartridge:Y.deleteSavedCartridge.bind(Y),saveState:Y.saveState.bind(Y),getSaveStates:Y.getSaveStates.bind(Y),loadState:Y.loadState.bind(Y),deleteState:Y.deleteState.bind(Y),getFPS:Y.getFPS.bind(Y),setSpeed:Y.setSpeed.bind(Y),isGBC:Y.isGBC.bind(Y),ResponsiveGamepad:Q.ResponsiveGamepad,enableDefaultJoypad:Q.enableDefaultJoypad.bind(Q),disableDefaultJoypad:Q.disableDefaultJoypad.bind(Q),setJoypadState:Q.setJoypadState.bind(Q),resumeAudioContext:G.resumeAudioContext.bind(G),
_getAudioChannels:G.getAudioChannels.bind(G),_getCartridgeInfo:N.getCartridgeInfo.bind(N),_runNumberOfFrames:async a=>{await Y.pause();const b=()=>{zb=T(()=>{zb&&(Y.worker.postMessage({type:q.FORCE_OUTPUT_FRAME}),E.renderFrame(),b())})};b();for(let b=0;b<a;b++)await Z("executeFrame",[]);zb=void 0;Y.worker.postMessage({type:q.FORCE_OUTPUT_FRAME});E.renderFrame()},_runWasmExport:Z,_getWasmMemorySection:Ab,_getWasmConstant:Bb,_getStepsAsString:async a=>{var b=await Z("getStepsPerStepSet");const c=await Z("getStepSets"),
d=await Z("getSteps");b=yb(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)},_getCyclesAsString:async a=>{var b=await Z("getCyclesPerCycleSet");const c=await Z("getCycleSets"),d=await Z("getCycles");b=yb(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};export var WasmBoy=Hb
//# sourceMappingURL=wasmboy.wasm.esm.js.map
