'use strict';var WasmBoy=function(ma){function C(a){return a.data?a.data:a}function na(a,b){b=b||{};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var e=3===b?32:16;if(2===c){var f=a.getChannelData(0);a=a.getChannelData(1);for(var g=f.length+a.length,p=new Float32Array(g),m=0,l=0;m<g;)p[m++]=f[l],p[m++]=a[l],l++;f=p}else f=a.getChannelData(0);p=e/8;m=c*p;a=new ArrayBuffer(44+f.length*p);g=new DataView(a);Y(g,0,"RIFF");g.setUint32(4,36+f.length*p,!0);Y(g,8,"WAVE");Y(g,12,"fmt ");g.setUint32(16,
16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,!0);g.setUint32(28,d*m,!0);g.setUint16(32,m,!0);g.setUint16(34,e,!0);Y(g,36,"data");g.setUint32(40,f.length*p,!0);if(1===b)for(c=44,d=0;d<f.length;d++,c+=2)b=Math.max(-1,Math.min(1,f[d])),g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=44,d=0;d<f.length;d++,c+=4)g.setFloat32(c,f[d],!0);return a}function Y(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}function P(a){for(var b=1;b<arguments.length;b++)if(b%2){var c=
null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}else Object.defineProperties(a,Object.getOwnPropertyDescriptors(arguments[b]));return a}function Z(a,b){return b={exports:{}},a(b,b.exports),b.exports}
function oa(){let a=Object.assign({},Da);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&this.saveStateCallback(a);E.runHook({key:"saveState",params:[a]});return a}function U(){if(!this.internalState)return null;const a=oa.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=0;c<b.length;c++)a.wasmboyMemory[b[c]]=
Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}function Ea(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);a=new Uint8Array(b.header);const c=new Uint8Array(b.cartridgeRam);
if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}function Fa(){window.addEventListener("beforeunload",()=>{U.bind(this)()},!1);window.addEventListener("unload",()=>{U.bind(this)()},!1);window.addEventListener("pagehide",()=>{U.bind(this)()},!1);document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&U.bind(this)()});
return Ea.bind(this)()}function V(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}function pa(a,b){let c;a.type.includes("touch")?c=a.touches[0]:
a.type.includes("mouse")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}function Ga(){return{onGetState:(a)=>{const b=a.B;a.A=a.A||a.X;a.B=b||a.Y;return a}}}function qa(a,b,c){b||(b=ha());return{workerId:c,messageId:b,message:a}}async function Ha(){this.initialized||(this.loadedAndStarted=this.ready=!1,await this._instantiateWorkers(),this.coreType=(await this.worker.postMessage({type:u.INSTANTIATE_WASM})).message.type,await v.initialize(this.options.headless,
this.options.maxNumberOfAutoSaveStates,this.options.saveStateCallback),await v.clearMemory(),this.initialized=!0)}function Ia(a,b){const c=async()=>{!this.options.headless&&v.getLoadedCartridgeMemoryState().RAM&&await v.saveCartridgeRam();const c=await ra(a,b);await v.loadCartridgeRom(c.ROM,c.name);this.options.enableBootROMIfAvailable&&((await v.getCartridgeInfo()).CGBFlag?await v.loadBootROMIfAvailable(v.SUPPORTED_BOOT_ROM_TYPES.GBC):await v.loadBootROMIfAvailable(v.SUPPORTED_BOOT_ROM_TYPES.GB));
this.loadedROM=a;await this.worker.postMessage({type:u.CONFIG,config:[v.loadedCartridgeMemoryState.BOOT?1:0,this.options.isGbcEnabled?1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0,this.options.enableAudioDebugging?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,
headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,isGbcColorizationEnabled:this.options.isGbcColorizationEnabled,gbcColorizationPalette:this.options.gbcColorizationPalette,enableAudioDebugging:this.options.enableAudioDebugging,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();await Ha.bind(this)();this.options.headless?await c():(await Promise.all([L.initialize(this.canvasElement,this.options.updateGraphicsCallback),I.initialize(this.options.updateAudioCallback),
G.initialize()]),await c(),await v.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady();E.runHook({key:"ready"})})()}function sa(){if(this.paused)return!0;let a=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?a=!0:this.frameSkipCounter=0);a||L.renderFrame();G.updateController();this.renderId=D(()=>{sa.call(this)})}function Ja(a){const b=C(a);if(b.message)switch(ta[b.message.type]&&ta[b.message.type].forEach((a)=>a(b.message)),
b.message.type){case u.UPDATED:this.fps=b.message.fps;break;case u.BREAKPOINT:(async()=>{await this.pause();this.options.breakpointCallback&&this.options.breakpointCallback();E.runHook({key:"breakpoint"})})();break;case u.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let a=await J("getProgramCounter");var b=await ua("GAMEBOY_INTERNAL_MEMORY_LOCATION");b=await va(b+a,b+a+1);console.log(`Program Counter: 0x${a.toString(16)}`);console.log(`Opcode: 0x${b[0].toString(16)}`)})()}}
const wa={name:"wasmboy-plugin REQUIRED",graphics:(a)=>{},audio:(a,b,c)=>{},saveState:(a)=>{},canvas:(a,b,c)=>{},breakpoint:()=>{},ready:()=>{},play:()=>{},pause:()=>{},loadedAndStarted:()=>{}};class Ka{constructor(){this.plugins={};this.pluginIdCounter=0}addPlugin(a){if(!a&&"object"!==typeof a)throw Error("Invalid Plugin Object");if(!a.name)throw Error('Added plugin must have a "name" property');const b=this.pluginIdCounter;this.plugins[this.pluginIdCounter]=a;this.pluginIdCounter++;return()=>{this.removePlugin(b)}}removePlugin(a){delete this.plugins[a]}runHook(a){if(!wa[a.key]||
"function"!==typeof wa[a.key])throw Error("No such hook as "+a.key);Object.keys(this.plugins).forEach((b)=>{b=this.plugins[b];if(b[a.key]){let c=void 0;try{c=b[a.key].apply(null,a.params)}catch(d){console.error(`There was an error running the '${a.key}' hook, on the ${b.name} plugin.`),console.error(d)}a.callback&&a.callback(c)}})}}const E=new Ka,u={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",
SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",PLAY:"PLAY",BREAKPOINT:"BREAKPOINT",PAUSE:"PAUSE",UPDATED:"UPDATED",CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",RUN_WASM_EXPORT:"RUN_WASM_EXPORT",GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT",FORCE_OUTPUT_FRAME:"FORCE_OUTPUT_FRAME",SET_SPEED:"SET_SPEED",IS_GBC:"IS_GBC"};
class La{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(this.canvasElement.width,
this.canvasElement.height);this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);E.runHook({key:"canvas",params:[this.canvasElement,this.canvasContext,this.canvasImageData],
callback:(a)=>{a&&(a.canvasElement&&(this.canvasElement=a.canvasElement),a.canvasContext&&(this.canvasContext=a.canvasContext),a.canvasImageData&&(this.canvasImageData=a.canvasImageData))}});this.worker&&await this.worker.postMessage({type:u.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=C(a);switch(a.message.type){case u.UPDATED:this.imageDataArray=new Uint8ClampedArray(a.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){this.imageDataArrayChanged&&
(this.imageDataArrayChanged=!1,this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray),E.runHook({key:"graphics",params:[this.imageDataArray],callback:(a)=>{a&&(this.imageDataArray=a)}}),this.canvasImageData.data.set(this.imageDataArray),this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),this.canvasContext.putImageData(this.canvasImageData,0,0))}}const L=new La;class Q{constructor(a){this.id=a;this.audioPlaytime=this.audioBuffer=this.audioContext=
void 0;this.audioSources=[];this.gainNode=void 0;this.recording=this.libMuted=this.muted=!1;this.recordingAnchor=this.recordingAudioBuffer=this.recordingRightBuffers=this.recordingLeftBuffers=void 0}createAudioContextIfNone(){this.audioContext||"undefined"===typeof window||(this.audioContext=new (window.AudioContext||window.webkitAudioContext),!0===!!this.audioContext&&(this.gainNode=this.audioContext.createGain()))}getCurrentTime(){this.createAudioContextIfNone();if(this.audioContext)return this.audioContext.currentTime}getPlayTime(){return this.audioPlaytime}resumeAudioContext(){this.createAudioContextIfNone();
this.audioContext&&"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}playAudio(a,b,c,d,e){if(this.audioContext){b=new Float32Array(b);c=new Float32Array(c);this.audioBuffer=this.audioContext.createBuffer(2,a,44100);this._setSamplesToAudioBuffer(this.audioBuffer,b,c);this.recording&&(this.recordingLeftBuffers.push(b),this.recordingRightBuffers.push(c));c=this.audioContext.createBufferSource();c.buffer=this.audioBuffer;c.playbackRate.setValueAtTime(d,
this.audioContext.currentTime);var f=c;e&&(e=e(this.audioContext,f,this.id))&&(f=e);E.runHook({key:"audio",params:[this.audioContext,f,this.id],callback:(a)=>{a&&(f.connect(a),f=a)}});this.gainNode&&(f.connect(this.gainNode),f=this.gainNode);f.connect(this.audioContext.destination);e=this.audioContext.currentTime;b=e+.1;this.audioPlaytime=this.audioPlaytime||b;this.audioPlaytime<e&&(this.cancelAllAudio(),this.audioPlaytime=b);c.start(this.audioPlaytime);for(this.audioPlaytime+=a/(44100*d);this.audioSources[this.audioSources.length-
1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:c,playTime:this.audioPlaytime});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();this.audioSources=
[];this.audioPlaytime=this.audioContext.currentTime+.1}}mute(){this.muted||(this._setGain(0),this.muted=!0)}unmute(){this.muted&&(this._setGain(1),this.muted=!1)}hasRecording(){return!!this.recordingAudioBuffer}startRecording(){this.recording||(this.recording=!0,this.recordingLeftBuffers=[],this.recordingRightBuffers=[],this.recordingAudioBuffer=void 0)}stopRecording(){if(this.recording){this.recording=!1;var a=(a)=>{let b=0;a.forEach((a)=>{b+=a.length});const c=new Float32Array(b);let f=0;a.forEach((a)=>
{c.set(a,f);f+=a.length});return c},b=a(this.recordingLeftBuffers);a=a(this.recordingRightBuffers);this.recordingAudioBuffer=this.audioContext.createBuffer(2,b.length,44100);this._setSamplesToAudioBuffer(this.recordingAudioBuffer,b,a);this.recordingRightBuffer=this.recordingLeftBuffer=void 0}}downloadRecordingAsWav(a){if(this.recordingAudioBuffer){this.recordingAnchor||(this.recordingAnchor=document.createElement("a"),document.body.appendChild(this.recordingAnchor),this.recordingAnchor.style="display: none");
var b=na(this.recordingAudioBuffer);b=new window.Blob([new DataView(b)],{type:"audio/wav"});b=window.URL.createObjectURL(b);this.recordingAnchor.href=b;a=a?`${a}.wav`:`wasmboy-${(new Date).toLocaleDateString(void 0,{month:"2-digit",day:"2-digit",year:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})}.wav`;this.recordingAnchor.download=a;this.recordingAnchor.click();window.URL.revokeObjectURL(b)}}getRecordingAsWavBase64EncodedString(){if(this.recordingAudioBuffer){var a=na(this.recordingAudioBuffer);
return`data:audio/wav;base64,${this._arrayBufferToBase64(a)}`}}getRecordingAsAudioBuffer(){return this.recordingAudioBuffer}_libMute(){this._setGain(0);this.libMuted=!0}_libUnmute(){this.libMuted&&(this._setGain(1),this.libMuted=!1)}_setGain(a){this.createAudioContextIfNone();this.gainNode&&this.gainNode.gain.setValueAtTime(a,this.audioContext.currentTime)}_setSamplesToAudioBuffer(a,b,c){a.copyToChannel?(a.copyToChannel(b,0,0),a.copyToChannel(c,1,0)):(a.getChannelData(0).set(b),a.getChannelData(1).set(c))}_arrayBufferToBase64(a){let b=
"";a=new Uint8Array(a);let c=a.byteLength;for(var d=0;d<c;d++)b+=String.fromCharCode(a[d]);return window.btoa(b)}}class Ma{constructor(){this.updateAudioCallback=this.worker=void 0;this.gbChannels={master:new Q("master"),channel1:new Q("channel1"),channel2:new Q("channel2"),channel3:new Q("channel3"),channel4:new Q("channel4")};this._createAudioContextIfNone();"undefined"!==typeof window&&(this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),this.gbChannels.channel3._libMute(),
this.gbChannels.channel4._libMute());this.averageTimeStretchFps=[];this.speed=1;this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION=this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=[];this.speed=1;this._createAudioContextIfNone();this.cancelAllAudio();return this.worker.postMessage({type:u.GET_CONSTANTS})})()}setWorker(a){this.worker=
a;this.worker.addMessageListener((a)=>{a=C(a);switch(a.message.type){case u.UPDATED:{this.playAudio(a.message);a=0;let b=this.gbChannels.master.getCurrentTime(),d=this.gbChannels.master.getPlayTime();b&&0<b&&(a=d-b);this.worker.postMessageIgnoreResponse({type:u.AUDIO_LATENCY,latency:a})}}})}getAudioChannels(){return this.gbChannels}setSpeed(a){this.speed=a;this.cancelAllAudio(!0);this.resetTimeStretch()}resetTimeStretch(){this.averageTimeStretchFps=[]}playAudio(a){var b=a.fps,c=a.allowFastSpeedStretching;
let d=a.numberOfSamples;var e=b||60;const f=Math.abs(b-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);f&&15<=f&&this.resetTimeStretch();this.averageTimeStretchFps.push(b);171<this.averageTimeStretchFps.length&&this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&(e=this.averageTimeStretchFps.reduce((a,b)=>a+b),e=Math.floor(e/this.averageTimeStretchFps.length));b=1;(57>e||c)&&1===this.speed&&(b*=e/60,0>=b&&(b=.01));b*=this.speed;this.gbChannels.master.playAudio(d,
a.audioBuffer.left,a.audioBuffer.right,b,this.updateAudioCallback);for(c=0;4>c;c++)e=c+1,a[`channel${e}Buffer`]&&this.gbChannels[`channel${e}`].playAudio(d,a[`channel${e}Buffer`].left,a[`channel${e}Buffer`].right,b,this.updateAudioCallback);a=!this.gbChannels.channel1.muted&&!this.gbChannels.channel2.muted&&!this.gbChannels.channel3.muted&&!this.gbChannels.channel4.muted;this.gbChannels.master.muted&&a?(this.gbChannels.master.unmute(),this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),
this.gbChannels.channel3._libMute(),this.gbChannels.channel4._libMute()):this.gbChannels.master.muted||a||(this.gbChannels.master.mute(),this.gbChannels.channel1._libUnmute(),this.gbChannels.channel2._libUnmute(),this.gbChannels.channel3._libUnmute(),this.gbChannels.channel4._libUnmute())}resumeAudioContext(){this._applyOnAllChannels("resumeAudioContext")}cancelAllAudio(a){this._applyOnAllChannels("cancelAllAudio",[a])}_createAudioContextIfNone(){this._applyOnAllChannels("createAudioContextIfNone")}_applyOnAllChannels(a,
b){Object.keys(this.gbChannels).forEach((c)=>{this.gbChannels[c][a].apply(this.gbChannels[c],b)})}}const I=new Ma;var xa="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{},Na=Z(function(a){(function(){function b(a){return new Promise(function(b,c){a.onsuccess=function(){b(a.result)};a.onerror=function(){c(a.error)}})}function c(a,c,d){var e,f=new Promise(function(f,g){e=a[c].apply(a,d);b(e).then(f,g)});
f.request=e;return f}function d(a,b,d){var e=c(a,b,d);return e.then(function(a){if(a)return new l(a,e.request)})}function e(a,b,c){c.forEach(function(c){Object.defineProperty(a.prototype,c,{get:function(){return this[b][c]},set:function(a){this[b][c]=a}})})}function f(a,b,d,e){e.forEach(function(e){e in d.prototype&&(a.prototype[e]=function(){return c(this[b],e,arguments)})})}function g(a,b,c,d){d.forEach(function(d){d in c.prototype&&(a.prototype[d]=function(){return this[b][d].apply(this[b],arguments)})})}
function p(a,b,c,e){e.forEach(function(e){e in c.prototype&&(a.prototype[e]=function(){return d(this[b],e,arguments)})})}function m(a){this._index=a}function l(a,b){this._cursor=a;this._request=b}function h(a){this._store=a}function n(a){this._tx=a;this.complete=new Promise(function(b,c){a.oncomplete=function(){b()};a.onerror=function(){c(a.error)};a.onabort=function(){c(a.error)}})}function y(a,b,c){this._db=a;this.oldVersion=b;this.transaction=new n(c)}function z(a){this._db=a}e(m,"_index",["name",
"keyPath","multiEntry","unique"]);f(m,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);p(m,"_index",IDBIndex,["openCursor","openKeyCursor"]);e(l,"_cursor",["direction","key","primaryKey","value"]);f(l,"_cursor",IDBCursor,["update","delete"]);["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(l.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(a){if(a)return new l(a,
c._request)})})})});h.prototype.createIndex=function(){return new m(this._store.createIndex.apply(this._store,arguments))};h.prototype.index=function(){return new m(this._store.index.apply(this._store,arguments))};e(h,"_store",["name","keyPath","indexNames","autoIncrement"]);f(h,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));p(h,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(h,"_store",IDBObjectStore,["deleteIndex"]);n.prototype.objectStore=
function(){return new h(this._tx.objectStore.apply(this._tx,arguments))};e(n,"_tx",["objectStoreNames","mode"]);g(n,"_tx",IDBTransaction,["abort"]);y.prototype.createObjectStore=function(){return new h(this._db.createObjectStore.apply(this._db,arguments))};e(y,"_db",["name","version","objectStoreNames"]);g(y,"_db",IDBDatabase,["deleteObjectStore","close"]);z.prototype.transaction=function(){return new n(this._db.transaction.apply(this._db,arguments))};e(z,"_db",["name","version","objectStoreNames"]);
g(z,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(a){[h,m].forEach(function(b){a in b.prototype&&(b.prototype[a.replace("open","iterate")]=function(){var b=Array.prototype.slice.call(arguments),c=b[b.length-1],d=this._store||this._index,e=d[a].apply(d,b.slice(0,-1));e.onsuccess=function(){c(e.result)}})})});[m,h].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(a,b){var c=this,d=[];return new Promise(function(e){c.iterateCursor(a,function(a){a?(d.push(a.value),
void 0!==b&&d.length==b?e(d):a.continue()):e(d)})})})});a.exports={open:function(a,b,d){a=c(indexedDB,"open",[a,b]);var e=a.request;e&&(e.onupgradeneeded=function(a){d&&d(new y(e.result,a.oldVersion,e.transaction))});return a.then(function(a){return new z(a)})},delete:function(a){return c(indexedDB,"deleteDatabase",[a])}};a.exports.default=a.exports})()}),F=Z(function(a){a.exports="undefined"!=typeof indexedDB?Na:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}}),
M=!1;if("undefined"!==typeof window){const a=F.open("wasmboy",1,(a)=>{a.createObjectStore("keyval")});M={get(b){return a.then((a)=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").clear();
return a.complete})},keys(){return a.then((a)=>{a=a.transaction("keyval");const b=[],d=a.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,(a)=>{a&&(b.push(a.key),a.continue())});return a.complete.then(()=>b)})}}}const w=M;let l={parse:function(a){let b=l.bin.readUshort,c=l.bin.readUint;var d;let e={};a=new Uint8Array(a);for(d=a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let f=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=c(a,d);for(let g=0;g<f;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let f=
c(a,d);d+=4;let g=c(a,d);d+=4;let da=b(a,d),h=b(a,d+2),n=b(a,d+4);d+=6;d+=8;let y=c(a,d);d+=4;d+=da+h+n;l._readLocal(a,y,e,f,g)}return e},_readLocal:function(a,b,c,d,e){var f=l.bin.readUshort,g=l.bin.readUint;g(a,b);b+=4;f(a,b);b+=2;f(a,b);b+=2;let p=f(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=f(a,b);b+=2;let m=f(a,b);b+=2;f=l.bin.readUTF8(a,b,g);b=b+g+m;a=new Uint8Array(a.buffer,b);if(0==p)c[f]=new Uint8Array(a.buffer.slice(b,b+d));else if(8==p)b=new Uint8Array(e),l.inflateRaw(a,b),c[f]=b;else throw"unknown compression method: "+
p;},inflateRaw:function(a,b){return l.F.inflate(a,b)},inflate:function(a,b){return l.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=0,d=new Uint8Array(50+Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=l.F.deflateRaw(a,d,c+2,b.level);a=l.adler(a,0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+
Math.floor(1.1*a.length)),d;d=l.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=l.bin.writeUint,d=l.bin.writeUshort;var e={};for(var f in a){var g=!l._noNeed(f),p=a[f];let b=l.crc.crc(p,0,p.length);e[f]={cpr:g,usize:p.length,crc:b,file:g?l.deflateRaw(p):p}}for(let a in e)b+=e[a].file.length+30+46+2*l.bin.sizeUTF8(a);a=new Uint8Array(b+22);b=0;f=[];for(var m in e)g=e[m],f.push(b),b=l._writeHeader(a,b,m,g,0);m=0;g=b;for(let c in e)p=e[c],f.push(b),b=
l._writeHeader(a,b,c,p,1,f[m++]);e=b-g;c(a,b,101010256);b=b+4+4;d(a,b,m);b+=2;d(a,b,m);b+=2;c(a,b,e);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},_writeHeader:function(a,b,c,d,e,f){let g=l.bin.writeUint,p=l.bin.writeUshort,m=d.file;g(a,b,0==e?67324752:33639248);b+=4;1==e&&(b+=2);p(a,b,20);b+=2;p(a,b,0);b+=2;p(a,b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,m.length);b+=4;g(a,b,d.usize);b+=4;p(a,b,l.bin.sizeUTF8(c));
b+=2;p(a,b,0);b+=2;1==e&&(b=b+2+2+6,g(a,b,f),b+=4);c=l.bin.writeUTF8(a,b,c);b+=c;0==e&&(a.set(m,b),b+=m.length);return b}};l.crc={table:function(){let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}return a}(),update:function(a,b,c,d){for(let e=0;e<d;e++)a=l.crc.table[(a^b[c+e])&255]^a>>>8;return a},crc:function(a,b,c){return l.crc.update(4294967295,a,b,c)^4294967295}};l.adler=function(a,b,c){let d=1,e=0,f=b;for(b+=c;f<b;){for(c=Math.min(f+
5552,b);f<c;)d+=a[f++],e+=d;d%=65521;e%=65521}return e<<16|d};l.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&255},readASCII:function(a,b,c){let d="";for(let e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},
pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,b,c){let d="",e;for(let e=0;e<c;e++)d+="%"+l.bin.pad(a[b+e].toString(16));try{e=decodeURIComponent(d)}catch(f){return l.bin.readASCII(a,b,c)}return e},writeUTF8:function(a,b,c){let d=c.length,e=0;for(let f=0;f<d;f++){let d=c.charCodeAt(f);if(0==(d&4294967168))a[b+e]=d,e++;else if(0==(d&4294965248))a[b+e]=192|d>>6,a[b+e+1]=128|d>>0&63,e+=2;else if(0==(d&4294901760))a[b+e]=224|d>>12,a[b+e+1]=128|d>>6&63,a[b+e+2]=128|d>>0&63,e+=3;else if(0==
(d&4292870144))a[b+e]=240|d>>18,a[b+e+1]=128|d>>12&63,a[b+e+2]=128|d>>6&63,a[b+e+3]=128|d>>0&63,e+=4;else throw"e";}return e},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=4;else throw"e";}return c}};l.F={};l.F.deflateRaw=function(a,b,c,d){var e=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,
32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let f=l.F.U,g=l.F._goodIndex;var p=l.F._putsE;let m=0;c<<=3;let h=0,n=a.length;if(0==d){for(;m<n;)e=Math.min(65535,n-m),p(b,c,m+e==n?1:0),c=l.F._copyExact(a,m,e,b,c+8),m+=e;return c>>>3}p=f.lits;d=f.strt;let u=f.prev,y=0,z=0,q=0,aa=0;let x=0;2<n&&(x=l.F._hash(a,0),d[x]=0);for(m=0;m<n;m++){var B=x;if(m+1<n-2){x=l.F._hash(a,m+1);var t=m+1&32767;u[t]=d[x];d[x]=t}if(h<=m){if(14E3<y||26697<z)h<m&&(p[y]=m-h,y+=2,h=m),c=l.F._writeBlock(m==n-1||h==
n?1:0,p,y,aa,a,q,m-q,b,c),y=z=aa=0,q=m;t=0;m<n-2&&(t=l.F._bestMatch(a,m,u,B,Math.min(e[2],n-m),e[3]));if(0!=t){B=t>>>16;t&=65535;let a=g(B,f.of0);f.lhst[257+a]++;let b=g(t,f.df0);f.dhst[b]++;aa+=f.exb[a]+f.dxb[b];p[y]=B<<23|m-h;p[y+1]=t<<16|a<<8|b;y+=2;h=m+B}else f.lhst[a[m]]++;z++}}if(q!=m||0==a.length)h<m&&(p[y]=m-h,y+=2),c=l.F._writeBlock(1,p,y,aa,a,q,m-q,b,c);for(;0!=(c&7);)c++;return c>>>3};l.F._bestMatch=function(a,b,c,d,e,f){var g=b&32767;let p=c[g],m=g-p+32768&32767;if(p==g||d!=l.F._hash(a,
b-m))return 0;let h=d=0,n=Math.min(32767,b);for(;m<=n&&0!=--f&&p!=g;){if(0==d||a[b+d]==a[b+d-m])if(g=l.F._howLong(a,b,m),g>d){d=g;h=m;if(d>=e)break;m+2<g&&(g=m+2);let a=0;for(let d=0;d<g-2;d++){let e=b-m+d+32768&32767,f=e-c[e]+32768&32767;f>a&&(a=f,p=e)}}g=p;p=c[g];m+=g-p+32768&32767}return d<<16|h};l.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,e=Math.min(a.length,b+258);for(b+=3;b<e&&a[b]==a[b-c];)b++;return b-d};l.F._hash=function(a,b){return(a[b]<<
8|a[b+1])+(a[b+2]<<4)&65535};l.saved=0;l.F._writeBlock=function(a,b,c,d,e,f,g,p,m){let h=l.F.U,n=l.F._putsF,u=l.F._putsE;let y,z,q,aa;h.lhst[256]++;var x=l.F.getTrees();var B=x[0];y=x[1];z=x[2];q=x[3];aa=x[4];var t=x[5];var v=x[6];x=x[7];var w=(0==(m+3&7)?0:8-(m+3&7))+32+(g<<3);let C=d+l.F.contSize(h.fltree,h.lhst)+l.F.contSize(h.fdtree,h.dhst);d=d+l.F.contSize(h.ltree,h.lhst)+l.F.contSize(h.dtree,h.dhst);d+=14+3*t+l.F.contSize(h.itree,h.ihst)+(2*h.ihst[16]+3*h.ihst[17]+7*h.ihst[18]);for(var H=0;286>
H;H++)h.lhst[H]=0;for(H=0;30>H;H++)h.dhst[H]=0;for(H=0;19>H;H++)h.ihst[H]=0;w=w<C&&w<d?0:C<d?1:2;n(p,m,a);n(p,m+1,w);m+=3;if(0==w){for(;0!=(m&7);)m++;m=l.F._copyExact(e,f,g,p,m)}else{let d,da;1==w&&(d=h.fltree,da=h.fdtree);if(2==w){l.F.makeCodes(h.ltree,B);l.F.revCodes(h.ltree,B);l.F.makeCodes(h.dtree,y);l.F.revCodes(h.dtree,y);l.F.makeCodes(h.itree,z);l.F.revCodes(h.itree,z);d=h.ltree;da=h.dtree;u(p,m,q-257);m+=5;u(p,m,aa-1);m+=5;u(p,m,t-4);m+=4;for(a=0;a<t;a++)u(p,m+3*a,h.itree[(h.ordr[a]<<1)+1]);
m=l.F._codeTiny(v,h.itree,p,m+3*t);m=l.F._codeTiny(x,h.itree,p,m)}for(t=0;t<c;t+=2){a=b[t];v=a>>>23;for(a=f+(a&8388607);f<a;)m=l.F._writeLit(e[f++],d,p,m);0!=v&&(B=b[t+1],a=B>>16,g=B>>8&255,B&=255,m=l.F._writeLit(257+g,d,p,m),u(p,m,v-h.of0[g]),m+=h.exb[g],m=l.F._writeLit(B,da,p,m),n(p,m,a-h.df0[B]),m+=h.dxb[B],f+=v)}m=l.F._writeLit(256,d,p,m)}return m};l.F._copyExact=function(a,b,c,d,e){let f=e>>>3;d[f]=c;d[f+1]=c>>>8;d[f+2]=255-d[f];d[f+3]=255-d[f+1];f+=4;d.set(new Uint8Array(a.buffer,b,c),f);return e+
(c+4<<3)};l.F.getTrees=function(){let a=l.F.U,b=l.F._hufTree(a.lhst,a.ltree,15),c=l.F._hufTree(a.dhst,a.dtree,15),d=[],e=l.F._lenCodes(a.ltree,d),f=[],g=l.F._lenCodes(a.dtree,f);for(var p=0;p<d.length;p+=2)a.ihst[d[p]]++;for(p=0;p<f.length;p+=2)a.ihst[f[p]]++;p=l.F._hufTree(a.ihst,a.itree,7);let m=19;for(;4<m&&0==a.itree[(a.ordr[m-1]<<1)+1];)m--;return[b,c,p,e,g,m,d,f]};l.F.getSecond=function(a){let b=[];for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};l.F.nonZero=function(a){let b="";for(let c=
0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};l.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};l.F._codeTiny=function(a,b,c,d){for(let e=0;e<a.length;e+=2){let f=a[e],g=a[e+1];d=l.F._writeLit(f,b,c,d);let p=16==f?2:17==f?3:7;15<f&&(l.F._putsE(c,d,g,p),d+=p)}return d};l.F._lenCodes=function(a,b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let f=0;f<c;f+=2){var d=a[f+1],e=f+3<c?a[f+3]:-1;let g=f+5<c?a[f+5]:-1,l=0==f?-1:a[f-1];if(0==d&&e==d&&g==d){for(e=
f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);f+=2*d-2}else if(d==l&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,6);b.push(16,d-3);f+=2*d-2}else b.push(d,0)}return c>>>1};l.F._hufTree=function(a,b,c){var d=[],e=a.length,f=b.length,g=0;for(g=0;g<f;g+=2)b[g]=0,b[g+1]=0;for(g=0;g<e;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;e=d.slice(0);if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,
b){return a.f-b.f});g=d[0];f=d[1];let p=0,m=1,h=2;for(d[0]={lit:-1,f:g.f+f.f,l:g,r:f,d:0};m!=a-1;)g=p!=m&&(h==a||d[p].f<d[h].f)?d[p++]:d[h++],f=p!=m&&(h==a||d[p].f<d[h].f)?d[p++]:d[h++],d[m++]={lit:-1,f:g.f+f.f,l:g,r:f};d=l.F.setDepth(d[m-1],0);d>c&&(l.F.restrictDepth(e,c,d),d=c);for(g=0;g<a;g++)b[(e[g].lit<<1)+1]=e[g].d;return d};l.F.setDepth=function(a,b){return-1!=a.lit?a.d=b:Math.max(l.F.setDepth(a.l,b+1),l.F.setDepth(a.r,b+1))};l.F.restrictDepth=function(a,b,c){let d=0,e=1<<c-b,f=0;a.sort(function(a,
b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;f+=e-(1<<c-g)}else break;for(f>>>=c-b;0<f;)c=a[d].d,c<b?(a[d].d++,f-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>f&&(a[d].d--,f++);0!=f&&console.log("debt left")};l.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};l.F._writeLit=function(a,b,c,d){l.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};l.F.inflate=function(a,b){if(3==
a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=l.F;let d=c._bitsF,e=c._bitsE,f=c._decodeTiny,g=c.makeCodes,h=c.codes2map,m=c._get17;c=c.U;let n=null==b;n&&(b=new Uint8Array(a.length>>2<<3));let u=0;var v,y;let z=y=v=0;for(var q=0,w;0==u;){u=d(a,q,1);var x=d(a,q+1,2);q+=3;if(0==x)0!=(q&7)&&(q+=8-(q&7)),q=(q>>>3)+4,x=a[q-4]|a[q-3]<<8,n&&(b=l.F._check(b,z+x)),b.set(new Uint8Array(a.buffer,a.byteOffset+q,x),z),q=q+x<<3,z+=x;else{n&&(b=l.F._check(b,z+131072));if(1==x){var B=c.flmap;w=c.fdmap;v=511;y=
31}if(2==x){v=e(a,q,5)+257;y=e(a,q+5,5)+1;B=e(a,q+10,4)+4;q+=14;for(w=0;38>w;w+=2)c.itree[w]=0,c.itree[w+1]=0;x=1;for(w=0;w<B;w++){var t=e(a,q+3*w,3);c.itree[(c.ordr[w]<<1)+1]=t;t>x&&(x=t)}q+=3*B;g(c.itree,x);h(c.itree,x,c.imap);B=c.lmap;w=c.dmap;t=f(c.imap,(1<<x)-1,v,a,q,c.ltree);v=(1<<(t>>>24))-1;q+=t&16777215;g(c.ltree,t>>>24);h(c.ltree,t>>>24,B);x=f(c.imap,(1<<x)-1,y,a,q,c.dtree);y=(1<<(x>>>24))-1;q+=x&16777215;g(c.dtree,x>>>24);h(c.dtree,x>>>24,w)}for(;;)if(x=B[m(a,q)&v],q+=x&15,t=x>>>4,0==t>>>
8)b[z++]=t;else if(256==t)break;else{x=z+t-254;264<t&&(t=c.ldef[t-257],x=z+(t>>>3)+e(a,q,t&7),q+=t&7);t=w[m(a,q)&y];q+=t&15;t=c.ddef[t>>>4];let f=(t>>>4)+d(a,q,t&15);for(q+=t&15;z<x;)b[z]=b[z++-f],b[z]=b[z++-f],b[z]=b[z++-f],b[z]=b[z++-f];z=x}}}return b.length==z?b:b.slice(0,z)};l.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};l.F._decodeTiny=function(a,b,c,d,e,f){let g=e,h=l.F._bitsE,
m=l.F._get17,n=c<<1,u=c=0;for(;c<n;){var w=a[m(d,e)&b];e+=w&15;var y=w>>>4;if(15>=y)f[c]=0,f[c+1]=y,y>u&&(u=y),c+=2;else{let a=w=0;16==y?(a=3+h(d,e,2)<<1,e+=2,w=f[c-1]):17==y?(a=3+h(d,e,3)<<1,e+=3):18==y&&(a=11+h(d,e,7)<<1,e+=7);for(y=c+a;c<y;)f[c]=0,f[c+1]=w,c+=2}}for(a=f.length;c<a;)f[c+1]=0,c+=2;return u<<24|e-g};l.F.makeCodes=function(a,b){var c=l.F.U;let d=a.length;var e;let f;var g=c.bl_count;for(e=0;e<=b;e++)g[e]=0;for(e=1;e<d;e+=2)g[a[e]]++;c=c.next_code;e=0;g[0]=0;for(f=1;f<=b;f++)e=e+g[f-
1]<<1,c[f]=e;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};l.F.codes2map=function(a,b,c){let d=a.length,e=l.F.U.rev15;for(let h=0;h<d;h+=2)if(0!=a[h+1]){var f=a[h+1];let d=h>>1<<4|f;var g=b-f;f=a[h]<<g;for(g=f+(1<<g);f!=g;)c[e[f]>>>15-b]=d,f++}};l.F.revCodes=function(a,b){let c=l.F.U.rev15,d=15-b;for(let e=0;e<a.length;e+=2)a[e]=c[a[e]<<b-a[e+1]]>>>d};l.F._putsE=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8};l.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>
16};l.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};l.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};l.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};l.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+3]<<24)>>>(b&7)};l.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,
10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),
ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};(function(){let a=l.F.U;for(var b=0;32768>b;b++){let c=b;c=(c&2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<
16)>>>17}for(b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];for(b=0;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);l.F.makeCodes(a.fltree,9);l.F.codes2map(a.fltree,9,a.flmap);l.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,5);l.F.makeCodes(a.fdtree,5);l.F.codes2map(a.fdtree,5,a.fdmap);l.F.revCodes(a.fdtree,5);for(b=0;19>b;b++)a.itree.push(0,0);for(b=0;286>b;b++)a.ltree.push(0,
0);for(b=0;30>b;b++)a.dtree.push(0,0)})();const ra=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return{ROM:a};if("object"===typeof a&&a.size){var c=await Oa(a);a.name.toLowerCase().endsWith(".zip")&&(c=await ya(c));return{ROM:c,name:a.name}}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then((a)=>a.ok?a.arrayBuffer():Promise.reject(a));c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);c.toLowerCase().endsWith(".zip")&&(d=await ya(d));return{ROM:d,name:c}})(),
Oa=async(a)=>await new Promise((b,c)=>{const d=new FileReader;d.onload=()=>{const a=new Uint8Array(d.result);b(a)};d.readAsArrayBuffer(a)}),ya=async(a)=>{const b=await l.parse(a);let c=!1;Object.keys(b).some((a)=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")||d.includes(".bin")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c},Da={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};
class Pa{constructor(){this.saveStateCallback=this.maxNumberOfAutoSaveStates=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1,BOOT:!1};this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRomFileName=this.cartridgeRom=this.bootRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=
this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0;this.SUPPORTED_BOOT_ROM_TYPES={GB:"GB",GBC:"GBC"}}initialize(a,b,c){this.maxNumberOfAutoSaveStates=b;this.saveStateCallback=c;return(async()=>{await this._initializeConstants();a||await Fa.call(this)})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=C(a);switch(a.message.type){case u.UPDATED:{const b=Object.keys(a.message);delete b.type;
b.includes("BOOT_ROM")&&(this.bootRom=new Uint8Array(a.message.BOOT_ROM));b.includes("CARTRIDGE_ROM")&&(this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM));b.includes("CARTRIDGE_RAM")&&(this.cartridgeRam=new Uint8Array(a.message.CARTRIDGE_RAM));b.includes("GAMEBOY_MEMORY")&&(this.gameboyMemory=new Uint8Array(a.message.GAMEBOY_MEMORY));b.includes("PALETTE_MEMORY")&&(this.paletteMemory=new Uint8Array(a.message.PALETTE_MEMORY));b.includes("INTERNAL_STATE")&&(this.internalState=new Uint8Array(a.message.INTERNAL_STATE))}}})}getSavedMemory(){return(async()=>
{const a=[],b=await w.keys();for(let c=0;c<b.length;c++){const d=await w.get(b[c]);a.push(d)}return a})()}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:u.CLEAR_MEMORY}).then((a)=>{this.loadedCartridgeMemoryState.ROM=!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0})}isValidBootROMType(a){return Object.keys(this.SUPPORTED_BOOT_ROM_TYPES).some((b)=>
this.SUPPORTED_BOOT_ROM_TYPES[b]===a)}async addBootROM(a,b,c,d){a=a.toUpperCase();if(!this.isValidBootROMType(a))throw Error("Invalid Boot ROM type");b=await ra(b,c);d&&(delete d.name,delete d.ROM);c="Game Boy";this.SUPPORTED_BOOT_ROM_TYPES.GBC===a&&(c="Game Boy Color");d=P({ROM:b.ROM,name:c,type:a,date:Date.now()},d);await w.set("boot-rom-"+a,d)}async getBootROMs(){const a=[];for(let b in this.SUPPORTED_BOOT_ROM_TYPES){const c=await w.get("boot-rom-"+b);c&&a.push(c)}return a}async loadBootROMIfAvailable(a){if(w){a=
a.toUpperCase();if(!this.isValidBootROMType(a))throw Error("Invalid Boot ROM type");if(a=await w.get("boot-rom-"+a)){var b={};b.BOOT_ROM=a.ROM.buffer;await this.worker.postMessage(P({type:u.SET_MEMORY},b)).then((a)=>{this.loadedCartridgeMemoryState.BOOT=!0});await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["BOOT_ROM"]}).then((a)=>{a=C(a);this.bootRom=new Uint8Array(a.message.BOOT_ROM)})}}}loadCartridgeRom(a,b){return(async()=>{const c={};c.CARTRIDGE_ROM=a.buffer;await this.worker.postMessage(P({type:u.SET_MEMORY},
c)).then((a)=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["CARTRIDGE_ROM","CARTRIDGE_HEADER"]}).then((a)=>{a=C(a);this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM);this.cartridgeRomFileName=b;this.cartridgeHeader=new Uint8Array(a.message.CARTRIDGE_HEADER)})})()}saveLoadedCartridge(a){return(async()=>{if(!this.cartridgeHeader)throw Error("Error parsing the cartridge header");let b=await w.get(this.cartridgeHeader);b||(b={});const c=
await this.getCartridgeInfo();a&&(delete a.ROM,delete a.header);b.cartridgeRom=P({ROM:this.cartridgeRom,header:this.cartridgeHeader,fileName:this.cartridgeRomFileName||"Unknown",date:Date.now()},a);b.cartridgeInfo=c;this.cartridgeRam&&await this.saveCartridgeRam();await w.set(this.cartridgeHeader,b);return b})()}deleteSavedCartridge(a){return(async()=>{const b=a.cartridgeInfo.header;if(!b)throw Error("Error parsing the cartridge header");let c=await w.get(b);if(!c)throw Error("Could not find the passed cartridge");
delete c.cartridgeRom;await w.set(b,c);return c})()}saveCartridgeRam(a,b){return(async()=>{let c,d;a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let e=await w.get(c);e||(e={});e.cartridgeRam=d;await w.set(c,e)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await w.get(a);b&&b.cartridgeRam&&(a={},a.CARTRIDGE_RAM=b.cartridgeRam.buffer,
await this.worker.postMessage(P({type:u.SET_MEMORY},a)).then((a)=>{this.loadedCartridgeMemoryState.RAM=!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=oa.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let e=await w.get(d);e||(e={});e.saveStates||(e.saveStates=[]);if(c.isAuto&&this.maxNumberOfAutoSaveStates&&0<this.maxNumberOfAutoSaveStates){const a=[];e.saveStates.forEach((b)=>{b.isAuto&&a.push(b)});for(a.sort((a,
b)=>a.date<b.date?-1:a.date>b.date?1:0);0<a.length&&a.length+1>this.maxNumberOfAutoSaveStates;){var f=a.shift();f=this._indexOfSaveStateIndexInSaveStates(f,e.saveStates);e.saveStates.splice(f,1)}0<this.maxNumberOfAutoSaveStates&&e.saveStates.push(c)}else e.saveStates.push(c);await w.set(d,e);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");if(!a){b=await w.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");
saverState=b.saveStates[0]}b={};b.CARTRIDGE_RAM=a.wasmboyMemory.cartridgeRam.buffer;b.GAMEBOY_MEMORY=a.wasmboyMemory.gameBoyMemory.buffer;b.PALETTE_MEMORY=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b.INTERNAL_STATE=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(P({type:u.SET_MEMORY},b),[b.CARTRIDGE_RAM,b.GAMEBOY_MEMORY,b.PALETTE_MEMORY,b.INTERNAL_STATE]);await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE"]}).then((a)=>
{a=C(a);this.cartridgeRam=a.message.CARTRIDGE_RAM;this.gameboyMemory=a.message.GAMEBOY_MEMORY;this.paletteMemory=a.message.PALETTE_MEMORY;this.internalState=a.message.INTERNAL_STATE})})()}deleteState(a,b){return(async()=>{if(!a)throw Error("You must provide a save state to delete");if(b)var c=b;else this.cartridgeHeader&&(c=this.cartridgeHeader);if(c){var d=await w.get(c);if(d&&d.saveStates){var e=this._indexOfSaveStateIndexInSaveStates(a,d.saveStates);if(0>e)throw Error("Could not find the passed save state for the related cartridge...");
d.saveStates.splice(e,1);await w.set(c,d);return a}throw Error("No save states found for the Cartridge...");}throw Error("Please load a ROM, or pass a Cartridge header...");})()}getCartridgeObject(){return w.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const a={};a.header=this.cartridgeHeader;a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,
a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:u.GET_CONSTANTS}).then((a)=>{const b=
C(a);Object.keys(this).forEach((a)=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}_indexOfSaveStateIndexInSaveStates(a,b){let c=b.indexOf(a);0>c&&b.some((b,e)=>JSON.stringify(Object.keys(a))===JSON.stringify(Object.keys(b))&&a.date===b.date&&a.isAuto===b.isAuto?(c=e,!0):!1);return c}}const v=new Pa;let h={DPAD_UP:"DPAD_UP",DPAD_RIGHT:"DPAD_RIGHT",DPAD_DOWN:"DPAD_DOWN",DPAD_LEFT:"DPAD_LEFT",LEFT_ANALOG_HORIZONTAL_AXIS:"LEFT_ANALOG_HORIZONTAL_AXIS",LEFT_ANALOG_VERTICAL_AXIS:"LEFT_ANALOG_VERTICAL_AXIS",
LEFT_ANALOG_UP:"LEFT_ANALOG_UP",LEFT_ANALOG_RIGHT:"LEFT_ANALOG_RIGHT",LEFT_ANALOG_DOWN:"LEFT_ANALOG_DOWN",LEFT_ANALOG_LEFT:"LEFT_ANALOG_LEFT",RIGHT_ANALOG_HORIZONTAL_AXIS:"RIGHT_ANALOG_HORIZONTAL_AXIS",RIGHT_ANALOG_VERTICAL_AXIS:"RIGHT_ANALOG_VERTICAL_AXIS",RIGHT_ANALOG_UP:"RIGHT_ANALOG_UP",RIGHT_ANALOG_RIGHT:"RIGHT_ANALOG_RIGHT",RIGHT_ANALOG_DOWN:"RIGHT_ANALOG_DOWN",RIGHT_ANALOG_LEFT:"RIGHT_ANALOG_LEFT",A:"A",B:"B",X:"X",Y:"Y",LEFT_TRIGGER:"LEFT_TRIGGER",LEFT_BUMPER:"LEFT_BUMPER",RIGHT_TRIGGER:"RIGHT_TRIGGER",
RIGHT_BUMPER:"RIGHT_BUMPER",SELECT:"SELECT",START:"START",SPECIAL:"SPECIAL"};class ia{constructor(){}enable(){throw Error("enable() must be overridden");}disable(){throw Error("disable() must be overridden");}getState(){throw Error("getState() must be overridden");}}let Qa="input textarea button select option optgroup label datalist".split(" "),Ra=["Alt","Control","Meta","OS"];class Sa extends ia{constructor(){super();this.keymap={};Object.keys(h).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});
this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.addEventListener("keyup",this._boundUpdateKeymapValues);window.addEventListener("keydown",this._boundUpdateKeymapValues)}disable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.removeEventListener("keyup",
this._boundUpdateKeymapValues);window.removeEventListener("keydown",this._boundUpdateKeymapValues)}getState(){let a=V({},h);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{"string"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=
!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed keyboard keys to input");"string"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return Qa.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return Ra.some((b)=>a.getModifierState(b)||a.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&
this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value="keydown"===a.type?!0:!1,!0):!1)))}}class Ta extends ia{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,
a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let d=V({},h);Object.keys(this.keymap).forEach((a)=>{d[a]=this.keymap[a].value});d[h.LEFT_ANALOG_DOWN]=d.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_UP]=d.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_RIGHT]=d.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_LEFT]=d.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;
d[h.RIGHT_ANALOG_DOWN]=d.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_UP]=d.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_RIGHT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_LEFT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(d).forEach((a)=>{"string"===typeof d[a]&&delete d[a]});return d}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed buttons to input");
"number"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===a||!b)throw Error("Could not set the specificed buttons to input");if("number"===typeof axes)throw Error("Must pass in an axis id");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let za="touchstart touchmove touchend mousedown mousemove mouseup mouseleave".split(" ");
class ja{constructor(a){if(!a)throw Error("Touch inputs require an element.");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error("You must supply an element first with add()");
window.addEventListener("resize",this.boundUpdateElementRect);za.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error("You must supply an element first with add()");window.removeEventListener("resize",this.boundUpdateElementRect);za.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes("touch")||a.touches)){a.preventDefault();var b="touchstart"===a.type||"touchmove"===a.type||"mousedown"===
a.type,c="mousemove"===a.type,d=!b&&!c;this._updateActiveStatus(b,d);this._updateTouchStyles(b,c,d);if(this.onTouchEvent)this.onTouchEvent(a,b,c,d)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect="none"}_removeTouchStyles(){this.element.style.userSelect=""}_updateTouchStyles(a,b){b||(a?this.element.classList.add("active"):this.element.classList.remove("active"))}_updateActiveStatus(a,b){this.active&&b?
this.active=!1:!this.active&&a&&(this.active=!0)}}class Ua extends ja{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:d}=pa(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var e=this.boundingClientRect.width/20,f=this.boundingClientRect.height/20;this.config.allowMultipleDirections?
(this.setHorizontalState(c,e),this.setVerticalState(d,f)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-d)?this.setHorizontalState(c,e):this.setVerticalState(d)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=
!0)}}class Va extends ja{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform="translate(0px, 0px)";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:d}=pa(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);d=(d-b)/b;1<d?d=1:-1>d&&(d=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*d/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=
d;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(d)>this.deadzone&&(0<d?this.state.DOWN=!0:0>d&&(this.state.UP=!0))}else this._resetState()}}class Wa extends ja{constructor(a,b){super(a);this.input=b}}class Xa extends ia{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");
this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=
V({},h);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,a.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);
0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,a.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{"string"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new Wa(a,b);this.enabled&&
c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new Ua(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,"LEFT")}addRightAnalogInput(a){this.addAnalogInput(a,"RIGHT")}addAnalogInput(a,b){let c=new Va(a);this.enabled&&c.listen();if("LEFT"===b)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),
1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}class Ya{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=h;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new Sa;this.Gamepad=new Ta;this.TouchInput=new Xa;this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowUp","Numpad8"],h.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyW"],h.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyI"],h.RIGHT_ANALOG_UP);
this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],h.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowRight","Numpad6"],h.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyD"],h.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyL"],h.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],h.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowDown","Numpad5","Numpad2"],h.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyS"],
h.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyK"],h.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],h.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowLeft","Numpad4"],h.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyA"],h.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyJ"],h.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],h.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],
h.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],h.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],h.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],h.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyX","Semicolon","Numpad7"],h.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],h.A);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyZ","Escape","Quote",
"Backspace","Numpad9"],h.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],h.B);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyC"],h.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],h.X);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyV"],h.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],h.Y);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyQ"],h.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],h.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyE"],
h.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],h.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyU"],h.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],h.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyO"],h.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],h.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["Enter","Numpad3"],h.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],
h.START);this.Keyboard.setKeysToResponsiveGamepadInput(["ShiftRight","ShiftLeft","Tab","Numpad1"],h.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],h.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput(["Space","Backslash","Backquote"],h.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],h.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return"1.0.0"}enable(){this.Keyboard.enable();
this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),
1)}}getState(){if(!this._enabled)return{};let a=V({},h),b=this.Gamepad.getState(),c=this.TouchInput.getState(),d=this.Keyboard.getState();a=V({},h);Object.keys(a).forEach((e)=>{a[e]=b[e]||c[e]||d[e]});["LEFT","RIGHT"].forEach((b)=>{[h[`${b}_ANALOG_HORIZONTAL_AXIS`],h[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,d)=>{if("number"!==typeof a[c]){if(0===d||2===d)a[c]=a[h[`${b}_ANALOG_RIGHT`]]?1:a[h[`${b}_ANALOG_LEFT`]]?-1:0;if(1===d||3===d)a[c]=a[h[`${b}_ANALOG_UP`]]?-1:a[h[`${b}_ANALOG_DOWN`]]?1:0}})});
a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||"string"===typeof a[b])a[b]=!1});this.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){"string"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=
setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}var W=new Ya;class Za{constructor(){this.worker=void 0;this.isEnabled=!1;this.ResponsiveGamepad=
W;W.addPlugin(Ga())}initialize(){this.isEnabled||this.enableDefaultJoypad();return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};const a=W.getState();this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessageIgnoreResponse({type:u.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0;W.enable()}disableDefaultJoypad(){this.isEnabled=
!1;W.disable()}}const G=new Za;let R=0;const ha=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);R++;a=`${a}-${R}`;1E5<R&&(R=0);return a};class X{constructor(a,b){this.id=ha();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));
this.worker.onmessage=this._onMessageHandler.bind(this)}postMessageIgnoreResponse(a,b){a=qa(a,void 0,this.id);this.worker.postMessage(a,b)}postMessage(a,b){const c=qa(a,void 0,this.id),d=c.messageId,e=new Promise((b,c)=>{let e=setTimeout(()=>{console.warn("Message dropped",a);this.removeMessageListener(d);c()},1E3);this.addMessageListener((a,c)=>{a=C(a);a.messageId===d&&(clearTimeout(e),e=void 0,this.removeMessageListener(c.id),b(a))})});this.worker.postMessage(c,b);return e}addMessageListener(a){this.messageListeners.push({id:ha(),
callback:a})}removeMessageListener(a){let b;this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach((b)=>{b.callback(a,b)})}}const $a=async()=>{const a=new X("data:application/javascript;base64,",
"LIB"),b=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGU9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGw7Y29uc3Qgbj0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6aChmKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgYj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApO2ZvcihsZXQgYz0wOzE0ND5jOysrYyl7bGV0IGU9NDgwKmMsZj02NDAqYztmb3IobGV0IGM9MDsxNjA+YzsrK2Mpe2NvbnN0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bSgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9CmEubWVzc2FnZS5wb3J0c1swXTttKG4sbCk7aChmKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmwucG9zdE1lc3NhZ2UoZih7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"GRAPHICS"),c=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGM9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHQ9KGEpPT57Y29uc3QgYj1hLmRhdGE/YS5kYXRhOmE7aWYoYi5tZXNzYWdlKXN3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGQoYi5tZXNzYWdlLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e2NvbnN0IGE9e3R5cGU6IlVQREFURUQiLG51bWJlck9mU2FtcGxlczpiLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczpiLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzpiLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSxjPVtdO1siYXVkaW9CdWZmZXIiLCJjaGFubmVsMUJ1ZmZlciIsImNoYW5uZWwyQnVmZmVyIiwiY2hhbm5lbDNCdWZmZXIiLCJjaGFubmVsNEJ1ZmZlciJdLmZvckVhY2goKGQpPT57aWYoYi5tZXNzYWdlW2RdKXt7dmFyIGY9Cm5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtkXSk7dmFyIGc9Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZyk7dmFyIGg9bmV3IEZsb2F0MzJBcnJheShnKTtsZXQgYz0wO2cqPTI7Zm9yKHZhciBlPTA7ZTxnO2UrPTIpYVtjXT1xKGZbZV0pLGMrKztjPTA7Zm9yKGU9MTtlPGc7ZSs9MiloW2NdPXEoZltlXSksYysrO2Y9YS5idWZmZXI7aD1oLmJ1ZmZlcn1hW2RdPXt9O2FbZF0ubGVmdD1mO2FbZF0ucmlnaHQ9aDtjLnB1c2goZik7Yy5wdXNoKGgpfX0pO20oZChhKSxjKX19fTtwKChhKT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",
"AUDIO"),d=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",
"CONTROLLER"),e=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"MEMORY"),f=[];[b,c,d,e].forEach((b)=>{const c=new MessageChannel,d=new Promise((d)=>{let e=0;a.postMessage({type:u.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{e++;2<=e&&d()});b.postMessage({type:u.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{e++;2<=e&&d()})});f.push(d)});await Promise.all(f);L.setWorker(b);I.setWorker(c);G.setWorker(d);v.setWorker(e);return a};var ab=Z(function(a){(function(){if("undefined"!==typeof performance&&null!==performance&&performance.now)a.exports=
function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-f)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var e=1E9*process.uptime();var f=d-e}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-g},g=(new Date).getTime()}).call(xa)}),K="undefined"===typeof window?xa:window;F=["moz","webkit"];var S=K.requestAnimationFrame,
N=K.cancelAnimationFrame||K.cancelRequestAnimationFrame;for(M=0;!S&&M<F.length;M++)S=K[F[M]+"RequestAnimationFrame"],N=K[F[M]+"CancelAnimationFrame"]||K[F[M]+"CancelRequestAnimationFrame"];if(!S||!N){var ka=0,Aa=0,O=[],bb=1E3/60;S=function(a){if(0===O.length){var b=ab(),c=Math.max(0,bb-(b-ka));ka=c+b;setTimeout(function(){for(var a=O.slice(0),b=O.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(ka)}catch(f){setTimeout(function(){throw f;},0)}},Math.round(c))}O.push({handle:++Aa,callback:a,
cancelled:!1});return Aa};N=function(a){for(var b=0;b<O.length;b++)O[b].handle===a&&(O[b].cancelled=!0)}}var D=function(a){return S.call(K,a)};D.cancel=function(){N.apply(K,arguments)};D.polyfill=function(a){a||(a=K);a.requestAnimationFrame=S;a.cancelAnimationFrame=N};var Ba=Z(function(a){var b=function(a){function c(a,b,d,e){if("undefined"===typeof a)return c[0];if("undefined"!==typeof b){if(10!==+b||d){var k=d||"0123456789abcdefghijklmnopqrstuvwxyz";a=String(a);e||(a=a.toLowerCase(),k=k.toLowerCase());
var r=a.length,f=Math.abs(b);d={};for(e=0;e<k.length;e++)d[k[e]]=e;for(e=0;e<r;e++)if(k=a[e],"-"!==k&&k in d&&d[k]>=f&&("1"!==k||1!==f))throw Error(k+" is not a valid digit in base "+b+".");b=A(b);r=[];for(e=(f="-"===a[0])?1:0;e<a.length;e++)if(k=a[e],k in d)r.push(A(d[k]));else if("<"===k){k=e;do e++;while(">"!==a[e]&&e<a.length);r.push(A(a.slice(k+1,e)))}else throw Error(k+" is not a valid character");b=X(r,b,f)}else b=A(a);return b}return A(a)}function e(a,b){this.value=a;this.sign=b;this.isSmall=
!1}function f(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){this.value=a}function h(a){return-9007199254740992<a&&9007199254740992>a}function l(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/1E14)]}function n(a){u(a);var b=a.length;if(4>b&&0>F(a,U))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function u(a){for(var b=a.length;0===a[--b];);a.length=b+1}function w(a){for(var b=
Array(a),c=-1;++c<a;)b[c]=0;return b}function y(a){return 0<a?Math.floor(a):Math.ceil(a)}function v(a,b){var c=a.length,k=b.length,d=Array(c),e=0,r;for(r=0;r<k;r++){var f=a[r]+b[r]+e;e=1E7<=f?1:0;d[r]=f-1E7*e}for(;r<c;)f=a[r]+e,e=1E7===f?1:0,d[r++]=f-1E7*e;0<e&&d.push(e);return d}function q(a,b){return a.length>=b.length?v(a,b):v(b,a)}function C(a,b){var c=a.length,k=Array(c),d;for(d=0;d<c;d++){var e=a[d]-1E7+b;b=Math.floor(e/1E7);k[d]=e-1E7*b;b+=1}for(;0<b;)k[d++]=b%1E7,b=Math.floor(b/1E7);return k}
function x(a,b){var c=a.length,k=b.length,d=Array(c),e=0,r;for(r=0;r<k;r++){var f=a[r]-e-b[r];0>f?(f+=1E7,e=1):e=0;d[r]=f}for(r=k;r<c;r++){f=a[r]-e;if(0>f)f+=1E7;else{d[r++]=f;break}d[r]=f}for(;r<c;r++)d[r]=a[r];u(d);return d}function B(a,b,c){var k=a.length,d=Array(k);b=-b;var r;for(r=0;r<k;r++){var ea=a[r]+b;b=Math.floor(ea/1E7);ea%=1E7;d[r]=0>ea?ea+1E7:ea}d=n(d);return"number"===typeof d?(c&&(d=-d),new f(d)):new e(d,c)}function t(a,b){var c=a.length,k=b.length,d=w(c+k),e;for(e=0;e<c;++e){var r=
a[e];for(var f=0;f<k;++f){var g=b[f];g=r*g+d[e+f];var h=Math.floor(g/1E7);d[e+f]=g-1E7*h;d[e+f+1]+=h}}u(d);return d}function E(a,b){var c=a.length,k=Array(c),d=0,e;for(e=0;e<c;e++){var r=a[e]*b+d;d=Math.floor(r/1E7);k[e]=r-1E7*d}for(;0<d;)k[e++]=d%1E7,d=Math.floor(d/1E7);return k}function I(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function G(a,b){var c=Math.max(a.length,b.length);if(30>=c)return t(a,b);c=Math.ceil(c/2);var k=a.slice(c);a=a.slice(0,c);var d=b.slice(c),e=b.slice(0,c);b=
G(a,e);var r=G(k,d);k=G(q(a,k),q(e,d));c=q(q(b,I(x(x(k,b),r),c)),I(r,2*c));u(c);return c}function H(a,b,c){return 1E7>a?new e(E(b,a),c):new e(t(b,l(a)),c)}function J(a){var b=a.length,c=w(b+b),k;for(k=0;k<b;k++){var d=a[k];var e=-(d*d);for(var f=k;f<b;f++){var g=a[f];g=2*d*g+c[k+f]+e;e=Math.floor(g/1E7);c[k+f]=g-1E7*e}c[k+b]=e}u(c);return c}function K(a,b){var c=a.length,k=w(c);var d=0;for(--c;0<=c;--c){d=1E7*d+a[c];var e=y(d/b);d-=e*b;k[c]=e|0}return[k,d|0]}function D(a,b){b=A(b);if(R)return[new g(a.value/
b.value),new g(a.value%b.value)];var d=a.value;var k=b.value;if(0===k)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new f(y(d/k)),new f(d%k)]:[c[0],a];if(b.isSmall){if(1===k)return[a,c[0]];if(-1==k)return[a.negate(),c[0]];k=Math.abs(k);if(1E7>k)return k=K(d,k),d=n(k[0]),k=k[1],a.sign&&(k=-k),"number"===typeof d?(a.sign!==b.sign&&(d=-d),[new f(d),new f(k)]):[new e(d,a.sign!==b.sign),new f(k)];k=l(k)}var r=F(d,k);if(-1===r)return[c[0],a];if(0===r)return[c[a.sign===b.sign?1:-1],
c[0]];if(200>=d.length+k.length){var h=k,m=d.length;k=h.length;r=w(h.length);var p=h[k-1],t=Math.ceil(1E7/(2*p));d=E(d,t);h=E(h,t);var q,v,z;d.length<=m&&d.push(0);h.push(0);p=h[k-1];for(q=m-k;0<=q;q--){m=9999999;d[q+k]!==p&&(m=Math.floor((1E7*d[q+k]+d[q+k-1])/p));var B=v=0;var C=h.length;for(z=0;z<C;z++){v+=m*h[z];var D=Math.floor(v/1E7);B+=d[q+z]-(v-1E7*D);v=D;0>B?(d[q+z]=B+1E7,B=-1):(d[q+z]=B,B=0)}for(;0!==B;){--m;for(z=v=0;z<C;z++)v+=d[q+z]-1E7+h[z],0>v?(d[q+z]=v+1E7,v=0):(d[q+z]=v,v=1);B+=v}r[q]=
m}d=K(d,t)[0];k=[n(r),n(d)]}else{r=d.length;p=k.length;t=[];for(h=[];r;)if(h.unshift(d[--r]),u(h),0>F(h,k))t.push(0);else{m=h.length;q=1E7*h[m-1]+h[m-2];v=1E7*k[p-1]+k[p-2];m>p&&(q=1E7*(q+1));m=Math.ceil(q/v);do{q=E(k,m);if(0>=F(q,h))break;m--}while(m);t.push(m);h=x(h,q)}t.reverse();k=[n(t),n(h)]}d=k[0];b=a.sign!==b.sign;k=k[1];a=a.sign;"number"===typeof d?(b&&(d=-d),d=new f(d)):d=new e(d,b);"number"===typeof k?(a&&(k=-k),k=new f(k)):k=new e(k,a);return[d,k]}function F(a,b){if(a.length!==b.length)return a.length>
b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function M(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;if(a.lesser(49))return!0}function O(a,c){for(var d=a.prev(),k=d,e=0,f,r,g;k.isEven();)k=k.divide(2),e++;r=0;a:for(;r<c.length;r++)if(!a.lesser(c[r])&&(g=b(c[r]).modPow(k,a),!g.isUnit()&&!g.equals(d))){for(f=e-1;0!=f;f--){g=g.square().mod(a);if(g.isUnit())break;
if(g.equals(d))continue a}return!1}return!0}function P(a,c,d){c=A(c);var k=a.isNegative(),e=c.isNegative();a=k?a.not():a;var f=e?c.not():c;for(c=[];!a.isZero()||!f.isZero();){a=D(a,ba);var r=a[1].toJSNumber();k&&(r=ba-1-r);f=D(f,ba);var g=f[1].toJSNumber();e&&(g=ba-1-g);a=a[0];f=f[0];c.push(d(r,g))}d=0!==d(k?1:0,e?1:0)?b(-1):b(0);for(k=c.length-1;0<=k;--k)d=d.multiply(ba).add(b(c[k]));return d}function L(a){a=a.value;a="number"===typeof a?a|1073741824:"bigint"===typeof a?a|BigInt(1073741824):a[0]+
1E7*a[1]|1073758208;return a&-a}function S(a,c){if(0>=c.compareTo(a)){var d=S(a,c.square(c)),k=d.p;d=d.e;c=k.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:k,e:2*d}}return{p:b(1),e:0}}function V(a,b){a=A(a);b=A(b);return a.greater(b)?a:b}function Q(a,b){a=A(a);b=A(b);return a.lesser(b)?a:b}function W(a,b){a=A(a).abs();b=A(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d=c[1],k;a.isEven()&&b.isEven();)k=Q(L(a),L(b)),a=a.divide(k),b=b.divide(k),d=d.multiply(k);
for(;a.isEven();)a=a.divide(L(a));do{for(;b.isEven();)b=b.divide(L(b));a.greater(b)&&(k=b,b=a,a=k);b=b.subtract(a)}while(!b.isZero());return d.isUnit()?a:a.multiply(d)}function X(a,b,d){var k=c[0],e=c[1],f;for(f=a.length-1;0<=f;f--)k=k.add(a[f].times(e)),e=e.times(b);return d?k.negate():k}function N(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],
Array.apply(null,Array(-a.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};c=Array.apply(null,Array(a.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.isUnit())return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(a.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:d};for(var k=[],e;a.isNegative()||0<=a.compareAbs(c);)e=a.divmod(c),
a=e.quotient,e=e.remainder,e.isNegative()&&(e=c.minus(e).abs(),a=a.next()),k.push(e.toJSNumber());k.push(a.toJSNumber());return{value:k.reverse(),isNegative:d}}function Y(a,b,c){a=N(a,b);return(a.isNegative?"-":"")+a.value.map(function(a){var b=c;b=b||"0123456789abcdefghijklmnopqrstuvwxyz";a=a<b.length?b[a]:"<"+a+">";return a}).join("")}function Z(a){if(h(+a)){var b=+a;if(b===y(b))return R?new g(BigInt(b)):new f(b);throw Error("Invalid integer: "+a);}(b="-"===a[0])&&(a=a.slice(1));var c=a.split(/e/i);
if(2<c.length)throw Error("Invalid integer: "+c.join("e"));if(2===c.length){a=c[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==y(a)||!h(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");c=c[0];var d=c.indexOf(".");0<=d&&(a-=c.length-d-1,c=c.slice(0,d)+c.slice(d+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=c+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);if(R)return new g(BigInt(b?"-"+a:a));c=[];d=a.length;for(var k=
d-7;0<d;)c.push(+a.slice(k,d)),k-=7,0>k&&(k=0),d-=7;u(c);return new e(c,b)}function A(a){if("number"===typeof a){if(R)a=new g(BigInt(a));else if(h(a)){if(a!==y(a))throw Error(a+" is not an integer.");a=new f(a)}else a=Z(a.toString());return a}return"string"===typeof a?Z(a):"bigint"===typeof a?new g(a):a}var U=l(9007199254740992),R="function"===typeof BigInt;e.prototype=Object.create(c.prototype);f.prototype=Object.create(c.prototype);g.prototype=Object.create(c.prototype);e.prototype.add=function(a){a=
A(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,c=a.value;return a.isSmall?new e(C(b,Math.abs(c)),this.sign):new e(q(b,c),this.sign)};e.prototype.plus=e.prototype.add;f.prototype.add=function(a){a=A(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var c=a.value;if(a.isSmall){if(h(b+c))return new f(b+c);c=l(Math.abs(c))}return new e(C(c,Math.abs(b)),0>b)};f.prototype.plus=f.prototype.add;g.prototype.add=function(a){return new g(this.value+A(a).value)};
g.prototype.plus=g.prototype.add;e.prototype.subtract=function(a){var b=A(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var c=b.value;if(b.isSmall)return B(a,Math.abs(c),this.sign);b=this.sign;0<=F(a,c)?a=x(a,c):(a=x(c,a),b=!b);a=n(a);"number"===typeof a?(b&&(a=-a),a=new f(a)):a=new e(a,b);return a};e.prototype.minus=e.prototype.subtract;f.prototype.subtract=function(a){a=A(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?new f(b-c):
B(c,Math.abs(b),0<=b)};f.prototype.minus=f.prototype.subtract;g.prototype.subtract=function(a){return new g(this.value-A(a).value)};g.prototype.minus=g.prototype.subtract;e.prototype.negate=function(){return new e(this.value,!this.sign)};f.prototype.negate=function(){var a=this.sign,b=new f(-this.value);b.sign=!a;return b};g.prototype.negate=function(){return new g(-this.value)};e.prototype.abs=function(){return new e(this.value,!1)};f.prototype.abs=function(){return new f(Math.abs(this.value))};
g.prototype.abs=function(){return new g(0<=this.value?this.value:-this.value)};e.prototype.multiply=function(a){var b=A(a);a=this.value;var d=b.value,k=this.sign!==b.sign;if(b.isSmall){if(0===d)return c[0];if(1===d)return this;if(-1===d)return this.negate();d=Math.abs(d);if(1E7>d)return new e(E(a,d),k);d=l(d)}b=a.length;var f=d.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new e(G(a,d),k):new e(t(a,d),k)};e.prototype.times=e.prototype.multiply;f.prototype._multiplyBySmall=function(a){return h(a.value*
this.value)?new f(a.value*this.value):H(Math.abs(a.value),l(Math.abs(this.value)),this.sign!==a.sign)};e.prototype._multiplyBySmall=function(a){return 0===a.value?c[0]:1===a.value?this:-1===a.value?this.negate():H(Math.abs(a.value),this.value,this.sign!==a.sign)};f.prototype.multiply=function(a){return A(a)._multiplyBySmall(this)};f.prototype.times=f.prototype.multiply;g.prototype.multiply=function(a){return new g(this.value*A(a).value)};g.prototype.times=g.prototype.multiply;e.prototype.square=function(){return new e(J(this.value),
!1)};f.prototype.square=function(){var a=this.value*this.value;return h(a)?new f(a):new e(J(l(Math.abs(this.value))),!1)};g.prototype.square=function(a){return new g(this.value*this.value)};e.prototype.divmod=function(a){a=D(this,a);return{quotient:a[0],remainder:a[1]}};g.prototype.divmod=f.prototype.divmod=e.prototype.divmod;e.prototype.divide=function(a){return D(this,a)[0]};g.prototype.over=g.prototype.divide=function(a){return new g(this.value/A(a).value)};f.prototype.over=f.prototype.divide=
e.prototype.over=e.prototype.divide;e.prototype.mod=function(a){return D(this,a)[1]};g.prototype.mod=g.prototype.remainder=function(a){return new g(this.value%A(a).value)};f.prototype.remainder=f.prototype.mod=e.prototype.remainder=e.prototype.mod;e.prototype.pow=function(a){var b=A(a),d=this.value;a=b.value;var e;if(0===a)return c[1];if(0===d)return c[0];if(1===d)return c[1];if(-1===d)return b.isEven()?c[1]:c[-1];if(b.sign)return c[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");
if(this.isSmall&&h(e=Math.pow(d,a)))return new f(y(e));e=this;for(b=c[1];;){a&1&&(b=b.times(e),--a);if(0===a)break;a/=2;e=e.square()}return b};f.prototype.pow=e.prototype.pow;g.prototype.pow=function(a){var b=A(a),d=this.value;a=b.value;var e=BigInt(0),f=BigInt(1),k=BigInt(2);if(a===e)return c[1];if(d===e)return c[0];if(d===f)return c[1];if(d===BigInt(-1))return b.isEven()?c[1]:c[-1];if(b.isNegative())return new g(e);b=this;for(d=c[1];;){(a&f)===f&&(d=d.times(b),--a);if(a===e)break;a/=k;b=b.square()}return d};
e.prototype.modPow=function(a,b){a=A(a);b=A(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");var d=c[1],e=this.mod(b);a.isNegative()&&(a=a.multiply(c[-1]),e=e.modInv(b));for(;a.isPositive();){if(e.isZero())return c[0];a.isOdd()&&(d=d.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return d};g.prototype.modPow=f.prototype.modPow=e.prototype.modPow;e.prototype.compareAbs=function(a){a=A(a);return a.isSmall?1:F(this.value,a.value)};f.prototype.compareAbs=function(a){a=A(a);var b=
Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};g.prototype.compareAbs=function(a){var b=this.value;a=A(a).value;b=0<=b?b:-b;a=0<=a?a:-a;return b===a?0:b>a?1:-1};e.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=A(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:F(this.value,a.value)*(this.sign?-1:1)};e.prototype.compareTo=e.prototype.compare;f.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===
a)return 1;a=A(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==a.sign?0>b?-1:1:0>b?1:-1};f.prototype.compareTo=f.prototype.compare;g.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;var b=this.value;a=A(a).value;return b===a?0:b>a?1:-1};g.prototype.compareTo=g.prototype.compare;e.prototype.equals=function(a){return 0===this.compare(a)};g.prototype.eq=g.prototype.equals=f.prototype.eq=f.prototype.equals=e.prototype.eq=e.prototype.equals;e.prototype.notEquals=
function(a){return 0!==this.compare(a)};g.prototype.neq=g.prototype.notEquals=f.prototype.neq=f.prototype.notEquals=e.prototype.neq=e.prototype.notEquals;e.prototype.greater=function(a){return 0<this.compare(a)};g.prototype.gt=g.prototype.greater=f.prototype.gt=f.prototype.greater=e.prototype.gt=e.prototype.greater;e.prototype.lesser=function(a){return 0>this.compare(a)};g.prototype.lt=g.prototype.lesser=f.prototype.lt=f.prototype.lesser=e.prototype.lt=e.prototype.lesser;e.prototype.greaterOrEquals=
function(a){return 0<=this.compare(a)};g.prototype.geq=g.prototype.greaterOrEquals=f.prototype.geq=f.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals;e.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};g.prototype.leq=g.prototype.lesserOrEquals=f.prototype.leq=f.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals;e.prototype.isEven=function(){return 0===(this.value[0]&1)};f.prototype.isEven=function(){return 0===(this.value&1)};g.prototype.isEven=
function(){return(this.value&BigInt(1))===BigInt(0)};e.prototype.isOdd=function(){return 1===(this.value[0]&1)};f.prototype.isOdd=function(){return 1===(this.value&1)};g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};e.prototype.isPositive=function(){return!this.sign};f.prototype.isPositive=function(){return 0<this.value};g.prototype.isPositive=f.prototype.isPositive;e.prototype.isNegative=function(){return this.sign};f.prototype.isNegative=function(){return 0>this.value};g.prototype.isNegative=
f.prototype.isNegative;e.prototype.isUnit=function(){return!1};f.prototype.isUnit=function(){return 1===Math.abs(this.value)};g.prototype.isUnit=function(){return this.abs().value===BigInt(1)};e.prototype.isZero=function(){return!1};f.prototype.isZero=function(){return 0===this.value};g.prototype.isZero=function(){return this.value===BigInt(0)};e.prototype.isDivisibleBy=function(a){a=A(a);return a.isZero()?!1:a.isUnit()?!0:0===a.compareAbs(2)?this.isEven():this.mod(a).isZero()};g.prototype.isDivisibleBy=
f.prototype.isDivisibleBy=e.prototype.isDivisibleBy;e.prototype.isPrime=function(c){var d=M(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return O(d,[2,3,5,7,11,13,17,19,23,29,31,37]);e=Math.log(2)*e.toJSNumber();c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return O(d,e)};g.prototype.isPrime=f.prototype.isPrime=e.prototype.isPrime;e.prototype.isProbablePrime=function(c){var d=M(this);if(d!==a)return d;d=this.abs();c=c===a?5:c;for(var e=[],f=0;f<
c;f++)e.push(b.randBetween(2,d.minus(2)));return O(d,e)};g.prototype.isProbablePrime=f.prototype.isProbablePrime=e.prototype.isProbablePrime;e.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=A(a),f=this.abs(),g,k,h;!f.isZero();)g=e.divide(f),k=c,h=e,c=d,e=f,d=k.subtract(g.multiply(d)),f=h.subtract(g.multiply(f));if(!e.isUnit())throw Error(this.toString()+" and "+a.toString()+" are not co-prime");-1===c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};g.prototype.modInv=f.prototype.modInv=
e.prototype.modInv;e.prototype.next=function(){var a=this.value;return this.sign?B(a,1,this.sign):new e(C(a,1),this.sign)};f.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new f(a+1):new e(U,!1)};g.prototype.next=function(){return new g(this.value+BigInt(1))};e.prototype.prev=function(){var a=this.value;return this.sign?new e(C(a,1),!0):B(a,1,this.sign)};f.prototype.prev=function(){var a=this.value;return-9007199254740992<a-1?new f(a-1):new e(U,!0)};g.prototype.prev=function(){return new g(this.value-
BigInt(1))};for(var T=[1];1E7>=2*T[T.length-1];)T.push(2*T[T.length-1]);var fa=T.length,ba=T[fa-1];e.prototype.shiftLeft=function(a){a=A(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=fa;)b=b.multiply(ba),a-=fa-1;return b.multiply(T[a])};g.prototype.shiftLeft=f.prototype.shiftLeft=e.prototype.shiftLeft;e.prototype.shiftRight=function(a){var b;a=A(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+
" is too large for shifting.");if(0>a)return this.shiftLeft(-a);for(b=this;a>=fa;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=D(b,ba);b=b[1].isNegative()?b[0].prev():b[0];a-=fa-1}b=D(b,T[a]);return b[1].isNegative()?b[0].prev():b[0]};g.prototype.shiftRight=f.prototype.shiftRight=e.prototype.shiftRight;e.prototype.not=function(){return this.negate().prev()};g.prototype.not=f.prototype.not=e.prototype.not;e.prototype.and=function(a){return P(this,a,function(a,b){return a&b})};g.prototype.and=
f.prototype.and=e.prototype.and;e.prototype.or=function(a){return P(this,a,function(a,b){return a|b})};g.prototype.or=f.prototype.or=e.prototype.or;e.prototype.xor=function(a){return P(this,a,function(a,b){return a^b})};g.prototype.xor=f.prototype.xor=e.prototype.xor;e.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));return 0===a.compareTo(b(0))?b(0):b(S(a,b(2)).e).add(b(1))};g.prototype.bitLength=f.prototype.bitLength=e.prototype.bitLength;e.prototype.toArray=
function(a){return N(this,a)};f.prototype.toArray=function(a){return N(this,a)};g.prototype.toArray=function(a){return N(this,a)};e.prototype.toString=function(b,c){b===a&&(b=10);if(10!==b)return Y(this,b,c);b=this.value;c=b.length;for(var d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};f.prototype.toString=function(b,c){b===a&&(b=10);return 10!=b?Y(this,b,c):String(this.value)};g.prototype.toString=f.prototype.toString;g.prototype.toJSON=e.prototype.toJSON=
f.prototype.toJSON=function(){return this.toString()};e.prototype.valueOf=function(){return parseInt(this.toString(),10)};e.prototype.toJSNumber=e.prototype.valueOf;f.prototype.valueOf=function(){return this.value};f.prototype.toJSNumber=f.prototype.valueOf;g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var ca=0;1E3>ca;ca++)c[ca]=A(ca),0<ca&&(c[-ca]=A(-ca));c.one=c[1];c.zero=c[0];c.minusOne=c[-1];c.max=V;c.min=Q;c.gcd=W;c.lcm=function(a,b){a=A(a).abs();
b=A(b).abs();return a.divide(W(a,b)).multiply(b)};c.isInstance=function(a){return a instanceof e||a instanceof f||a instanceof g};c.randBetween=function(a,b){a=A(a);b=A(b);var d=Q(a,b);a=V(a,b).subtract(d).add(1);if(a.isSmall)return d.add(Math.floor(Math.random()*a));a=N(a,1E7).value;b=[];for(var e=!0,f=0;f<a.length;f++){var g=e?a[f]:1E7,h=y(Math.random()*g);b.push(h);h<g&&(e=!1)}return d.add(c.fromArray(b,1E7,!1))};c.fromArray=function(a,b,c){return X(a.map(A),A(b||10),c)};return c}();a.hasOwnProperty("exports")&&
(a.exports=b)});let la=void 0;const J=async(a,b)=>{if(n.worker)return a=await n.worker.postMessage({type:u.RUN_WASM_EXPORT,export:a,parameters:b}),C(a).message.response},va=async(a,b)=>{if(n.worker)return a=await n.worker.postMessage({type:u.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=C(a),new Uint8Array(a.message.response)},ua=async(a)=>{if(n.worker)return a=await n.worker.postMessage({type:u.GET_WASM_CONSTANT,constant:a}),C(a).message.response},ta={};let Ca=!1;class cb{constructor(){this.canvasElement=
this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.initialized=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this.speed=1;this._resetConfig();"undefined"!==typeof window&&(window.addEventListener("beforeunload",function(a){Ca=!0}),window.document.addEventListener("visibilitychange",()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||setTimeout(()=>{Ca||this.pause()},0)}))}config(a,b){return(async()=>{await this.pause();await this.setCanvas(b);
!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach((b)=>{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=a;await L.initialize(this.canvasElement,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}addBootROM(a,b,c,d){return v.addBootROM(a,
b,c,d)}getBootROMs(){return v.getBootROMs()}loadROM(a,b){return Ia.bind(this)(a,b)}play(){return(async()=>{if(this.ready){if(!this.loadedAndStarted){this.loadedAndStarted=!0;if(this.options.onLoadedAndStarted)this.options.onLoadedAndStarted();E.runHook({key:"loadedAndStarted"})}if(this.options.onPlay)this.options.onPlay();E.runHook({key:"play"});this.options.headless||(I.resumeAudioContext(),I.resetTimeStretch());await this.worker.postMessage({type:u.RESET_AUDIO_QUEUE});this.paused=!1;this.updateId||
await this.worker.postMessage({type:u.PLAY});this.renderId||this.options.headless||(this.renderId=D(()=>{sa.call(this)}))}})()}pause(){return(async()=>{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();E.runHook({key:"pause"});D.cancel(this.renderId);this.renderId=!1;this.options.headless||I.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:u.PAUSE});await new Promise((a)=>{D(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,this.canvasElement);if(this.loadedROM)return this.loadROM(this.loadedROM)})()}getSavedMemory(){return v.getSavedMemory()}saveLoadedCartridge(a){return v.saveLoadedCartridge(a)}deleteSavedCartridge(a){return v.deleteSavedCartridge(a)}saveState(){return(async()=>
{await this.pause();return await v.saveState()})()}getSaveStates(){return(async()=>{let a=await v.getCartridgeObject();return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await v.loadState(a)})()}deleteState(a){return(async()=>{await v.deleteState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}getSpeed(){return this.speed}setSpeed(a){0>=a&&(a=.1);(async()=>{this.worker&&(this.speed=a,I.setSpeed(a),await this.worker.postMessageIgnoreResponse({type:u.SET_SPEED,
speed:a}));await new Promise((a)=>{D(()=>{a()})})})()}isGBC(){return(async()=>{const a=await n.worker.postMessage({type:u.IS_GBC});return C(a).message.response})()}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=0;this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,enableAudioDebugging:!1,gameboyFrameRate:60,frameSkip:0,enableBootROMIfAvailable:!0,isGbcEnabled:!0,isGbcColorizationEnabled:!0,gbcColorizationPalette:null,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,
graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,maxNumberOfAutoSaveStates:10,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,breakpointCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await $a(),this.worker.addMessageListener(Ja.bind(this)))})()}}const n=new cb;F={config:n.config.bind(n),getCoreType:n.getCoreType.bind(n),getConfig:n.getConfig.bind(n),
setCanvas:n.setCanvas.bind(n),getCanvas:n.getCanvas.bind(n),addBootROM:n.addBootROM.bind(n),getBootROMs:n.getBootROMs.bind(n),loadROM:n.loadROM.bind(n),play:n.play.bind(n),pause:n.pause.bind(n),reset:n.reset.bind(n),addPlugin:E.addPlugin.bind(E),isPlaying:()=>!n.paused,isPaused:()=>n.paused,isReady:()=>n.ready,isLoadedAndStarted:()=>n.loadedAndStarted,getVersion:()=>"0.5.0",getSavedMemory:n.getSavedMemory.bind(n),saveLoadedCartridge:n.saveLoadedCartridge.bind(n),deleteSavedCartridge:n.deleteSavedCartridge.bind(n),
saveState:n.saveState.bind(n),getSaveStates:n.getSaveStates.bind(n),loadState:n.loadState.bind(n),deleteState:n.deleteState.bind(n),getFPS:n.getFPS.bind(n),setSpeed:n.setSpeed.bind(n),isGBC:n.isGBC.bind(n),ResponsiveGamepad:G.ResponsiveGamepad,enableDefaultJoypad:G.enableDefaultJoypad.bind(G),disableDefaultJoypad:G.disableDefaultJoypad.bind(G),setJoypadState:G.setJoypadState.bind(G),resumeAudioContext:I.resumeAudioContext.bind(I),_getAudioChannels:I.getAudioChannels.bind(I),_getCartridgeInfo:v.getCartridgeInfo.bind(v),
_runNumberOfFrames:async(a)=>{await n.pause();const b=()=>{la=D(()=>{la&&(n.worker.postMessage({type:u.FORCE_OUTPUT_FRAME}),L.renderFrame(),b())})};b();for(let b=0;b<a;b++)await J("executeFrame",[]);la=void 0;n.worker.postMessage({type:u.FORCE_OUTPUT_FRAME});L.renderFrame()},_runWasmExport:J,_getWasmMemorySection:va,_getWasmConstant:ua,_getStepsAsString:async(a)=>{var b=await J("getStepsPerStepSet");const c=await J("getStepSets"),d=await J("getSteps");b=Ba(b).multiply(c).add(d);return a?b.toString(a):
b.toString(10)},_getCyclesAsString:async(a)=>{var b=await J("getCyclesPerCycleSet");const c=await J("getCycleSets"),d=await J("getCycles");b=Ba(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};ma.WasmBoy=F;return ma}({});
//# sourceMappingURL=wasmboy.wasm.iife.js.map
