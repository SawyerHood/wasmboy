{"version":3,"file":"wasmboy.wasm.esm.js","sources":["../lib/plugins/plugins.js","../lib/worker/constants.js","../lib/worker/util.js","../lib/graphics/graphics.js","../lib/graphics/constants.js","../node_modules/audiobuffer-to-wav/dist/index.esm.js","../lib/audio/gbchannel.js","../lib/audio/audio.js","../node_modules/idb/lib/idb.js","../node_modules/idb/lib/node.js","../lib/memory/idb.js","../lib/3p/UZIP.js","../lib/wasmboy/fetchrom.js","../lib/memory/state.js","../lib/memory/autosave.js","../lib/memory/memory.js","../node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","../lib/controller/gbplugin.js","../lib/controller/controller.js","../lib/worker/smartworker.js","../lib/worker/instantiate.js","worker/wasmboy.wasm.worker.js","worker/graphics.worker.js","worker/audio.worker.js","worker/controller.worker.js","worker/memory.worker.js","../lib/wasmboy/load.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../lib/wasmboy/render.js","../node_modules/big-integer/BigInteger.js","../lib/debug/debug.js","../lib/wasmboy/onmessage.js","../lib/wasmboy/wasmboy.js","../lib/index.js"],"sourcesContent":["// API For adding plugins for WasmBoy\n// Should follow the Rollup Plugin API\n// https://rollupjs.org/guide/en#plugins\n\n// Plugins have the following supported hooks\n// And properties\nconst WASMBOY_PLUGIN = {\n  name: 'wasmboy-plugin REQUIRED',\n  graphics: rgbaArray => {}, // Returns undefined. Edit object in place\n  audio: (audioContext, headAudioNode, channelId) => {}, // Return AudioNode, which will be connected to the destination node eventually.\n  saveState: saveStateObject => {}, // Returns undefined. Edit object in place.\n  canvas: (canvasElement, canvasContext, canvasImageData) => {}, // Returns undefined. Edit object in place.\n  breakpoint: () => {},\n  ready: () => {},\n  play: () => {},\n  pause: () => {},\n  loadedAndStarted: () => {}\n};\n\nclass WasmBoyPluginsService {\n  constructor() {\n    this.plugins = {};\n    this.pluginIdCounter = 0;\n  }\n\n  addPlugin(pluginObject) {\n    // Verify the plugin\n    if (!pluginObject && typeof pluginObject !== 'object') {\n      throw new Error('Invalid Plugin Object');\n    }\n\n    if (!pluginObject.name) {\n      throw new Error('Added plugin must have a \"name\" property');\n    }\n\n    // Add the plugin to our plugin container\n    const id = this.pluginIdCounter;\n    this.plugins[this.pluginIdCounter] = pluginObject;\n    this.pluginIdCounter++;\n\n    // Return a function to remove the plugin\n    return () => {\n      this.removePlugin(id);\n    };\n  }\n\n  removePlugin(id) {\n    delete this.plugins[id];\n  }\n\n  runHook(hookConfig) {\n    if (!WASMBOY_PLUGIN[hookConfig.key] || typeof WASMBOY_PLUGIN[hookConfig.key] !== 'function') {\n      throw new Error('No such hook as ' + hookConfig.key);\n    }\n\n    Object.keys(this.plugins).forEach(pluginKey => {\n      const plugin = this.plugins[pluginKey];\n\n      if (plugin[hookConfig.key]) {\n        let hookResponse = undefined;\n        try {\n          hookResponse = plugin[hookConfig.key].apply(null, hookConfig.params);\n        } catch (e) {\n          console.error(`There was an error running the '${hookConfig.key}' hook, on the ${plugin.name} plugin.`);\n          console.error(e);\n        }\n\n        if (hookConfig.callback) {\n          hookConfig.callback(hookResponse);\n        }\n      }\n    });\n  }\n}\n\nexport const WasmBoyPlugins = new WasmBoyPluginsService();\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  BREAKPOINT: 'BREAKPOINT',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT',\n  FORCE_OUTPUT_FRAME: 'FORCE_OUTPUT_FRAME',\n  SET_SPEED: 'SET_SPEED',\n  IS_GBC: 'IS_GBC'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  BOOT_ROM: 'BOOT_ROM',\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Handles rendering graphics using the HTML5 Canvas\n\nimport { WasmBoyPlugins } from '../plugins/plugins';\n\nimport { GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT } from './constants';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.worker = undefined;\n    this.updateGraphicsCallback = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n    this.imageDataArray = undefined;\n    this.imageDataArrayChanged = false;\n  }\n\n  initialize(canvasElement, updateGraphicsCallback) {\n    this.updateGraphicsCallback = updateGraphicsCallback;\n\n    // Initialiuze our cached wasm constants\n    // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressGRAPHICS_OUTPUT_LOCATION.valueOf();\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    const initializeTask = async () => {\n      // Prepare our canvas\n      this.canvasElement = canvasElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n      this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n      this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n      this.canvasImageData = this.canvasContext.createImageData(this.canvasElement.width, this.canvasElement.height);\n\n      // Add some css for smooth 8-bit canvas scaling\n      // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n      // https://caniuse.com/#feat=css-crisp-edges\n      this.canvasElement.style = `\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      `;\n\n      // Fill the canvas with a blank screen\n      // using client width since we are not requiring a width and height oin the canvas\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n      // TODO: Mention respopnsive canvas scaling in the docs\n      this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n      // Doing set canvas here, as multiple sources can re-initialize the graphics\n      // TODO: Move setCanvas out of initialize :p\n      WasmBoyPlugins.runHook({\n        key: 'canvas',\n        params: [this.canvasElement, this.canvasContext, this.canvasImageData],\n        callback: response => {\n          if (!response) {\n            return;\n          }\n\n          if (response.canvasElement) {\n            this.canvasElement = response.canvasElement;\n          }\n\n          if (response.canvasContext) {\n            this.canvasContext = response.canvasContext;\n          }\n\n          if (response.canvasImageData) {\n            this.canvasImageData = response.canvasImageData;\n          }\n        }\n      });\n\n      // Finally make sure we set our constants for our worker\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n        });\n      }\n    };\n\n    return initializeTask();\n  }\n\n  // Function to set our worker\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);\n          this.imageDataArrayChanged = true;\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    // Check if we have new graphics to show\n    if (!this.imageDataArrayChanged) {\n      return;\n    }\n    this.imageDataArrayChanged = false;\n\n    // Check for a callback for accessing image data\n    if (this.updateGraphicsCallback) {\n      this.updateGraphicsCallback(this.imageDataArray);\n    }\n\n    // Set the imageDataArray to our plugins\n    WasmBoyPlugins.runHook({\n      key: 'graphics',\n      params: [this.imageDataArray],\n      callback: response => {\n        if (response) {\n          this.imageDataArray = response;\n        }\n      }\n    });\n\n    // Add our new imageData\n    this.canvasImageData.data.set(this.imageDataArray);\n\n    this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n    this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n","// Some shared constants by the graphics lib and worker\n\nexport const GAMEBOY_CAMERA_WIDTH = 160;\nexport const GAMEBOY_CAMERA_HEIGHT = 144;\n","function index(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport default index;\n","// Gameboy Channel Output\n// With outputting to Web Audio API\n\nimport { WasmBoyPlugins } from '../plugins/plugins';\n\nimport toWav from 'audiobuffer-to-wav';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\n// Some constants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\n\n// Seems like the super quiet popping, and the wace form spikes in the visualizer,\n// are caused by the sample rate :P\n// Thus need to figure out why that is.\nconst WASMBOY_SAMPLE_RATE = 44100;\n\nexport default class GbChannelWebAudio {\n  constructor(id) {\n    this.id = id;\n\n    this.audioContext = undefined;\n    this.audioBuffer = undefined;\n    // The play time for our audio samples\n    this.audioPlaytime = undefined;\n    this.audioSources = [];\n\n    // Gain Node for muting\n    this.gainNode = undefined;\n    this.muted = false;\n    this.libMuted = false;\n\n    // Our buffer for recording PCM Samples as they come\n    this.recording = false;\n    this.recordingLeftBuffers = undefined;\n    this.recordingRightBuffers = undefined;\n    this.recordingAudioBuffer = undefined;\n    this.recordingAnchor = undefined;\n  }\n\n  createAudioContextIfNone() {\n    if (!this.audioContext && typeof window !== 'undefined') {\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n      // Set up our nodes\n      // Seems like closure compiler will optimize this out\n      // Thus, need to do a very specifc type check if statement here.\n      if (!!this.audioContext === true) {\n        this.gainNode = this.audioContext.createGain();\n      }\n    }\n  }\n\n  getCurrentTime() {\n    this.createAudioContextIfNone();\n\n    if (!this.audioContext) {\n      return;\n    }\n\n    return this.audioContext.currentTime;\n  }\n\n  getPlayTime() {\n    return this.audioPlaytime;\n  }\n\n  resumeAudioContext() {\n    this.createAudioContextIfNone();\n\n    if (!this.audioContext) {\n      return;\n    }\n\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n      this.audioPlaytime = this.audioContext.currentTime;\n    }\n  }\n\n  playAudio(numberOfSamples, leftChannelBuffer, rightChannelBuffer, playbackRate, updateAudioCallback) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Get our buffers as floats\n    const leftChannelBufferAsFloat = new Float32Array(leftChannelBuffer);\n    const rightChannelBufferAsFloat = new Float32Array(rightChannelBuffer);\n\n    // Create an audio buffer, with a left and right channel\n    this.audioBuffer = this.audioContext.createBuffer(2, numberOfSamples, WASMBOY_SAMPLE_RATE);\n    this._setSamplesToAudioBuffer(this.audioBuffer, leftChannelBufferAsFloat, rightChannelBufferAsFloat);\n\n    if (this.recording) {\n      this.recordingLeftBuffers.push(leftChannelBufferAsFloat);\n      this.recordingRightBuffers.push(rightChannelBufferAsFloat);\n    }\n\n    // Get an AudioBufferSourceNode.\n    // This is the AudioNode to use when we want to play an AudioBuffer\n    let source = this.audioContext.createBufferSource();\n\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = this.audioBuffer;\n\n    // Set our playback rate for time resetretching\n    source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n    // Set up our \"final node\", as in the one that will be connected\n    // to the destination (output)\n    let finalNode = source;\n\n    // Call our callback/plugins, if we have one\n    if (updateAudioCallback) {\n      const responseNode = updateAudioCallback(this.audioContext, finalNode, this.id);\n      if (responseNode) {\n        finalNode = responseNode;\n      }\n    }\n\n    // Call our plugins\n    WasmBoyPlugins.runHook({\n      key: 'audio',\n      params: [this.audioContext, finalNode, this.id],\n      callback: hookResponse => {\n        if (hookResponse) {\n          finalNode.connect(hookResponse);\n          finalNode = hookResponse;\n        }\n      }\n    });\n\n    // Lastly, apply our gain node to mute/unmute\n    if (this.gainNode) {\n      finalNode.connect(this.gainNode);\n      finalNode = this.gainNode;\n    }\n\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    finalNode.connect(this.audioContext.destination);\n\n    // Check if we made it in time\n    // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n    let audioContextCurrentTime = this.audioContext.currentTime;\n    let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    this.audioPlaytime = this.audioPlaytime || audioContextCurrentTimeWithLatency;\n    if (this.audioPlaytime < audioContextCurrentTime) {\n      // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n      this.cancelAllAudio();\n      this.audioPlaytime = audioContextCurrentTimeWithLatency;\n    }\n\n    // start the source playing\n    source.start(this.audioPlaytime);\n\n    // Set our new audio playtime goal\n    const sourcePlaybackLength = numberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate);\n    this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n    // Cancel all audio sources on the tail that play before us\n    while (\n      this.audioSources[this.audioSources.length - 1] &&\n      this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime\n    ) {\n      this.audioSources[this.audioSources.length - 1].source.stop();\n      this.audioSources.pop();\n    }\n\n    // Add the source so we can stop this if needed\n    this.audioSources.push({\n      source: source,\n      playTime: this.audioPlaytime\n    });\n\n    // Shift ourselves out when finished\n    const timeUntilSourceEnds = this.audioPlaytime - this.audioContext.currentTime + 500;\n    setTimeout(() => {\n      this.audioSources.shift();\n    }, timeUntilSourceEnds);\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Cancel all audio That was queued to play\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (stopCurrentAudio || this.audioSources[i].playTime > this.audioPlaytime) {\n        this.audioSources[i].source.stop();\n      }\n    }\n\n    this.audioSources = [];\n\n    // Reset our audioPlaytime\n    this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n  }\n\n  mute() {\n    if (!this.muted) {\n      this._setGain(0);\n      this.muted = true;\n    }\n  }\n\n  unmute() {\n    if (this.muted) {\n      this._setGain(1);\n      this.muted = false;\n    }\n  }\n\n  hasRecording() {\n    return !!this.recordingAudioBuffer;\n  }\n\n  startRecording() {\n    if (!this.recording) {\n      this.recording = true;\n      this.recordingLeftBuffers = [];\n      this.recordingRightBuffers = [];\n      this.recordingAudioBuffer = undefined;\n    }\n  }\n\n  stopRecording() {\n    // Check if we were recoridng\n    if (!this.recording) {\n      return;\n    }\n\n    this.recording = false;\n\n    // Create a left/right buffer from all the buffers stored\n    const createBufferFromBuffers = buffers => {\n      let totalLength = 0;\n      buffers.forEach(buffer => {\n        totalLength += buffer.length;\n      });\n\n      const totalBuffer = new Float32Array(totalLength);\n      let currentLength = 0;\n      buffers.forEach(buffer => {\n        totalBuffer.set(buffer, currentLength);\n        currentLength += buffer.length;\n      });\n\n      return totalBuffer;\n    };\n\n    const totalLeftBuffer = createBufferFromBuffers(this.recordingLeftBuffers);\n    const totalRightBuffer = createBufferFromBuffers(this.recordingRightBuffers);\n    this.recordingAudioBuffer = this.audioContext.createBuffer(2, totalLeftBuffer.length, WASMBOY_SAMPLE_RATE);\n    this._setSamplesToAudioBuffer(this.recordingAudioBuffer, totalLeftBuffer, totalRightBuffer);\n\n    this.recordingLeftBuffer = undefined;\n    this.recordingRightBuffer = undefined;\n  }\n\n  downloadRecordingAsWav(filename) {\n    if (!this.recordingAudioBuffer) {\n      return;\n    }\n\n    // Check if we need to create our anchor tag\n    // Which is used to download the audio\n    if (!this.recordingAnchor) {\n      this.recordingAnchor = document.createElement('a');\n      document.body.appendChild(this.recordingAnchor);\n      this.recordingAnchor.style = 'display: none';\n    }\n\n    // Create our wav as a downloadable blob\n    const wav = toWav(this.recordingAudioBuffer);\n    const blob = new window.Blob([new DataView(wav)], {\n      type: 'audio/wav'\n    });\n\n    // Create our url / download name\n    const url = window.URL.createObjectURL(blob);\n    this.recordingAnchor.href = url;\n    let downloadName;\n    if (filename) {\n      downloadName = `${filename}.wav`;\n    } else {\n      const shortDateWithTime = new Date().toLocaleDateString(undefined, {\n        month: '2-digit',\n        day: '2-digit',\n        year: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n      downloadName = `wasmboy-${shortDateWithTime}.wav`;\n    }\n    this.recordingAnchor.download = downloadName;\n\n    // Download our wav\n    this.recordingAnchor.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  getRecordingAsWavBase64EncodedString() {\n    if (!this.recordingAudioBuffer) {\n      return;\n    }\n\n    // Create our wav as a downloadable blob\n    const wav = toWav(this.recordingAudioBuffer);\n    const base64String = this._arrayBufferToBase64(wav);\n\n    return `data:audio/wav;base64,${base64String}`;\n  }\n\n  getRecordingAsAudioBuffer() {\n    return this.recordingAudioBuffer;\n  }\n\n  _libMute() {\n    this._setGain(0);\n    this.libMuted = true;\n  }\n\n  _libUnmute() {\n    if (this.libMuted) {\n      this._setGain(1);\n      this.libMuted = false;\n    }\n  }\n\n  _setGain(gain) {\n    this.createAudioContextIfNone();\n    if (this.gainNode) {\n      this.gainNode.gain.setValueAtTime(gain, this.audioContext.currentTime);\n    }\n  }\n\n  _setSamplesToAudioBuffer(audioBuffer, leftChannelSamples, rightChannelSamples) {\n    if (audioBuffer.copyToChannel) {\n      audioBuffer.copyToChannel(leftChannelSamples, 0, 0);\n      audioBuffer.copyToChannel(rightChannelSamples, 1, 0);\n    } else {\n      // Safari fallback\n      audioBuffer.getChannelData(0).set(leftChannelSamples);\n      audioBuffer.getChannelData(1).set(rightChannelSamples);\n    }\n  }\n\n  // https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string/38858127\n  _arrayBufferToBase64(buffer) {\n    let binary = '';\n    let bytes = new Uint8Array(buffer);\n    let len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n}\n","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nimport GbChannelWebAudio from './gbchannel';\n\n// The minimum fps we can have, before we start time stretching for slowness\nconst SLOW_TIME_STRETCH_MIN_FPS = 57;\n\nclass WasmBoyAudioService {\n  constructor() {\n    // Wasmboy instance and memory\n    this.worker = undefined;\n    this.updateAudioCallback = undefined;\n\n    // Our Channels\n    this.gbChannels = {\n      master: new GbChannelWebAudio('master'),\n      channel1: new GbChannelWebAudio('channel1'),\n      channel2: new GbChannelWebAudio('channel2'),\n      channel3: new GbChannelWebAudio('channel3'),\n      channel4: new GbChannelWebAudio('channel4')\n    };\n    this._createAudioContextIfNone();\n\n    // Mute all the child channels,\n    // As we will assume all channels are enabled\n    if (typeof window !== 'undefined') {\n      this.gbChannels.channel1._libMute();\n      this.gbChannels.channel2._libMute();\n      this.gbChannels.channel3._libMute();\n      this.gbChannels.channel4._libMute();\n    }\n\n    // Average fps for time stretching\n    this.averageTimeStretchFps = [];\n\n    this.speed = 1.0;\n\n    // Our sound output Location, we will initialize this in init\n    this.WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION = 0;\n    this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION = 0;\n  }\n\n  initialize(updateAudioCallback) {\n    const initializeTask = async () => {\n      this.updateAudioCallback = updateAudioCallback;\n\n      this.averageTimeStretchFps = [];\n\n      this.speed = 1.0;\n\n      this._createAudioContextIfNone();\n      this.cancelAllAudio();\n\n      // Lastly get our audio constants\n      return this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      });\n    };\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Dont wait for raf.\n          // Audio being shown is not dependent on the browser drawing a frame :)\n\n          // Just send the message directly\n          this.playAudio(eventData.message);\n\n          // Next, send back how much forward latency\n          // we have\n          let latency = 0;\n          let currentTime = this.gbChannels.master.getCurrentTime();\n          let playtime = this.gbChannels.master.getPlayTime();\n          if (currentTime && currentTime > 0) {\n            latency = playtime - currentTime;\n          }\n          this.worker.postMessageIgnoreResponse({\n            type: WORKER_MESSAGE_TYPE.AUDIO_LATENCY,\n            latency\n          });\n          return;\n        }\n      }\n    });\n  }\n\n  getAudioChannels() {\n    return this.gbChannels;\n  }\n\n  setSpeed(speed) {\n    this.speed = speed;\n    this.cancelAllAudio(true);\n    this.resetTimeStretch();\n  }\n\n  resetTimeStretch() {\n    // Simply reset our average FPS counter array\n    this.averageTimeStretchFps = [];\n  }\n\n  // Function to queue up and audio buyffer to be played\n  // Returns a promise so that we may \"sync by audio\"\n  // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n  playAudio(audioMessage) {\n    let currentFps = audioMessage.fps;\n    let allowFastSpeedStretching = audioMessage.allowFastSpeedStretching;\n    let numberOfSamples = audioMessage.numberOfSamples;\n\n    // Find our averageFps\n    let fps = currentFps || 60;\n\n    // Check if we got a huge fps outlier.\n    // If so, let's just reset our average.\n    // This will fix the slow gradual ramp down\n    const fpsDifference = Math.abs(currentFps - this.averageTimeStretchFps[this.averageTimeStretchFps.length - 1]);\n    if (fpsDifference && fpsDifference >= 15) {\n      this.resetTimeStretch();\n    }\n\n    // Find our average fps for time stretching\n    this.averageTimeStretchFps.push(currentFps);\n    // TODO Make the multiplier Const the timeshift speed\n    if (this.averageTimeStretchFps.length > Math.floor(SLOW_TIME_STRETCH_MIN_FPS * 3)) {\n      this.averageTimeStretchFps.shift();\n    }\n\n    // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n    if (this.averageTimeStretchFps.length >= SLOW_TIME_STRETCH_MIN_FPS) {\n      fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      fps = Math.floor(fps / this.averageTimeStretchFps.length);\n    }\n\n    // Find if we should time stretch this sample or not from our current fps\n    let playbackRate = 1.0;\n    let shouldTimeStretch = (fps < SLOW_TIME_STRETCH_MIN_FPS || allowFastSpeedStretching) && this.speed === 1.0;\n    if (shouldTimeStretch) {\n      // Has to be 60 to get accurent playback regarless of fps cap\n      playbackRate = playbackRate * (fps / 60);\n      if (playbackRate <= 0) {\n        playbackRate = 0.01;\n      }\n    }\n\n    // Apply our speed to the playback rate\n    playbackRate = playbackRate * this.speed;\n\n    // Play the master channel\n    this.gbChannels.master.playAudio(\n      numberOfSamples,\n      audioMessage.audioBuffer.left,\n      audioMessage.audioBuffer.right,\n      playbackRate,\n      this.updateAudioCallback\n    );\n\n    // Play on all of our channels if we have buffers for them\n    for (let i = 0; i < 4; i++) {\n      let channelNumber = i + 1;\n\n      if (audioMessage[`channel${channelNumber}Buffer`]) {\n        this.gbChannels[`channel${channelNumber}`].playAudio(\n          numberOfSamples,\n          audioMessage[`channel${channelNumber}Buffer`].left,\n          audioMessage[`channel${channelNumber}Buffer`].right,\n          playbackRate,\n          this.updateAudioCallback\n        );\n      }\n    }\n\n    let playingAllChannels =\n      !this.gbChannels.channel1.muted &&\n      !this.gbChannels.channel2.muted &&\n      !this.gbChannels.channel3.muted &&\n      !this.gbChannels.channel4.muted;\n\n    // Mute and unmute accordingly\n    if (this.gbChannels.master.muted && playingAllChannels) {\n      this.gbChannels.master.unmute();\n\n      // We want to \"force\" mute here\n      // Because master is secretly playing all the audio,\n      // But we want the channels to appear not muted :)\n      this.gbChannels.channel1._libMute();\n      this.gbChannels.channel2._libMute();\n      this.gbChannels.channel3._libMute();\n      this.gbChannels.channel4._libMute();\n    } else if (!this.gbChannels.master.muted && !playingAllChannels) {\n      this.gbChannels.master.mute();\n\n      this.gbChannels.channel1._libUnmute();\n      this.gbChannels.channel2._libUnmute();\n      this.gbChannels.channel3._libUnmute();\n      this.gbChannels.channel4._libUnmute();\n    }\n  }\n\n  // Functions to simply run on all of our channels\n\n  // Ensure that Audio is blessed.\n  // Meaning, the audioContext won't be\n  // affected by any autoplay issues.\n  // https://www.chromium.org/audio-video/autoplay\n  resumeAudioContext() {\n    this._applyOnAllChannels('resumeAudioContext');\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    this._applyOnAllChannels('cancelAllAudio', [stopCurrentAudio]);\n  }\n\n  _createAudioContextIfNone() {\n    this._applyOnAllChannels('createAudioContextIfNone');\n  }\n\n  _applyOnAllChannels(functionKey, argsArray) {\n    Object.keys(this.gbChannels).forEach(gbChannelKey => {\n      this.gbChannels[gbChannelKey][functionKey].apply(this.gbChannels[gbChannelKey], argsArray);\n    });\n  }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\n\n// Need to wrap in rollup replace to stop\n// node commonjs from breaking\n/*ROLLUP_REPLACE_BROWSER\nimport idb from 'idb';\nROLLUP_REPLACE_BROWSER*/\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db\n          .transaction('keyval')\n          .objectStore('keyval')\n          .get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  };\n}\n\nexport const idbKeyval = keyval;\n","// Taken/Modified From: https://github.com/photopea/UZIP.js\n\nlet UZIP = {};\n\n// Make it a hacky es module\nconst uzip = UZIP;\nexport default uzip;\n\nUZIP['parse'] = function(\n  buf // ArrayBuffer\n) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint,\n    o = 0,\n    out = {};\n  let data = new Uint8Array(buf);\n  let eocd = data.length - 4;\n\n  while (rUi(data, eocd) != 0x06054b50) eocd--;\n\n  o = eocd;\n  o += 4; // sign  = 0x06054b50\n  o += 4; // disks = 0;\n  let cnu = rUs(data, o);\n  o += 2;\n  let cnt = rUs(data, o);\n  o += 2;\n\n  let csize = rUi(data, o);\n  o += 4;\n  let coffs = rUi(data, o);\n  o += 4;\n\n  o = coffs;\n  for (let i = 0; i < cnu; i++) {\n    let sign = rUi(data, o);\n    o += 4;\n    o += 4; // versions;\n    o += 4; // flag + compr\n    o += 4; // time\n\n    let crc32 = rUi(data, o);\n    o += 4;\n    let csize = rUi(data, o);\n    o += 4;\n    let usize = rUi(data, o);\n    o += 4;\n\n    let nl = rUs(data, o),\n      el = rUs(data, o + 2),\n      cl = rUs(data, o + 4);\n    o += 6; // name, extra, comment\n    o += 8; // disk, attribs\n\n    let roff = rUi(data, o);\n    o += 4;\n    o += nl + el + cl;\n\n    UZIP._readLocal(data, roff, out, csize, usize);\n  }\n  //console.log(out);\n  return out;\n};\n\nUZIP._readLocal = function(data, o, out, csize, usize) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint;\n  let sign = rUi(data, o);\n  o += 4;\n  let ver = rUs(data, o);\n  o += 2;\n  let gpflg = rUs(data, o);\n  o += 2;\n  //if((gpflg&8)!=0) throw \"unknown sizes\";\n  let cmpr = rUs(data, o);\n  o += 2;\n\n  let time = rUi(data, o);\n  o += 4;\n\n  let crc32 = rUi(data, o);\n  o += 4;\n  //let csize = rUi(data, o);  o+=4;\n  //let usize = rUi(data, o);  o+=4;\n  o += 8;\n\n  let nlen = rUs(data, o);\n  o += 2;\n  let elen = rUs(data, o);\n  o += 2;\n\n  let name = UZIP.bin.readUTF8(data, o, nlen);\n  o += nlen;\n  o += elen;\n\n  //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), \"csize, usize\", csize, usize, nlen, elen, name, o);\n\n  let file = new Uint8Array(data.buffer, o);\n  if (false) {\n  } else if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n  else if (cmpr == 8) {\n    let buf = new Uint8Array(usize);\n    UZIP.inflateRaw(file, buf);\n    //let nbuf = pako[\"inflateRaw\"](file);\n    //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw \"e\";  }\n    out[name] = buf;\n  } else throw 'unknown compression method: ' + cmpr;\n};\n\nUZIP.inflateRaw = function(file, buf) {\n  return UZIP.F.inflate(file, buf);\n};\nUZIP.inflate = function(file, buf) {\n  let CMF = file[0],\n    FLG = file[1];\n  let CM = CMF & 15,\n    CINFO = CMF >>> 4;\n  //console.log(CM, CINFO,CMF,FLG);\n  return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n};\nUZIP.deflate = function(data, opts /*, buf, off*/) {\n  if (opts == null) opts = { level: 6 };\n  let off = 0,\n    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  buf[off] = 120;\n  buf[off + 1] = 156;\n  off += 2;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  let crc = UZIP.adler(data, 0, data.length);\n  buf[off + 0] = (crc >>> 24) & 255;\n  buf[off + 1] = (crc >>> 16) & 255;\n  buf[off + 2] = (crc >>> 8) & 255;\n  buf[off + 3] = (crc >>> 0) & 255;\n  return new Uint8Array(buf.buffer, 0, off + 4);\n};\nUZIP.deflateRaw = function(data, opts) {\n  if (opts == null) opts = { level: 6 };\n  let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  let off;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  return new Uint8Array(buf.buffer, 0, off);\n};\n\nUZIP.encode = function(obj) {\n  let tot = 0,\n    wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let zpd = {};\n  for (let p in obj) {\n    let cpr = !UZIP._noNeed(p),\n      buf = obj[p],\n      crc = UZIP.crc.crc(buf, 0, buf.length);\n    zpd[p] = { cpr: cpr, usize: buf.length, crc: crc, file: cpr ? UZIP.deflateRaw(buf) : buf };\n  }\n\n  for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);\n  tot += 22;\n\n  let data = new Uint8Array(tot),\n    o = 0;\n  let fof = [];\n\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 0);\n  }\n  let i = 0,\n    ioff = o;\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);\n  }\n  let csize = o - ioff;\n\n  wUi(data, o, 0x06054b50);\n  o += 4;\n  o += 4; // disks\n  wUs(data, o, i);\n  o += 2;\n  wUs(data, o, i);\n  o += 2; // number of c d records\n  wUi(data, o, csize);\n  o += 4;\n  wUi(data, o, ioff);\n  o += 4;\n  o += 2;\n  return data.buffer;\n};\n// no need to compress .PNG, .ZIP, .JPEG ....\nUZIP._noNeed = function(fn) {\n  let ext = fn\n    .split('.')\n    .pop()\n    .toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;\n};\n\nUZIP._writeHeader = function(data, o, p, obj, t, roff) {\n  let wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let file = obj.file;\n\n  wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n  if (t == 1) o += 2; // ver made by\n  wUs(data, o, 20);\n  o += 2; // ver\n  wUs(data, o, 0);\n  o += 2; // gflip\n  wUs(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  wUi(data, o, 0);\n  o += 4; // time\n  wUi(data, o, obj.crc);\n  o += 4; // crc32\n  wUi(data, o, file.length);\n  o += 4; // csize\n  wUi(data, o, obj.usize);\n  o += 4; // usize\n\n  wUs(data, o, UZIP.bin.sizeUTF8(p));\n  o += 2; // nlen\n  wUs(data, o, 0);\n  o += 2; // elen\n\n  if (t == 1) {\n    o += 2; // comment length\n    o += 2; // disk number\n    o += 6; // attributes\n    wUi(data, o, roff);\n    o += 4; // usize\n  }\n  let nlen = UZIP.bin.writeUTF8(data, o, p);\n  o += nlen;\n  if (t == 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n  return o;\n};\n\nUZIP.crc = {\n  table: (function() {\n    let tab = new Uint32Array(256);\n    for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ (c >>> 1);\n        else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  })(),\n  update: function(c, buf, off, len) {\n    for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);\n    return c;\n  },\n  crc: function(b, o, l) {\n    return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUZIP.adler = function(data, o, len) {\n  let a = 1,\n    b = 0;\n  let off = o,\n    end = o + len;\n  while (off < end) {\n    let eend = Math.min(off + 5552, end);\n    while (off < eend) {\n      a += data[off++];\n      b += a;\n    }\n    a = a % 65521;\n    b = b % 65521;\n  }\n  return (b << 16) | a;\n};\n\nUZIP.bin = {\n  readUshort: function(buff, p) {\n    return buff[p] | (buff[p + 1] << 8);\n  },\n  writeUshort: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n  },\n  readUint: function(buff, p) {\n    return buff[p + 3] * (256 * 256 * 256) + ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p]);\n  },\n  writeUint: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n    buff[p + 2] = (n >> 16) & 255;\n    buff[p + 3] = (n >> 24) & 255;\n  },\n  readASCII: function(buff, p, l) {\n    let s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function(data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  pad: function(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function(buff, p, l) {\n    let s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UZIP.bin.readASCII(buff, p, l);\n    }\n    return ns;\n  },\n  writeUTF8: function(buff, p, str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        buff[p + i] = code;\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        buff[p + i] = 192 | (code >> 6);\n        buff[p + i + 1] = 128 | ((code >> 0) & 63);\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        buff[p + i] = 224 | (code >> 12);\n        buff[p + i + 1] = 128 | ((code >> 6) & 63);\n        buff[p + i + 2] = 128 | ((code >> 0) & 63);\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        buff[p + i] = 240 | (code >> 18);\n        buff[p + i + 1] = 128 | ((code >> 12) & 63);\n        buff[p + i + 2] = 128 | ((code >> 6) & 63);\n        buff[p + i + 3] = 128 | ((code >> 0) & 63);\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  },\n  sizeUTF8: function(str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  }\n};\n\nUZIP.F = {};\n\nUZIP.F.deflateRaw = function(data, out, opos, lvl) {\n  let opts = [\n    /*\n\t\t ush good_length; /* reduce lazy search above this match length \n\t\t ush max_lazy;    /* do not perform lazy search above this match length \n         ush nice_length; /* quit search above this match length \n\t*/\n    /*      good lazy nice chain */\n    /* 0 */ [0, 0, 0, 0, 0] /* store only */,\n    /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,\n    /* 2 */ [4, 5, 16, 8, 0],\n    /* 3 */ [4, 6, 16, 16, 0],\n\n    /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,\n    /* 5 */ [8, 16, 32, 32, 0],\n    /* 6 */ [8, 16, 128, 128, 0],\n    /* 7 */ [8, 32, 128, 256, 0],\n    /* 8 */ [32, 128, 258, 1024, 1],\n    /* 9 */ [32, 258, 258, 4096, 1]\n  ]; /* max compression */\n\n  let opt = opts[lvl];\n\n  let U = UZIP.F.U,\n    goodIndex = UZIP.F._goodIndex,\n    hash = UZIP.F._hash,\n    putsE = UZIP.F._putsE;\n  let i = 0,\n    pos = opos << 3,\n    cvrd = 0,\n    dlen = data.length;\n\n  if (lvl == 0) {\n    while (i < dlen) {\n      let len = Math.min(0xffff, dlen - i);\n      putsE(out, pos, i + len == dlen ? 1 : 0);\n      pos = UZIP.F._copyExact(data, i, len, out, pos + 8);\n      i += len;\n    }\n    return pos >>> 3;\n  }\n\n  let lits = U.lits,\n    strt = U.strt,\n    prev = U.prev,\n    li = 0,\n    lc = 0,\n    bs = 0,\n    ebits = 0,\n    c = 0,\n    nc = 0; // last_item, literal_count, block_start\n  if (dlen > 2) {\n    nc = UZIP.F._hash(data, 0);\n    strt[nc] = 0;\n  }\n  let nmch = 0,\n    nmci = 0;\n\n  for (i = 0; i < dlen; i++) {\n    c = nc;\n    //*\n    if (i + 1 < dlen - 2) {\n      nc = UZIP.F._hash(data, i + 1);\n      let ii = (i + 1) & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    } //*/\n    if (cvrd <= i) {\n      if (li > 14000 || lc > 26697) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n        pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      let mch = 0;\n      //if(nmci==i) mch= nmch;  else\n      if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      /*\n\t\t\tif(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {\n\t\t\t\tnmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;\n\t\t\t\t//let mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;\n\t\t\t\tif((nmch>>>16)>(mch>>>16)) mch=0;\n\t\t\t}//*/\n      let len = mch >>> 16,\n        dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n      if (mch != 0) {\n        let len = mch >>> 16,\n          dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n        let lgi = goodIndex(len, U.of0);\n        U.lhst[257 + lgi]++;\n        let dgi = goodIndex(dst, U.df0);\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = (len << 23) | (i - cvrd);\n        lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n      lc++;\n    }\n  }\n  if (bs != i || data.length == 0) {\n    if (cvrd < i) {\n      lits[li] = i - cvrd;\n      li += 2;\n      cvrd = i;\n    }\n    pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n    li = 0;\n    lc = 0;\n    li = lc = ebits = 0;\n    bs = i;\n  }\n  while ((pos & 7) != 0) pos++;\n  return pos >>> 3;\n};\nUZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {\n  let ci = i & 0x7fff,\n    pi = prev[ci];\n  //console.log(\"----\", i);\n  let dif = (ci - pi + (1 << 15)) & 0x7fff;\n  if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;\n  let tl = 0,\n    td = 0; // top length, top distance\n  let dlim = Math.min(0x7fff, i);\n  while (dif <= dlim && --chain != 0 && pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/) {\n    if (tl == 0 || data[i + tl] == data[i + tl - dif]) {\n      let cl = UZIP.F._howLong(data, i, dif);\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n        if (dif + 2 < cl) cl = dif + 2;\n        let maxd = 0; // pi does not point to the start of the word\n        for (let j = 0; j < cl - 2; j++) {\n          let ei = (i - dif + j + (1 << 15)) & 0x7fff;\n          let li = prev[ei];\n          let curd = (ei - li + (1 << 15)) & 0x7fff;\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        } //*/\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += (ci - pi + (1 << 15)) & 0x7fff;\n  }\n  return (tl << 16) | td;\n};\nUZIP.F._howLong = function(data, i, dif) {\n  if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;\n  let oi = i,\n    l = Math.min(data.length, i + 258);\n  i += 3;\n  //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n  while (i < l && data[i] == data[i - dif]) i++;\n  return i - oi;\n};\nUZIP.F._hash = function(data, i) {\n  return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\n  //let hash_shift = 0, hash_mask = 255;\n  //let h = data[i+1] % 251;\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  //return h | (data[i]<<8);\n  //return (data[i] | (data[i+1]<<8));\n};\n//UZIP.___toth = 0;\nUZIP.saved = 0;\nUZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  let U = UZIP.F.U,\n    putsF = UZIP.F._putsF,\n    putsE = UZIP.F._putsE;\n\n  //*\n  let T, ML, MD, MH, numl, numd, numh, lset, dset;\n  U.lhst[256]++;\n  T = UZIP.F.getTrees();\n  ML = T[0];\n  MD = T[1];\n  MH = T[2];\n  numl = T[3];\n  numd = T[4];\n  numh = T[5];\n  lset = T[6];\n  dset = T[7];\n\n  let cstSize = (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\n  let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);\n  let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (let j = 0; j < 286; j++) U.lhst[j] = 0;\n  for (let j = 0; j < 30; j++) U.dhst[j] = 0;\n  for (let j = 0; j < 19; j++) U.ihst[j] = 0;\n  //*/\n  let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n  putsF(out, pos, BFINAL);\n  putsF(out, pos + 1, BTYPE);\n  pos += 3;\n\n  let opos = pos;\n  if (BTYPE == 0) {\n    while ((pos & 7) != 0) pos++;\n    pos = UZIP.F._copyExact(data, o0, l0, out, pos);\n  } else {\n    let ltree, dtree;\n    if (BTYPE == 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    }\n    if (BTYPE == 2) {\n      UZIP.F.makeCodes(U.ltree, ML);\n      UZIP.F.revCodes(U.ltree, ML);\n      UZIP.F.makeCodes(U.dtree, MD);\n      UZIP.F.revCodes(U.dtree, MD);\n      UZIP.F.makeCodes(U.itree, MH);\n      UZIP.F.revCodes(U.itree, MH);\n\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      putsE(out, pos, numl - 257);\n      pos += 5; // 286\n      putsE(out, pos, numd - 1);\n      pos += 5; // 30\n      putsE(out, pos, numh - 4);\n      pos += 4; // 19\n\n      for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n      pos += 3 * numh;\n      pos = UZIP.F._codeTiny(lset, U.itree, out, pos);\n      pos = UZIP.F._codeTiny(dset, U.itree, out, pos);\n    }\n\n    let off = o0;\n    for (let si = 0; si < li; si += 2) {\n      let qb = lits[si],\n        len = qb >>> 23,\n        end = off + (qb & ((1 << 23) - 1));\n      while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);\n\n      if (len != 0) {\n        let qc = lits[si + 1],\n          dst = qc >> 16,\n          lgi = (qc >> 8) & 255,\n          dgi = qc & 255;\n        pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);\n        putsE(out, pos, len - U.of0[lgi]);\n        pos += U.exb[lgi];\n\n        pos = UZIP.F._writeLit(dgi, dtree, out, pos);\n        putsF(out, pos, dst - U.df0[dgi]);\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n    pos = UZIP.F._writeLit(256, ltree, out, pos);\n  }\n  //console.log(pos-opos, fxdSize, dynSize, cstSize);\n  return pos;\n};\nUZIP.F._copyExact = function(data, off, len, out, pos) {\n  let p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8);\n  //for(let i=0; i<len; i++) out[p8+i]=data[off+i];\n  return pos + ((len + 4) << 3);\n};\n/*\n\tInteresting facts:\n\t- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\n*/\n\nUZIP.F.getTrees = function() {\n  let U = UZIP.F.U;\n  let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);\n  let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);\n  let lset = [],\n    numl = UZIP.F._lenCodes(U.ltree, lset);\n  let dset = [],\n    numd = UZIP.F._lenCodes(U.dtree, dset);\n  for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n  for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n  let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);\n  let numh = 19;\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n};\nUZIP.F.getSecond = function(a) {\n  let b = [];\n  for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);\n  return b;\n};\nUZIP.F.nonZero = function(a) {\n  let b = '';\n  for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';\n  return b;\n};\nUZIP.F.contSize = function(tree, hst) {\n  let s = 0;\n  for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n  return s;\n};\nUZIP.F._codeTiny = function(set, tree, out, pos) {\n  for (let i = 0; i < set.length; i += 2) {\n    let l = set[i],\n      rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);\n    pos = UZIP.F._writeLit(l, tree, out, pos);\n    let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;\n    if (l > 15) {\n      UZIP.F._putsE(out, pos, rst, rsl);\n      pos += rsl;\n    }\n  }\n  return pos;\n};\nUZIP.F._lenCodes = function(tree, set) {\n  let len = tree.length;\n  while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0\n  for (let i = 0; i < len; i += 2) {\n    let l = tree[i + 1],\n      nxt = i + 3 < len ? tree[i + 3] : -1,\n      nnxt = i + 5 < len ? tree[i + 5] : -1,\n      prv = i == 0 ? -1 : tree[i - 1];\n    if (l == 0 && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);\n      else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l == prv && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else set.push(l, 0);\n  }\n  return len >>> 1;\n};\nUZIP.F._hufTree = function(hst, tree, MAXL) {\n  let list = [],\n    hl = hst.length,\n    tl = tree.length,\n    i = 0;\n  for (i = 0; i < tl; i += 2) {\n    tree[i] = 0;\n    tree[i + 1] = 0;\n  }\n  for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });\n  let end = list.length,\n    l2 = list.slice(0);\n  if (end == 0) return 0; // empty histogram (usually for dist)\n  if (end == 1) {\n    let lit = list[0].lit,\n      l2 = lit == 0 ? 1 : 0;\n    tree[(lit << 1) + 1] = 1;\n    tree[(l2 << 1) + 1] = 1;\n    return 1;\n  }\n  list.sort(function(a, b) {\n    return a.f - b.f;\n  });\n  let a = list[0],\n    b = list[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };\n  while (i1 != end - 1) {\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      a = list[i0++];\n    } else {\n      a = list[i2++];\n    }\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      b = list[i0++];\n    } else {\n      b = list[i2++];\n    }\n    list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };\n  }\n  let maxl = UZIP.F.setDepth(list[i1 - 1], 0);\n  if (maxl > MAXL) {\n    UZIP.F.restrictDepth(l2, MAXL, maxl);\n    maxl = MAXL;\n  }\n  for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;\n  return maxl;\n};\n\nUZIP.F.setDepth = function(t, d) {\n  if (t.lit != -1) {\n    t.d = d;\n    return d;\n  }\n  return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));\n};\n\nUZIP.F.restrictDepth = function(dps, MD, maxl) {\n  let i = 0,\n    bCost = 1 << (maxl - MD),\n    dbt = 0;\n  dps.sort(function(a, b) {\n    return b.d == a.d ? a.f - b.f : b.d - a.d;\n  });\n\n  for (i = 0; i < dps.length; i++)\n    if (dps[i].d > MD) {\n      let od = dps[i].d;\n      dps[i].d = MD;\n      dbt += bCost - (1 << (maxl - od));\n    } else break;\n  dbt = dbt >>> (maxl - MD);\n  while (dbt > 0) {\n    let od = dps[i].d;\n    if (od < MD) {\n      dps[i].d++;\n      dbt -= 1 << (MD - od - 1);\n    } else i++;\n  }\n  for (; i >= 0; i--)\n    if (dps[i].d == MD && dbt < 0) {\n      dps[i].d--;\n      dbt++;\n    }\n  if (dbt != 0) console.log('debt left');\n};\n\nUZIP.F._goodIndex = function(v, arr) {\n  let i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n};\nUZIP.F._writeLit = function(ch, ltree, out, pos) {\n  UZIP.F._putsF(out, pos, ltree[ch << 1]);\n  return pos + ltree[(ch << 1) + 1];\n};\n\nUZIP.F.inflate = function(data, buf) {\n  if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);\n  let F = UZIP.F,\n    bitsF = F._bitsF,\n    bitsE = F._bitsE,\n    decodeTiny = F._decodeTiny,\n    makeCodes = F.makeCodes,\n    codes2map = F.codes2map,\n    get17 = F._get17;\n  let U = F.U;\n\n  let noBuf = buf == null;\n  if (noBuf) buf = new Uint8Array((data.length >> 2) << 3);\n\n  let BFINAL = 0,\n    BTYPE = 0,\n    HLIT = 0,\n    HDIST = 0,\n    HCLEN = 0,\n    ML = 0,\n    MD = 0;\n  let off = 0,\n    pos = 0;\n  let lmap, dmap;\n\n  while (BFINAL == 0) {\n    BFINAL = bitsF(data, pos, 1);\n    BTYPE = bitsF(data, pos + 1, 2);\n    pos += 3;\n    //console.log(BFINAL, BTYPE);\n\n    if (BTYPE == 0) {\n      if ((pos & 7) != 0) pos += 8 - (pos & 7);\n      let p8 = (pos >>> 3) + 4,\n        len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),\n      if (noBuf) buf = UZIP.F._check(buf, off + len);\n      buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off);\n      //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];\n      //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n      pos = (p8 + len) << 3;\n      off += len;\n      continue;\n    }\n    if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));\n    if (BTYPE == 1) {\n      lmap = U.flmap;\n      dmap = U.fdmap;\n      ML = (1 << 9) - 1;\n      MD = (1 << 5) - 1;\n    }\n    if (BTYPE == 2) {\n      HLIT = bitsE(data, pos, 5) + 257;\n      HDIST = bitsE(data, pos + 5, 5) + 1;\n      HCLEN = bitsE(data, pos + 10, 4) + 4;\n      pos += 14;\n\n      let ppos = pos;\n      for (let i = 0; i < 38; i += 2) {\n        U.itree[i] = 0;\n        U.itree[i + 1] = 0;\n      }\n      let tl = 1;\n      for (let i = 0; i < HCLEN; i++) {\n        let l = bitsE(data, pos + i * 3, 3);\n        U.itree[(U.ordr[i] << 1) + 1] = l;\n        if (l > tl) tl = l;\n      }\n      pos += 3 * HCLEN; //console.log(itree);\n      makeCodes(U.itree, tl);\n      codes2map(U.itree, tl, U.imap);\n\n      lmap = U.lmap;\n      dmap = U.dmap;\n\n      let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);\n      ML = (1 << (ml >>> 24)) - 1;\n      pos += ml & 0xffffff;\n      makeCodes(U.ltree, ml >>> 24);\n      codes2map(U.ltree, ml >>> 24, lmap);\n\n      let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);\n      MD = (1 << (md >>> 24)) - 1;\n      pos += md & 0xffffff;\n      makeCodes(U.dtree, md >>> 24);\n      codes2map(U.dtree, md >>> 24, dmap);\n    }\n    //let ooff=off, opos=pos;\n    while (true) {\n      let code = lmap[get17(data, pos) & ML];\n      pos += code & 15;\n      let lit = code >>> 4; //U.lhst[lit]++;\n      if (lit >>> 8 == 0) {\n        buf[off++] = lit;\n      } else if (lit == 256) {\n        break;\n      } else {\n        let end = off + lit - 254;\n        if (lit > 264) {\n          let ebs = U.ldef[lit - 257];\n          end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);\n          pos += ebs & 7;\n        }\n        //UZIP.F.dst[end-off]++;\n\n        let dcode = dmap[get17(data, pos) & MD];\n        pos += dcode & 15;\n        let dlit = dcode >>> 4;\n        let dbs = U.ddef[dlit],\n          dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);\n        pos += dbs & 15;\n\n        //let o0 = off-dst, stp = Math.min(end-off, dst);\n        //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n        //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n        //if(dst==1) buf.fill(buf[off-1], off, end);  else\n        while (off < end) {\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n        }\n        off = end;\n        //while(off!=end) {  buf[off]=buf[off++-dst];  }\n      }\n    }\n    //console.log(off-ooff, (pos-opos)>>>3);\n  }\n  //console.log(UZIP.F.dst);\n  //console.log(tlen, dlen, off-tlen+tcnt);\n  return buf.length == off ? buf : buf.slice(0, off);\n};\nUZIP.F._check = function(buf, len) {\n  let bl = buf.length;\n  if (len <= bl) return buf;\n  let nbuf = new Uint8Array(bl << 1);\n  for (let i = 0; i < bl; i += 4) {\n    nbuf[i] = buf[i];\n    nbuf[i + 1] = buf[i + 1];\n    nbuf[i + 2] = buf[i + 2];\n    nbuf[i + 3] = buf[i + 3];\n  }\n  return nbuf;\n};\n\nUZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {\n  let opos = pos;\n  let bitsE = UZIP.F._bitsE,\n    get17 = UZIP.F._get17;\n  let dlen = len << 1,\n    i = 0,\n    mx = 0;\n  //if(pos<1000) console.log(\"--------\");\n  //console.log(\"----\", pos, \":\",  data[7],data[8], data[9], data[10], data[11]);\n  while (i < dlen) {\n    let code = lmap[get17(data, pos) & LL];\n    pos += code & 15;\n    let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);\n    //if(i<20)console.log(lit, code>>>9, pos);\n    if (lit <= 15) {\n      tree[i] = 0;\n      tree[i + 1] = lit;\n      if (lit > mx) mx = lit;\n      i += 2;\n    } else {\n      let ll = 0,\n        n = 0;\n      if (lit == 16) {\n        n = (3 + bitsE(data, pos, 2)) << 1;\n        pos += 2;\n        ll = tree[i - 1];\n      } else if (lit == 17) {\n        n = (3 + bitsE(data, pos, 3)) << 1;\n        pos += 3;\n      } else if (lit == 18) {\n        n = (11 + bitsE(data, pos, 7)) << 1;\n        pos += 7;\n      }\n      let ni = i + n;\n      while (i < ni) {\n        tree[i] = 0;\n        tree[i + 1] = ll;\n        i += 2;\n      }\n    }\n  }\n  let tl = tree.length;\n  while (i < tl) {\n    tree[i + 1] = 0;\n    i += 2;\n  }\n  return (mx << 24) | (pos - opos);\n};\n\nUZIP.F.makeCodes = function(tree, MAX_BITS) {\n  // code, length\n  let U = UZIP.F.U;\n  let max_code = tree.length;\n  let code, bits, n, i, len;\n\n  let bl_count = U.bl_count;\n  for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;\n  for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;\n\n  let next_code = U.next_code; // smallest code for each length\n\n  code = 0;\n  bl_count[0] = 0;\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n\n  for (n = 0; n < max_code; n += 2) {\n    len = tree[n + 1];\n    if (len != 0) {\n      tree[n] = next_code[len];\n      next_code[len]++;\n    }\n  }\n};\nUZIP.F.codes2map = function(tree, MAX_BITS, map) {\n  let max_code = tree.length;\n  let U = UZIP.F.U,\n    r15 = U.rev15;\n  for (let i = 0; i < max_code; i += 2)\n    if (tree[i + 1] != 0) {\n      let lit = i >> 1;\n      let cl = tree[i + 1],\n        val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n      let rest = MAX_BITS - cl,\n        i0 = tree[i] << rest,\n        i1 = i0 + (1 << rest);\n      //tree[i]=r15[i0]>>>(15-MAX_BITS);\n      while (i0 != i1) {\n        let p0 = r15[i0] >>> (15 - MAX_BITS);\n        map[p0] = val;\n        i0++;\n      }\n    }\n};\nUZIP.F.revCodes = function(tree, MAX_BITS) {\n  let r15 = UZIP.F.U.rev15,\n    imb = 15 - MAX_BITS;\n  for (let i = 0; i < tree.length; i += 2) {\n    let i0 = tree[i] << (MAX_BITS - tree[i + 1]);\n    tree[i] = r15[i0] >>> imb;\n  }\n};\n\nUZIP.F._putsE = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n};\nUZIP.F._putsF = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n};\n\nUZIP.F._bitsE = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) & ((1 << length) - 1);\n};\nUZIP.F._bitsF = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7)) & ((1 << length) - 1);\n};\n/*\nUZIP.F._get9 = function(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nUZIP.F._get17 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7);\n};\nUZIP.F._get25 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16) | (dt[(pos >>> 3) + 3] << 24)) >>> (pos & 7);\n};\n\nUZIP.F.U = {\n  next_code: new Uint16Array(16),\n  bl_count: new Uint16Array(16),\n  ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n  of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n  exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n  ldef: new Uint16Array(32),\n  df0: [\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    65535,\n    65535\n  ],\n  dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n  ddef: new Uint32Array(32),\n  flmap: new Uint16Array(512),\n  fltree: [],\n  fdmap: new Uint16Array(32),\n  fdtree: [],\n  lmap: new Uint16Array(32768),\n  ltree: [],\n  dmap: new Uint16Array(32768),\n  dtree: [],\n  imap: new Uint16Array(512),\n  itree: [],\n  //rev9 : new Uint16Array(  512)\n  rev15: new Uint16Array(1 << 15),\n  lhst: new Uint32Array(286),\n  dhst: new Uint32Array(30),\n  ihst: new Uint32Array(19),\n  lits: new Uint32Array(15000),\n  strt: new Uint16Array(1 << 16),\n  prev: new Uint16Array(1 << 15)\n};\n\n(function() {\n  let U = UZIP.F.U;\n  let len = 1 << 15;\n  for (let i = 0; i < len; i++) {\n    let x = i;\n    x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);\n    x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);\n    x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);\n    x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);\n    U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;\n  }\n\n  for (let i = 0; i < 32; i++) {\n    U.ldef[i] = (U.of0[i] << 3) | U.exb[i];\n    U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];\n  }\n\n  let i = 0;\n  for (; i <= 143; i++) U.fltree.push(0, 8);\n  for (; i <= 255; i++) U.fltree.push(0, 9);\n  for (; i <= 279; i++) U.fltree.push(0, 7);\n  for (; i <= 287; i++) U.fltree.push(0, 8);\n  UZIP.F.makeCodes(U.fltree, 9);\n  UZIP.F.codes2map(U.fltree, 9, U.flmap);\n  UZIP.F.revCodes(U.fltree, 9);\n\n  for (i = 0; i < 32; i++) U.fdtree.push(0, 5);\n  UZIP.F.makeCodes(U.fdtree, 5);\n  UZIP.F.codes2map(U.fdtree, 5, U.fdmap);\n  UZIP.F.revCodes(U.fdtree, 5);\n\n  for (let i = 0; i < 19; i++) U.itree.push(0, 0);\n  for (let i = 0; i < 286; i++) U.ltree.push(0, 0);\n  for (let i = 0; i < 30; i++) U.dtree.push(0, 0);\n})();\n","// Modules\nimport uzip from '../3p/UZIP';\n\n// Collection of functions to parse roms\n// Private function to fetch a game\nexport const fetchROMAsByteArray = (ROM, loadOptions) => {\n  const fetchROMAsByteArrayTask = async () => {\n    // Check if we were passed straight bytes\n    if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {\n      return {\n        ROM: ROM\n      };\n    } else if (typeof ROM === 'object' && ROM.size) {\n      // We were passed a file from HTML file input\n\n      // Read the file as a Uint8Array\n      let byteArray = await getROMFromFileReaderAsByteArray(ROM);\n\n      if (ROM.name.toLowerCase().endsWith('.zip')) {\n        byteArray = await parseByteArrayAsZip(byteArray);\n      }\n\n      return {\n        ROM: byteArray,\n        name: ROM.name\n      };\n    } else {\n      // We were passed a URL\n\n      // Fetch the file\n      // First check if we have headers\n      const fetchHeaders = {};\n      if (loadOptions && loadOptions.headers) {\n        fetchHeaders.headers = loadOptions.headers;\n      }\n\n      let bytes = await fetch(ROM, fetchHeaders).then(blob => {\n        if (!blob.ok) {\n          return Promise.reject(blob);\n        }\n        return blob.arrayBuffer();\n      });\n\n      let fileName = ROM;\n      if (loadOptions && loadOptions.fileName) {\n        fileName = loadOptions.fileName;\n      }\n\n      // Get our byteArray\n      let byteArray = new Uint8Array(bytes);\n\n      if (fileName.toLowerCase().endsWith('.zip')) {\n        byteArray = await parseByteArrayAsZip(byteArray);\n      }\n\n      return {\n        ROM: byteArray,\n        name: fileName\n      };\n    }\n  };\n\n  return fetchROMAsByteArrayTask();\n};\n\nconst getROMFromFileReaderAsByteArray = async ROM => {\n  const fileReaderByteArray = await new Promise((resolve, reject) => {\n    // Read the file object\n    // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const byteArray = new Uint8Array(fileReader.result);\n      resolve(byteArray);\n    };\n    fileReader.readAsArrayBuffer(ROM);\n  });\n  return fileReaderByteArray;\n};\n\n// Function to parse and find the gb files within an archive\nconst parseByteArrayAsZip = async byteArray => {\n  // Parse the zip using UZIP\n  const unzipObject = await uzip.parse(byteArray);\n\n  // Find the ROM in the output\n  let foundROM = false;\n  const unzipObjectKeys = Object.keys(unzipObject);\n  unzipObjectKeys.some(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc') || lowercaseKey.includes('.bin')) {\n      foundROM = unzipObject[key];\n      return true;\n    }\n    return false;\n  });\n\n  if (!foundROM) {\n    throw new Error('Could not find a ROM in zip...');\n  }\n\n  return foundROM;\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WasmBoyPlugins } from '../plugins/plugins';\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmboyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  isAuto: undefined\n};\n\n// Function to return a save state of the current memory\nexport function getSaveState() {\n  // Save our internal wasmboy state to memory\n  // Should be done whenever we send back memory\n  // this.wasmInstance.exports.saveState();\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmboyMemory.wasmBoyInternalState = this.internalState;\n  saveState.wasmboyMemory.wasmBoyPaletteMemory = this.paletteMemory;\n  saveState.wasmboyMemory.gameBoyMemory = this.gameboyMemory;\n  saveState.wasmboyMemory.cartridgeRam = this.cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n\n  if (this.saveStateCallback) {\n    this.saveStateCallback(saveState);\n  }\n\n  WasmBoyPlugins.runHook({\n    key: 'saveState',\n    params: [saveState]\n  });\n\n  return saveState;\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Need to add a return value, and force all code in the block to be sync\n// https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n// http://vaughnroyko.com/idbonbeforeunload/\n// https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n// Solution:\n// ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n// Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\n\n// Function to create a save state, and store it as a localstorage token\nfunction _prepareAndStoreAutoSave() {\n  // Check if the game is currently playing\n  if (!this.internalState) {\n    return null;\n  }\n\n  // Get our cartridge ram and header\n  // Use this.cartridgeHeader and this.cartridgeRam\n  //const header = getCartridgeHeader.bind(this)();\n  //const cartridgeRam = getCartridgeRam.bind(this)();\n\n  // Get our save state, and un type our arrays\n  const saveState = getSaveState.bind(this)();\n  const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n  for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n    saveState.wasmboyMemory[saveStateMemoryKeys[i]] = Array.prototype.slice.call(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n  }\n\n  // Set isAuto\n  saveState.isAuto = true;\n\n  // Need to conert types arrays, and back, or selse wll get indexed JSON\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n\n  localStorage.setItem(\n    this.WASMBOY_UNLOAD_STORAGE,\n    JSON.stringify({\n      header: Array.prototype.slice.call(this.cartridgeHeader),\n      cartridgeRam: Array.prototype.slice.call(this.cartridgeRam),\n      saveState: saveState\n    })\n  );\n\n  return null;\n}\n\n// Function to find any autosaves in localstorage, and commit them to our idb\nfunction _findAndCommitAutoSave() {\n  const findAndCommitAutoSaveTask = async () => {\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmboyMemory[saveStateMemoryKeys[i]] = new Uint8Array(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      await this.saveCartridgeRam(header, cartridgeRam);\n      await this.saveState(header, saveState);\n    }\n  };\n\n  return findAndCommitAutoSaveTask();\n}\n\n// Function to set event listeners to run our unload handler\nexport function initializeAutoSave() {\n  // Set listeners to ensure we save our cartridge ram before closing\n  window.addEventListener(\n    'beforeunload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'unload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'pagehide',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  // Mobile Page visibility, for pressing home, closing tabs, task switcher, etc...\n  // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n  document.addEventListener('visibilitychange', () => {\n    // fires when user switches tabs, apps, goes to homescreen, etc.\n    // NOTE: This will not create a new save state in desktop browser,\n    // Because the localstorage string is only picked up on refresh :)\n    // Unless you force kill the browser or something, which is what we want\n    // Anyways\n    if (document.visibilityState === 'hidden') {\n      _prepareAndStoreAutoSave.bind(this)();\n    }\n  });\n\n  // Restore any autosave lingering to be committed\n  return _findAndCommitAutoSave.bind(this)();\n}\n","import { idbKeyval } from './idb';\n\n// Import worker stuff\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Fetch rom\nimport { fetchROMAsByteArray } from '../wasmboy/fetchrom';\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\nimport { initializeAutoSave } from './autosave.js';\n\nconst BOOT_ROM_KEY = 'boot-rom-';\n\nclass WasmBoyMemoryService {\n  constructor() {\n    this.worker = undefined;\n    this.maxNumberOfAutoSaveStates = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false,\n      BOOT: false\n    };\n\n    // Our different types of memory\n    this.bootRom = undefined;\n    this.cartridgeRom = undefined;\n    this.cartridgeRomFileName = undefined;\n    this.cartridgeHeader = undefined;\n    this.cartridgeRam = undefined;\n    this.gameboyMemory = undefined;\n    this.paletteMemory = undefined;\n    this.internalState = undefined;\n\n    // Going to set the key for idbKeyval as the cartridge header.\n    // Then, for each cartridge, it will return an object.\n    // there will be a cartridgeRam Key, settings Key, and a saveState key\n    // Not going to make one giant object, as we want to keep idb transactions light and fast\n    this.WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n    // Define some constants since calls to wasm are expensive\n    this.WASMBOY_GAME_BYTES_LOCATION = 0;\n    this.WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\n    this.WASMBOY_INTERNAL_STATE_SIZE = 0;\n    this.WASMBOY_INTERNAL_STATE_LOCATION = 0;\n    this.WASMBOY_INTERNAL_MEMORY_SIZE = 0;\n    this.WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\n    this.WASMBOY_PALETTE_MEMORY_SIZE = 0;\n    this.WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n\n    // Define some other constants\n    this.SUPPORTED_BOOT_ROM_TYPES = {\n      GB: 'GB',\n      GBC: 'GBC'\n    };\n  }\n\n  initialize(headless, maxNumberOfAutoSaveStates, saveStateCallback) {\n    this.maxNumberOfAutoSaveStates = maxNumberOfAutoSaveStates;\n    this.saveStateCallback = saveStateCallback;\n\n    const initializeTask = async () => {\n      await this._initializeConstants();\n\n      if (!headless) {\n        await initializeAutoSave.call(this);\n      }\n    };\n\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n\n    // Also set our handler\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Simply set our memory\n          const memoryTypes = Object.keys(eventData.message);\n          delete memoryTypes.type;\n\n          if (memoryTypes.includes(MEMORY_TYPE.BOOT_ROM)) {\n            this.bootRom = new Uint8Array(eventData.message[MEMORY_TYPE.BOOT_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n            this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n            this.cartridgeRam = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n            this.gameboyMemory = new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n            this.paletteMemory = new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n            this.internalState = new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]);\n          }\n\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to get all cartridge objects\n  // Saved in our indexed db\n  getSavedMemory() {\n    const getSavedMemoryTask = async () => {\n      const memory = [];\n      const keys = await idbKeyval.keys();\n\n      for (let i = 0; i < keys.length; i++) {\n        const cartridgeObject = await idbKeyval.get(keys[i]);\n        memory.push(cartridgeObject);\n      }\n\n      return memory;\n    };\n    return getSavedMemoryTask();\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.ROM = false;\n        this.loadedCartridgeMemoryState.RAM = false;\n\n        // Reset everything\n        this.cartridgeRom = undefined;\n        this.cartridgeHeader = undefined;\n        this.cartridgeRam = undefined;\n        this.gameboyMemory = undefined;\n        this.paletteMemory = undefined;\n        this.internalState = undefined;\n      });\n  }\n\n  isValidBootROMType(type) {\n    return Object.keys(this.SUPPORTED_BOOT_ROM_TYPES).some(bootROMTypeKey => {\n      return this.SUPPORTED_BOOT_ROM_TYPES[bootROMTypeKey] === type;\n    });\n  }\n\n  async addBootROM(type, file, fetchHeaders, additionalInfo) {\n    type = type.toUpperCase();\n\n    if (!this.isValidBootROMType(type)) {\n      throw new Error('Invalid Boot ROM type');\n    }\n\n    // Get our fetch rom object\n    const fetchROMObject = await fetchROMAsByteArray(file, fetchHeaders);\n\n    // Remove any keys we don't want to allow\n    // Overriding in the additionalInfo\n    if (additionalInfo) {\n      delete additionalInfo.name;\n      delete additionalInfo.ROM;\n    }\n\n    let name = 'Game Boy';\n    if (this.SUPPORTED_BOOT_ROM_TYPES.GBC === type) {\n      name = 'Game Boy Color';\n    }\n\n    const bootROMObject = {\n      ROM: fetchROMObject.ROM,\n      name,\n      type,\n      date: Date.now(),\n      ...additionalInfo\n    };\n\n    await idbKeyval.set(BOOT_ROM_KEY + type, bootROMObject);\n  }\n\n  async getBootROMs() {\n    const bootROMs = [];\n\n    for (let bootROMType in this.SUPPORTED_BOOT_ROM_TYPES) {\n      const bootROMObject = await idbKeyval.get(BOOT_ROM_KEY + bootROMType);\n\n      if (bootROMObject) {\n        bootROMs.push(bootROMObject);\n      }\n    }\n\n    return bootROMs;\n  }\n\n  async loadBootROMIfAvailable(type) {\n    if (!idbKeyval) {\n      // TODO: Allow headless Boot ROMs\n      return;\n    }\n\n    type = type.toUpperCase();\n\n    if (!this.isValidBootROMType(type)) {\n      throw new Error('Invalid Boot ROM type');\n    }\n\n    // Try to get the boot rom object\n    const bootROMObject = await idbKeyval.get(BOOT_ROM_KEY + type);\n\n    if (!bootROMObject) {\n      // Return silently\n      return;\n    }\n\n    const workerMemoryObject = {};\n    workerMemoryObject[MEMORY_TYPE.BOOT_ROM] = bootROMObject.ROM.buffer;\n\n    // Don't pass the rom as a transferrable, since,\n    // We want to keep a copy of it for reset\n    await this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n        ...workerMemoryObject\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.BOOT = true;\n      });\n\n    // Also get our cartridge header\n    await this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n        memoryTypes: [MEMORY_TYPE.BOOT_ROM]\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        this.bootRom = new Uint8Array(eventData.message[MEMORY_TYPE.BOOT_ROM]);\n      });\n  }\n\n  loadCartridgeRom(ROM, fileName) {\n    const loadTask = async () => {\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_ROM] = ROM.buffer;\n\n      // Don't pass the rom as a transferrable, since,\n      // We want to keep a copy of it for reset\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.ROM = true;\n        });\n\n      // Also get our cartridge header\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_ROM, MEMORY_TYPE.CARTRIDGE_HEADER]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          this.cartridgeRomFileName = fileName;\n          this.cartridgeHeader = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_HEADER]);\n        });\n    };\n\n    return loadTask();\n  }\n\n  saveLoadedCartridge(additionalInfo) {\n    const saveLoadedCartridgeRomTask = async () => {\n      if (!this.cartridgeHeader) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(this.cartridgeHeader);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      const cartridgeInfo = await this.getCartridgeInfo();\n\n      // Remove any keys we don't want to allow\n      // Overriding in the additionalInfo\n      if (additionalInfo) {\n        delete additionalInfo.ROM;\n        delete additionalInfo.header;\n      }\n\n      // In the rare chance we don't know the name, set to unkown.\n      let fileName = this.cartridgeRomFileName || 'Unknown';\n\n      cartridgeObject.cartridgeRom = {\n        ROM: this.cartridgeRom,\n        header: this.cartridgeHeader,\n        fileName: fileName,\n        date: Date.now(),\n        ...additionalInfo\n      };\n\n      cartridgeObject.cartridgeInfo = cartridgeInfo;\n\n      if (this.cartridgeRam) {\n        await this.saveCartridgeRam();\n      }\n\n      await idbKeyval.set(this.cartridgeHeader, cartridgeObject);\n\n      return cartridgeObject;\n    };\n    return saveLoadedCartridgeRomTask();\n  }\n\n  deleteSavedCartridge(cartridge) {\n    const deleteLoadedCartridgeTask = async () => {\n      const cartridgeHeader = cartridge.cartridgeInfo.header;\n\n      if (!cartridgeHeader) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(cartridgeHeader);\n\n      if (!cartridgeObject) {\n        throw new Error('Could not find the passed cartridge');\n      }\n\n      delete cartridgeObject.cartridgeRom;\n\n      await idbKeyval.set(cartridgeHeader, cartridgeObject);\n\n      return cartridgeObject;\n    };\n\n    return deleteLoadedCartridgeTask();\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n    const saveCartridgeRamTask = async () => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if (passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = this.cartridgeHeader;\n        cartridgeRam = this.cartridgeRam;\n      }\n\n      if (!header || !cartridgeRam) {\n        throw new Error('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      let cartridgeObject = await idbKeyval.get(header);\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      // Set the cartridgeRam to our cartridgeObject\n      cartridgeObject.cartridgeRam = cartridgeRam;\n\n      await idbKeyval.set(header, cartridgeObject);\n    };\n\n    return saveCartridgeRamTask();\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n    const loadCartridgeRamTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      const cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.cartridgeRam) {\n        return;\n      }\n\n      // Set the cartridgeRam\n      // Don't transfer, because we want to keep a reference to it\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeObject.cartridgeRam.buffer;\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.RAM = true;\n          this.cartridgeRam = cartridgeObject.cartridgeRam;\n        });\n    };\n    return loadCartridgeRamTask();\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n    const saveStateTask = async () => {\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState.call(this);\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n      if (!cartridgeObject.saveStates) {\n        cartridgeObject.saveStates = [];\n      }\n\n      // Check if we are auto\n      if (saveState.isAuto && this.maxNumberOfAutoSaveStates && this.maxNumberOfAutoSaveStates > 0) {\n        // Make sure we are not exceeding the max number of auto save states\n        const autoSaveStates = [];\n        cartridgeObject.saveStates.forEach(savedState => {\n          if (savedState.isAuto) {\n            autoSaveStates.push(savedState);\n          }\n        });\n\n        // Sort auto save states by date\n        autoSaveStates.sort((a, b) => {\n          if (a.date < b.date) {\n            return -1;\n          }\n\n          if (a.date > b.date) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        while (autoSaveStates.length > 0 && autoSaveStates.length + 1 > this.maxNumberOfAutoSaveStates) {\n          const autoSaveState = autoSaveStates.shift();\n          // Find the save state\n          const saveStateIndex = this._indexOfSaveStateIndexInSaveStates(autoSaveState, cartridgeObject.saveStates);\n          cartridgeObject.saveStates.splice(saveStateIndex, 1);\n        }\n\n        if (this.maxNumberOfAutoSaveStates > 0) {\n          cartridgeObject.saveStates.push(saveState);\n        }\n      } else {\n        cartridgeObject.saveStates.push(saveState);\n      }\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error getting the cartridge header');\n      }\n\n      if (!saveState) {\n        const cartridgeObject = await idbKeyval.get(header);\n        if (!cartridgeObject || !cartridgeObject.saveStates) {\n          throw new Error('No Save State passed, and no cartridge object found');\n          return;\n        }\n        saverState = cartridgeObject.saveStates[0];\n      }\n\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = saveState.wasmboyMemory.cartridgeRam.buffer;\n      workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = saveState.wasmboyMemory.gameBoyMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY] = saveState.wasmboyMemory.wasmBoyPaletteMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE] = saveState.wasmboyMemory.wasmBoyInternalState.buffer;\n\n      await this.worker.postMessage(\n        {\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        },\n        [\n          workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n          workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE]\n        ]\n      );\n\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_RAM, MEMORY_TYPE.GAMEBOY_MEMORY, MEMORY_TYPE.PALETTE_MEMORY, MEMORY_TYPE.INTERNAL_STATE]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRam = eventData.message[MEMORY_TYPE.CARTRIDGE_RAM];\n          this.gameboyMemory = eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY];\n          this.paletteMemory = eventData.message[MEMORY_TYPE.PALETTE_MEMORY];\n          this.internalState = eventData.message[MEMORY_TYPE.INTERNAL_STATE];\n        });\n    };\n\n    return loadStateTask();\n  }\n\n  deleteState(saveState, passedHeader) {\n    const deleteStateTask = async () => {\n      if (!saveState) {\n        throw new Error('You must provide a save state to delete');\n        return;\n      }\n\n      let header;\n      if (passedHeader) {\n        header = passedHeader;\n      } else if (this.cartridgeHeader) {\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Please load a ROM, or pass a Cartridge header...');\n        return;\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.saveStates) {\n        throw new Error('No save states found for the Cartridge...');\n        return;\n      }\n\n      // Find the save state\n      const saveStateIndex = this._indexOfSaveStateIndexInSaveStates(saveState, cartridgeObject.saveStates);\n\n      // If not found, throw an error\n      if (saveStateIndex < 0) {\n        throw new Error('Could not find the passed save state for the related cartridge...');\n        return;\n      }\n\n      cartridgeObject.saveStates.splice(saveStateIndex, 1);\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return deleteStateTask();\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    return idbKeyval.get(this.cartridgeHeader);\n  }\n\n  // Function to return all informationh aboyut the currently loaded cart.\n  // This will include, the ROM, the RAM, the header, and the indivudal pieces of the header\n  // See: http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  getCartridgeInfo() {\n    if (!this.loadedCartridgeMemoryState.ROM) {\n      return Promise.reject('No ROM has been loaded');\n    }\n\n    let getCartridgeInfoTask = async () => {\n      const cartridgeInfo = {};\n\n      cartridgeInfo.header = this.cartridgeHeader;\n      cartridgeInfo.ROM = this.cartridgeRom;\n      cartridgeInfo.RAM = this.cartridgeRam;\n\n      // Now parse our header for additional information\n      cartridgeInfo.nintendoLogo = cartridgeInfo.ROM.slice(0x104, 0x134);\n\n      cartridgeInfo.title = cartridgeInfo.ROM.slice(0x134, 0x144);\n      cartridgeInfo.titleAsString = String.fromCharCode.apply(null, cartridgeInfo.title);\n\n      cartridgeInfo.manufacturerCode = cartridgeInfo.ROM.slice(0x13f, 0x143);\n\n      cartridgeInfo.CGBFlag = cartridgeInfo.ROM[0x143];\n\n      cartridgeInfo.newLicenseeCode = cartridgeInfo.ROM.slice(0x144, 0x146);\n\n      cartridgeInfo.SGBFlag = cartridgeInfo.ROM[0x146];\n\n      cartridgeInfo.cartridgeType = cartridgeInfo.ROM[0x147];\n\n      cartridgeInfo.ROMSize = cartridgeInfo.ROM[0x148];\n\n      cartridgeInfo.RAMSize = cartridgeInfo.ROM[0x149];\n\n      cartridgeInfo.destinationCode = cartridgeInfo.ROM[0x14a];\n\n      cartridgeInfo.oldLicenseeCode = cartridgeInfo.ROM[0x14b];\n\n      cartridgeInfo.maskROMVersionNumber = cartridgeInfo.ROM[0x14c];\n\n      cartridgeInfo.headerChecksum = cartridgeInfo.ROM[0x14d];\n\n      cartridgeInfo.globalChecksum = cartridgeInfo.ROM.slice(0x14e, 0x150);\n\n      return cartridgeInfo;\n    };\n\n    return getCartridgeInfoTask();\n  }\n\n  _initializeConstants() {\n    // Initialize our cached wasm constants\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        Object.keys(this).forEach(key => {\n          if (eventData.message[key] !== undefined) {\n            this[key] = eventData.message[key];\n          }\n        });\n      });\n  }\n\n  _indexOfSaveStateIndexInSaveStates(saveState, saveStates) {\n    // Find the save state\n    let saveStateIndex = saveStates.indexOf(saveState);\n    if (saveStateIndex < 0) {\n      const keysCheck = (a, b) => {\n        return JSON.stringify(Object.keys(a)) === JSON.stringify(Object.keys(b));\n      };\n\n      const dateCheck = (a, b) => {\n        return a.date === b.date;\n      };\n\n      const autoCheck = (a, b) => {\n        return a.isAuto === b.isAuto;\n      };\n\n      saveStates.some((savedState, index) => {\n        if (keysCheck(saveState, savedState) && dateCheck(saveState, savedState) && autoCheck(saveState, savedState)) {\n          saveStateIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return saveStateIndex;\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n","function d(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},e=Object.keys(c);\"function\"===typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));e.forEach(function(b){var e=c[b];b in a?Object.defineProperty(a,b,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[b]=e})}return a}\nlet g={DPAD_UP:\"DPAD_UP\",DPAD_RIGHT:\"DPAD_RIGHT\",DPAD_DOWN:\"DPAD_DOWN\",DPAD_LEFT:\"DPAD_LEFT\",LEFT_ANALOG_HORIZONTAL_AXIS:\"LEFT_ANALOG_HORIZONTAL_AXIS\",LEFT_ANALOG_VERTICAL_AXIS:\"LEFT_ANALOG_VERTICAL_AXIS\",LEFT_ANALOG_UP:\"LEFT_ANALOG_UP\",LEFT_ANALOG_RIGHT:\"LEFT_ANALOG_RIGHT\",LEFT_ANALOG_DOWN:\"LEFT_ANALOG_DOWN\",LEFT_ANALOG_LEFT:\"LEFT_ANALOG_LEFT\",RIGHT_ANALOG_HORIZONTAL_AXIS:\"RIGHT_ANALOG_HORIZONTAL_AXIS\",RIGHT_ANALOG_VERTICAL_AXIS:\"RIGHT_ANALOG_VERTICAL_AXIS\",RIGHT_ANALOG_UP:\"RIGHT_ANALOG_UP\",RIGHT_ANALOG_RIGHT:\"RIGHT_ANALOG_RIGHT\",\nRIGHT_ANALOG_DOWN:\"RIGHT_ANALOG_DOWN\",RIGHT_ANALOG_LEFT:\"RIGHT_ANALOG_LEFT\",A:\"A\",B:\"B\",X:\"X\",Y:\"Y\",LEFT_TRIGGER:\"LEFT_TRIGGER\",LEFT_BUMPER:\"LEFT_BUMPER\",RIGHT_TRIGGER:\"RIGHT_TRIGGER\",RIGHT_BUMPER:\"RIGHT_BUMPER\",SELECT:\"SELECT\",START:\"START\",SPECIAL:\"SPECIAL\"};class h{constructor(){}enable(){throw Error(\"enable() must be overridden\");}disable(){throw Error(\"disable() must be overridden\");}getState(){throw Error(\"getState() must be overridden\");}}\nlet k=\"input textarea button select option optgroup label datalist\".split(\" \"),l=[\"Alt\",\"Control\",\"Meta\",\"OS\"];\nclass m extends h{constructor(){super();this.keymap={};Object.keys(g).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if(\"undefined\"===typeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.addEventListener(\"keyup\",this._boundUpdateKeymapValues);window.addEventListener(\"keydown\",this._boundUpdateKeymapValues)}disable(){if(\"undefined\"===\ntypeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.removeEventListener(\"keyup\",this._boundUpdateKeymapValues);window.removeEventListener(\"keydown\",this._boundUpdateKeymapValues)}getState(){let a=d({},g);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=\n!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed keyboard keys to input\");\"string\"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return k.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return l.some((b)=>a.getModifierState(b)||\na.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value=\"keydown\"===a.type?!0:!1,!0):!1)))}}\nclass n extends h{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let e=d({},g);Object.keys(this.keymap).forEach((a)=>{e[a]=this.keymap[a].value});\ne[g.LEFT_ANALOG_DOWN]=e.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_UP]=e.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_RIGHT]=e.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_LEFT]=e.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_DOWN]=e.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_UP]=e.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;\ne[g.RIGHT_ANALOG_RIGHT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_LEFT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(e).forEach((a)=>{\"string\"===typeof e[a]&&delete e[a]});return e}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed buttons to input\");\"number\"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===\na||!b)throw Error(\"Could not set the specificed buttons to input\");if(\"number\"===typeof axes)throw Error(\"Must pass in an axis id\");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let q=\"touchstart touchmove touchend mousedown mousemove mouseup mouseleave\".split(\" \");\nclass r{constructor(a){if(!a)throw Error(\"Touch inputs require an element.\");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error(\"You must supply an element first with add()\");\nwindow.addEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error(\"You must supply an element first with add()\");window.removeEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes(\"touch\")||a.touches)){a.preventDefault();var b=\"touchstart\"===a.type||\"touchmove\"===a.type||\"mousedown\"===\na.type,c=\"mousemove\"===a.type,e=!b&&!c;this._updateActiveStatus(b,e);this._updateTouchStyles(b,c,e);if(this.onTouchEvent)this.onTouchEvent(a,b,c,e)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect=\"none\"}_removeTouchStyles(){this.element.style.userSelect=\"\"}_updateTouchStyles(a,b){b||(a?this.element.classList.add(\"active\"):this.element.classList.remove(\"active\"))}_updateActiveStatus(a,b){this.active&&b?\nthis.active=!1:!this.active&&a&&(this.active=!0)}}function t(a,b){let c;a.type.includes(\"touch\")?c=a.touches[0]:a.type.includes(\"mouse\")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}\nclass u extends r{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var f=this.boundingClientRect.width/20,p=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(c,\nf),this.setVerticalState(e,p)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-e)?this.setHorizontalState(c,f):this.setVerticalState(e)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}\nclass v extends r{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform=\"translate(0px, 0px)\";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);e=(e-b)/b;1<e?e=1:-1>e&&(e=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*e/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=\ne;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(e)>this.deadzone&&(0<e?this.state.DOWN=!0:0>e&&(this.state.UP=!0))}else this._resetState()}}class w extends r{constructor(a,b){super(a);this.input=b}}let x={LEFT:\"LEFT\",RIGHT:\"RIGHT\"};\nclass y extends h{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");\nthis.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=d({},g);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,\na.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,\na.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new w(a,b);this.enabled&&c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new u(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,x.LEFT)}addRightAnalogInput(a){this.addAnalogInput(a,\nx.RIGHT)}addAnalogInput(a,b){let c=new v(a);this.enabled&&c.listen();if(b===x.LEFT)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}\nclass z{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=g;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new m;this.Gamepad=new n;this.TouchInput=new y;this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowUp\",\"Numpad8\"],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyW\"],g.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyI\"],g.RIGHT_ANALOG_UP);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowRight\",\n\"Numpad6\"],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyD\"],g.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyL\"],g.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowDown\",\"Numpad5\",\"Numpad2\"],g.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyS\"],g.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyK\"],g.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],\ng.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowLeft\",\"Numpad4\"],g.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyA\"],g.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyJ\"],g.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],g.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],g.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],g.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],\ng.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],g.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyX\",\"Semicolon\",\"Numpad7\"],g.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],g.A);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyZ\",\"Escape\",\"Quote\",\"Backspace\",\"Numpad9\"],g.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],g.B);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyC\"],g.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],\ng.X);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyV\"],g.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],g.Y);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyQ\"],g.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],g.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyE\"],g.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],g.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyU\"],g.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],\ng.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyO\"],g.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],g.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"Enter\",\"Numpad3\"],g.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],g.START);this.Keyboard.setKeysToResponsiveGamepadInput([\"ShiftRight\",\"ShiftLeft\",\"Tab\",\"Numpad1\"],g.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],g.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput([\"Space\",\n\"Backslash\",\"Backquote\"],g.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],g.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return\"1.0.0\"}enable(){this.Keyboard.enable();this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&\n(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),1)}}getState(){if(!this._enabled)return{};let a=d({},g),b=this.Gamepad.getState(),c=this.TouchInput.getState(),e=this.Keyboard.getState();a=d({},g);Object.keys(a).forEach((f)=>{a[f]=b[f]||c[f]||e[f]});[\"LEFT\",\"RIGHT\"].forEach((b)=>\n{[g[`${b}_ANALOG_HORIZONTAL_AXIS`],g[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,e)=>{if(\"number\"!==typeof a[c]){if(0===e||2===e)a[c]=a[g[`${b}_ANALOG_RIGHT`]]?1:a[g[`${b}_ANALOG_LEFT`]]?-1:0;if(1===e||3===e)a[c]=a[g[`${b}_ANALOG_UP`]]?-1:a[g[`${b}_ANALOG_DOWN`]]?1:0}})});a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||\"string\"===typeof a[b])a[b]=!1});\nthis.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){\"string\"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>\n{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}let A=new z;var ResponsiveGamepad=A;export{ResponsiveGamepad};\n","// Responsive Gamepad plugin to simulate GB Inputs\n\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nexport default function ResponsiveGamepadPluginGB() {\n  return {\n    onGetState: state => {\n      const gamepadA = state.A;\n      const gamepadB = state.B;\n\n      state.A = gamepadA || state.X;\n      state.B = gamepadB || state.Y;\n\n      return state;\n    }\n  };\n}\n","// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nimport ResponsiveGamepadPluginGB from './gbplugin';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.worker = undefined;\n    this.isEnabled = false;\n\n    // Bind Repsonsive Gamepad to this\n    this.ResponsiveGamepad = ResponsiveGamepad;\n\n    ResponsiveGamepad.addPlugin(ResponsiveGamepadPluginGB());\n  }\n\n  initialize() {\n    if (!this.isEnabled) {\n      this.enableDefaultJoypad();\n    }\n\n    return Promise.resolve();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n  }\n\n  updateController() {\n    if (!this.isEnabled) {\n      return {};\n    }\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.setJoypadState(controllerState);\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n\n  setJoypadState(controllerState) {\n    const setJoypadStateParamsAsArray = [\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    ];\n\n    this.worker.postMessageIgnoreResponse({\n      type: WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE,\n      setJoypadStateParamsAsArray\n    });\n  }\n\n  enableDefaultJoypad() {\n    this.isEnabled = true;\n\n    ResponsiveGamepad.enable();\n  }\n\n  disableDefaultJoypad() {\n    this.isEnabled = false;\n\n    ResponsiveGamepad.disable();\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessageIgnoreResponse(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    this.worker.postMessage(messageObject, transfer);\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise((resolve, reject) => {\n      // Set a timeout before killing the message listener\n      let messageDroppedTimeout = setTimeout(() => {\n        console.warn('Message dropped', message);\n        this.removeMessageListener(messageId);\n        reject();\n      }, 1000);\n\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          clearTimeout(messageDroppedTimeout);\n          messageDroppedTimeout = undefined;\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Import our worker urls\n// Only one of the wasmboylib imports will be used. Rollup/Babel handles which one\nimport wasmboyLibWasmWorkerUrl from '../../dist/worker/wasmboy.wasm.worker.js';\nimport wasmboyLibTsWorkerUrl from '../../dist/worker/wasmboy.ts.worker.js';\nimport wasmboyGraphicsWorkerUrl from '../../dist/worker/graphics.worker.js';\nimport wasmboyAudioWorkerUrl from '../../dist/worker/audio.worker.js';\nimport wasmboyControllerWorkerUrl from '../../dist/worker/controller.worker.js';\nimport wasmboyMemoryWorkerUrl from '../../dist/worker/memory.worker.js';\n\n// Import our Smart Worker Interface\nimport { SmartWorker } from './smartworker';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from './constants';\n\n/*ROLLUP_REPLACE_NODE\nconst { MessageChannel } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nexport const instantiateWorkers = async () => {\n  // Create our workers\n  let libWorkerUrl;\n  libWorkerUrl = wasmboyLibWasmWorkerUrl;\n  libWorkerUrl = wasmboyLibTsWorkerUrl;\n\n  const libWorker = new SmartWorker(libWorkerUrl, WORKER_ID.LIB);\n  const graphicsWorker = new SmartWorker(wasmboyGraphicsWorkerUrl, WORKER_ID.GRAPHICS);\n  const audioWorker = new SmartWorker(wasmboyAudioWorkerUrl, WORKER_ID.AUDIO);\n  const controllerWorker = new SmartWorker(wasmboyControllerWorkerUrl, WORKER_ID.CONTROLLER);\n  const memoryWorker = new SmartWorker(wasmboyMemoryWorkerUrl, WORKER_ID.MEMORY);\n  // Create an array of promises for when each worker is ready\n  const workerReadyPromises = [];\n\n  // Add our workers to an array,\n  const childWorkers = [graphicsWorker, audioWorker, controllerWorker, memoryWorker];\n\n  // Create a messaging channel between our main lib worker,\n  // And all of the children workers\n  childWorkers.forEach(childWorker => {\n    // Create our message channel\n    // https://stackoverflow.com/questions/14191394/web-workers-communication-using-messagechannel-html5\n    const messageChannel = new MessageChannel();\n\n    const workerReadyPromise = new Promise(resolve => {\n      // Our resolve function\n      let messagesReceived = 0;\n      const tryResolveWorkerReady = () => {\n        messagesReceived++;\n        if (messagesReceived >= 2) {\n          resolve();\n        }\n      };\n\n      // Post our connect messages\n      libWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: childWorker.id,\n            ports: [messageChannel.port1]\n          },\n          [messageChannel.port1]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n      childWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: libWorker.id,\n            ports: [messageChannel.port2]\n          },\n          [messageChannel.port2]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n    });\n\n    workerReadyPromises.push(workerReadyPromise);\n  });\n\n  // Wait for all workers to be ready\n  await Promise.all(workerReadyPromises);\n\n  // Finally, pass the ready workers to all of our children lib\n  WasmBoyGraphics.setWorker(graphicsWorker);\n  WasmBoyAudio.setWorker(audioWorker);\n  WasmBoyController.setWorker(controllerWorker);\n  WasmBoyMemory.setWorker(memoryWorker);\n\n  // Return the main worker for the main lib\n  return libWorker;\n};\n","export default \"data:application/javascript;base64,\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGU9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGw7Y29uc3Qgbj0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6aChmKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgYj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApO2ZvcihsZXQgYz0wOzE0ND5jOysrYyl7bGV0IGU9NDgwKmMsZj02NDAqYztmb3IobGV0IGM9MDsxNjA+YzsrK2Mpe2NvbnN0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bSgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9CmEubWVzc2FnZS5wb3J0c1swXTttKG4sbCk7aChmKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmwucG9zdE1lc3NhZ2UoZih7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGM9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHQ9KGEpPT57Y29uc3QgYj1hLmRhdGE/YS5kYXRhOmE7aWYoYi5tZXNzYWdlKXN3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGQoYi5tZXNzYWdlLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e2NvbnN0IGE9e3R5cGU6IlVQREFURUQiLG51bWJlck9mU2FtcGxlczpiLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczpiLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzpiLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSxjPVtdO1siYXVkaW9CdWZmZXIiLCJjaGFubmVsMUJ1ZmZlciIsImNoYW5uZWwyQnVmZmVyIiwiY2hhbm5lbDNCdWZmZXIiLCJjaGFubmVsNEJ1ZmZlciJdLmZvckVhY2goKGQpPT57aWYoYi5tZXNzYWdlW2RdKXt7dmFyIGY9Cm5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtkXSk7dmFyIGc9Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZyk7dmFyIGg9bmV3IEZsb2F0MzJBcnJheShnKTtsZXQgYz0wO2cqPTI7Zm9yKHZhciBlPTA7ZTxnO2UrPTIpYVtjXT1xKGZbZV0pLGMrKztjPTA7Zm9yKGU9MTtlPGc7ZSs9MiloW2NdPXEoZltlXSksYysrO2Y9YS5idWZmZXI7aD1oLmJ1ZmZlcn1hW2RdPXt9O2FbZF0ubGVmdD1mO2FbZF0ucmlnaHQ9aDtjLnB1c2goZik7Yy5wdXNoKGgpfX0pO20oZChhKSxjKX19fTtwKChhKT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WasmBoyPlugins } from '../plugins/plugins';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Fetch our rom\nimport { fetchROMAsByteArray } from './fetchrom';\n\n// Get our worker message types\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\n\n// Function to initialize the workers / set up wasm module\n// Getting started with wasm\n// http://webassembly.org/getting-started/js-api/\nasync function initialize() {\n  if (this.initialized) {\n    return;\n  }\n\n  this.ready = false;\n  this.loadedAndStarted = false;\n\n  // Instantiate our workers\n  await this._instantiateWorkers();\n\n  // Now tell the wasm module to instantiate wasm\n  const response = await this.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.INSTANTIATE_WASM\n  });\n\n  this.coreType = response.message.type;\n\n  // Set up Memory\n  await WasmBoyMemory.initialize(this.options.headless, this.options.maxNumberOfAutoSaveStates, this.options.saveStateCallback);\n\n  // Clear what is currently in memory, then load the cartridge memory\n  await WasmBoyMemory.clearMemory();\n\n  this.initialized = true;\n}\n\n// Finish request for wasm module, and fetch game\n// NOTE: **Should bind the wasmboy this here**\nexport function loadROMToWasmBoy(ROM, fetchHeaders) {\n  const loadROMAndConfigTask = async () => {\n    // Save cartridge RAM if have it\n    if (!this.options.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n      await WasmBoyMemory.saveCartridgeRam();\n    }\n\n    // Get our fetch rom object\n    const fetchROMObject = await fetchROMAsByteArray(ROM, fetchHeaders);\n\n    await WasmBoyMemory.loadCartridgeRom(fetchROMObject.ROM, fetchROMObject.name);\n\n    // Load a Boot ROM\n    if (this.options.enableBootROMIfAvailable) {\n      // Get the cartridge info\n      const cartridgeInfo = await WasmBoyMemory.getCartridgeInfo();\n\n      if (cartridgeInfo.CGBFlag) {\n        await WasmBoyMemory.loadBootROMIfAvailable(WasmBoyMemory.SUPPORTED_BOOT_ROM_TYPES.GBC);\n      } else {\n        await WasmBoyMemory.loadBootROMIfAvailable(WasmBoyMemory.SUPPORTED_BOOT_ROM_TYPES.GB);\n      }\n    }\n\n    // Save the game that we loaded if we need to reload the game\n    this.loadedROM = ROM;\n\n    // Run our initialization on the core\n    await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.CONFIG,\n      config: [\n        WasmBoyMemory.loadedCartridgeMemoryState.BOOT ? 1 : 0, // Loaded Boot Rom\n        this.options.isGbcEnabled ? 1 : 0,\n        this.options.audioBatchProcessing ? 1 : 0,\n        this.options.graphicsBatchProcessing ? 1 : 0,\n        this.options.timersBatchProcessing ? 1 : 0,\n        this.options.graphicsDisableScanlineRendering ? 1 : 0,\n        this.options.audioAccumulateSamples ? 1 : 0,\n        this.options.tileRendering ? 1 : 0,\n        this.options.tileCaching ? 1 : 0,\n        this.options.enableAudioDebugging ? 1 : 0\n      ],\n      options: {\n        gameboyFrameRate: this.options.gameboyFrameRate,\n        headless: this.options.headless,\n        isAudioEnabled: this.options.isAudioEnabled,\n        isGbcColorizationEnabled: this.options.isGbcColorizationEnabled,\n        gbcColorizationPalette: this.options.gbcColorizationPalette,\n        enableAudioDebugging: this.options.enableAudioDebugging,\n        frameSkip: this.options.frameSkip\n      }\n    });\n  };\n\n  const loadROMTask = async () => {\n    // Pause wasmBoy\n    await this.pause();\n\n    await initialize.bind(this)();\n\n    // Check if we are running headless\n    if (this.options.headless) {\n      await loadROMAndConfigTask();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n      WasmBoyPlugins.runHook({\n        key: 'ready'\n      });\n    } else {\n      // Finally intialize all of our services\n      // Initialize our services\n      // Except memory, which would already be initialized\n      await Promise.all([\n        WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback),\n        WasmBoyAudio.initialize(this.options.updateAudioCallback),\n        WasmBoyController.initialize()\n      ]);\n\n      await loadROMAndConfigTask();\n\n      // Load the game's cartridge ram\n      await WasmBoyMemory.loadCartridgeRam();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n      WasmBoyPlugins.runHook({\n        key: 'ready'\n      });\n    }\n  };\n\n  return loadROMTask();\n}\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Imports\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyController } from '../controller/controller';\n\n// Function to render our emulator output\nexport function render() {\n  // Don't run if paused\n  if (this.paused) {\n    return true;\n  }\n\n  // Check if we have frameskip\n  let shouldSkipRenderingFrame = false;\n  if (this.frameSkip && this.frameSkip > 0) {\n    this.frameSkipCounter++;\n\n    if (this.frameSkipCounter < this.frameSkip) {\n      shouldSkipRenderingFrame = true;\n    } else {\n      this.frameSkipCounter = 0;\n    }\n  }\n\n  // Render the display\n  if (!shouldSkipRenderingFrame) {\n    WasmBoyGraphics.renderFrame();\n  }\n\n  // Update our controller\n  WasmBoyController.updateController();\n\n  this.renderId = raf(() => {\n    render.call(this);\n  });\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { WasmBoyLib } from '../wasmboy/wasmboy';\nimport { WasmBoyGraphics } from '../graphics/graphics';\n\nimport { waitForLibWorkerMessageType } from '../wasmboy/onmessage';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// https://www.npmjs.com/package/big-integer\nimport bigInt from 'big-integer';\n\nlet currentRaf = undefined;\nconst forceOutputFrame = () => {\n  WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.FORCE_OUTPUT_FRAME\n  });\n  WasmBoyGraphics.renderFrame();\n};\n\nexport const runNumberOfFrames = async frames => {\n  await WasmBoyLib.pause();\n\n  // Set up a raf function to continually update the canvas\n  const rafUpdateCanvas = () => {\n    currentRaf = raf(() => {\n      if (currentRaf) {\n        forceOutputFrame();\n        rafUpdateCanvas();\n      }\n    });\n  };\n  rafUpdateCanvas();\n\n  for (let i = 0; i < frames; i++) {\n    await runWasmExport('executeFrame', []);\n  }\n\n  currentRaf = undefined;\n  forceOutputFrame();\n};\n\nexport const runWasmExport = async (exportKey, parameters) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n    export: exportKey,\n    parameters\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getWasmMemorySection = async (start, end) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION,\n    start,\n    end\n  });\n\n  const eventData = getEventData(event);\n  return new Uint8Array(eventData.message.response);\n};\n\nexport const getWasmConstant = async constantKey => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n    constant: constantKey\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getStepsAsString = async radix => {\n  const stepsPerStepSet = await runWasmExport('getStepsPerStepSet');\n  const stepSets = await runWasmExport('getStepSets');\n  const steps = await runWasmExport('getSteps');\n\n  const bigSteps = bigInt(stepsPerStepSet)\n    .multiply(stepSets)\n    .add(steps);\n\n  if (radix) {\n    return bigSteps.toString(radix);\n  }\n  return bigSteps.toString(10);\n};\n\nexport const getCyclesAsString = async radix => {\n  const cyclesPerCycleSet = await runWasmExport('getCyclesPerCycleSet');\n  const cycleSets = await runWasmExport('getCycleSets');\n  const cycles = await runWasmExport('getCycles');\n\n  const bigCycles = bigInt(cyclesPerCycleSet)\n    .multiply(cycleSets)\n    .add(cycles);\n\n  if (radix) {\n    return bigCycles.toString(radix);\n  }\n  return bigCycles.toString(10);\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WasmBoyPlugins } from '../plugins/plugins';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { runWasmExport, getWasmMemorySection, getWasmConstant } from '../debug/debug';\n\nconst messageRequests = {};\n\nexport function waitForLibWorkerMessageType(messageType) {\n  if (!messageRequests[messageType]) {\n    messageRequests[messageType] = [];\n  }\n  const promise = new Promise(resolve => {\n    messageRequests[messageType].push(resolve);\n  });\n\n  return promise;\n}\n\n// Functions to handle the lib worker messages\nexport function libWorkerOnMessage(event) {\n  const eventData = getEventData(event);\n\n  if (!eventData.message) {\n    return;\n  }\n\n  if (messageRequests[eventData.message.type]) {\n    messageRequests[eventData.message.type].forEach(request => request(eventData.message));\n  }\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.UPDATED: {\n      this.fps = eventData.message.fps;\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.BREAKPOINT: {\n      const breakpointTask = async () => {\n        await this.pause();\n        if (this.options.breakpointCallback) {\n          this.options.breakpointCallback();\n        }\n\n        WasmBoyPlugins.runHook({\n          key: 'breakpoint'\n        });\n      };\n      breakpointTask();\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.CRASHED: {\n      const crashedTask = async () => {\n        await this.pause();\n\n        console.log('Wasmboy Crashed!');\n\n        let programCounter = await runWasmExport('getProgramCounter');\n        let gameboyMemoryConstant = await getWasmConstant('GAMEBOY_INTERNAL_MEMORY_LOCATION');\n        let opcode = await getWasmMemorySection(gameboyMemoryConstant + programCounter, gameboyMemoryConstant + programCounter + 1);\n\n        console.log(`Program Counter: 0x${programCounter.toString(16)}`);\n        console.log(`Opcode: 0x${opcode[0].toString(16)}`);\n      };\n      crashedTask();\n      return;\n    }\n\n    default: {\n      // Do nothing. This catches all messages so yeah\n    }\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyPlugins } from '../plugins/plugins';\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Other lib helpers\nimport { instantiateWorkers } from '../worker/instantiate';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { loadROMToWasmBoy } from './load';\nimport { render } from './render';\nimport { libWorkerOnMessage } from './onmessage';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\nlet isWindowUnloading = false;\n\n// Our Main Orchestrator of the WasmBoy lib\nclass WasmBoyLibService {\n  // Start the request to our wasm module\n  constructor() {\n    this.worker = undefined;\n    this.coreType = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.loadedAndStarted = false;\n    this.initialized = false;\n    this.renderId = false;\n    this.loadedROM = false;\n\n    this.fps = 0;\n    this.speed = 1.0;\n\n    // Reset our config and stateful elements that depend on it\n    // this.options is set here\n    this._resetConfig();\n\n    // Add some listeners for when we are put into the background\n    if (typeof window !== 'undefined') {\n      // Calling promises in the hidden visibility change\n      // On page reload, leaks memory\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=932885&can=1&q=torchh2424%40gmail.com&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified\n      // Thus we need this hack, to get around this\n      window.addEventListener('beforeunload', function(event) {\n        isWindowUnloading = true;\n      });\n\n      window.document.addEventListener('visibilitychange', () => {\n        // fires when user switches tabs, apps, goes to homescreen, etc.\n        if (document.visibilityState === 'hidden') {\n          if (this.options && this.options.disablePauseOnHidden) {\n            return;\n          }\n\n          setTimeout(() => {\n            if (!isWindowUnloading) {\n              // See the comment above about the memory leak\n              // This fires off a bunch of promises, thus a leak\n              this.pause();\n            }\n          }, 0);\n        }\n      });\n    }\n  }\n\n  // Function to initialize/configure Wasmboy\n  config(wasmBoyOptions, canvasElement) {\n    const configTask = async () => {\n      // Pause any currently running game\n      await this.pause();\n\n      // Get our canvas elements\n      await this.setCanvas(canvasElement);\n\n      // Reset our config and stateful elements that depend on it\n      // If we have a new config to take its place\n      if (wasmBoyOptions || !this.options) {\n        this._resetConfig();\n      }\n\n      // set our options\n      if (wasmBoyOptions) {\n        // Set all options\n        Object.keys(wasmBoyOptions).forEach(key => {\n          if (this.options[key] !== undefined) {\n            this.options[key] = wasmBoyOptions[key];\n          }\n        });\n\n        // Aliases\n        // Gameboy Speed / Framerate\n        if (wasmBoyOptions.gameboySpeed) {\n          let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n          if (gameboyFrameRate <= 0) {\n            gameboyFrameRate = 1;\n          }\n          this.options.gameboyFrameRate = gameboyFrameRate;\n        }\n      }\n    };\n\n    return configTask();\n  }\n\n  // Function to return our current configuration as an object\n  getConfig() {\n    return this.options;\n  }\n\n  // Function to get/set our canvas element\n  // Useful for vaporboy\n  setCanvas(canvasElement) {\n    if (!canvasElement) {\n      return Promise.resolve();\n    }\n\n    const setCanvasTask = async () => {\n      await this.pause();\n\n      // Set our new canvas element, and re-run init on graphics to apply styles and things\n      this.canvasElement = canvasElement;\n\n      await WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback);\n    };\n\n    return setCanvasTask();\n  }\n\n  getCanvas() {\n    return this.canvasElement;\n  }\n\n  // Finish request for wasm module, and fetch boot ROM\n  addBootROM(type, file, fetchHeaders, additionalInfo) {\n    return WasmBoyMemory.addBootROM(type, file, fetchHeaders, additionalInfo);\n  }\n\n  getBootROMs() {\n    return WasmBoyMemory.getBootROMs();\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadROM(ROM, fetchHeaders) {\n    const boundLoadROM = loadROMToWasmBoy.bind(this);\n    return boundLoadROM(ROM, fetchHeaders);\n  }\n\n  // Function to start/resume\n  play() {\n    const playTask = async () => {\n      if (!this.ready) {\n        return;\n      }\n      if (!this.loadedAndStarted) {\n        this.loadedAndStarted = true;\n        if (this.options.onLoadedAndStarted) {\n          this.options.onLoadedAndStarted();\n        }\n        WasmBoyPlugins.runHook({\n          key: 'loadedAndStarted'\n        });\n      }\n      if (this.options.onPlay) {\n        this.options.onPlay();\n      }\n\n      WasmBoyPlugins.runHook({\n        key: 'play'\n      });\n\n      // Bless the audio, this is to fix any autoplay issues\n      if (!this.options.headless) {\n        WasmBoyAudio.resumeAudioContext();\n        WasmBoyAudio.resetTimeStretch();\n      }\n\n      // Reset the audio queue index to stop weird pauses when trying to load a game\n      await this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE\n      });\n\n      // Undo any pause\n      this.paused = false;\n\n      if (!this.updateId) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PLAY\n        });\n      }\n\n      if (!this.renderId && !this.options.headless) {\n        this.renderId = raf(() => {\n          render.call(this);\n        });\n      }\n    };\n\n    return playTask();\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pause() {\n    const pauseTask = async () => {\n      this.paused = true;\n      if (this.ready && this.options.onPause) {\n        this.options.onPause();\n      }\n\n      WasmBoyPlugins.runHook({\n        key: 'pause'\n      });\n\n      // Cancel our update and render loop\n      raf.cancel(this.renderId);\n      this.renderId = false;\n\n      // Cancel any playing audio\n      // Audio played with latency may be still going on here\n      if (!this.options.headless) {\n        WasmBoyAudio.cancelAllAudio(true);\n      }\n\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PAUSE\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n\n    return pauseTask();\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n    const resetTask = async () => {\n      this.config(wasmBoyOptions, this.canvasElement);\n      // Reload the game if one was already loaded\n      if (this.loadedROM) {\n        return this.loadROM(this.loadedROM);\n      }\n    };\n\n    return resetTask();\n  }\n\n  getSavedMemory() {\n    return WasmBoyMemory.getSavedMemory();\n  }\n\n  saveLoadedCartridge(additionalInfo) {\n    return WasmBoyMemory.saveLoadedCartridge(additionalInfo);\n  }\n\n  deleteSavedCartridge(cartridge) {\n    return WasmBoyMemory.deleteSavedCartridge(cartridge);\n  }\n\n  saveState() {\n    const saveStateTask = async () => {\n      await this.pause();\n      const saveState = await WasmBoyMemory.saveState();\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  // Function to return the save states for the game\n  getSaveStates() {\n    const getSaveStatesTask = async () => {\n      let cartridgeObject = await WasmBoyMemory.getCartridgeObject();\n      if (!cartridgeObject) {\n        return [];\n      } else {\n        return cartridgeObject.saveStates;\n      }\n    };\n\n    return getSaveStatesTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      await this.pause();\n      await WasmBoyMemory.loadState(saveState);\n    };\n\n    return loadStateTask();\n  }\n\n  deleteState(saveState) {\n    const deleteStateTask = async () => {\n      await WasmBoyMemory.deleteState(saveState);\n    };\n\n    return deleteStateTask();\n  }\n\n  // Simply returns the FPS we get back from the lib worker\n  getFPS() {\n    return this.fps;\n  }\n\n  // Simply returns our current Core Type\n  getCoreType() {\n    return this.coreType;\n  }\n\n  getSpeed() {\n    return this.speed;\n  }\n\n  // Set the speed of the emulator\n  // Should be a float. And by X times as fast\n  setSpeed(speed) {\n    if (speed <= 0) {\n      speed = 0.1;\n    }\n\n    const setSpeedTask = async () => {\n      if (this.worker) {\n        this.speed = speed;\n\n        WasmBoyAudio.setSpeed(speed);\n\n        await this.worker.postMessageIgnoreResponse({\n          type: WORKER_MESSAGE_TYPE.SET_SPEED,\n          speed\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n    setSpeedTask();\n  }\n\n  // Function to return if we currently are playing as a gbc console\n  isGBC() {\n    const isGBCTask = async () => {\n      const event = await WasmBoyLib.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.IS_GBC\n      });\n\n      const eventData = getEventData(event);\n\n      return eventData.message.response;\n    };\n    return isGBCTask();\n  }\n\n  // Private Function to reset options to default\n  _resetConfig() {\n    // Reset Fps Metering\n    this.fpsTimeStamps = [];\n    this.frameSkipCounter = 0;\n\n    // Configurable Options\n    // Set callbacks to null and not undefined,\n    // For when configs are passed, we will be sure to\n    // add them as keys\n    this.options = {\n      headless: false,\n      disablePauseOnHidden: false,\n      isAudioEnabled: true,\n      enableAudioDebugging: false,\n      gameboyFrameRate: 60,\n      frameSkip: 0,\n      enableBootROMIfAvailable: true,\n      isGbcEnabled: true,\n      isGbcColorizationEnabled: true,\n      gbcColorizationPalette: null,\n      audioBatchProcessing: false,\n      graphicsBatchProcessing: false,\n      timersBatchProcessing: false,\n      graphicsDisableScanlineRendering: false,\n      audioAccumulateSamples: false,\n      tileRendering: false,\n      tileCaching: false,\n      maxNumberOfAutoSaveStates: 10,\n      updateGraphicsCallback: null,\n      updateAudioCallback: null,\n      saveStateCallback: null,\n      breakpointCallback: null,\n      onReady: null,\n      onPlay: null,\n      onPause: null,\n      onLoadedAndStarted: null\n    };\n  }\n\n  // Function to instantiate and set up our workers\n  // This ensures we don't create workers twice\n  _instantiateWorkers() {\n    const instantiateWorkersTask = async () => {\n      if (this.worker) {\n        return;\n      } else {\n        this.worker = await instantiateWorkers();\n        this.worker.addMessageListener(libWorkerOnMessage.bind(this));\n      }\n    };\n\n    return instantiateWorkersTask();\n  }\n}\n\nexport const WasmBoyLib = new WasmBoyLibService();\n","// Build our public lib api\nimport { WasmBoyLib } from './wasmboy/wasmboy';\nimport { WasmBoyPlugins } from './plugins/plugins';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\nimport {\n  runNumberOfFrames,\n  runWasmExport,\n  getWasmMemorySection,\n  getWasmConstant,\n  getStepsAsString,\n  getCyclesAsString\n} from './debug/debug';\n\n// Get our package.json\nimport packageJson from '../package.json';\n\n// Debugging properties prepended with _\n\n// export an object that public exposes parts of the singleton\n// Need to bind to preserve this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\nexport const WasmBoy = {\n  config: WasmBoyLib.config.bind(WasmBoyLib),\n  getCoreType: WasmBoyLib.getCoreType.bind(WasmBoyLib),\n  getConfig: WasmBoyLib.getConfig.bind(WasmBoyLib),\n  setCanvas: WasmBoyLib.setCanvas.bind(WasmBoyLib),\n  getCanvas: WasmBoyLib.getCanvas.bind(WasmBoyLib),\n  addBootROM: WasmBoyLib.addBootROM.bind(WasmBoyLib),\n  getBootROMs: WasmBoyLib.getBootROMs.bind(WasmBoyLib),\n  loadROM: WasmBoyLib.loadROM.bind(WasmBoyLib),\n  play: WasmBoyLib.play.bind(WasmBoyLib),\n  pause: WasmBoyLib.pause.bind(WasmBoyLib),\n  reset: WasmBoyLib.reset.bind(WasmBoyLib),\n  addPlugin: WasmBoyPlugins.addPlugin.bind(WasmBoyPlugins),\n  isPlaying: () => {\n    return !WasmBoyLib.paused;\n  },\n  isPaused: () => {\n    return WasmBoyLib.paused;\n  },\n  isReady: () => {\n    return WasmBoyLib.ready;\n  },\n  isLoadedAndStarted: () => {\n    return WasmBoyLib.loadedAndStarted;\n  },\n  getVersion: () => {\n    return packageJson.version;\n  },\n  getSavedMemory: WasmBoyLib.getSavedMemory.bind(WasmBoyLib),\n  saveLoadedCartridge: WasmBoyLib.saveLoadedCartridge.bind(WasmBoyLib),\n  deleteSavedCartridge: WasmBoyLib.deleteSavedCartridge.bind(WasmBoyLib),\n  saveState: WasmBoyLib.saveState.bind(WasmBoyLib),\n  getSaveStates: WasmBoyLib.getSaveStates.bind(WasmBoyLib),\n  loadState: WasmBoyLib.loadState.bind(WasmBoyLib),\n  deleteState: WasmBoyLib.deleteState.bind(WasmBoyLib),\n  getFPS: WasmBoyLib.getFPS.bind(WasmBoyLib),\n  setSpeed: WasmBoyLib.setSpeed.bind(WasmBoyLib),\n  isGBC: WasmBoyLib.isGBC.bind(WasmBoyLib),\n  ResponsiveGamepad: WasmBoyController.ResponsiveGamepad,\n  enableDefaultJoypad: WasmBoyController.enableDefaultJoypad.bind(WasmBoyController),\n  disableDefaultJoypad: WasmBoyController.disableDefaultJoypad.bind(WasmBoyController),\n  setJoypadState: WasmBoyController.setJoypadState.bind(WasmBoyController),\n  resumeAudioContext: WasmBoyAudio.resumeAudioContext.bind(WasmBoyAudio),\n  _getAudioChannels: WasmBoyAudio.getAudioChannels.bind(WasmBoyAudio),\n  _getCartridgeInfo: WasmBoyMemory.getCartridgeInfo.bind(WasmBoyMemory),\n  _runNumberOfFrames: runNumberOfFrames,\n  _runWasmExport: runWasmExport,\n  _getWasmMemorySection: getWasmMemorySection,\n  _getWasmConstant: getWasmConstant,\n  _getStepsAsString: getStepsAsString,\n  _getCyclesAsString: getCyclesAsString\n};\n"],"names":["WASMBOY_PLUGIN","name","graphics","rgbaArray","audio","saveState","saveStateObject","canvas","breakpoint","ready","play","pause","loadedAndStarted","WasmBoyPluginsService","constructor","addPlugin","pluginObject","Error","id","pluginIdCounter","removePlugin","plugins","runHook","hookConfig","Object","pluginKey","plugin","hookResponse","undefined","e","console","WasmBoyPlugins","WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","BREAKPOINT","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","FORCE_OUTPUT_FRAME","SET_SPEED","IS_GBC","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","BOOT_ROM","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","getEventData","event","WasmBoyGraphicsService","initialize","canvasElement","updateGraphicsCallback","initializeTask","getContext","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","canvasContext","createImageData","width","height","key","params","canvasImageData","callback","response","worker","postMessage","type","setWorker","eventData","Uint8ClampedArray","renderFrame","imageDataArrayChanged","imageDataArray","WasmBoyGraphics","index","buffer","opt","numChannels","numberOfChannels","sampleRate","format","float32","bitDepth","getChannelData","length","inputL","inputR","result","Float32Array","inputIndex","bytesPerSample","blockAlign","ArrayBuffer","samples","view","DataView","writeString","setUint32","setUint16","i","offset","s","Math","max","min","setInt16","setFloat32","string","setUint8","charCodeAt","GbChannelWebAudio","createAudioContextIfNone","audioContext","window","createGain","getCurrentTime","currentTime","getPlayTime","audioPlaytime","resumeAudioContext","state","playAudio","numberOfSamples","leftChannelBuffer","rightChannelBuffer","playbackRate","updateAudioCallback","leftChannelBufferAsFloat","rightChannelBufferAsFloat","createBuffer","WASMBOY_SAMPLE_RATE","audioBuffer","recording","source","createBufferSource","finalNode","responseNode","gainNode","destination","audioContextCurrentTime","audioContextCurrentTimeWithLatency","DEFAULT_AUDIO_LATENCY_IN_MILLI","audioSources","playtime","playTime","setTimeout","cancelAllAudio","stopCurrentAudio","mute","muted","unmute","hasRecording","recordingAudioBuffer","startRecording","stopRecording","createBufferFromBuffers","buffers","totalLength","totalBuffer","currentLength","totalLeftBuffer","recordingLeftBuffers","totalRightBuffer","recordingRightBuffers","downloadRecordingAsWav","filename","recordingAnchor","document","wav","toWav","blob","url","downloadName","toLocaleDateString","Date","shortDateWithTime","month","day","year","hour","minute","second","getRecordingAsWavBase64EncodedString","_arrayBufferToBase64","base64String","getRecordingAsAudioBuffer","_libMute","_libUnmute","libMuted","_setGain","gain","_setSamplesToAudioBuffer","leftChannelSamples","rightChannelSamples","binary","bytes","Uint8Array","len","String","WasmBoyAudioService","master","channel1","channel2","channel3","channel4","latency","gbChannels","getAudioChannels","setSpeed","speed","resetTimeStretch","audioMessage","currentFps","allowFastSpeedStretching","fps","fpsDifference","averageTimeStretchFps","SLOW_TIME_STRETCH_MIN_FPS","reduce","accumulator","currentValue","channelNumber","playingAllChannels","_createAudioContextIfNone","_applyOnAllChannels","functionKey","argsArray","gbChannelKey","WasmBoyAudio","promisifyRequest","request","Promise","resolve","reject","onsuccess","request.onsuccess","onerror","request.onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","idbTransaction.oncomplete","idbTransaction.onerror","onabort","idbTransaction.onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","ObjectStore.prototype.createIndex","ObjectStore.prototype.index","IDBObjectStore","objectStore","Transaction.prototype.objectStore","IDBTransaction","createObjectStore","UpgradeDB.prototype.createObjectStore","IDBDatabase","DB.prototype.transaction","funcName","replace","Array","slice","call","nativeObject","getAll","Constructor.prototype.getAll","query","count","instance","items","iterateCursor","push","continue","module","exports","exp","open","version","upgradeCallback","indexedDB","onupgradeneeded","request.onupgradeneeded","delete","default","require$$0","keyval","dbPromise","idb","upgradeDB","tx","clear","keys","idbKeyval","UZIP","buf","rUs","rUi","o","out","data","eocd","cnu","csize","usize","nl","el","cl","roff","_readLocal","UZIP._readLocal","cmpr","nlen","elen","file","inflateRaw","UZIP.inflateRaw","inflate","UZIP.inflate","deflate","UZIP.deflate","opts","level","off","crc","deflateRaw","UZIP.deflateRaw","encode","UZIP.encode","tot","wUi","wUs","zpd","cpr","fof","ioff","_noNeed","UZIP._noNeed","fn","ext","indexOf","_writeHeader","UZIP._writeHeader","t","tab","Uint32Array","n","c","k","table","update","b","l","UZIP.adler","a","end","eend","readUshort","buff","writeUshort","readUint","writeUint","readASCII","writeASCII","pad","readUTF8","ns","decodeURIComponent","writeUTF8","str","strl","ci","code","sizeUTF8","UZIP.F.deflateRaw","opos","lvl","U","goodIndex","putsE","pos","cvrd","dlen","lits","strt","prev","li","lc","bs","ebits","nc","ii","mch","dst","lgi","dgi","UZIP.F._bestMatch","nice","chain","pi","dif","td","tl","dlim","maxd","j","ei","curd","UZIP.F._howLong","oi","UZIP.F._hash","UZIP.F._writeBlock","BFINAL","o0","l0","putsF","MD","MH","numl","numd","T","ML","numh","lset","dset","cstSize","fxdSize","dynSize","BTYPE","ltree","dtree","si","qb","qc","UZIP.F._copyExact","p8","UZIP.F.getTrees","UZIP.F.getSecond","UZIP.F.nonZero","UZIP.F.contSize","tree","hst","UZIP.F._codeTiny","rst","rsl","UZIP.F._lenCodes","nxt","nnxt","prv","lz","zc","UZIP.F._hufTree","MAXL","list","hl","lit","f","l2","i0","i1","i2","r","d","maxl","UZIP.F.setDepth","UZIP.F.restrictDepth","dps","bCost","dbt","od","UZIP.F._goodIndex","v","arr","UZIP.F._writeLit","ch","UZIP.F.inflate","F","bitsF","bitsE","decodeTiny","makeCodes","codes2map","get17","noBuf","HLIT","HDIST","dmap","lmap","HCLEN","ml","md","ebs","dcode","dbs","UZIP.F._check","bl","nbuf","UZIP.F._decodeTiny","LL","mx","ll","ni","UZIP.F.makeCodes","MAX_BITS","max_code","bits","bl_count","next_code","UZIP.F.codes2map","map","r15","rest","UZIP.F.revCodes","imb","UZIP.F._putsE","dt","UZIP.F._putsF","UZIP.F._bitsE","UZIP.F._bitsF","UZIP.F._get17","UZIP.F._get25","Uint16Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","imap","itree","rev15","lhst","dhst","ihst","x","fetchROMAsByteArray","ROM","loadOptions","fetchROMAsByteArrayTask","byteArray","getROMFromFileReaderAsByteArray","parseByteArrayAsZip","fetchHeaders","fetch","fileName","fileReaderByteArray","fileReader","FileReader","fileReader.onload","unzipObject","uzip","foundROM","unzipObjectKeys","lowercaseKey","WASMBOY_SAVE_STATE_SCHEMA","wasmboyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","cartridgeRam","date","isAuto","getSaveState","internalState","paletteMemory","gameboyMemory","saveStateCallback","_prepareAndStoreAutoSave","saveStateMemoryKeys","localStorage","WASMBOY_UNLOAD_STORAGE","JSON","header","cartridgeHeader","_findAndCommitAutoSave","findAndCommitAutoSaveTask","unloadStorage","unloadStorageObject","saveCartridgeRam","initializeAutoSave","WasmBoyMemoryService","RAM","BOOT","GB","GBC","headless","maxNumberOfAutoSaveStates","_initializeConstants","memoryTypes","getSavedMemory","getSavedMemoryTask","memory","cartridgeObject","getLoadedCartridgeMemoryState","loadedCartridgeMemoryState","clearMemory","isValidBootROMType","SUPPORTED_BOOT_ROM_TYPES","bootROMTypeKey","addBootROM","additionalInfo","fetchROMObject","bootROMObject","BOOT_ROM_KEY","getBootROMs","bootROMs","bootROMType","loadBootROMIfAvailable","workerMemoryObject","loadCartridgeRom","loadTask","saveLoadedCartridge","saveLoadedCartridgeRomTask","cartridgeInfo","getCartridgeInfo","cartridgeRom","cartridgeRomFileName","deleteSavedCartridge","cartridge","deleteLoadedCartridgeTask","passedHeader","passedCartridgeRam","saveCartridgeRamTask","loadCartridgeRam","loadCartridgeRamTask","passedSaveState","saveStateTask","autoSaveStates","savedState","autoSaveState","saveStateIndex","_indexOfSaveStateIndexInSaveStates","loadState","loadStateTask","saverState","deleteState","deleteStateTask","getCartridgeObject","getCartridgeInfoTask","saveStates","WasmBoyMemory","getOwnPropertySymbols","concat","filter","getOwnPropertyDescriptor","enumerable","configurable","writable","g","DPAD_UP","DPAD_RIGHT","DPAD_DOWN","DPAD_LEFT","LEFT_ANALOG_HORIZONTAL_AXIS","LEFT_ANALOG_VERTICAL_AXIS","LEFT_ANALOG_UP","LEFT_ANALOG_RIGHT","LEFT_ANALOG_DOWN","LEFT_ANALOG_LEFT","RIGHT_ANALOG_HORIZONTAL_AXIS","RIGHT_ANALOG_VERTICAL_AXIS","RIGHT_ANALOG_UP","RIGHT_ANALOG_RIGHT","RIGHT_ANALOG_DOWN","RIGHT_ANALOG_LEFT","A","B","X","Y","LEFT_TRIGGER","LEFT_BUMPER","RIGHT_TRIGGER","RIGHT_BUMPER","SELECT","START","SPECIAL","h","m","keymap","enableIgnoreWhenInputElementFocused","enableIgnoreWhenModifierState","_boundUpdateKeymapValues","_updateKeymapValues","bind","addEventListener","removeEventListener","ignoreWhenInputElementFocused","ignoreOnModifierState","some","activeElement","tagName","toLowerCase","getModifierState","_isFocusedOnInputElement","_isInModifierState","preventDefault","gamepadAnalogStickDeadZone","_getGamepads","buttons","_isButtonPressed","axis","_getAnalogStickAxis","axes","pressed","navigator","getGamepads","q","listeners","element","_addTouchStyles","boundingClientRect","_updateElementBoundingClientRect","active","boundUpdateElementRect","boundTouchEvent","_touchEvent","_removeTouchStyles","stopListening","includes","touches","_updateActiveStatus","_updateTouchStyles","onTouchEvent","getBoundingClientRect","style","userSelect","classList","add","remove","rectCenterX","right","left","rectCenterY","bottom","top","touchX","clientX","touchY","clientY","u","config","allowMultipleDirections","_resetState","setHorizontalState","setVerticalState","abs","HORIZONTAL_AXIS","VERTICAL_AXIS","UP","RIGHT","DOWN","LEFT","transform","deadzone","w","input","y","enabled","dpads","leftAnalogs","rightAnalogs","listen","splice","addAnalogInput","z","RESPONSIVE_GAMEPAD_INPUTS","_enabled","_multipleDirectionInput","Keyboard","Gamepad","TouchInput","setKeysToResponsiveGamepadInput","setGamepadButtonsToResponsiveGamepadInput","setGamepadAxisToResponsiveGamepadInput","inputChangeMap","inputChangeOldState","cancelInputChangeListener","enable","_startInputChangeInterval","disable","onAddPlugin","onRemovePlugin","getState","onGetState","codes","setInterval","_inputChangeIntervalHandler","this.cancelInputChangeListener","clearInterval","ResponsiveGamepadPluginGB","gamepadB","WasmBoyControllerService","ResponsiveGamepad","isEnabled","updateController","controllerState","setJoypadState","setJoypadStateParamsAsArray","enableDefaultJoypad","disableDefaultJoypad","WasmBoyController","idCounter","generateId","randomId","getSmartWorkerMessage","message","messageId","workerId","SmartWorker","workerUrl","workerJs","atob","Blob","BlobBuilder","Worker","URL","_onMessageHandler","postMessageIgnoreResponse","transfer","messageObject","messageIdListener","messageDroppedTimeout","responseMessage","messageListener","clearTimeout","addMessageListener","removeMessageListener","messageListenerIndex","instantiateWorkers","libWorker","wasmboyLibWasmWorkerUrl","graphicsWorker","wasmboyGraphicsWorkerUrl","audioWorker","wasmboyAudioWorkerUrl","controllerWorker","wasmboyControllerWorkerUrl","memoryWorker","wasmboyMemoryWorkerUrl","workerReadyPromises","childWorkers","childWorker","messageChannel","MessageChannel","workerReadyPromise","messagesReceived","ports","initialized","_instantiateWorkers","options","loadROMToWasmBoy","loadROMAndConfigTask","enableBootROMIfAvailable","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","enableAudioDebugging","gameboyFrameRate","isAudioEnabled","isGbcColorizationEnabled","gbcColorizationPalette","frameSkip","loadROMTask","onReady","performance","now","module.exports","process","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","loadTime","getTime","this","root","global","vendors","raf","caf","suffix","last","queue","frameDuration","_now","next","cp","cancelled","round","handle","raf_1","cancel","render","paused","shouldSkipRenderingFrame","frameSkipCounter","bigInt","Integer","radix","alphabet","caseSensitive","DEFAULT_ALPHABET","text","absBase","base","alphabetValues","parseValue","digits","isNegative","start","parseBaseFromArray","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","MAX_INT","smallToArray","floor","arrayToSmall","trim","compareAbs","MAX_INT_ARR","BASE","createArray","truncate","ceil","l_a","l_b","carry","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractSmall","multiplyLong","a_i","b_j","product","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","multiplySmallAndArray","square","a_j","divModSmall","lambda","quotient","remainder","divisor","divModAny","self","supportsNativeBigInt","negate","comparison","divisorMostSignificantDigit","shift","quotientDigit","part","unshift","xlen","highx","highy","guess","check","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","divide","modPow","bitwise","xSign","ySign","xRem","not","yRem","isZero","xDivMod","highestPower2","xDigit","toJSNumber","yDivMod","yDigit","multiply","roughLOB","LOBMASK_I","BigInt","LOBMASK_BI","integerLogarithm","compareTo","tmp","greater","gcd","pow","times","toBase","valueOf","neg","isPositive","Number","divmod","digit","minus","toBaseString","join","parseStringValue","split","decimalPlace","test","isValid","LOG_BASE","toString","create","BigInteger.prototype.add","plus","SmallInteger.prototype.add","NativeBigInt.prototype.add","BigInteger.prototype.subtract","SmallInteger.prototype.subtract","NativeBigInt.prototype.subtract","BigInteger.prototype.negate","SmallInteger.prototype.negate","small","NativeBigInt.prototype.negate","BigInteger.prototype.abs","SmallInteger.prototype.abs","NativeBigInt.prototype.abs","BigInteger.prototype.multiply","l1","_multiplyBySmall","SmallInteger.prototype._multiplyBySmall","BigInteger.prototype._multiplyBySmall","SmallInteger.prototype.multiply","NativeBigInt.prototype.multiply","BigInteger.prototype.square","SmallInteger.prototype.square","NativeBigInt.prototype.square","BigInteger.prototype.divmod","BigInteger.prototype.divide","over","NativeBigInt.prototype.divide","BigInteger.prototype.mod","NativeBigInt.prototype.remainder","BigInteger.prototype.pow","NativeBigInt.prototype.pow","_0","_1","_2","BigInteger.prototype.modPow","modInv","isOdd","BigInteger.prototype.compareAbs","SmallInteger.prototype.compareAbs","NativeBigInt.prototype.compareAbs","compare","BigInteger.prototype.compare","Infinity","SmallInteger.prototype.compare","NativeBigInt.prototype.compare","BigInteger.prototype.equals","eq","notEquals","BigInteger.prototype.notEquals","neq","BigInteger.prototype.greater","gt","BigInteger.prototype.lesser","lt","greaterOrEquals","BigInteger.prototype.greaterOrEquals","geq","lesserOrEquals","BigInteger.prototype.lesserOrEquals","leq","BigInteger.prototype.isEven","SmallInteger.prototype.isEven","NativeBigInt.prototype.isEven","BigInteger.prototype.isOdd","SmallInteger.prototype.isOdd","NativeBigInt.prototype.isOdd","BigInteger.prototype.isPositive","SmallInteger.prototype.isPositive","BigInteger.prototype.isNegative","SmallInteger.prototype.isNegative","BigInteger.prototype.isUnit","SmallInteger.prototype.isUnit","NativeBigInt.prototype.isUnit","BigInteger.prototype.isZero","SmallInteger.prototype.isZero","NativeBigInt.prototype.isZero","BigInteger.prototype.isDivisibleBy","isPrime","BigInteger.prototype.isPrime","strict","bitLength","logN","log","isProbablePrime","BigInteger.prototype.isProbablePrime","iterations","randBetween","BigInteger.prototype.modInv","zero","newT","one","newR","lastT","lastR","BigInteger.prototype.next","SmallInteger.prototype.next","NativeBigInt.prototype.next","BigInteger.prototype.prev","SmallInteger.prototype.prev","NativeBigInt.prototype.prev","powersOfTwo","powers2Length","BigInteger.prototype.shiftLeft","shiftRight","BigInteger.prototype.shiftRight","remQuo","BigInteger.prototype.not","and","BigInteger.prototype.and","or","BigInteger.prototype.or","xor","BigInteger.prototype.xor","BigInteger.prototype.bitLength","toArray","BigInteger.prototype.toArray","SmallInteger.prototype.toArray","NativeBigInt.prototype.toArray","BigInteger.prototype.toString","zeros","SmallInteger.prototype.toString","toJSON","SmallInteger.prototype.toJSON","BigInteger.prototype.valueOf","parseInt","SmallInteger.prototype.valueOf","NativeBigInt.prototype.toJSNumber","minusOne","lcm","isInstance","Integer.isInstance","low","range","high","random","restricted","fromArray","Integer.fromArray","hasOwnProperty","currentRaf","runWasmExport","exportKey","parameters","WasmBoyLib","export","getWasmMemorySection","getWasmConstant","constantKey","constant","messageRequests","libWorkerOnMessage","breakpointTask","breakpointCallback","crashedTask","programCounter","gameboyMemoryConstant","opcode","isWindowUnloading","WasmBoyLibService","disablePauseOnHidden","wasmBoyOptions","configTask","setCanvas","getConfig","setCanvasTask","getCanvas","loadROM","boundLoadROM","playTask","onLoadedAndStarted","onPlay","updateId","renderId","pauseTask","onPause","reset","resetTask","loadedROM","getSaveStates","getSaveStatesTask","getFPS","getCoreType","coreType","getSpeed","setSpeedTask","isGBC","isGBCTask","_resetConfig","isGbcEnabled","instantiateWorkersTask","WasmBoy","isPlaying","isPaused","isReady","isLoadedAndStarted","getVersion","packageJson","_getAudioChannels","_getCartridgeInfo","_runNumberOfFrames","runNumberOfFrames","frames","rafUpdateCanvas","_runWasmExport","_getWasmMemorySection","_getWasmConstant","_getStepsAsString","getStepsAsString","stepsPerStepSet","stepSets","steps","bigSteps","_getCyclesAsString","getCyclesAsString","cyclesPerCycleSet","cycleSets","cycles","bigCycles"],"mappings":"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"}