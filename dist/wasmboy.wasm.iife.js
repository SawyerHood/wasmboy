'use strict';var WasmBoy=function(ma){function C(a){return a.data?a.data:a}function na(a,b){b=b||{};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var e=3===b?32:16;if(2===c){var f=a.getChannelData(0);a=a.getChannelData(1);for(var g=f.length+a.length,p=new Float32Array(g),m=0,l=0;m<g;)p[m++]=f[l],p[m++]=a[l],l++;f=p}else f=a.getChannelData(0);p=e/8;m=c*p;a=new ArrayBuffer(44+f.length*p);g=new DataView(a);Y(g,0,"RIFF");g.setUint32(4,36+f.length*p,!0);Y(g,8,"WAVE");Y(g,12,"fmt ");g.setUint32(16,
16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,!0);g.setUint32(28,d*m,!0);g.setUint16(32,m,!0);g.setUint16(34,e,!0);Y(g,36,"data");g.setUint32(40,f.length*p,!0);if(1===b)for(c=44,d=0;d<f.length;d++,c+=2)b=Math.max(-1,Math.min(1,f[d])),g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=44,d=0;d<f.length;d++,c+=4)g.setFloat32(c,f[d],!0);return a}function Y(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}function oa(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=
Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable}));c.push.apply(c,d)}return c}function P(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?oa(Object(c),!0).forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):oa(Object(c)).forEach(function(b){Object.defineProperty(a,
b,Object.getOwnPropertyDescriptor(c,b))})}return a}function Z(a,b){return b={exports:{}},a(b,b.exports),b.exports}function pa(){let a=Object.assign({},Ea);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&this.saveStateCallback(a);E.runHook({key:"saveState",params:[a]});return a}function U(){if(!this.internalState)return null;
const a=pa.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=0;c<b.length;c++)a.wasmboyMemory[b[c]]=Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}function Fa(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);
a=new Uint8Array(b.header);const c=new Uint8Array(b.cartridgeRam);if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}function Ga(){window.addEventListener("beforeunload",()=>{U.bind(this)()},!1);window.addEventListener("unload",()=>{U.bind(this)()},!1);window.addEventListener("pagehide",()=>{U.bind(this)()},!1);document.addEventListener("visibilitychange",
()=>{"hidden"===document.visibilityState&&U.bind(this)()});return Fa.bind(this)()}function V(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}function qa(a,
b){let c;a.type.includes("touch")?c=a.touches[0]:a.type.includes("mouse")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}function Ha(){return{onGetState:(a)=>{const b=a.B;a.A=a.A||a.X;a.B=b||a.Y;return a}}}function ra(a,b,c){b||(b=ha());return{workerId:c,messageId:b,message:a}}async function Ia(){this.initialized||(this.loadedAndStarted=this.ready=!1,await this._instantiateWorkers(),this.coreType=(await this.worker.postMessage({type:u.INSTANTIATE_WASM})).message.type,
await v.initialize(this.options.headless,this.options.maxNumberOfAutoSaveStates,this.options.saveStateCallback),await v.clearMemory(),this.initialized=!0)}function Ja(a,b){const c=async()=>{!this.options.headless&&v.getLoadedCartridgeMemoryState().RAM&&await v.saveCartridgeRam();const c=await sa(a,b);await v.loadCartridgeRom(c.ROM,c.name);this.options.enableBootROMIfAvailable&&((await v.getCartridgeInfo()).CGBFlag?await v.loadBootROMIfAvailable(v.SUPPORTED_BOOT_ROM_TYPES.GBC):await v.loadBootROMIfAvailable(v.SUPPORTED_BOOT_ROM_TYPES.GB));
this.loadedROM=a;await this.worker.postMessage({type:u.CONFIG,config:[v.loadedCartridgeMemoryState.BOOT?1:0,this.options.isGbcEnabled?1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0,this.options.enableAudioDebugging?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,
headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,isGbcColorizationEnabled:this.options.isGbcColorizationEnabled,gbcColorizationPalette:this.options.gbcColorizationPalette,enableAudioDebugging:this.options.enableAudioDebugging,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();await Ia.bind(this)();this.options.headless?await c():(await Promise.all([L.initialize(this.canvasElement,this.options.updateGraphicsCallback),I.initialize(this.options.updateAudioCallback),
G.initialize()]),await c(),await v.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady();E.runHook({key:"ready"})})()}function ta(){if(this.paused)return!0;let a=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?a=!0:this.frameSkipCounter=0);a||L.renderFrame();G.updateController();this.renderId=F(()=>{ta.call(this)})}function Ka(a){const b=C(a);if(b.message)switch(ua[b.message.type]&&ua[b.message.type].forEach((a)=>a(b.message)),
b.message.type){case u.UPDATED:this.fps=b.message.fps;break;case u.BREAKPOINT:(async()=>{await this.pause();this.options.breakpointCallback&&this.options.breakpointCallback();E.runHook({key:"breakpoint"})})();break;case u.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let a=await J("getProgramCounter");var b=await va("GAMEBOY_INTERNAL_MEMORY_LOCATION");b=await wa(b+a,b+a+1);console.log(`Program Counter: 0x${a.toString(16)}`);console.log(`Opcode: 0x${b[0].toString(16)}`)})()}}
const xa={name:"wasmboy-plugin REQUIRED",graphics:(a)=>{},audio:(a,b,c)=>{},saveState:(a)=>{},canvas:(a,b,c)=>{},breakpoint:()=>{},ready:()=>{},play:()=>{},pause:()=>{},loadedAndStarted:()=>{}};class La{constructor(){this.plugins={};this.pluginIdCounter=0}addPlugin(a){if(!a&&"object"!==typeof a)throw Error("Invalid Plugin Object");if(!a.name)throw Error('Added plugin must have a "name" property');const b=this.pluginIdCounter;this.plugins[this.pluginIdCounter]=a;this.pluginIdCounter++;return()=>{this.removePlugin(b)}}removePlugin(a){delete this.plugins[a]}runHook(a){if(!xa[a.key]||
"function"!==typeof xa[a.key])throw Error("No such hook as "+a.key);Object.keys(this.plugins).forEach((b)=>{b=this.plugins[b];if(b[a.key]){let c=void 0;try{c=b[a.key].apply(null,a.params)}catch(d){console.error(`There was an error running the '${a.key}' hook, on the ${b.name} plugin.`),console.error(d)}a.callback&&a.callback(c)}})}}const E=new La,u={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",
SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",PLAY:"PLAY",BREAKPOINT:"BREAKPOINT",PAUSE:"PAUSE",UPDATED:"UPDATED",CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",RUN_WASM_EXPORT:"RUN_WASM_EXPORT",GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT",FORCE_OUTPUT_FRAME:"FORCE_OUTPUT_FRAME",SET_SPEED:"SET_SPEED",IS_GBC:"IS_GBC"};
class Ma{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(this.canvasElement.width,
this.canvasElement.height);this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);E.runHook({key:"canvas",params:[this.canvasElement,this.canvasContext,this.canvasImageData],
callback:(a)=>{a&&(a.canvasElement&&(this.canvasElement=a.canvasElement),a.canvasContext&&(this.canvasContext=a.canvasContext),a.canvasImageData&&(this.canvasImageData=a.canvasImageData))}});this.worker&&await this.worker.postMessage({type:u.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=C(a);switch(a.message.type){case u.UPDATED:this.imageDataArray=new Uint8ClampedArray(a.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){this.imageDataArrayChanged&&
(this.imageDataArrayChanged=!1,this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray),E.runHook({key:"graphics",params:[this.imageDataArray],callback:(a)=>{a&&(this.imageDataArray=a)}}),this.canvasImageData.data.set(this.imageDataArray),this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),this.canvasContext.putImageData(this.canvasImageData,0,0))}}const L=new Ma;class Q{constructor(a){this.id=a;this.audioPlaytime=this.audioBuffer=this.audioContext=
void 0;this.audioSources=[];this.gainNode=void 0;this.recording=this.libMuted=this.muted=!1;this.recordingAnchor=this.recordingAudioBuffer=this.recordingRightBuffers=this.recordingLeftBuffers=void 0}createAudioContextIfNone(){this.audioContext||"undefined"===typeof window||(this.audioContext=new (window.AudioContext||window.webkitAudioContext),!0===!!this.audioContext&&(this.gainNode=this.audioContext.createGain()))}getCurrentTime(){this.createAudioContextIfNone();if(this.audioContext)return this.audioContext.currentTime}getPlayTime(){return this.audioPlaytime}resumeAudioContext(){this.createAudioContextIfNone();
this.audioContext&&"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}playAudio(a,b,c,d,e){if(this.audioContext){b=new Float32Array(b);c=new Float32Array(c);this.audioBuffer=this.audioContext.createBuffer(2,a,44100);this._setSamplesToAudioBuffer(this.audioBuffer,b,c);this.recording&&(this.recordingLeftBuffers.push(b),this.recordingRightBuffers.push(c));c=this.audioContext.createBufferSource();c.buffer=this.audioBuffer;c.playbackRate.setValueAtTime(d,
this.audioContext.currentTime);var f=c;e&&(e=e(this.audioContext,f,this.id))&&(f=e);E.runHook({key:"audio",params:[this.audioContext,f,this.id],callback:(a)=>{a&&(f.connect(a),f=a)}});this.gainNode&&(f.connect(this.gainNode),f=this.gainNode);f.connect(this.audioContext.destination);e=this.audioContext.currentTime;b=e+.1;this.audioPlaytime=this.audioPlaytime||b;this.audioPlaytime<e&&(this.cancelAllAudio(),this.audioPlaytime=b);c.start(this.audioPlaytime);for(this.audioPlaytime+=a/(44100*d);this.audioSources[this.audioSources.length-
1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:c,playTime:this.audioPlaytime});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();this.audioSources=
[];this.audioPlaytime=this.audioContext.currentTime+.1}}mute(){this.muted||(this._setGain(0),this.muted=!0)}unmute(){this.muted&&(this._setGain(1),this.muted=!1)}hasRecording(){return!!this.recordingAudioBuffer}startRecording(){this.recording||(this.recording=!0,this.recordingLeftBuffers=[],this.recordingRightBuffers=[],this.recordingAudioBuffer=void 0)}stopRecording(){if(this.recording){this.recording=!1;var a=(a)=>{let b=0;a.forEach((a)=>{b+=a.length});const c=new Float32Array(b);let f=0;a.forEach((a)=>
{c.set(a,f);f+=a.length});return c},b=a(this.recordingLeftBuffers);a=a(this.recordingRightBuffers);this.recordingAudioBuffer=this.audioContext.createBuffer(2,b.length,44100);this._setSamplesToAudioBuffer(this.recordingAudioBuffer,b,a);this.recordingRightBuffer=this.recordingLeftBuffer=void 0}}downloadRecordingAsWav(a){if(this.recordingAudioBuffer){this.recordingAnchor||(this.recordingAnchor=document.createElement("a"),document.body.appendChild(this.recordingAnchor),this.recordingAnchor.style="display: none");
var b=na(this.recordingAudioBuffer);b=new window.Blob([new DataView(b)],{type:"audio/wav"});b=window.URL.createObjectURL(b);this.recordingAnchor.href=b;a=a?`${a}.wav`:`wasmboy-${(new Date).toLocaleDateString(void 0,{month:"2-digit",day:"2-digit",year:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})}.wav`;this.recordingAnchor.download=a;this.recordingAnchor.click();window.URL.revokeObjectURL(b)}}getRecordingAsWavBase64EncodedString(){if(this.recordingAudioBuffer){var a=na(this.recordingAudioBuffer);
return`data:audio/wav;base64,${this._arrayBufferToBase64(a)}`}}getRecordingAsAudioBuffer(){return this.recordingAudioBuffer}_libMute(){this._setGain(0);this.libMuted=!0}_libUnmute(){this.libMuted&&(this._setGain(1),this.libMuted=!1)}_setGain(a){this.createAudioContextIfNone();this.gainNode&&this.gainNode.gain.setValueAtTime(a,this.audioContext.currentTime)}_setSamplesToAudioBuffer(a,b,c){a.copyToChannel?(a.copyToChannel(b,0,0),a.copyToChannel(c,1,0)):(a.getChannelData(0).set(b),a.getChannelData(1).set(c))}_arrayBufferToBase64(a){let b=
"";a=new Uint8Array(a);let c=a.byteLength;for(var d=0;d<c;d++)b+=String.fromCharCode(a[d]);return window.btoa(b)}}class Na{constructor(){this.updateAudioCallback=this.worker=void 0;this.gbChannels={master:new Q("master"),channel1:new Q("channel1"),channel2:new Q("channel2"),channel3:new Q("channel3"),channel4:new Q("channel4")};this._createAudioContextIfNone();"undefined"!==typeof window&&(this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),this.gbChannels.channel3._libMute(),
this.gbChannels.channel4._libMute());this.averageTimeStretchFps=[];this.speed=1;this.WASMBOY_CHANNEL_4_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_3_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_2_OUTPUT_LOCATION=this.WASMBOY_CHANNEL_1_OUTPUT_LOCATION=this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=[];this.speed=1;this._createAudioContextIfNone();this.cancelAllAudio();return this.worker.postMessage({type:u.GET_CONSTANTS})})()}setWorker(a){this.worker=
a;this.worker.addMessageListener((a)=>{a=C(a);switch(a.message.type){case u.UPDATED:{this.playAudio(a.message);a=0;let b=this.gbChannels.master.getCurrentTime(),d=this.gbChannels.master.getPlayTime();b&&0<b&&(a=d-b);this.worker.postMessageIgnoreResponse({type:u.AUDIO_LATENCY,latency:a})}}})}getAudioChannels(){return this.gbChannels}setSpeed(a){this.speed=a;this.cancelAllAudio(!0);this.resetTimeStretch()}resetTimeStretch(){this.averageTimeStretchFps=[]}playAudio(a){var b=a.fps,c=a.allowFastSpeedStretching;
let d=a.numberOfSamples;var e=b||60;const f=Math.abs(b-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);f&&15<=f&&this.resetTimeStretch();this.averageTimeStretchFps.push(b);171<this.averageTimeStretchFps.length&&this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&(e=this.averageTimeStretchFps.reduce((a,b)=>a+b),e=Math.floor(e/this.averageTimeStretchFps.length));b=1;(57>e||c)&&1===this.speed&&(b*=e/60,0>=b&&(b=.01));b*=this.speed;this.gbChannels.master.playAudio(d,
a.audioBuffer.left,a.audioBuffer.right,b,this.updateAudioCallback);for(c=0;4>c;c++)e=c+1,a[`channel${e}Buffer`]&&this.gbChannels[`channel${e}`].playAudio(d,a[`channel${e}Buffer`].left,a[`channel${e}Buffer`].right,b,this.updateAudioCallback);a=!this.gbChannels.channel1.muted&&!this.gbChannels.channel2.muted&&!this.gbChannels.channel3.muted&&!this.gbChannels.channel4.muted;this.gbChannels.master.muted&&a?(this.gbChannels.master.unmute(),this.gbChannels.channel1._libMute(),this.gbChannels.channel2._libMute(),
this.gbChannels.channel3._libMute(),this.gbChannels.channel4._libMute()):this.gbChannels.master.muted||a||(this.gbChannels.master.mute(),this.gbChannels.channel1._libUnmute(),this.gbChannels.channel2._libUnmute(),this.gbChannels.channel3._libUnmute(),this.gbChannels.channel4._libUnmute())}resumeAudioContext(){this._applyOnAllChannels("resumeAudioContext")}cancelAllAudio(a){this._applyOnAllChannels("cancelAllAudio",[a])}_createAudioContextIfNone(){this._applyOnAllChannels("createAudioContextIfNone")}_applyOnAllChannels(a,
b){Object.keys(this.gbChannels).forEach((c)=>{this.gbChannels[c][a].apply(this.gbChannels[c],b)})}}const I=new Na;var ya="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{},Oa=Z(function(a){(function(){function b(a){return new Promise(function(b,c){a.onsuccess=function(){b(a.result)};a.onerror=function(){c(a.error)}})}function c(a,c,d){var e,f=new Promise(function(f,g){e=a[c].apply(a,d);b(e).then(f,g)});
f.request=e;return f}function d(a,b,d){var e=c(a,b,d);return e.then(function(a){if(a)return new l(a,e.request)})}function e(a,b,c){c.forEach(function(c){Object.defineProperty(a.prototype,c,{get:function(){return this[b][c]},set:function(a){this[b][c]=a}})})}function f(a,b,d,e){e.forEach(function(e){e in d.prototype&&(a.prototype[e]=function(){return c(this[b],e,arguments)})})}function g(a,b,c,d){d.forEach(function(d){d in c.prototype&&(a.prototype[d]=function(){return this[b][d].apply(this[b],arguments)})})}
function p(a,b,c,e){e.forEach(function(e){e in c.prototype&&(a.prototype[e]=function(){return d(this[b],e,arguments)})})}function m(a){this._index=a}function l(a,b){this._cursor=a;this._request=b}function h(a){this._store=a}function n(a){this._tx=a;this.complete=new Promise(function(b,c){a.oncomplete=function(){b()};a.onerror=function(){c(a.error)};a.onabort=function(){c(a.error)}})}function y(a,b,c){this._db=a;this.oldVersion=b;this.transaction=new n(c)}function z(a){this._db=a}e(m,"_index",["name",
"keyPath","multiEntry","unique"]);f(m,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);p(m,"_index",IDBIndex,["openCursor","openKeyCursor"]);e(l,"_cursor",["direction","key","primaryKey","value"]);f(l,"_cursor",IDBCursor,["update","delete"]);["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(l.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(a){if(a)return new l(a,
c._request)})})})});h.prototype.createIndex=function(){return new m(this._store.createIndex.apply(this._store,arguments))};h.prototype.index=function(){return new m(this._store.index.apply(this._store,arguments))};e(h,"_store",["name","keyPath","indexNames","autoIncrement"]);f(h,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));p(h,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(h,"_store",IDBObjectStore,["deleteIndex"]);n.prototype.objectStore=
function(){return new h(this._tx.objectStore.apply(this._tx,arguments))};e(n,"_tx",["objectStoreNames","mode"]);g(n,"_tx",IDBTransaction,["abort"]);y.prototype.createObjectStore=function(){return new h(this._db.createObjectStore.apply(this._db,arguments))};e(y,"_db",["name","version","objectStoreNames"]);g(y,"_db",IDBDatabase,["deleteObjectStore","close"]);z.prototype.transaction=function(){return new n(this._db.transaction.apply(this._db,arguments))};e(z,"_db",["name","version","objectStoreNames"]);
g(z,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(a){[h,m].forEach(function(b){a in b.prototype&&(b.prototype[a.replace("open","iterate")]=function(){var b=Array.prototype.slice.call(arguments),c=b[b.length-1],d=this._store||this._index,e=d[a].apply(d,b.slice(0,-1));e.onsuccess=function(){c(e.result)}})})});[m,h].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(a,b){var c=this,d=[];return new Promise(function(e){c.iterateCursor(a,function(a){a?(d.push(a.value),
void 0!==b&&d.length==b?e(d):a.continue()):e(d)})})})});a.exports={open:function(a,b,d){a=c(indexedDB,"open",[a,b]);var e=a.request;e&&(e.onupgradeneeded=function(a){d&&d(new y(e.result,a.oldVersion,e.transaction))});return a.then(function(a){return new z(a)})},delete:function(a){return c(indexedDB,"deleteDatabase",[a])}};a.exports.default=a.exports})()}),M=Z(function(a){a.exports="undefined"!=typeof indexedDB?Oa:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}}),
K=!1;if("undefined"!==typeof window){const a=M.open("wasmboy",1,(a)=>{a.createObjectStore("keyval")});K={get(b){return a.then((a)=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").clear();
return a.complete})},keys(){return a.then((a)=>{a=a.transaction("keyval");const b=[],d=a.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,(a)=>{a&&(b.push(a.key),a.continue())});return a.complete.then(()=>b)})}}}else K={get:()=>{},set:()=>{},delete:()=>{},clear:()=>{},keys:()=>{}};const w=K;let l={parse:function(a){let b=l.bin.readUshort,c=l.bin.readUint;var d;let e={};a=new Uint8Array(a);for(d=a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let f=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=
c(a,d);for(let g=0;g<f;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let f=c(a,d);d+=4;let g=c(a,d);d+=4;let da=b(a,d),h=b(a,d+2),n=b(a,d+4);d+=6;d+=8;let y=c(a,d);d+=4;d+=da+h+n;l._readLocal(a,y,e,f,g)}return e},_readLocal:function(a,b,c,d,e){var f=l.bin.readUshort,g=l.bin.readUint;g(a,b);b+=4;f(a,b);b+=2;f(a,b);b+=2;let p=f(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=f(a,b);b+=2;let m=f(a,b);b+=2;f=l.bin.readUTF8(a,b,g);b=b+g+m;a=new Uint8Array(a.buffer,b);if(0==p)c[f]=new Uint8Array(a.buffer.slice(b,
b+d));else if(8==p)b=new Uint8Array(e),l.inflateRaw(a,b),c[f]=b;else throw"unknown compression method: "+p;},inflateRaw:function(a,b){return l.F.inflate(a,b)},inflate:function(a,b){return l.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=0,d=new Uint8Array(50+Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=l.F.deflateRaw(a,d,c+2,b.level);a=l.adler(a,0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;
return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+Math.floor(1.1*a.length)),d;d=l.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=l.bin.writeUint,d=l.bin.writeUshort;var e={};for(var f in a){var g=!l._noNeed(f),p=a[f];let b=l.crc.crc(p,0,p.length);e[f]={cpr:g,usize:p.length,crc:b,file:g?l.deflateRaw(p):p}}for(let a in e)b+=e[a].file.length+30+46+2*l.bin.sizeUTF8(a);a=new Uint8Array(b+22);
b=0;f=[];for(var m in e)g=e[m],f.push(b),b=l._writeHeader(a,b,m,g,0);m=0;g=b;for(let c in e)p=e[c],f.push(b),b=l._writeHeader(a,b,c,p,1,f[m++]);e=b-g;c(a,b,101010256);b=b+4+4;d(a,b,m);b+=2;d(a,b,m);b+=2;c(a,b,e);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},_writeHeader:function(a,b,c,d,e,f){let g=l.bin.writeUint,p=l.bin.writeUshort,m=d.file;g(a,b,0==e?67324752:33639248);b+=4;1==e&&(b+=2);p(a,b,20);b+=2;p(a,b,0);b+=2;p(a,
b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,m.length);b+=4;g(a,b,d.usize);b+=4;p(a,b,l.bin.sizeUTF8(c));b+=2;p(a,b,0);b+=2;1==e&&(b=b+2+2+6,g(a,b,f),b+=4);c=l.bin.writeUTF8(a,b,c);b+=c;0==e&&(a.set(m,b),b+=m.length);return b}};l.crc={table:function(){let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}return a}(),update:function(a,b,c,d){for(let e=0;e<d;e++)a=l.crc.table[(a^b[c+e])&255]^a>>>8;return a},crc:function(a,b,c){return l.crc.update(4294967295,
a,b,c)^4294967295}};l.adler=function(a,b,c){let d=1,e=0,f=b;for(b+=c;f<b;){for(c=Math.min(f+5552,b);f<c;)d+=a[f++],e+=d;d%=65521;e%=65521}return e<<16|d};l.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&255},readASCII:function(a,b,c){let d="";for(let e=0;e<c;e++)d+=String.fromCharCode(a[b+
e]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,b,c){let d="",e;for(let e=0;e<c;e++)d+="%"+l.bin.pad(a[b+e].toString(16));try{e=decodeURIComponent(d)}catch(f){return l.bin.readASCII(a,b,c)}return e},writeUTF8:function(a,b,c){let d=c.length,e=0;for(let f=0;f<d;f++){let d=c.charCodeAt(f);if(0==(d&4294967168))a[b+e]=d,e++;else if(0==(d&4294965248))a[b+e]=192|d>>6,a[b+e+1]=128|d>>0&63,e+=2;else if(0==
(d&4294901760))a[b+e]=224|d>>12,a[b+e+1]=128|d>>6&63,a[b+e+2]=128|d>>0&63,e+=3;else if(0==(d&4292870144))a[b+e]=240|d>>18,a[b+e+1]=128|d>>12&63,a[b+e+2]=128|d>>6&63,a[b+e+3]=128|d>>0&63,e+=4;else throw"e";}return e},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=4;else throw"e";}return c}};l.F={};l.F.deflateRaw=function(a,b,c,d){var e=[[0,0,0,0,0],
[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let f=l.F.U,g=l.F._goodIndex;var p=l.F._putsE;let m=0;c<<=3;let h=0,n=a.length;if(0==d){for(;m<n;)e=Math.min(65535,n-m),p(b,c,m+e==n?1:0),c=l.F._copyExact(a,m,e,b,c+8),m+=e;return c>>>3}p=f.lits;d=f.strt;let u=f.prev,y=0,z=0,q=0,aa=0;let x=0;2<n&&(x=l.F._hash(a,0),d[x]=0);for(m=0;m<n;m++){var B=x;if(m+1<n-2){x=l.F._hash(a,m+1);var t=m+1&32767;u[t]=d[x];
d[x]=t}if(h<=m){if(14E3<y||26697<z)h<m&&(p[y]=m-h,y+=2,h=m),c=l.F._writeBlock(m==n-1||h==n?1:0,p,y,aa,a,q,m-q,b,c),y=z=aa=0,q=m;t=0;m<n-2&&(t=l.F._bestMatch(a,m,u,B,Math.min(e[2],n-m),e[3]));if(0!=t){B=t>>>16;t&=65535;let a=g(B,f.of0);f.lhst[257+a]++;let b=g(t,f.df0);f.dhst[b]++;aa+=f.exb[a]+f.dxb[b];p[y]=B<<23|m-h;p[y+1]=t<<16|a<<8|b;y+=2;h=m+B}else f.lhst[a[m]]++;z++}}if(q!=m||0==a.length)h<m&&(p[y]=m-h,y+=2),c=l.F._writeBlock(1,p,y,aa,a,q,m-q,b,c);for(;0!=(c&7);)c++;return c>>>3};l.F._bestMatch=
function(a,b,c,d,e,f){var g=b&32767;let p=c[g],m=g-p+32768&32767;if(p==g||d!=l.F._hash(a,b-m))return 0;let h=d=0,n=Math.min(32767,b);for(;m<=n&&0!=--f&&p!=g;){if(0==d||a[b+d]==a[b+d-m])if(g=l.F._howLong(a,b,m),g>d){d=g;h=m;if(d>=e)break;m+2<g&&(g=m+2);let a=0;for(let d=0;d<g-2;d++){let e=b-m+d+32768&32767,f=e-c[e]+32768&32767;f>a&&(a=f,p=e)}}g=p;p=c[g];m+=g-p+32768&32767}return d<<16|h};l.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,e=Math.min(a.length,
b+258);for(b+=3;b<e&&a[b]==a[b-c];)b++;return b-d};l.F._hash=function(a,b){return(a[b]<<8|a[b+1])+(a[b+2]<<4)&65535};l.saved=0;l.F._writeBlock=function(a,b,c,d,e,f,g,p,m){let h=l.F.U,n=l.F._putsF,u=l.F._putsE;let y,z,q,aa;h.lhst[256]++;var x=l.F.getTrees();var B=x[0];y=x[1];z=x[2];q=x[3];aa=x[4];var t=x[5];var v=x[6];x=x[7];var w=(0==(m+3&7)?0:8-(m+3&7))+32+(g<<3);let C=d+l.F.contSize(h.fltree,h.lhst)+l.F.contSize(h.fdtree,h.dhst);d=d+l.F.contSize(h.ltree,h.lhst)+l.F.contSize(h.dtree,h.dhst);d+=14+
3*t+l.F.contSize(h.itree,h.ihst)+(2*h.ihst[16]+3*h.ihst[17]+7*h.ihst[18]);for(var H=0;286>H;H++)h.lhst[H]=0;for(H=0;30>H;H++)h.dhst[H]=0;for(H=0;19>H;H++)h.ihst[H]=0;w=w<C&&w<d?0:C<d?1:2;n(p,m,a);n(p,m+1,w);m+=3;if(0==w){for(;0!=(m&7);)m++;m=l.F._copyExact(e,f,g,p,m)}else{let d,da;1==w&&(d=h.fltree,da=h.fdtree);if(2==w){l.F.makeCodes(h.ltree,B);l.F.revCodes(h.ltree,B);l.F.makeCodes(h.dtree,y);l.F.revCodes(h.dtree,y);l.F.makeCodes(h.itree,z);l.F.revCodes(h.itree,z);d=h.ltree;da=h.dtree;u(p,m,q-257);
m+=5;u(p,m,aa-1);m+=5;u(p,m,t-4);m+=4;for(a=0;a<t;a++)u(p,m+3*a,h.itree[(h.ordr[a]<<1)+1]);m=l.F._codeTiny(v,h.itree,p,m+3*t);m=l.F._codeTiny(x,h.itree,p,m)}for(t=0;t<c;t+=2){a=b[t];v=a>>>23;for(a=f+(a&8388607);f<a;)m=l.F._writeLit(e[f++],d,p,m);0!=v&&(B=b[t+1],a=B>>16,g=B>>8&255,B&=255,m=l.F._writeLit(257+g,d,p,m),u(p,m,v-h.of0[g]),m+=h.exb[g],m=l.F._writeLit(B,da,p,m),n(p,m,a-h.df0[B]),m+=h.dxb[B],f+=v)}m=l.F._writeLit(256,d,p,m)}return m};l.F._copyExact=function(a,b,c,d,e){let f=e>>>3;d[f]=c;d[f+
1]=c>>>8;d[f+2]=255-d[f];d[f+3]=255-d[f+1];f+=4;d.set(new Uint8Array(a.buffer,b,c),f);return e+(c+4<<3)};l.F.getTrees=function(){let a=l.F.U,b=l.F._hufTree(a.lhst,a.ltree,15),c=l.F._hufTree(a.dhst,a.dtree,15),d=[],e=l.F._lenCodes(a.ltree,d),f=[],g=l.F._lenCodes(a.dtree,f);for(var p=0;p<d.length;p+=2)a.ihst[d[p]]++;for(p=0;p<f.length;p+=2)a.ihst[f[p]]++;p=l.F._hufTree(a.ihst,a.itree,7);let m=19;for(;4<m&&0==a.itree[(a.ordr[m-1]<<1)+1];)m--;return[b,c,p,e,g,m,d,f]};l.F.getSecond=function(a){let b=[];
for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};l.F.nonZero=function(a){let b="";for(let c=0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};l.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};l.F._codeTiny=function(a,b,c,d){for(let e=0;e<a.length;e+=2){let f=a[e],g=a[e+1];d=l.F._writeLit(f,b,c,d);let p=16==f?2:17==f?3:7;15<f&&(l.F._putsE(c,d,g,p),d+=p)}return d};l.F._lenCodes=function(a,b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let f=0;f<c;f+=
2){var d=a[f+1],e=f+3<c?a[f+3]:-1;let g=f+5<c?a[f+5]:-1,l=0==f?-1:a[f-1];if(0==d&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);f+=2*d-2}else if(d==l&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,6);b.push(16,d-3);f+=2*d-2}else b.push(d,0)}return c>>>1};l.F._hufTree=function(a,b,c){var d=[],e=a.length,f=b.length,g=0;for(g=0;g<f;g+=2)b[g]=0,b[g+1]=0;for(g=0;g<e;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;e=d.slice(0);
if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,b){return a.f-b.f});g=d[0];f=d[1];let p=0,m=1,h=2;for(d[0]={lit:-1,f:g.f+f.f,l:g,r:f,d:0};m!=a-1;)g=p!=m&&(h==a||d[p].f<d[h].f)?d[p++]:d[h++],f=p!=m&&(h==a||d[p].f<d[h].f)?d[p++]:d[h++],d[m++]={lit:-1,f:g.f+f.f,l:g,r:f};d=l.F.setDepth(d[m-1],0);d>c&&(l.F.restrictDepth(e,c,d),d=c);for(g=0;g<a;g++)b[(e[g].lit<<1)+1]=e[g].d;return d};l.F.setDepth=function(a,b){return-1!=a.lit?a.d=b:Math.max(l.F.setDepth(a.l,
b+1),l.F.setDepth(a.r,b+1))};l.F.restrictDepth=function(a,b,c){let d=0,e=1<<c-b,f=0;a.sort(function(a,b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;f+=e-(1<<c-g)}else break;for(f>>>=c-b;0<f;)c=a[d].d,c<b?(a[d].d++,f-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>f&&(a[d].d--,f++);0!=f&&console.log("debt left")};l.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};l.F._writeLit=
function(a,b,c,d){l.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};l.F.inflate=function(a,b){if(3==a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=l.F;let d=c._bitsF,e=c._bitsE,f=c._decodeTiny,g=c.makeCodes,h=c.codes2map,m=c._get17;c=c.U;let n=null==b;n&&(b=new Uint8Array(a.length>>2<<3));let u=0;var v,y;let z=y=v=0;for(var q=0,w;0==u;){u=d(a,q,1);var x=d(a,q+1,2);q+=3;if(0==x)0!=(q&7)&&(q+=8-(q&7)),q=(q>>>3)+4,x=a[q-4]|a[q-3]<<8,n&&(b=l.F._check(b,z+x)),b.set(new Uint8Array(a.buffer,a.byteOffset+q,
x),z),q=q+x<<3,z+=x;else{n&&(b=l.F._check(b,z+131072));if(1==x){var B=c.flmap;w=c.fdmap;v=511;y=31}if(2==x){v=e(a,q,5)+257;y=e(a,q+5,5)+1;B=e(a,q+10,4)+4;q+=14;for(w=0;38>w;w+=2)c.itree[w]=0,c.itree[w+1]=0;x=1;for(w=0;w<B;w++){var t=e(a,q+3*w,3);c.itree[(c.ordr[w]<<1)+1]=t;t>x&&(x=t)}q+=3*B;g(c.itree,x);h(c.itree,x,c.imap);B=c.lmap;w=c.dmap;t=f(c.imap,(1<<x)-1,v,a,q,c.ltree);v=(1<<(t>>>24))-1;q+=t&16777215;g(c.ltree,t>>>24);h(c.ltree,t>>>24,B);x=f(c.imap,(1<<x)-1,y,a,q,c.dtree);y=(1<<(x>>>24))-1;
q+=x&16777215;g(c.dtree,x>>>24);h(c.dtree,x>>>24,w)}for(;;)if(x=B[m(a,q)&v],q+=x&15,t=x>>>4,0==t>>>8)b[z++]=t;else if(256==t)break;else{x=z+t-254;264<t&&(t=c.ldef[t-257],x=z+(t>>>3)+e(a,q,t&7),q+=t&7);t=w[m(a,q)&y];q+=t&15;t=c.ddef[t>>>4];let f=(t>>>4)+d(a,q,t&15);for(q+=t&15;z<x;)b[z]=b[z++-f],b[z]=b[z++-f],b[z]=b[z++-f],b[z]=b[z++-f];z=x}}}return b.length==z?b:b.slice(0,z)};l.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+
1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};l.F._decodeTiny=function(a,b,c,d,e,f){let g=e,h=l.F._bitsE,m=l.F._get17,n=c<<1,u=c=0;for(;c<n;){var w=a[m(d,e)&b];e+=w&15;var y=w>>>4;if(15>=y)f[c]=0,f[c+1]=y,y>u&&(u=y),c+=2;else{let a=w=0;16==y?(a=3+h(d,e,2)<<1,e+=2,w=f[c-1]):17==y?(a=3+h(d,e,3)<<1,e+=3):18==y&&(a=11+h(d,e,7)<<1,e+=7);for(y=c+a;c<y;)f[c]=0,f[c+1]=w,c+=2}}for(a=f.length;c<a;)f[c+1]=0,c+=2;return u<<24|e-g};l.F.makeCodes=function(a,b){var c=l.F.U;let d=a.length;var e;let f;var g=c.bl_count;
for(e=0;e<=b;e++)g[e]=0;for(e=1;e<d;e+=2)g[a[e]]++;c=c.next_code;e=0;g[0]=0;for(f=1;f<=b;f++)e=e+g[f-1]<<1,c[f]=e;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};l.F.codes2map=function(a,b,c){let d=a.length,e=l.F.U.rev15;for(let h=0;h<d;h+=2)if(0!=a[h+1]){var f=a[h+1];let d=h>>1<<4|f;var g=b-f;f=a[h]<<g;for(g=f+(1<<g);f!=g;)c[e[f]>>>15-b]=d,f++}};l.F.revCodes=function(a,b){let c=l.F.U.rev15,d=15-b;for(let e=0;e<a.length;e+=2)a[e]=c[a[e]<<b-a[e+1]]>>>d};l.F._putsE=function(a,b,c){c<<=b&7;b>>>=
3;a[b]|=c;a[b+1]|=c>>>8};l.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>16};l.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};l.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};l.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};l.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+3]<<24)>>>(b&7)};l.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),
ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),
fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};(function(){let a=l.F.U;for(var b=0;32768>b;b++){let c=b;c=(c&2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&
252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<16)>>>17}for(b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];for(b=0;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);l.F.makeCodes(a.fltree,9);l.F.codes2map(a.fltree,9,a.flmap);l.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,5);l.F.makeCodes(a.fdtree,5);l.F.codes2map(a.fdtree,5,a.fdmap);l.F.revCodes(a.fdtree,
5);for(b=0;19>b;b++)a.itree.push(0,0);for(b=0;286>b;b++)a.ltree.push(0,0);for(b=0;30>b;b++)a.dtree.push(0,0)})();const sa=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return{ROM:a};if("object"===typeof a&&a.size){var c=await Pa(a);a.name.toLowerCase().endsWith(".zip")&&(c=await za(c));return{ROM:c,name:a.name}}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then((a)=>a.ok?a.arrayBuffer():Promise.reject(a));c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);
c.toLowerCase().endsWith(".zip")&&(d=await za(d));return{ROM:d,name:c}})(),Pa=async(a)=>await new Promise((b,c)=>{const d=new FileReader;d.onload=()=>{const a=new Uint8Array(d.result);b(a)};d.readAsArrayBuffer(a)}),za=async(a)=>{const b=await l.parse(a);let c=!1;Object.keys(b).some((a)=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")||d.includes(".bin")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c},Ea={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],
gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};class Qa{constructor(){this.saveStateCallback=this.maxNumberOfAutoSaveStates=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1,BOOT:!1};this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRomFileName=this.cartridgeRom=this.bootRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=
this.WASMBOY_INTERNAL_MEMORY_SIZE=this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0;this.SUPPORTED_BOOT_ROM_TYPES={GB:"GB",GBC:"GBC"}}initialize(a,b,c){this.maxNumberOfAutoSaveStates=b;this.saveStateCallback=c;return(async()=>{await this._initializeConstants();a||await Ga.call(this)})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=C(a);switch(a.message.type){case u.UPDATED:{const b=Object.keys(a.message);
delete b.type;b.includes("BOOT_ROM")&&(this.bootRom=new Uint8Array(a.message.BOOT_ROM));b.includes("CARTRIDGE_ROM")&&(this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM));b.includes("CARTRIDGE_RAM")&&(this.cartridgeRam=new Uint8Array(a.message.CARTRIDGE_RAM));b.includes("GAMEBOY_MEMORY")&&(this.gameboyMemory=new Uint8Array(a.message.GAMEBOY_MEMORY));b.includes("PALETTE_MEMORY")&&(this.paletteMemory=new Uint8Array(a.message.PALETTE_MEMORY));b.includes("INTERNAL_STATE")&&(this.internalState=new Uint8Array(a.message.INTERNAL_STATE))}}})}getSavedMemory(){return(async()=>
{const a=[],b=await w.keys();for(let c=0;c<b.length;c++){const d=await w.get(b[c]);a.push(d)}return a})()}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:u.CLEAR_MEMORY}).then((a)=>{this.loadedCartridgeMemoryState.ROM=!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0})}isValidBootROMType(a){return Object.keys(this.SUPPORTED_BOOT_ROM_TYPES).some((b)=>
this.SUPPORTED_BOOT_ROM_TYPES[b]===a)}async addBootROM(a,b,c,d){a=a.toUpperCase();if(!this.isValidBootROMType(a))throw Error("Invalid Boot ROM type");b=await sa(b,c);d&&(delete d.name,delete d.ROM);c="Game Boy";this.SUPPORTED_BOOT_ROM_TYPES.GBC===a&&(c="Game Boy Color");d=P({ROM:b.ROM,name:c,type:a,date:Date.now()},d);await w.set("boot-rom-"+a,d)}async getBootROMs(){const a=[];for(let b in this.SUPPORTED_BOOT_ROM_TYPES){const c=await w.get("boot-rom-"+b);c&&a.push(c)}return a}async loadBootROMIfAvailable(a){if(w){a=
a.toUpperCase();if(!this.isValidBootROMType(a))throw Error("Invalid Boot ROM type");if(a=await w.get("boot-rom-"+a)){var b={};b.BOOT_ROM=a.ROM.buffer;await this.worker.postMessage(P({type:u.SET_MEMORY},b)).then((a)=>{this.loadedCartridgeMemoryState.BOOT=!0});await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["BOOT_ROM"]}).then((a)=>{a=C(a);this.bootRom=new Uint8Array(a.message.BOOT_ROM)})}}}loadCartridgeRom(a,b){return(async()=>{const c={};c.CARTRIDGE_ROM=a.buffer;await this.worker.postMessage(P({type:u.SET_MEMORY},
c)).then((a)=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["CARTRIDGE_ROM","CARTRIDGE_HEADER"]}).then((a)=>{a=C(a);this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM);this.cartridgeRomFileName=b;this.cartridgeHeader=new Uint8Array(a.message.CARTRIDGE_HEADER)})})()}saveLoadedCartridge(a){return(async()=>{if(!this.cartridgeHeader)throw Error("Error parsing the cartridge header");let b=await w.get(this.cartridgeHeader);b||(b={});const c=
await this.getCartridgeInfo();a&&(delete a.ROM,delete a.header);b.cartridgeRom=P({ROM:this.cartridgeRom,header:this.cartridgeHeader,fileName:this.cartridgeRomFileName||"Unknown",date:Date.now()},a);b.cartridgeInfo=c;this.cartridgeRam&&await this.saveCartridgeRam();await w.set(this.cartridgeHeader,b);return b})()}deleteSavedCartridge(a){return(async()=>{const b=a.cartridgeInfo.header;if(!b)throw Error("Error parsing the cartridge header");let c=await w.get(b);if(!c)throw Error("Could not find the passed cartridge");
delete c.cartridgeRom;await w.set(b,c);return c})()}saveCartridgeRam(a,b){return(async()=>{let c,d;a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let e=await w.get(c);e||(e={});e.cartridgeRam=d;await w.set(c,e)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await w.get(a);b&&b.cartridgeRam&&(a={},a.CARTRIDGE_RAM=b.cartridgeRam.buffer,
await this.worker.postMessage(P({type:u.SET_MEMORY},a)).then((a)=>{this.loadedCartridgeMemoryState.RAM=!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=pa.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let e=await w.get(d);e||(e={});e.saveStates||(e.saveStates=[]);if(c.isAuto&&this.maxNumberOfAutoSaveStates&&0<this.maxNumberOfAutoSaveStates){const a=[];e.saveStates.forEach((b)=>{b.isAuto&&a.push(b)});for(a.sort((a,
b)=>a.date<b.date?-1:a.date>b.date?1:0);0<a.length&&a.length+1>this.maxNumberOfAutoSaveStates;){var f=a.shift();f=this._indexOfSaveStateIndexInSaveStates(f,e.saveStates);e.saveStates.splice(f,1)}0<this.maxNumberOfAutoSaveStates&&e.saveStates.push(c)}else e.saveStates.push(c);await w.set(d,e);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");if(!a){b=await w.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");
saverState=b.saveStates[0]}b={};b.CARTRIDGE_RAM=a.wasmboyMemory.cartridgeRam.buffer;b.GAMEBOY_MEMORY=a.wasmboyMemory.gameBoyMemory.buffer;b.PALETTE_MEMORY=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b.INTERNAL_STATE=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(P({type:u.SET_MEMORY},b),[b.CARTRIDGE_RAM,b.GAMEBOY_MEMORY,b.PALETTE_MEMORY,b.INTERNAL_STATE]);await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE"]}).then((a)=>
{a=C(a);this.cartridgeRam=a.message.CARTRIDGE_RAM;this.gameboyMemory=a.message.GAMEBOY_MEMORY;this.paletteMemory=a.message.PALETTE_MEMORY;this.internalState=a.message.INTERNAL_STATE})})()}deleteState(a,b){return(async()=>{if(!a)throw Error("You must provide a save state to delete");if(b)var c=b;else this.cartridgeHeader&&(c=this.cartridgeHeader);if(c){var d=await w.get(c);if(d&&d.saveStates){var e=this._indexOfSaveStateIndexInSaveStates(a,d.saveStates);if(0>e)throw Error("Could not find the passed save state for the related cartridge...");
d.saveStates.splice(e,1);await w.set(c,d);return a}throw Error("No save states found for the Cartridge...");}throw Error("Please load a ROM, or pass a Cartridge header...");})()}getCartridgeObject(){return w.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const a={};a.header=this.cartridgeHeader;a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,
a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:u.GET_CONSTANTS}).then((a)=>{const b=
C(a);Object.keys(this).forEach((a)=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}_indexOfSaveStateIndexInSaveStates(a,b){let c=b.indexOf(a);0>c&&b.some((b,e)=>JSON.stringify(Object.keys(a))===JSON.stringify(Object.keys(b))&&a.date===b.date&&a.isAuto===b.isAuto?(c=e,!0):!1);return c}}const v=new Qa;let h={DPAD_UP:"DPAD_UP",DPAD_RIGHT:"DPAD_RIGHT",DPAD_DOWN:"DPAD_DOWN",DPAD_LEFT:"DPAD_LEFT",LEFT_ANALOG_HORIZONTAL_AXIS:"LEFT_ANALOG_HORIZONTAL_AXIS",LEFT_ANALOG_VERTICAL_AXIS:"LEFT_ANALOG_VERTICAL_AXIS",
LEFT_ANALOG_UP:"LEFT_ANALOG_UP",LEFT_ANALOG_RIGHT:"LEFT_ANALOG_RIGHT",LEFT_ANALOG_DOWN:"LEFT_ANALOG_DOWN",LEFT_ANALOG_LEFT:"LEFT_ANALOG_LEFT",RIGHT_ANALOG_HORIZONTAL_AXIS:"RIGHT_ANALOG_HORIZONTAL_AXIS",RIGHT_ANALOG_VERTICAL_AXIS:"RIGHT_ANALOG_VERTICAL_AXIS",RIGHT_ANALOG_UP:"RIGHT_ANALOG_UP",RIGHT_ANALOG_RIGHT:"RIGHT_ANALOG_RIGHT",RIGHT_ANALOG_DOWN:"RIGHT_ANALOG_DOWN",RIGHT_ANALOG_LEFT:"RIGHT_ANALOG_LEFT",A:"A",B:"B",X:"X",Y:"Y",LEFT_TRIGGER:"LEFT_TRIGGER",LEFT_BUMPER:"LEFT_BUMPER",RIGHT_TRIGGER:"RIGHT_TRIGGER",
RIGHT_BUMPER:"RIGHT_BUMPER",SELECT:"SELECT",START:"START",SPECIAL:"SPECIAL"};class ia{constructor(){}enable(){throw Error("enable() must be overridden");}disable(){throw Error("disable() must be overridden");}getState(){throw Error("getState() must be overridden");}}let Ra="input textarea button select option optgroup label datalist".split(" "),Sa=["Alt","Control","Meta","OS"];class Ta extends ia{constructor(){super();this.keymap={};Object.keys(h).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});
this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.addEventListener("keyup",this._boundUpdateKeymapValues);window.addEventListener("keydown",this._boundUpdateKeymapValues)}disable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.removeEventListener("keyup",
this._boundUpdateKeymapValues);window.removeEventListener("keydown",this._boundUpdateKeymapValues)}getState(){let a=V({},h);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{"string"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=
!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed keyboard keys to input");"string"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return Ra.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return Sa.some((b)=>a.getModifierState(b)||a.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&
this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value="keydown"===a.type?!0:!1,!0):!1)))}}class Ua extends ia{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,
a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let d=V({},h);Object.keys(this.keymap).forEach((a)=>{d[a]=this.keymap[a].value});d[h.LEFT_ANALOG_DOWN]=d.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_UP]=d.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_RIGHT]=d.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_LEFT]=d.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;
d[h.RIGHT_ANALOG_DOWN]=d.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_UP]=d.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_RIGHT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_LEFT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(d).forEach((a)=>{"string"===typeof d[a]&&delete d[a]});return d}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed buttons to input");
"number"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===a||!b)throw Error("Could not set the specificed buttons to input");if("number"===typeof axes)throw Error("Must pass in an axis id");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let Aa="touchstart touchmove touchend mousedown mousemove mouseup mouseleave".split(" ");
class ja{constructor(a){if(!a)throw Error("Touch inputs require an element.");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error("You must supply an element first with add()");
window.addEventListener("resize",this.boundUpdateElementRect);Aa.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error("You must supply an element first with add()");window.removeEventListener("resize",this.boundUpdateElementRect);Aa.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes("touch")||a.touches)){a.preventDefault();var b="touchstart"===a.type||"touchmove"===a.type||"mousedown"===
a.type,c="mousemove"===a.type,d=!b&&!c;this._updateActiveStatus(b,d);this._updateTouchStyles(b,c,d);if(this.onTouchEvent)this.onTouchEvent(a,b,c,d)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect="none"}_removeTouchStyles(){this.element.style.userSelect=""}_updateTouchStyles(a,b){b||(a?this.element.classList.add("active"):this.element.classList.remove("active"))}_updateActiveStatus(a,b){this.active&&b?
this.active=!1:!this.active&&a&&(this.active=!0)}}class Va extends ja{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:d}=qa(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var e=this.boundingClientRect.width/20,f=this.boundingClientRect.height/20;this.config.allowMultipleDirections?
(this.setHorizontalState(c,e),this.setVerticalState(d,f)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-d)?this.setHorizontalState(c,e):this.setVerticalState(d)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=
!0)}}class Wa extends ja{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform="translate(0px, 0px)";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:d}=qa(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);d=(d-b)/b;1<d?d=1:-1>d&&(d=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*d/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=
d;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(d)>this.deadzone&&(0<d?this.state.DOWN=!0:0>d&&(this.state.UP=!0))}else this._resetState()}}class Xa extends ja{constructor(a,b){super(a);this.input=b}}class Ya extends ia{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");
this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=
V({},h);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,a.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);
0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,a.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{"string"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new Xa(a,b);this.enabled&&
c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new Va(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,"LEFT")}addRightAnalogInput(a){this.addAnalogInput(a,"RIGHT")}addAnalogInput(a,b){let c=new Wa(a);this.enabled&&c.listen();if("LEFT"===b)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),
1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}class Za{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=h;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new Ta;this.Gamepad=new Ua;this.TouchInput=new Ya;this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowUp","Numpad8"],h.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyW"],h.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyI"],h.RIGHT_ANALOG_UP);
this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],h.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowRight","Numpad6"],h.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyD"],h.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyL"],h.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],h.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowDown","Numpad5","Numpad2"],h.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyS"],
h.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyK"],h.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],h.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowLeft","Numpad4"],h.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyA"],h.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyJ"],h.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],h.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],
h.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],h.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],h.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],h.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyX","Semicolon","Numpad7"],h.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],h.A);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyZ","Escape","Quote",
"Backspace","Numpad9"],h.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],h.B);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyC"],h.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],h.X);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyV"],h.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],h.Y);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyQ"],h.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],h.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyE"],
h.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],h.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyU"],h.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],h.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyO"],h.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],h.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["Enter","Numpad3"],h.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],
h.START);this.Keyboard.setKeysToResponsiveGamepadInput(["ShiftRight","ShiftLeft","Tab","Numpad1"],h.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],h.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput(["Space","Backslash","Backquote"],h.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],h.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return"1.0.0"}enable(){this.Keyboard.enable();
this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),
1)}}getState(){if(!this._enabled)return{};let a=V({},h),b=this.Gamepad.getState(),c=this.TouchInput.getState(),d=this.Keyboard.getState();a=V({},h);Object.keys(a).forEach((e)=>{a[e]=b[e]||c[e]||d[e]});["LEFT","RIGHT"].forEach((b)=>{[h[`${b}_ANALOG_HORIZONTAL_AXIS`],h[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,d)=>{if("number"!==typeof a[c]){if(0===d||2===d)a[c]=a[h[`${b}_ANALOG_RIGHT`]]?1:a[h[`${b}_ANALOG_LEFT`]]?-1:0;if(1===d||3===d)a[c]=a[h[`${b}_ANALOG_UP`]]?-1:a[h[`${b}_ANALOG_DOWN`]]?1:0}})});
a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||"string"===typeof a[b])a[b]=!1});this.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){"string"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=
setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}var W=new Za;class $a{constructor(){this.worker=void 0;this.isEnabled=!1;this.ResponsiveGamepad=
W;W.addPlugin(Ha())}initialize(){this.isEnabled||this.enableDefaultJoypad();return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};const a=W.getState();this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessageIgnoreResponse({type:u.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0;W.enable()}disableDefaultJoypad(){this.isEnabled=
!1;W.disable()}}const G=new $a;let R=0;const ha=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);R++;a=`${a}-${R}`;1E5<R&&(R=0);return a};class X{constructor(a,b){this.id=ha();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));
this.worker.onmessage=this._onMessageHandler.bind(this)}postMessageIgnoreResponse(a,b){a=ra(a,void 0,this.id);this.worker.postMessage(a,b)}postMessage(a,b){const c=ra(a,void 0,this.id),d=c.messageId,e=new Promise((b,c)=>{let e=setTimeout(()=>{console.warn("Message dropped",a);this.removeMessageListener(d);c()},1E3);this.addMessageListener((a,c)=>{a=C(a);a.messageId===d&&(clearTimeout(e),e=void 0,this.removeMessageListener(c.id),b(a))})});this.worker.postMessage(c,b);return e}addMessageListener(a){this.messageListeners.push({id:ha(),
callback:a})}removeMessageListener(a){let b;this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach((b)=>{b.callback(a,b)})}}const ab=async()=>{const a=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG4oYSl7cmV0dXJuIGEuZGF0YT9hLmRhdGE6YX1mdW5jdGlvbiBrKGEsYil7cD9zZWxmLnBvc3RNZXNzYWdlKGEsYik6di5wb3N0TWVzc2FnZShhLGIpfWZ1bmN0aW9uIHEoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihwKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKHApc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIHYub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGQpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLHQrKyxiPWAke2J9LSR7dH1gLDFFNTx0JiYodD0wKSk7cmV0dXJue3dvcmtlcklkOmQsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1mdW5jdGlvbiBKKGEsYil7Yj1uKGIpO3N3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSBmLkdFVF9DT05TVEFOVFM6YS5XQVNNQk9ZX0NVUlJFTlRfRlJBTUVfT1VUUFVUX0xPQ0FUSU9OPQphLndhc21JbnN0YW5jZS5leHBvcnRzLkZSQU1FX0xPQ0FUSU9OLnZhbHVlT2YoKSxhLldBU01CT1lfQ1VSUkVOVF9GUkFNRV9TSVpFPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuRlJBTUVfU0laRS52YWx1ZU9mKCksYS5ncmFwaGljc1dvcmtlclBvcnQucG9zdE1lc3NhZ2UoaCh7dHlwZTpmLkdFVF9DT05TVEFOVFNfRE9ORSxXQVNNQk9ZX0NVUlJFTlRfRlJBTUVfT1VUUFVUX0xPQ0FUSU9OOmEud2FzbUluc3RhbmNlLmV4cG9ydHMuRlJBTUVfTE9DQVRJT04udmFsdWVPZigpfSxiLm1lc3NhZ2VJZCkpfX1mdW5jdGlvbiBLKGEsYil7Yj1uKGIpO3N3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSBmLkdFVF9DT05TVEFOVFM6YS5XQVNNQk9ZX1NPVU5EX09VVFBVVF9MT0NBVElPTj1hLndhc21JbnN0YW5jZS5leHBvcnRzLkFVRElPX0JVRkZFUl9MT0NBVElPTi52YWx1ZU9mKCk7YS5XQVNNQk9ZX0NIQU5ORUxfMV9PVVRQVVRfTE9DQVRJT049YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5DSEFOTkVMXzFfQlVGRkVSX0xPQ0FUSU9OLnZhbHVlT2YoKTsKYS5XQVNNQk9ZX0NIQU5ORUxfMl9PVVRQVVRfTE9DQVRJT049YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5DSEFOTkVMXzJfQlVGRkVSX0xPQ0FUSU9OLnZhbHVlT2YoKTthLldBU01CT1lfQ0hBTk5FTF8zX09VVFBVVF9MT0NBVElPTj1hLndhc21JbnN0YW5jZS5leHBvcnRzLkNIQU5ORUxfM19CVUZGRVJfTE9DQVRJT04udmFsdWVPZigpO2EuV0FTTUJPWV9DSEFOTkVMXzRfT1VUUFVUX0xPQ0FUSU9OPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuQ0hBTk5FTF80X0JVRkZFUl9MT0NBVElPTi52YWx1ZU9mKCk7YS5hdWRpb1dvcmtlclBvcnQucG9zdE1lc3NhZ2UoaCh7dHlwZTpmLkdFVF9DT05TVEFOVFNfRE9ORSxXQVNNQk9ZX1NPVU5EX09VVFBVVF9MT0NBVElPTjphLndhc21JbnN0YW5jZS5leHBvcnRzLkFVRElPX0JVRkZFUl9MT0NBVElPTi52YWx1ZU9mKCl9LGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSBmLkFVRElPX0xBVEVOQ1k6YS5jdXJyZW50QXVkaW9MYXRlbmN5SW5TZWNvbmRzPQpiLm1lc3NhZ2UubGF0ZW5jeX19ZnVuY3Rpb24gTChhLGIpe2I9bihiKTtzd2l0Y2goYi5tZXNzYWdlLnR5cGUpe2Nhc2UgZi5TRVRfSk9ZUEFEX1NUQVRFOmEud2FzbUluc3RhbmNlLmV4cG9ydHMuc2V0Sm95cGFkU3RhdGUuYXBwbHkoYSxiLm1lc3NhZ2Uuc2V0Sm95cGFkU3RhdGVQYXJhbXNBc0FycmF5KX19ZnVuY3Rpb24gQShhKXtpZighYS53YXNtQnl0ZU1lbW9yeSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXk7bGV0IGI9YS53YXNtQnl0ZU1lbW9yeVthLldBU01CT1lfR0FNRV9CWVRFU19MT0NBVElPTiszMjddLGQ9dm9pZCAwO2lmKDA9PT1iKXJldHVybiBuZXcgVWludDhBcnJheTsxPD1iJiYzPj1iP2Q9MzI3Njg6NTw9YiYmNj49Yj9kPTIwNDg6MTU8PWImJjE5Pj1iP2Q9MzI3Njg6MjU8PWImJjMwPj1iJiYoZD0xMzEwNzIpO3JldHVybiBkP2Eud2FzbUJ5dGVNZW1vcnkuc2xpY2UoYS5XQVNNQk9ZX0dBTUVfUkFNX0JBTktTX0xPQ0FUSU9OLGEuV0FTTUJPWV9HQU1FX1JBTV9CQU5LU19MT0NBVElPTisKZCk6bmV3IFVpbnQ4QXJyYXl9ZnVuY3Rpb24gQihhKXthLndhc21JbnN0YW5jZS5leHBvcnRzLnNhdmVTdGF0ZSgpO3JldHVybiBhLndhc21CeXRlTWVtb3J5LnNsaWNlKGEuV0FTTUJPWV9JTlRFUk5BTF9TVEFURV9MT0NBVElPTixhLldBU01CT1lfSU5URVJOQUxfU1RBVEVfTE9DQVRJT04rYS5XQVNNQk9ZX0lOVEVSTkFMX1NUQVRFX1NJWkUpfWZ1bmN0aW9uIE0oYSxiKXtiPW4oYik7c3dpdGNoKGIubWVzc2FnZS50eXBlKXtjYXNlIGYuQ0xFQVJfTUVNT1JZOmZvcih2YXIgZD0wO2Q8PWEud2FzbUJ5dGVNZW1vcnkubGVuZ3RoO2QrKylhLndhc21CeXRlTWVtb3J5W2RdPTA7ZD1hLndhc21CeXRlTWVtb3J5LnNsaWNlKDApO2EubWVtb3J5V29ya2VyUG9ydC5wb3N0TWVzc2FnZShoKHt0eXBlOmYuQ0xFQVJfTUVNT1JZX0RPTkUsd2FzbUJ5dGVNZW1vcnk6ZC5idWZmZXJ9LGIubWVzc2FnZUlkKSxbZC5idWZmZXJdKTticmVhaztjYXNlIGYuR0VUX0NPTlNUQU5UUzphLldBU01CT1lfQk9PVF9ST01fTE9DQVRJT049CmEud2FzbUluc3RhbmNlLmV4cG9ydHMuQk9PVF9ST01fTE9DQVRJT04udmFsdWVPZigpO2EuV0FTTUJPWV9HQU1FX0JZVEVTX0xPQ0FUSU9OPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuQ0FSVFJJREdFX1JPTV9MT0NBVElPTi52YWx1ZU9mKCk7YS5XQVNNQk9ZX0dBTUVfUkFNX0JBTktTX0xPQ0FUSU9OPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuQ0FSVFJJREdFX1JBTV9MT0NBVElPTi52YWx1ZU9mKCk7YS5XQVNNQk9ZX0lOVEVSTkFMX1NUQVRFX1NJWkU9YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5XQVNNQk9ZX1NUQVRFX1NJWkUudmFsdWVPZigpO2EuV0FTTUJPWV9JTlRFUk5BTF9TVEFURV9MT0NBVElPTj1hLndhc21JbnN0YW5jZS5leHBvcnRzLldBU01CT1lfU1RBVEVfTE9DQVRJT04udmFsdWVPZigpO2EuV0FTTUJPWV9JTlRFUk5BTF9NRU1PUllfU0laRT1hLndhc21JbnN0YW5jZS5leHBvcnRzLkdBTUVCT1lfSU5URVJOQUxfTUVNT1JZX1NJWkUudmFsdWVPZigpO2EuV0FTTUJPWV9JTlRFUk5BTF9NRU1PUllfTE9DQVRJT049CmEud2FzbUluc3RhbmNlLmV4cG9ydHMuR0FNRUJPWV9JTlRFUk5BTF9NRU1PUllfTE9DQVRJT04udmFsdWVPZigpO2EuV0FTTUJPWV9QQUxFVFRFX01FTU9SWV9TSVpFPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuR0JDX1BBTEVUVEVfU0laRS52YWx1ZU9mKCk7YS5XQVNNQk9ZX1BBTEVUVEVfTUVNT1JZX0xPQ0FUSU9OPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuR0JDX1BBTEVUVEVfTE9DQVRJT04udmFsdWVPZigpO2EubWVtb3J5V29ya2VyUG9ydC5wb3N0TWVzc2FnZShoKHt0eXBlOmYuR0VUX0NPTlNUQU5UU19ET05FLFdBU01CT1lfQk9PVF9ST01fTE9DQVRJT046YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5CT09UX1JPTV9MT0NBVElPTi52YWx1ZU9mKCksV0FTTUJPWV9HQU1FX0JZVEVTX0xPQ0FUSU9OOmEud2FzbUluc3RhbmNlLmV4cG9ydHMuQ0FSVFJJREdFX1JPTV9MT0NBVElPTi52YWx1ZU9mKCksV0FTTUJPWV9HQU1FX1JBTV9CQU5LU19MT0NBVElPTjphLndhc21JbnN0YW5jZS5leHBvcnRzLkNBUlRSSURHRV9SQU1fTE9DQVRJT04udmFsdWVPZigpLApXQVNNQk9ZX0lOVEVSTkFMX1NUQVRFX1NJWkU6YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5XQVNNQk9ZX1NUQVRFX1NJWkUudmFsdWVPZigpLFdBU01CT1lfSU5URVJOQUxfU1RBVEVfTE9DQVRJT046YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5XQVNNQk9ZX1NUQVRFX0xPQ0FUSU9OLnZhbHVlT2YoKSxXQVNNQk9ZX0lOVEVSTkFMX01FTU9SWV9TSVpFOmEud2FzbUluc3RhbmNlLmV4cG9ydHMuR0FNRUJPWV9JTlRFUk5BTF9NRU1PUllfU0laRS52YWx1ZU9mKCksV0FTTUJPWV9JTlRFUk5BTF9NRU1PUllfTE9DQVRJT046YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5HQU1FQk9ZX0lOVEVSTkFMX01FTU9SWV9MT0NBVElPTi52YWx1ZU9mKCksV0FTTUJPWV9QQUxFVFRFX01FTU9SWV9TSVpFOmEud2FzbUluc3RhbmNlLmV4cG9ydHMuR0JDX1BBTEVUVEVfU0laRS52YWx1ZU9mKCksV0FTTUJPWV9QQUxFVFRFX01FTU9SWV9MT0NBVElPTjphLndhc21JbnN0YW5jZS5leHBvcnRzLkdCQ19QQUxFVFRFX0xPQ0FUSU9OLnZhbHVlT2YoKX0sCmIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSBmLlNFVF9NRU1PUlk6ZD1PYmplY3Qua2V5cyhiLm1lc3NhZ2UpO2QuaW5jbHVkZXMoZy5CT09UX1JPTSkmJmEud2FzbUJ5dGVNZW1vcnkuc2V0KG5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtnLkJPT1RfUk9NXSksYS5XQVNNQk9ZX0JPT1RfUk9NX0xPQ0FUSU9OKTtkLmluY2x1ZGVzKGcuQ0FSVFJJREdFX1JPTSkmJmEud2FzbUJ5dGVNZW1vcnkuc2V0KG5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtnLkNBUlRSSURHRV9ST01dKSxhLldBU01CT1lfR0FNRV9CWVRFU19MT0NBVElPTik7ZC5pbmNsdWRlcyhnLkNBUlRSSURHRV9SQU0pJiZhLndhc21CeXRlTWVtb3J5LnNldChuZXcgVWludDhBcnJheShiLm1lc3NhZ2VbZy5DQVJUUklER0VfUkFNXSksYS5XQVNNQk9ZX0dBTUVfUkFNX0JBTktTX0xPQ0FUSU9OKTtkLmluY2x1ZGVzKGcuR0FNRUJPWV9NRU1PUlkpJiZhLndhc21CeXRlTWVtb3J5LnNldChuZXcgVWludDhBcnJheShiLm1lc3NhZ2VbZy5HQU1FQk9ZX01FTU9SWV0pLAphLldBU01CT1lfSU5URVJOQUxfTUVNT1JZX0xPQ0FUSU9OKTtkLmluY2x1ZGVzKGcuUEFMRVRURV9NRU1PUlkpJiZhLndhc21CeXRlTWVtb3J5LnNldChuZXcgVWludDhBcnJheShiLm1lc3NhZ2VbZy5QQUxFVFRFX01FTU9SWV0pLGEuV0FTTUJPWV9QQUxFVFRFX01FTU9SWV9MT0NBVElPTik7ZC5pbmNsdWRlcyhnLklOVEVSTkFMX1NUQVRFKSYmKGEud2FzbUJ5dGVNZW1vcnkuc2V0KG5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtnLklOVEVSTkFMX1NUQVRFXSksYS5XQVNNQk9ZX0lOVEVSTkFMX1NUQVRFX0xPQ0FUSU9OKSxhLndhc21JbnN0YW5jZS5leHBvcnRzLmxvYWRTdGF0ZSgpKTthLm1lbW9yeVdvcmtlclBvcnQucG9zdE1lc3NhZ2UoaCh7dHlwZTpmLlNFVF9NRU1PUllfRE9ORX0sYi5tZXNzYWdlSWQpKTticmVhaztjYXNlIGYuR0VUX01FTU9SWTp7ZD17dHlwZTpmLkdFVF9NRU1PUll9O2NvbnN0IGw9W107dmFyIGM9Yi5tZXNzYWdlLm1lbW9yeVR5cGVzO2lmKGMuaW5jbHVkZXMoZy5CT09UX1JPTSkpe2lmKGEud2FzbUJ5dGVNZW1vcnkpe3ZhciBlPQphLndhc21JbnN0YW5jZS5leHBvcnRzLkJPT1RfUk9NX0xPQ0FUSU9OLnZhbHVlT2YoKTtlPWEud2FzbUJ5dGVNZW1vcnkuc2xpY2UoZSxlK2Eud2FzbUluc3RhbmNlLmV4cG9ydHMuQk9PVF9ST01fU0laRS52YWx1ZU9mKCkpfWVsc2UgZT1uZXcgVWludDhBcnJheTtlPWUuYnVmZmVyO2RbZy5CT09UX1JPTV09ZTtsLnB1c2goZSl9aWYoYy5pbmNsdWRlcyhnLkNBUlRSSURHRV9ST00pKXtpZihhLndhc21CeXRlTWVtb3J5KXtlPWEud2FzbUJ5dGVNZW1vcnlbYS5XQVNNQk9ZX0dBTUVfQllURVNfTE9DQVRJT04rMzI3XTt2YXIgbT12b2lkIDA7MD09PWU/bT0zMjc2ODoxPD1lJiYzPj1lP209MjA5NzE1Mjo1PD1lJiY2Pj1lP209MjYyMTQ0OjE1PD1lJiYxOT49ZT9tPTIwOTcxNTI6MjU8PWUmJjMwPj1lJiYobT04Mzg4NjA4KTtlPW0/YS53YXNtQnl0ZU1lbW9yeS5zbGljZShhLldBU01CT1lfR0FNRV9CWVRFU19MT0NBVElPTixhLldBU01CT1lfR0FNRV9CWVRFU19MT0NBVElPTittKToKbmV3IFVpbnQ4QXJyYXl9ZWxzZSBlPW5ldyBVaW50OEFycmF5O2U9ZS5idWZmZXI7ZFtnLkNBUlRSSURHRV9ST01dPWU7bC5wdXNoKGUpfWMuaW5jbHVkZXMoZy5DQVJUUklER0VfUkFNKSYmKGU9QShhKS5idWZmZXIsZFtnLkNBUlRSSURHRV9SQU1dPWUsbC5wdXNoKGUpKTtjLmluY2x1ZGVzKGcuQ0FSVFJJREdFX0hFQURFUikmJihhLndhc21CeXRlTWVtb3J5PyhlPWEuV0FTTUJPWV9HQU1FX0JZVEVTX0xPQ0FUSU9OKzMwOCxlPWEud2FzbUJ5dGVNZW1vcnkuc2xpY2UoZSxlKzI3KSk6ZT1uZXcgVWludDhBcnJheSxlPWUuYnVmZmVyLGRbZy5DQVJUUklER0VfSEVBREVSXT1lLGwucHVzaChlKSk7Yy5pbmNsdWRlcyhnLkdBTUVCT1lfTUVNT1JZKSYmKGU9YS53YXNtQnl0ZU1lbW9yeS5zbGljZShhLldBU01CT1lfSU5URVJOQUxfTUVNT1JZX0xPQ0FUSU9OLGEuV0FTTUJPWV9JTlRFUk5BTF9NRU1PUllfTE9DQVRJT04rYS5XQVNNQk9ZX0lOVEVSTkFMX01FTU9SWV9TSVpFKS5idWZmZXIsCmRbZy5HQU1FQk9ZX01FTU9SWV09ZSxsLnB1c2goZSkpO2MuaW5jbHVkZXMoZy5QQUxFVFRFX01FTU9SWSkmJihlPWEud2FzbUJ5dGVNZW1vcnkuc2xpY2UoYS5XQVNNQk9ZX1BBTEVUVEVfTUVNT1JZX0xPQ0FUSU9OLGEuV0FTTUJPWV9QQUxFVFRFX01FTU9SWV9MT0NBVElPTithLldBU01CT1lfUEFMRVRURV9NRU1PUllfU0laRSkuYnVmZmVyLGRbZy5QQUxFVFRFX01FTU9SWV09ZSxsLnB1c2goZSkpO2MuaW5jbHVkZXMoZy5JTlRFUk5BTF9TVEFURSkmJihhLndhc21JbnN0YW5jZS5leHBvcnRzLnNhdmVTdGF0ZSgpLGM9QihhKS5idWZmZXIsZFtnLklOVEVSTkFMX1NUQVRFXT1jLGwucHVzaChjKSk7YS5tZW1vcnlXb3JrZXJQb3J0LnBvc3RNZXNzYWdlKGgoZCxiLm1lc3NhZ2VJZCksbCl9fX1mdW5jdGlvbiBOKGEpe2NvbnN0IGI9InVuZGVmaW5lZCIhPT10eXBlb2Ygd2luZG93P3BlcmZvcm1hbmNlLm5vdygpOkRhdGUubm93KCk7Zm9yKDthLmZwc1RpbWVTdGFtcHNbMF08Yi0xRTM7KWEuZnBzVGltZVN0YW1wcy5zaGlmdCgpOwphLmZwc1RpbWVTdGFtcHMucHVzaChiKTthLnRpbWVTdGFtcHNVbnRpbFJlYWR5LS07MD5hLnRpbWVTdGFtcHNVbnRpbFJlYWR5JiYoYS50aW1lU3RhbXBzVW50aWxSZWFkeT0wKTtyZXR1cm4gYn1mdW5jdGlvbiB3KGEpe2EudGltZVN0YW1wc1VudGlsUmVhZHk9OTA+PWEub3B0aW9ucy5nYW1lYm95RnJhbWVSYXRlPzEuMjUqTWF0aC5mbG9vcihhLm9wdGlvbnMuZ2FtZWJveUZyYW1lUmF0ZSk6MTIwfWZ1bmN0aW9uIEMoYSl7Y29uc3QgYj1hLndhc21CeXRlTWVtb3J5LnNsaWNlKGEuV0FTTUJPWV9DVVJSRU5UX0ZSQU1FX09VVFBVVF9MT0NBVElPTixhLldBU01CT1lfQ1VSUkVOVF9GUkFNRV9PVVRQVVRfTE9DQVRJT04rYS5XQVNNQk9ZX0NVUlJFTlRfRlJBTUVfU0laRSkuYnVmZmVyO2EuZ3JhcGhpY3NXb3JrZXJQb3J0LnBvc3RNZXNzYWdlKGgoe3R5cGU6Zi5VUERBVEVELGdyYXBoaWNzRnJhbWVCdWZmZXI6Yn0pLFtiXSl9ZnVuY3Rpb24gRChhKXt2YXIgYj0oInVuZGVmaW5lZCIhPT0KdHlwZW9mIHdpbmRvdz9wZXJmb3JtYW5jZS5ub3coKTpEYXRlLm5vdygpKS1hLmZwc1RpbWVTdGFtcHNbYS5mcHNUaW1lU3RhbXBzLmxlbmd0aC0xXTtiPUUtYjswPmImJihiPTApO2Euc3BlZWQmJjA8YS5zcGVlZCYmKGIvPWEuc3BlZWQpO2EudXBkYXRlSWQ9c2V0VGltZW91dCgoKT0+e0YoYSl9LE1hdGguZmxvb3IoYikpfWZ1bmN0aW9uIEYoYSxiKXtpZihhLnBhdXNlZClyZXR1cm4hMDt2b2lkIDAhPT1iJiYoRT1iKTtyPWEuZ2V0RlBTKCk7dT1hLm9wdGlvbnMuZ2FtZWJveUZyYW1lUmF0ZSsxO2Euc3BlZWQmJjA8YS5zcGVlZCYmKHUqPWEuc3BlZWQpO2lmKHI+dSlyZXR1cm4gYS5mcHNUaW1lU3RhbXBzLnNoaWZ0KCksRChhKSwhMDtOKGEpO2NvbnN0IGM9IWEub3B0aW9ucy5oZWFkbGVzcyYmIWEucGF1c2VGcHNUaHJvdHRsZSYmYS5vcHRpb25zLmlzQXVkaW9FbmFibGVkOyhuZXcgUHJvbWlzZSgoYik9PntsZXQgZDtjP3goYSxiKTooZD1hLndhc21JbnN0YW5jZS5leHBvcnRzLmV4ZWN1dGVGcmFtZSgpLApiKGQpKX0pKS50aGVuKChiKT0+e2lmKDA8PWIpe2soaCh7dHlwZTpmLlVQREFURUQsZnBzOnJ9KSk7bGV0IGM9ITE7YS5vcHRpb25zLmZyYW1lU2tpcCYmMDxhLm9wdGlvbnMuZnJhbWVTa2lwJiYoYS5mcmFtZVNraXBDb3VudGVyKyssYS5mcmFtZVNraXBDb3VudGVyPD1hLm9wdGlvbnMuZnJhbWVTa2lwP2M9ITA6YS5mcmFtZVNraXBDb3VudGVyPTApO2N8fEMoYSk7Y29uc3QgZD17dHlwZTpmLlVQREFURUR9O2RbZy5DQVJUUklER0VfUkFNXT1BKGEpLmJ1ZmZlcjtkW2cuR0FNRUJPWV9NRU1PUlldPWEud2FzbUJ5dGVNZW1vcnkuc2xpY2UoYS5XQVNNQk9ZX0lOVEVSTkFMX01FTU9SWV9MT0NBVElPTixhLldBU01CT1lfSU5URVJOQUxfTUVNT1JZX0xPQ0FUSU9OK2EuV0FTTUJPWV9JTlRFUk5BTF9NRU1PUllfU0laRSkuYnVmZmVyO2RbZy5QQUxFVFRFX01FTU9SWV09YS53YXNtQnl0ZU1lbW9yeS5zbGljZShhLldBU01CT1lfUEFMRVRURV9NRU1PUllfTE9DQVRJT04sYS5XQVNNQk9ZX1BBTEVUVEVfTUVNT1JZX0xPQ0FUSU9OKwphLldBU01CT1lfUEFMRVRURV9NRU1PUllfU0laRSkuYnVmZmVyO2RbZy5JTlRFUk5BTF9TVEFURV09QihhKS5idWZmZXI7T2JqZWN0LmtleXMoZCkuZm9yRWFjaCgoYSk9Pnt2b2lkIDA9PT1kW2FdJiYoZFthXT0obmV3IFVpbnQ4QXJyYXkpLmJ1ZmZlcil9KTthLm1lbW9yeVdvcmtlclBvcnQucG9zdE1lc3NhZ2UoaChkKSxbZFtnLkNBUlRSSURHRV9SQU1dLGRbZy5HQU1FQk9ZX01FTU9SWV0sZFtnLlBBTEVUVEVfTUVNT1JZXSxkW2cuSU5URVJOQUxfU1RBVEVdXSk7Mj09PWI/ayhoKHt0eXBlOmYuQlJFQUtQT0lOVH0pKTpEKGEpfWVsc2UgayhoKHt0eXBlOmYuQ1JBU0hFRH0pKSxhLnBhdXNlZD0hMH0pfWZ1bmN0aW9uIHgoYSxiKXt2YXIgZD0tMTtkPWEud2FzbUluc3RhbmNlLmV4cG9ydHMuZXhlY3V0ZUZyYW1lQW5kQ2hlY2tBdWRpbygxMDI0KTsxIT09ZCYmYihkKTtpZigxPT09ZCl7ZD1hLndhc21JbnN0YW5jZS5leHBvcnRzLmdldE51bWJlck9mU2FtcGxlc0luQXVkaW9CdWZmZXIoKTsKY29uc3QgYz1yPj11Oy4yNTxhLmN1cnJlbnRBdWRpb0xhdGVuY3lJblNlY29uZHMmJmM/KEcoYSxkKSxzZXRUaW1lb3V0KCgpPT57dyhhKTt4KGEsYil9LE1hdGguZmxvb3IoTWF0aC5mbG9vcigxRTMqKGEuY3VycmVudEF1ZGlvTGF0ZW5jeUluU2Vjb25kcy0uMjUpKS8xMCkpKTooRyhhLGQpLHgoYSxiKSl9fWZ1bmN0aW9uIEcoYSxiKXt2YXIgZD1hLndhc21CeXRlTWVtb3J5LnNsaWNlKGEuV0FTTUJPWV9TT1VORF9PVVRQVVRfTE9DQVRJT04sYS5XQVNNQk9ZX1NPVU5EX09VVFBVVF9MT0NBVElPTisyKmIpLmJ1ZmZlcjtjb25zdCBjPXt0eXBlOmYuVVBEQVRFRCxhdWRpb0J1ZmZlcjpkLG51bWJlck9mU2FtcGxlczpiLGZwczpyLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzo2MDxhLm9wdGlvbnMuZ2FtZWJveUZyYW1lUmF0ZX07ZD1bZF07aWYoYS5vcHRpb25zJiZhLm9wdGlvbnMuZW5hYmxlQXVkaW9EZWJ1Z2dpbmcpe3ZhciBlPWEud2FzbUJ5dGVNZW1vcnkuc2xpY2UoYS5XQVNNQk9ZX0NIQU5ORUxfMV9PVVRQVVRfTE9DQVRJT04sCmEuV0FTTUJPWV9DSEFOTkVMXzFfT1VUUFVUX0xPQ0FUSU9OKzIqYikuYnVmZmVyO2MuY2hhbm5lbDFCdWZmZXI9ZTtkLnB1c2goZSk7ZT1hLndhc21CeXRlTWVtb3J5LnNsaWNlKGEuV0FTTUJPWV9DSEFOTkVMXzJfT1VUUFVUX0xPQ0FUSU9OLGEuV0FTTUJPWV9DSEFOTkVMXzJfT1VUUFVUX0xPQ0FUSU9OKzIqYikuYnVmZmVyO2MuY2hhbm5lbDJCdWZmZXI9ZTtkLnB1c2goZSk7ZT1hLndhc21CeXRlTWVtb3J5LnNsaWNlKGEuV0FTTUJPWV9DSEFOTkVMXzNfT1VUUFVUX0xPQ0FUSU9OLGEuV0FTTUJPWV9DSEFOTkVMXzNfT1VUUFVUX0xPQ0FUSU9OKzIqYikuYnVmZmVyO2MuY2hhbm5lbDNCdWZmZXI9ZTtkLnB1c2goZSk7Yj1hLndhc21CeXRlTWVtb3J5LnNsaWNlKGEuV0FTTUJPWV9DSEFOTkVMXzRfT1VUUFVUX0xPQ0FUSU9OLGEuV0FTTUJPWV9DSEFOTkVMXzRfT1VUUFVUX0xPQ0FUSU9OKzIqYikuYnVmZmVyO2MuY2hhbm5lbDRCdWZmZXI9YjtkLnB1c2goYil9YS5hdWRpb1dvcmtlclBvcnQucG9zdE1lc3NhZ2UoaChjKSwKZCk7YS53YXNtSW5zdGFuY2UuZXhwb3J0cy5jbGVhckF1ZGlvQnVmZmVyKCl9Y29uc3QgcD0idW5kZWZpbmVkIiE9PXR5cGVvZiBzZWxmO2xldCB2O3B8fCh2PXJlcXVpcmUoIndvcmtlcl90aHJlYWRzIikucGFyZW50UG9ydCk7Y29uc3QgZj17Q09OTkVDVDoiQ09OTkVDVCIsSU5TVEFOVElBVEVfV0FTTToiSU5TVEFOVElBVEVfV0FTTSIsQ0xFQVJfTUVNT1JZOiJDTEVBUl9NRU1PUlkiLENMRUFSX01FTU9SWV9ET05FOiJDTEVBUl9NRU1PUllfRE9ORSIsR0VUX01FTU9SWToiR0VUX01FTU9SWSIsU0VUX01FTU9SWToiU0VUX01FTU9SWSIsU0VUX01FTU9SWV9ET05FOiJTRVRfTUVNT1JZX0RPTkUiLEdFVF9DT05TVEFOVFM6IkdFVF9DT05TVEFOVFMiLEdFVF9DT05TVEFOVFNfRE9ORToiR0VUX0NPTlNUQU5UU19ET05FIixDT05GSUc6IkNPTkZJRyIsUkVTRVRfQVVESU9fUVVFVUU6IlJFU0VUX0FVRElPX1FVRVVFIixQTEFZOiJQTEFZIixCUkVBS1BPSU5UOiJCUkVBS1BPSU5UIixQQVVTRToiUEFVU0UiLApVUERBVEVEOiJVUERBVEVEIixDUkFTSEVEOiJDUkFTSEVEIixTRVRfSk9ZUEFEX1NUQVRFOiJTRVRfSk9ZUEFEX1NUQVRFIixBVURJT19MQVRFTkNZOiJBVURJT19MQVRFTkNZIixSVU5fV0FTTV9FWFBPUlQ6IlJVTl9XQVNNX0VYUE9SVCIsR0VUX1dBU01fTUVNT1JZX1NFQ1RJT046IkdFVF9XQVNNX01FTU9SWV9TRUNUSU9OIixHRVRfV0FTTV9DT05TVEFOVDoiR0VUX1dBU01fQ09OU1RBTlQiLEZPUkNFX09VVFBVVF9GUkFNRToiRk9SQ0VfT1VUUFVUX0ZSQU1FIixTRVRfU1BFRUQ6IlNFVF9TUEVFRCIsSVNfR0JDOiJJU19HQkMifSxnPXtCT09UX1JPTToiQk9PVF9ST00iLENBUlRSSURHRV9SQU06IkNBUlRSSURHRV9SQU0iLENBUlRSSURHRV9ST006IkNBUlRSSURHRV9ST00iLENBUlRSSURHRV9IRUFERVI6IkNBUlRSSURHRV9IRUFERVIiLEdBTUVCT1lfTUVNT1JZOiJHQU1FQk9ZX01FTU9SWSIsUEFMRVRURV9NRU1PUlk6IlBBTEVUVEVfTUVNT1JZIixJTlRFUk5BTF9TVEFURToiSU5URVJOQUxfU1RBVEUifTsKbGV0IHQ9MCx5PXt9O2NvbnN0IEg9KGEsYik9PntsZXQgYz0iW1dhc21Cb3ldIjstOTk5OSE9PWEmJihjKz1gIDB4JHthLnRvU3RyaW5nKDE2KX0gYCk7LTk5OTkhPT1iJiYoYys9YCAweCR7Yi50b1N0cmluZygxNil9IGApO2NvbnNvbGUubG9nKGMpfSx6PXtpbmRleDp7Y29uc29sZUxvZzpILGNvbnNvbGVMb2dUaW1lb3V0OihhLGIsYyk9Pnt5W2FdfHwoeVthXT0hMCxIKGEsYiksc2V0VGltZW91dCgoKT0+e2RlbGV0ZSB5W2FdfSxjKSl9fSxlbnY6e2Fib3J0OigpPT57Y29uc29sZS5lcnJvcigiQXNzZW1ibHlTY3JpcHQgSW1wb3J0IE9iamVjdCBBYm9ydGVkISIpfX19LEk9YXN5bmMoYSk9PntsZXQgYj12b2lkIDA7cmV0dXJuIGI9V2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmc/YXdhaXQgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmcoZmV0Y2goYSkseik6YXdhaXQgKGFzeW5jKCk9Pntjb25zdCBiPWF3YWl0IGZldGNoKGEpLnRoZW4oKGEpPT5hLmFycmF5QnVmZmVyKCkpOwpyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoYix6KX0pKCl9LE89YXN5bmMoYSk9PnthPUJ1ZmZlci5mcm9tKGEuc3BsaXQoIiwiKVsxXSwiYmFzZTY0Iik7cmV0dXJuIGF3YWl0IFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKGEseil9LFA9YXN5bmMoYSk9PnthPShhP2F3YWl0IEkoImRhdGE6YXBwbGljYXRpb24vd2FzbTtiYXNlNjQsQUdGemJRRUFBQUFCaUFFUllBSi9md0YvWUFBQVlBTi9mMzhCZjJBRWYzOS9md0JnQW45L0FHQUJmd0YvWUFGL0FHQURmMzkvQUdBS2YzOS9mMzkvZjM5L2Z3QmdBQUYvWUFaL2YzOS9mMzhBWUFkL2YzOS9mMzkvQVg5Z0IzOS9mMzkvZjM4QVlBUi9mMzkvQVg5Z0NIOS9mMzkvZjM5L0FHQUZmMzkvZjM4QmYyQU5mMzkvZjM5L2YzOS9mMzkvZndGL0FnMEJBMlZ1ZGdWaFltOXlkQUFEQS84Qi9RRUVCQWNCQlFBR0JBWUdCZ0VFQndBQUJnVUZCd2NHQVFZR0JnRUZCUUVFQVFFR0JnRUJBUUVCQVFFR0FRRUdCZ0VCQVFFSUNRRUJBUUVCQVFFQkJnWUJBUUVCQVFFQkFRa0pDUWtQQUFJQUVBc01DZ29IQkFZQkFRWUJBUUVCQmdFQkFRRUZCUUFGQlFrQkJRVUFEUVlHQmdFRkNRVUZCQVlHQmdZR0FRWUJCZ0VHQVFZQUJna0pCZ1FGQUFZQkFRWUFCQWNCQUFFR0FRWUdDUWtFQkFZRUJnWUdCQVFIQlFVRkJRVUZCUVVGQkFZR0JRWUdCUVlHQlFZR0JRVUZCUVVGQlFVRkJRVUFCUVVGQlFVRkJna0pDUVVKQlFrSkNRVUVCZ1lPQmdFR0FRWUJDUWtKQ1FrSkNRa0pDUWtKQmdFQkNRa0pDUUVCQkFRQkJRWUFCUU1CQUFFRzdRdWJBbjhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BRUVBQzM4QVFZQUlDMzhBUVlBSUMzOEFRWUFJQzM4QVFZQVFDMzhBUVlDQUFRdC9BRUdBa0FFTGZ3QkJnSUFDQzM4QVFZQ1FBd3QvQUVHQWdBRUxmd0JCZ0JBTGZ3QkJnSUFFQzM4QVFZQ1FCQXQvQUVHQUFRdC9BRUdBa1FRTGZ3QkJnTGdCQzM4QVFZREpCUXQvQUVHQTJBVUxmd0JCZ0tFTEMzOEFRWUNBREF0L0FFR0FvUmNMZndCQmdJQUpDMzhBUVlDaElBdC9BRUdBK0FBTGZ3QkJnSkFFQzM4QVFZQ0pIUXQvQUVHQW1TRUxmd0JCZ0lBSUMzOEFRWUNaS1F0L0FFR0FnQWdMZndCQmdKa3hDMzhBUVlDQUNBdC9BRUdBbVRrTGZ3QkJnSUFJQzM4QVFZQ1p3UUFMZndCQmdJQUlDMzhBUVlDWnlRQUxmd0JCZ0lBSUMzOEFRWUNaMFFBTGZ3QkJnQlFMZndCQmdLM1JBQXQvQUVHQWlQZ0RDMzhBUVlDMXlRUUxmd0JCLy84REMzOEFRUUFMZndCQmdMWE5CQXQvQUVHVUFRdC9BVUVBQzM4QlFRRUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVg4TGZ3RkJmd3QvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRVBDMzhCUVE4TGZ3RkJEd3QvQVVFUEMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCL3dBTGZ3RkIvd0FMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBUXQvQVVFQkMzOEJRUUVMZndGQkFRdC9BVUVCQzM4QlFRRUxmd0ZCQVF0L0FVRUJDMzhCUVFFTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCZnd0L0FVRi9DMzhCUVg4TGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFRdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFRdC9BVUVCQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFZQ28xcmtIQzM4QlFRQUxmd0ZCQUF0L0FVR0FxTmE1Qnd0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQUVHQUFndC9BVUVBQ3dmd0VHVUdiV1Z0YjNKNUFnQUhYMTloYkd4dll3QVFDRjlmY21WMFlXbHVBQklKWDE5eVpXeGxZWE5sQUJvSlgxOWpiMnhzWldOMEFBd0xYMTl5ZEhScFgySmhjMlVEbVFJR1kyOXVabWxuQURRT2FHRnpRMjl5WlZOMFlYSjBaV1FBTlFsellYWmxVM1JoZEdVQVBBbHNiMkZrVTNSaGRHVUFSd1ZwYzBkQ1F3QklFbWRsZEZOMFpYQnpVR1Z5VTNSbGNGTmxkQUJKQzJkbGRGTjBaWEJUWlhSekFFb0laMlYwVTNSbGNITUFTeFZsZUdWamRYUmxUWFZzZEdsd2JHVkdjbUZ0WlhNQTFBRU1aWGhsWTNWMFpVWnlZVzFsQU5NQkNWOWZjMlYwWVhKbll3RDhBUmxsZUdWamRYUmxSbkpoYldWQmJtUkRhR1ZqYTBGMVpHbHZBUHNCRldWNFpXTjFkR1ZWYm5ScGJFTnZibVJwZEdsdmJnRDlBUXRsZUdWamRYUmxVM1JsY0FEUUFSUm5aWFJEZVdOc1pYTlFaWEpEZVdOc1pWTmxkQURWQVF4blpYUkRlV05zWlZObGRITUExZ0VKWjJWMFEzbGpiR1Z6QU5jQkRuTmxkRXB2ZVhCaFpGTjBZWFJsQU53QkgyZGxkRTUxYldKbGNrOW1VMkZ0Y0d4bGMwbHVRWFZrYVc5Q2RXWm1aWElBMFFFUVkyeGxZWEpCZFdScGIwSjFabVpsY2dCREhITmxkRTFoYm5WaGJFTnZiRzl5YVhwaGRHbHZibEJoYkdWMGRHVUFJaGRYUVZOTlFrOVpYMDFGVFU5U1dWOU1UME5CVkVsUFRnTXhFMWRCVTAxQ1QxbGZUVVZOVDFKWlgxTkpXa1VETWhKWFFWTk5RazlaWDFkQlUwMWZVRUZIUlZNRE14NUJVMU5GVFVKTVdWTkRVa2xRVkY5TlJVMVBVbGxmVEU5RFFWUkpUMDREQlJwQlUxTkZUVUpNV1ZORFVrbFFWRjlOUlUxUFVsbGZVMGxhUlFNR0ZsZEJVMDFDVDFsZlUxUkJWRVZmVEU5RFFWUkpUMDREQnhKWFFWTk5RazlaWDFOVVFWUkZYMU5KV2tVRENDQkhRVTFGUWs5WlgwbE9WRVZTVGtGTVgwMUZUVTlTV1Y5TVQwTkJWRWxQVGdNUEhFZEJUVVZDVDFsZlNVNVVSVkpPUVV4ZlRVVk5UMUpaWDFOSldrVURFQkpXU1VSRlQxOVNRVTFmVEU5RFFWUkpUMDREQ1E1V1NVUkZUMTlTUVUxZlUwbGFSUU1LRVZkUFVrdGZVa0ZOWDB4UFEwRlVTVTlPQXdzTlYwOVNTMTlTUVUxZlUwbGFSUU1NSms5VVNFVlNYMGRCVFVWQ1QxbGZTVTVVUlZKT1FVeGZUVVZOVDFKWlgweFBRMEZVU1U5T0F3MGlUMVJJUlZKZlIwRk5SVUpQV1Y5SlRsUkZVazVCVEY5TlJVMVBVbGxmVTBsYVJRTU9HRWRTUVZCSVNVTlRYMDlWVkZCVlZGOU1UME5CVkVsUFRnTWRGRWRTUVZCSVNVTlRYMDlWVkZCVlZGOVRTVnBGQXg0VVIwSkRYMUJCVEVWVVZFVmZURTlEUVZSSlQwNERFUkJIUWtOZlVFRk1SVlJVUlY5VFNWcEZBeElZUWtkZlVGSkpUMUpKVkZsZlRVRlFYMHhQUTBGVVNVOU9BeE1VUWtkZlVGSkpUMUpKVkZsZlRVRlFYMU5KV2tVREZBNUdVa0ZOUlY5TVQwTkJWRWxQVGdNVkNrWlNRVTFGWDFOSldrVURGaGRDUVVOTFIxSlBWVTVFWDAxQlVGOU1UME5CVkVsUFRnTVhFMEpCUTB0SFVrOVZUa1JmVFVGUVgxTkpXa1VER0JKVVNVeEZYMFJCVkVGZlRFOURRVlJKVDA0REdRNVVTVXhGWDBSQlZFRmZVMGxhUlFNYUVrOUJUVjlVU1V4RlUxOU1UME5CVkVsUFRnTWJEazlCVFY5VVNVeEZVMTlUU1ZwRkF4d1ZRVlZFU1U5ZlFsVkdSa1ZTWDB4UFEwRlVTVTlPQXljUlFWVkVTVTlmUWxWR1JrVlNYMU5KV2tVREtCbERTRUZPVGtWTVh6RmZRbFZHUmtWU1gweFBRMEZVU1U5T0F4OFZRMGhCVGs1RlRGOHhYMEpWUmtaRlVsOVRTVnBGQXlBWlEwaEJUazVGVEY4eVgwSlZSa1pGVWw5TVQwTkJWRWxQVGdNaEZVTklRVTVPUlV4Zk1sOUNWVVpHUlZKZlUwbGFSUU1pR1VOSVFVNU9SVXhmTTE5Q1ZVWkdSVkpmVEU5RFFWUkpUMDRESXhWRFNFRk9Ua1ZNWHpOZlFsVkdSa1ZTWDFOSldrVURKQmxEU0VGT1RrVk1YelJmUWxWR1JrVlNYMHhQUTBGVVNVOU9BeVVWUTBoQlRrNUZURjgwWDBKVlJrWkZVbDlUU1ZwRkF5WVdRMEZTVkZKSlJFZEZYMUpCVFY5TVQwTkJWRWxQVGdNcEVrTkJVbFJTU1VSSFJWOVNRVTFmVTBsYVJRTXFFVUpQVDFSZlVrOU5YMHhQUTBGVVNVOU9BeXNOUWs5UFZGOVNUMDFmVTBsYVJRTXNGa05CVWxSU1NVUkhSVjlTVDAxZlRFOURRVlJKVDA0RExSSkRRVkpVVWtsRVIwVmZVazlOWDFOSldrVURMaDFFUlVKVlIxOUhRVTFGUWs5WlgwMUZUVTlTV1Y5TVQwTkJWRWxQVGdNdkdVUkZRbFZIWDBkQlRVVkNUMWxmVFVWTlQxSlpYMU5KV2tVRE1DRm5aWFJYWVhOdFFtOTVUMlptYzJWMFJuSnZiVWRoYldWQ2IzbFBabVp6WlhRQUhCdHpaWFJRY205bmNtRnRRMjkxYm5SbGNrSnlaV0ZyY0c5cGJuUUEzUUVkY21WelpYUlFjbTluY21GdFEyOTFiblJsY2tKeVpXRnJjRzlwYm5RQTNnRVpjMlYwVW1WaFpFZGlUV1Z0YjNKNVFuSmxZV3R3YjJsdWRBRGZBUnR5WlhObGRGSmxZV1JIWWsxbGJXOXllVUp5WldGcmNHOXBiblFBNEFFYWMyVjBWM0pwZEdWSFlrMWxiVzl5ZVVKeVpXRnJjRzlwYm5RQTRRRWNjbVZ6WlhSWGNtbDBaVWRpVFdWdGIzSjVRbkpsWVd0d2IybHVkQURpQVF4blpYUlNaV2RwYzNSbGNrRUE0d0VNWjJWMFVtVm5hWE4wWlhKQ0FPUUJER2RsZEZKbFoybHpkR1Z5UXdEbEFReG5aWFJTWldkcGMzUmxja1FBNWdFTVoyVjBVbVZuYVhOMFpYSkZBT2NCREdkbGRGSmxaMmx6ZEdWeVNBRG9BUXhuWlhSU1pXZHBjM1JsY2t3QTZRRU1aMlYwVW1WbmFYTjBaWEpHQU9vQkVXZGxkRkJ5YjJkeVlXMURiM1Z1ZEdWeUFPc0JEMmRsZEZOMFlXTnJVRzlwYm5SbGNnRHNBUmxuWlhSUGNHTnZaR1ZCZEZCeWIyZHlZVzFEYjNWdWRHVnlBTzBCQldkbGRFeFpBTzRCSFdSeVlYZENZV05yWjNKdmRXNWtUV0Z3Vkc5WFlYTnRUV1Z0YjNKNUFPOEJHR1J5WVhkVWFXeGxSR0YwWVZSdlYyRnpiVTFsYlc5eWVRRHdBUk5rY21GM1QyRnRWRzlYWVhOdFRXVnRiM0o1QVBFQkJtZGxkRVJKVmdEeUFRZG5aWFJVU1UxQkFQTUJCbWRsZEZSTlFRRDBBUVpuWlhSVVFVTUE5UUVUZFhCa1lYUmxSR1ZpZFdkSFFrMWxiVzl5ZVFEMkFRZ0M5d0VLaFpzQy9RR2dBZ0VFZnlBQktBSUFJZ05CQVhGRkJFQkJBRUVZUVpVQ1FRMFFBQUFMSUFOQmZIRWlBa0VRVHdSL0lBSkI4UC8vL3dOSkJVRUFDMFVFUUVFQVFSaEJsd0pCRFJBQUFBc2dBa0dBQWtrRWZ5QUNRUVIySVFKQkFBVWdBa0VmSUFKbmF5SURRUVJyZGtFUWN5RUNJQU5CQjJzTElnTkJGMGtFZnlBQ1FSQkpCVUVBQzBVRVFFRUFRUmhCcEFKQkRSQUFBQXNnQVNnQ0ZDRUVJQUVvQWhBaUJRUkFJQVVnQkRZQ0ZBc2dCQVJBSUFRZ0JUWUNFQXNnQTBFRWRDQUNha0VDZENBQWFpZ0NZQ0FCUmdSQUlBTkJCSFFnQW1wQkFuUWdBR29nQkRZQ1lDQUVSUVJBSUFOQkFuUWdBR29nQTBFQ2RDQUFhaWdDQkVFQklBSjBRWDl6Y1NJQk5nSUVJQUZGQkVBZ0FDQUFLQUlBUVFFZ0EzUkJmM054TmdJQUN3c0xDLzBEQVFaL0lBRkZCRUJCQUVFWVFjMEJRUTBRQUFBTElBRW9BZ0FpQTBFQmNVVUVRRUVBUVJoQnp3RkJEUkFBQUFzZ0FVRVFhaUFCS0FJQVFYeHhhaUlFS0FJQUlnVkJBWEVFUUNBRFFYeHhRUkJxSUFWQmZIRnFJZ0pCOFAvLy93TkpCRUFnQUNBRUVBRWdBU0FEUVFOeElBSnlJZ00yQWdBZ0FVRVFhaUFCS0FJQVFYeHhhaUlFS0FJQUlRVUxDeUFEUVFKeEJFQWdBVUVFYXlnQ0FDSUNLQUlBSWdaQkFYRkZCRUJCQUVFWVFlUUJRUThRQUFBTElBWkJmSEZCRUdvZ0EwRjhjV29pQjBIdy8vLy9BMGtFZnlBQUlBSVFBU0FDSUFaQkEzRWdCM0lpQXpZQ0FDQUNCU0FCQ3lFQkN5QUVJQVZCQW5JMkFnQWdBMEY4Y1NJQ1FSQlBCSDhnQWtIdy8vLy9BMGtGUVFBTFJRUkFRUUJCR0VIekFVRU5FQUFBQ3lBRUlBRkJFR29nQW1wSEJFQkJBRUVZUWZRQlFRMFFBQUFMSUFSQkJHc2dBVFlDQUNBQ1FZQUNTUVIvSUFKQkJIWWhCRUVBQlNBQ1FSOGdBbWRySWdKQkJHdDJRUkJ6SVFRZ0FrRUhhd3NpQTBFWFNRUi9JQVJCRUVrRlFRQUxSUVJBUVFCQkdFR0VBa0VORUFBQUN5QURRUVIwSUFScVFRSjBJQUJxS0FKZ0lRSWdBVUVBTmdJUUlBRWdBallDRkNBQ0JFQWdBaUFCTmdJUUN5QURRUVIwSUFScVFRSjBJQUJxSUFFMkFtQWdBQ0FBS0FJQVFRRWdBM1J5TmdJQUlBTkJBblFnQUdvZ0EwRUNkQ0FBYWlnQ0JFRUJJQVIwY2pZQ0JBdkxBUUVDZnlBQ1FROXhSVUVBSUFGQkQzRkZRUUFnQVNBQ1RSc2JSUVJBUVFCQkdFR0NBMEVFRUFBQUN5QUFLQUtnRENJREJFQWdBU0FEUVJCcVNRUkFRUUJCR0VHTUEwRVBFQUFBQ3lBQlFSQnJJQU5HQkVBZ0F5Z0NBQ0VFSUFGQkVHc2hBUXNGSUFFZ0FFR2tER3BKQkVCQkFFRVlRWmdEUVFRUUFBQUxDeUFDSUFGcklnSkJNRWtFUUE4TElBRWdCRUVDY1NBQ1FTQnJRUUZ5Y2pZQ0FDQUJRUUEyQWhBZ0FVRUFOZ0lVSUFFZ0FtcEJFR3NpQWtFQ05nSUFJQUFnQWpZQ29Bd2dBQ0FCRUFJTGx3RUJBbjlCQVQ4QUlnQktCSDlCQVNBQWEwQUFRUUJJQlVFQUN3UkFBQXRCb0FKQkFEWUNBRUhBRGtFQU5nSUFRUUFoQUFOQUFrQWdBRUVYVHcwQUlBQkJBblJCb0FKcVFRQTJBZ1JCQUNFQkEwQUNRQ0FCUVJCUERRQWdBRUVFZENBQmFrRUNkRUdnQW1wQkFEWUNZQ0FCUVFGcUlRRU1BUXNMSUFCQkFXb2hBQXdCQ3d0Qm9BSkIwQTQvQUVFUWRCQURRYUFDSkFBTExRQWdBRUh3Ly8vL0EwOEVRRUhJQUVFWVFja0RRUjBRQUFBTElBQkJEMnBCY0hFaUFFRVFJQUJCRUVzYkM5MEJBUUYvSUFGQmdBSkpCSDhnQVVFRWRpRUJRUUFGSUFGQitQLy8vd0ZKQkVCQkFVRWJJQUZuYTNRZ0FXcEJBV3NoQVFzZ0FVRWZJQUZuYXlJQ1FRUnJka0VRY3lFQklBSkJCMnNMSWdKQkYwa0VmeUFCUVJCSkJVRUFDMFVFUUVFQVFSaEIwZ0pCRFJBQUFBc2dBa0VDZENBQWFpZ0NCRUYvSUFGMGNTSUJCSDhnQVdnZ0FrRUVkR3BCQW5RZ0FHb29BbUFGSUFBb0FnQkJmeUFDUVFGcWRIRWlBUVIvSUFGb0lnRkJBblFnQUdvb0FnUWlBa1VFUUVFQVFSaEIzd0pCRVJBQUFBc2dBbWdnQVVFRWRHcEJBblFnQUdvb0FtQUZRUUFMQ3dzN0FRRi9JQUFvQWdRaUFVR0FnSUNBQjNGQmdJQ0FnQUZIQkVBZ0FDQUJRZi8vLy85NGNVR0FnSUNBQVhJMkFnUWdBRUVRYWtFQ0VQa0JDd3N0QVFGL0lBRW9BZ0FpQWtFQmNRUkFRUUJCR0VHekJFRUNFQUFBQ3lBQklBSkJBWEkyQWdBZ0FDQUJFQUlMSFFBZ0FDQUFLQUlFUWYvLy8vOTRjVFlDQkNBQVFSQnFRUVFRK1FFTFR3RUJmeUFBS0FJRUlnRkJnSUNBZ0FkeFFZQ0FnSUFCUmdSQUlBRkIvLy8vL3dCeFFRQkxCRUFnQUJBSkJTQUFJQUZCLy8vLy8zaHhRWUNBZ0lBQ2NqWUNCQ0FBUVJCcVFRTVErUUVMQ3d0S0FRRi9JQUFvQWdRaUFVR0FnSUNBQjNGQmdJQ0FnQUpHQkg4Z0FVR0FnSUNBZUhGRkJVRUFDd1JBSUFBZ0FVSC8vLy8vZUhFMkFnUWdBRUVRYWtFRkVQa0JJd0FnQUJBSUN3dnpBUUVHZnlNQ0lnVWlBaUVESXdNaEFBTkFBa0FnQXlBQVR3MEFJQU1vQWdBaUJDZ0NCQ0lCUVlDQWdJQUhjVUdBZ0lDQUEwWUVmeUFCUWYvLy8vOEFjVUVBU3dWQkFBc0VRQ0FFRUFjZ0FpQUVOZ0lBSUFKQkJHb2hBZ1ZCQUNBQlFmLy8vLzhBY1VVZ0FVR0FnSUNBQjNFYkJFQWpBQ0FFRUFnRklBUWdBVUgvLy8vL0IzRTJBZ1FMQ3lBRFFRUnFJUU1NQVFzTElBSWtBeUFGSVFBRFFBSkFJQUFnQWs4TkFDQUFLQUlBRUFvZ0FFRUVhaUVBREFFTEN5QUZJUUFEUUFKQUlBQWdBazhOQUNBQUtBSUFJZ0VnQVNnQ0JFSC8vLy8vQjNFMkFnUWdBUkFMSUFCQkJHb2hBQXdCQ3dzZ0JTUURDMjhCQVg4L0FDSUNJQUZCK1AvLy93RkpCSDlCQVVFYklBRm5hM1JCQVdzZ0FXb0ZJQUVMUVJBZ0FDZ0NvQXdnQWtFUWRFRVFhMGQwYWtILy93TnFRWUNBZkhGQkVIWWlBU0FDSUFGS0cwQUFRUUJJQkVBZ0FVQUFRUUJJQkVBQUN3c2dBQ0FDUVJCMFB3QkJFSFFRQXd1SEFRRUNmeUFCS0FJQUlRTWdBa0VQY1FSQVFRQkJHRUh0QWtFTkVBQUFDeUFEUVh4eElBSnJJZ1JCSUU4RVFDQUJJQU5CQW5FZ0FuSTJBZ0FnQVVFUWFpQUNhaUlCSUFSQkVHdEJBWEkyQWdBZ0FDQUJFQUlGSUFFZ0EwRitjVFlDQUNBQlFSQnFJQUVvQWdCQmZIRnFJQUZCRUdvZ0FTZ0NBRUY4Y1dvb0FnQkJmWEUyQWdBTEM1RUJBUUovSXdFRVFFRUFRUmhCNWdOQkRSQUFBQXNnQUNBQkVBVWlBeEFHSWdKRkJFQkJBU1FCRUF4QkFDUUJJQUFnQXhBR0lnSkZCRUFnQUNBREVBMGdBQ0FERUFZaUFrVUVRRUVBUVJoQjhnTkJFeEFBQUFzTEN5QUNLQUlBUVh4eElBTkpCRUJCQUVFWVFmb0RRUTBRQUFBTElBSkJBRFlDQkNBQ0lBRTJBZ3dnQUNBQ0VBRWdBQ0FDSUFNUURpQUNDeUlCQVg4akFDSUNCSDhnQWdVUUJDTUFDeUFBRUE4aUFDQUJOZ0lJSUFCQkVHb0xVUUVCZnlBQUtBSUVJZ0ZCZ0lDQWdIOXhJQUZCQVdwQmdJQ0FnSDl4UndSQVFRQkJnQUZCNkFCQkFoQUFBQXNnQUNBQlFRRnFOZ0lFSUFBb0FnQkJBWEVFUUVFQVFZQUJRZXNBUVEwUUFBQUxDeFFBSUFCQm5BSkxCRUFnQUVFUWF4QVJDeUFBQ3ljQUlBQkJnQUlvQWdCTEJFQkJzQUZCNkFGQkZrRWJFQUFBQ3lBQVFRTjBRWVFDYWlnQ0FBdkVEQUVEZndOQUlBRkJBM0ZCQUNBQ0d3UkFJQUFpQTBFQmFpRUFJQUVpQkVFQmFpRUJJQU1nQkMwQUFEb0FBQ0FDUVFGcklRSU1BUXNMSUFCQkEzRkZCRUFEUUNBQ1FSQkpSUVJBSUFBZ0FTZ0NBRFlDQUNBQVFRUnFJQUZCQkdvb0FnQTJBZ0FnQUVFSWFpQUJRUWhxS0FJQU5nSUFJQUJCREdvZ0FVRU1haWdDQURZQ0FDQUJRUkJxSVFFZ0FFRVFhaUVBSUFKQkVHc2hBZ3dCQ3dzZ0FrRUljUVJBSUFBZ0FTZ0NBRFlDQUNBQVFRUnFJQUZCQkdvb0FnQTJBZ0FnQVVFSWFpRUJJQUJCQ0dvaEFBc2dBa0VFY1FSQUlBQWdBU2dDQURZQ0FDQUJRUVJxSVFFZ0FFRUVhaUVBQ3lBQ1FRSnhCRUFnQUNBQkx3RUFPd0VBSUFGQkFtb2hBU0FBUVFKcUlRQUxJQUpCQVhFRVFDQUFJQUV0QUFBNkFBQUxEd3NnQWtFZ1R3UkFBa0FDUUFKQUlBQkJBM0VpQTBFQlJ3UkFJQU5CQWtZTkFTQURRUU5HRFFJTUF3c2dBU2dDQUNFRklBQWdBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUEwRUJhaUVBSUFGQkFXb2lCRUVCYWlFQklBTWdCQzBBQURvQUFDQUNRUU5ySVFJRFFDQUNRUkZKUlFSQUlBQWdBVUVCYWlnQ0FDSURRUWgwSUFWQkdIWnlOZ0lBSUFCQkJHb2dBMEVZZGlBQlFRVnFLQUlBSWdOQkNIUnlOZ0lBSUFCQkNHb2dBMEVZZGlBQlFRbHFLQUlBSWdOQkNIUnlOZ0lBSUFCQkRHb2dBVUVOYWlnQ0FDSUZRUWgwSUFOQkdIWnlOZ0lBSUFGQkVHb2hBU0FBUVJCcUlRQWdBa0VRYXlFQ0RBRUxDd3dDQ3lBQktBSUFJUVVnQUNBQkxRQUFPZ0FBSUFCQkFXb2lBMEVCYWlFQUlBRkJBV29pQkVFQmFpRUJJQU1nQkMwQUFEb0FBQ0FDUVFKcklRSURRQ0FDUVJKSlJRUkFJQUFnQVVFQ2FpZ0NBQ0lEUVJCMElBVkJFSFp5TmdJQUlBQkJCR29nQTBFUWRpQUJRUVpxS0FJQUlnTkJFSFJ5TmdJQUlBQkJDR29nQTBFUWRpQUJRUXBxS0FJQUlnTkJFSFJ5TmdJQUlBQkJER29nQVVFT2FpZ0NBQ0lGUVJCMElBTkJFSFp5TmdJQUlBRkJFR29oQVNBQVFSQnFJUUFnQWtFUWF5RUNEQUVMQ3d3QkN5QUJLQUlBSVFVZ0FDSURRUUZxSVFBZ0FTSUVRUUZxSVFFZ0F5QUVMUUFBT2dBQUlBSkJBV3NoQWdOQUlBSkJFMGxGQkVBZ0FDQUJRUU5xS0FJQUlnTkJHSFFnQlVFSWRuSTJBZ0FnQUVFRWFpQURRUWgySUFGQkIyb29BZ0FpQTBFWWRISTJBZ0FnQUVFSWFpQURRUWgySUFGQkMyb29BZ0FpQTBFWWRISTJBZ0FnQUVFTWFpQUJRUTlxS0FJQUlnVkJHSFFnQTBFSWRuSTJBZ0FnQVVFUWFpRUJJQUJCRUdvaEFDQUNRUkJySVFJTUFRc0xDd3NnQWtFUWNRUkFJQUFnQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlBSUFGQkFXb2lBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSUFJQUZCQVdvaUFTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJQUlBRkJBV29pQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlBSUFGQkFXb2lBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSURRUUZxSVFBZ0FVRUJhaUlFUVFGcUlRRWdBeUFFTFFBQU9nQUFDeUFDUVFoeEJFQWdBQ0FCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSUFJQUZCQVdvaUFTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJQUlBRkJBV29pQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBMEVCYWlFQUlBRkJBV29pQkVFQmFpRUJJQU1nQkMwQUFEb0FBQXNnQWtFRWNRUkFJQUFnQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlEUVFGcUlRQWdBVUVCYWlJRVFRRnFJUUVnQXlBRUxRQUFPZ0FBQ3lBQ1FRSnhCRUFnQUNBQkxRQUFPZ0FBSUFCQkFXb2lBMEVCYWlFQUlBRkJBV29pQkVFQmFpRUJJQU1nQkMwQUFEb0FBQXNnQWtFQmNRUkFJQUFnQVMwQUFEb0FBQXNMMGdJQkFuOENRQ0FDSVFNZ0FDQUJSZzBBUVFFZ0FDQURhaUFCVFNBQklBTnFJQUJOR3dSQUlBQWdBU0FERUJRTUFRc2dBQ0FCU1FSQUlBRkJCM0VnQUVFSGNVWUVRQU5BSUFCQkIzRUVRQ0FEUlEwRUlBTkJBV3NoQXlBQUlnSkJBV29oQUNBQklnUkJBV29oQVNBQ0lBUXRBQUE2QUFBTUFRc0xBMEFnQTBFSVNVVUVRQ0FBSUFFcEF3QTNBd0FnQTBFSWF5RURJQUJCQ0dvaEFDQUJRUWhxSVFFTUFRc0xDd05BSUFNRVFDQUFJZ0pCQVdvaEFDQUJJZ1JCQVdvaEFTQUNJQVF0QUFBNkFBQWdBMEVCYXlFRERBRUxDd1VnQVVFSGNTQUFRUWR4UmdSQUEwQWdBQ0FEYWtFSGNRUkFJQU5GRFFRZ0FDQURRUUZySWdOcUlBRWdBMm90QUFBNkFBQU1BUXNMQTBBZ0EwRUlTVVVFUUNBQUlBTkJDR3NpQTJvZ0FTQURhaWtEQURjREFBd0JDd3NMQTBBZ0F3UkFJQUFnQTBFQmF5SURhaUFCSUFOcUxRQUFPZ0FBREFFTEN3c0xDemdBSXdCRkJFQkJBRUVZUWRFRVFRMFFBQUFMSUFCQkQzRkZRUUFnQUJ0RkJFQkJBRUVZUWRJRVFRSVFBQUFMSXdBZ0FFRVFheEFJQzBVQkJIOGpBeU1DSWdGcklnSkJBWFFpQUVHQUFpQUFRWUFDU3hzaUEwRUFFQkFpQUNBQklBSVFGU0FCQkVBZ0FSQVdDeUFBSkFJZ0FDQUNhaVFESUFBZ0Eyb2tCQXNpQVFGL0l3TWlBU01FVHdSQUVCY2pBeUVCQ3lBQklBQTJBZ0FnQVVFRWFpUURDN1lCQVFKL0lBQW9BZ1FpQWtILy8vLy9BSEVoQVNBQUtBSUFRUUZ4QkVCQkFFR0FBVUh6QUVFTkVBQUFDeUFCUVFGR0JFQWdBRUVRYWtFQkVQa0JJQUpCZ0lDQWdIaHhCRUFnQUVHQWdJQ0FlRFlDQkFVakFDQUFFQWdMQlNBQlFRQk5CRUJCQUVHQUFVSDhBRUVQRUFBQUN5QUFLQUlJRUJOQkVIRUVRQ0FBSUFGQkFXc2dBa0dBZ0lDQWYzRnlOZ0lFQlNBQUlBRkJBV3RCZ0lDQWdIdHlOZ0lFSUFKQmdJQ0FnSGh4UlFSQUlBQVFHQXNMQ3dzU0FDQUFRWndDU3dSQUlBQkJFR3NRR1FzTFV3QkI4dVhMQnlRK1FhREJnZ1VrUDBIWXNPRUNKRUJCaUpBZ0pFRkI4dVhMQnlSQ1FhREJnZ1VrUTBIWXNPRUNKRVJCaUpBZ0pFVkI4dVhMQnlSR1FhREJnZ1VrUjBIWXNPRUNKRWhCaUpBZ0pFa0xsd0lCQVg4Q1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQkRIVWlBUVJBSUFGQkFVWU5BUUpBSUFGQkFtc09EQUlDQXdNREF3UUVCUVVHQndBTERBY0xJNEFDQkVBamdRSUVRQ0FBUVlBQ1NBMEpJQUJCZ0JKSVFRQWdBRUgvQTBvYkRRa0ZRUUFnQUVHQUFrZ2pnUUliRFFrTEN3c2dBRUdBcmRFQWFnOExJQUJCQVNQeUFTSUFRUUFnQUVVaitnRWJHMEVPZEdwQmdLM1FBR29QQ3lBQVFZQ1FmbW9qZ1FJRWYwSFAvZ01RSFVFQmNRVkJBQXRCRFhScUR3c2dBQ1B6QVVFTmRHcEJnTm5HQUdvUEN5QUFRWUNRZm1vUEMwRUFJUUVDZnlPQkFnUkFRZkQrQXhBZFFRZHhJUUVMSUFGQkFVZ0xCSDlCQVFVZ0FRdEJESFFnQUdwQmdQQjlhZzhMSUFCQmdGQnFEd3NnQUVHQW1kRUFhZ3NKQUNBQUVCd3RBQUFMd3dFQVFRQWtnZ0pCQUNTREFrRUFKSVFDUVFBa2hRSkJBQ1NHQWtFQUpJY0NRUUFraUFKQkFDU0pBa0VBSklvQ1FRQWtpd0pCQUNTTUFrRUFKSTBDUVFBa2pnSkJBQ1NQQWtFQUpKQUNRUUFra1FJamdBSUVRQThMSTRFQ0JFQkJFU1NEQWtHQUFTU0tBa0VBSklRQ1FRQWtoUUpCL3dFa2hnSkIxZ0FraHdKQkFDU0lBa0VOSklrQ0JVRUJKSU1DUWJBQkpJb0NRUUFraEFKQkV5U0ZBa0VBSklZQ1FkZ0JKSWNDUVFFa2lBSkJ6UUFraVFJTFFZQUNKSXdDUWY3L0F5U0xBZ3NMQUNBQUVCd2dBVG9BQUF0ekFRRi9RUUFrOUFGQkFTVDFBVUhIQWhBZElnQkZKUFlCSUFCQkEweEJBQ0FBUVFGT0d5VDNBU0FBUVFaTVFRQWdBRUVGVGhzaytBRWdBRUVUVEVFQUlBQkJEMDRiSlBrQklBQkJIa3hCQUNBQVFSbE9HeVQ2QVVFQkpQSUJRUUFrOHdGQnovNERRUUFRSDBIdy9nTkJBUkFmQ3k4QVFkSCtBMEgvQVJBZlFkTCtBMEgvQVJBZlFkUCtBMEgvQVJBZlFkVCtBMEgvQVJBZlFkWCtBMEgvQVJBZkM3QUlBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUFFUUNBQVFRRkdEUUVDUUNBQVFRSnJEZ3NEQkFVR0J3Z0pDZ3NNRFFBTERBMExRZkxseXdja1BrR2d3WUlGSkQ5QjJMRGhBaVJBUVlpUUlDUkJRZkxseXdja1FrR2d3WUlGSkVOQjJMRGhBaVJFUVlpUUlDUkZRZkxseXdja1JrR2d3WUlGSkVkQjJMRGhBaVJJUVlpUUlDUkpEQXdMUWYvLy93Y2tQa0hqMnY0SEpEOUJnT0tRQkNSQVFRQWtRVUgvLy84SEpFSkI0OXIrQnlSRFFZRGlrQVFrUkVFQUpFVkIvLy8vQnlSR1FlUGEvZ2NrUjBHQTRwQUVKRWhCQUNSSkRBc0xRZi8vL3dja1BrR0VpZjRISkQ5QnV2VFFCQ1JBUVFBa1FVSC8vLzhISkVKQnNmN3ZBeVJEUVlDSUFpUkVRUUFrUlVILy8vOEhKRVpCLzh1T0F5UkhRZjhCSkVoQkFDUkpEQW9MUWNYTi93Y2tQa0dFdWJvR0pEOUJxZGFSQkNSQVFZamk2QUlrUVVILy8vOEhKRUpCNDlyK0J5UkRRWURpa0FRa1JFRUFKRVZCLy8vL0J5UkdRZVBhL2dja1IwR0E0cEFFSkVoQkFDUkpEQWtMUWYvLy93Y2tQa0dBL3NzQ0pEOUJnSVQ5QnlSQVFRQWtRVUgvLy84SEpFSkJnUDdMQWlSRFFZQ0UvUWNrUkVFQUpFVkIvLy8vQnlSR1FZRCt5d0lrUjBHQWhQMEhKRWhCQUNSSkRBZ0xRZi8vL3dja1BrR3gvdThESkQ5QnhjY0JKRUJCQUNSQlFmLy8vd2NrUWtHRWlmNEhKRU5CdXZUUUJDUkVRUUFrUlVILy8vOEhKRVpCaEluK0J5UkhRYnIwMEFRa1NFRUFKRWtNQnd0QkFDUStRWVNKQWlRL1FZQzgvd2NrUUVILy8vOEhKRUZCQUNSQ1FZU0pBaVJEUVlDOC93Y2tSRUgvLy84SEpFVkJBQ1JHUVlTSkFpUkhRWUM4L3dja1NFSC8vLzhISkVrTUJndEJwZi8vQnlRK1FaU3AvZ2NrUDBIL3FkSUVKRUJCQUNSQlFhWC8vd2NrUWtHVXFmNEhKRU5CLzZuU0JDUkVRUUFrUlVHbC8vOEhKRVpCbEtuK0J5UkhRZitwMGdRa1NFRUFKRWtNQlF0Qi8vLy9CeVErUVlEKy93Y2tQMEdBZ1B3SEpFQkJBQ1JCUWYvLy93Y2tRa0dBL3Y4SEpFTkJnSUQ4QnlSRVFRQWtSVUgvLy84SEpFWkJnUDcvQnlSSFFZQ0EvQWNrU0VFQUpFa01CQXRCLy8vL0J5UStRWUQrL3dja1AwR0FsTzBESkVCQkFDUkJRZi8vL3dja1FrSC95NDRESkVOQi93RWtSRUVBSkVWQi8vLy9CeVJHUWJIKzd3TWtSMEdBaUFJa1NFRUFKRWtNQXd0Qi8vLy9CeVErUWYvTGpnTWtQMEgvQVNSQVFRQWtRVUgvLy84SEpFSkJoSW4rQnlSRFFicjAwQVFrUkVFQUpFVkIvLy8vQnlSR1FiSCs3d01rUjBHQWlBSWtTRUVBSkVrTUFndEIvLy8vQnlRK1FkNlpzZ1FrUDBHTXBja0NKRUJCQUNSQlFmLy8vd2NrUWtHRWlmNEhKRU5CdXZUUUJDUkVRUUFrUlVILy8vOEhKRVpCNDlyK0J5UkhRWURpa0FRa1NFRUFKRWtNQVF0Qi8vLy9CeVErUWFYTGxnVWtQMEhTcE1rQ0pFQkJBQ1JCUWYvLy93Y2tRa0dseTVZRkpFTkIwcVRKQWlSRVFRQWtSVUgvLy84SEpFWkJwY3VXQlNSSFFkS2t5UUlrU0VFQUpFa0xDOW9JQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVlnQlJ3UkFJQUJCNFFCR0RRRWdBRUVVUmcwQ0lBQkJ4Z0JHRFFNZ0FFSFpBRVlOQkNBQVFjWUJSZzBFSUFCQmhnRkdEUVVnQUVHb0FVWU5CU0FBUWI4QlJnMEdJQUJCemdGR0RRWWdBRUhSQVVZTkJpQUFRZkFCUmcwR0lBQkJKMFlOQnlBQVFja0FSZzBISUFCQjNBQkdEUWNnQUVHekFVWU5CeUFBUWNrQlJnMElJQUJCOEFCR0RRa2dBRUhHQUVZTkNpQUFRZE1CUmcwTERBd0xRZis1bGdVa1BrR0EvdjhISkQ5QmdNWUJKRUJCQUNSQlFmKzVsZ1VrUWtHQS92OEhKRU5CZ01ZQkpFUkJBQ1JGUWYrNWxnVWtSa0dBL3Y4SEpFZEJnTVlCSkVoQkFDUkpEQXNMUWYvLy93Y2tQa0gveTQ0REpEOUIvd0VrUUVFQUpFRkIvLy8vQnlSQ1FZU0ovZ2NrUTBHNjlOQUVKRVJCQUNSRlFmLy8vd2NrUmtIL3k0NERKRWRCL3dFa1NFRUFKRWtNQ2d0Qi8vLy9CeVErUVlTSi9nY2tQMEc2OU5BRUpFQkJBQ1JCUWYvLy93Y2tRa0d4L3U4REpFTkJnSWdDSkVSQkFDUkZRZi8vL3dja1JrR0VpZjRISkVkQnV2VFFCQ1JJUVFBa1NRd0pDMEgvNjlZRkpENUJsUC8vQnlRL1FjSzB0UVVrUUVFQUpFRkJBQ1JDUWYvLy93Y2tRMEdFaWY0SEpFUkJ1dlRRQkNSRlFRQWtSa0gvLy84SEpFZEJoSW4rQnlSSVFicjAwQVFrU1F3SUMwSC8vLzhISkQ1QmhOdTJCU1EvUWZ2bWlRSWtRRUVBSkVGQi8vLy9CeVJDUVlEbS9RY2tRMEdBaE5FRUpFUkJBQ1JGUWYvLy93Y2tSa0gvKytvQ0pFZEJnSUQ4QnlSSVFmOEJKRWtNQnd0Qm5QLy9CeVErUWYvcjBnUWtQMEh6cUk0REpFQkJ1dlFBSkVGQndvci9CeVJDUVlDcy93Y2tRMEdBOU5BRUpFUkJnSUNvQWlSRlFmLy8vd2NrUmtHRWlmNEhKRWRCdXZUUUJDUklRUUFrU1F3R0MwR0EvcThESkQ1Qi8vLy9CeVEvUWNxay9RY2tRRUVBSkVGQi8vLy9CeVJDUWYvLy93Y2tRMEgveTQ0REpFUkIvd0VrUlVILy8vOEhKRVpCNDlyK0J5UkhRWURpa0FRa1NFRUFKRWtNQlF0Qi83bVdCU1ErUVlEKy93Y2tQMEdBeGdFa1FFRUFKRUZCMHNiOUJ5UkNRWUNBMkFZa1EwR0FnSXdESkVSQkFDUkZRZjhCSkVaQi8vLy9CeVJIUWZ2Ky93Y2tTRUgvaVFJa1NRd0VDMEhPLy84SEpENUI3OStQQXlRL1FiR0k4Z1FrUUVIYXRPa0NKRUZCLy8vL0J5UkNRWURtL1Fja1EwR0FoTkVFSkVSQkFDUkZRZi8vL3dja1JrSC95NDRESkVkQi93RWtTRUVBSkVrTUF3dEIvLy8vQnlRK1FZU0ovZ2NrUDBHNjlOQUVKRUJCQUNSQlFmLy8vd2NrUWtHQS9nTWtRMEdBaU1ZQkpFUkJnSlFCSkVWQi8vLy9CeVJHUWYvTGpnTWtSMEgvQVNSSVFRQWtTUXdDQzBILy8vOEhKRDVCLzh1T0F5US9RZjhCSkVCQkFDUkJRWUQrL3dja1FrR0FnUHdISkVOQmdJQ01BeVJFUVFBa1JVSC8vLzhISkVaQnNmN3ZBeVJIUVlDSUFpUklRUUFrU1F3QkMwSC8vLzhISkQ1QmhOdTJCU1EvUWZ2bWlRSWtRRUVBSkVGQi8vLy9CeVJDUWVQYS9nY2tRMEhqMnY0SEpFUkJBQ1JGUWYvLy93Y2tSa0gveTQ0REpFZEIvd0VrU0VFQUpFa0xDMG9CQW45QkFCQWlJNEVDQkVBUEN5T0FBZ1JBSTRFQ1JRUkFEd3NMUWJRQ0lRQURRQUpBSUFCQnd3SktEUUFnQUJBZElBRnFJUUVnQUVFQmFpRUFEQUVMQ3lBQlFmOEJjUkFqQzl3QkFFRUFKT3NCUVFBazdBRkJBQ1R0QVVFQUpPNEJRUUFrN3dGQkFDVHdBVUVBSlBFQlFaQUJKTzBCSTRFQ0JFQkJ3ZjREUVlFQkVCOUJ4UDREUVpBQkVCOUJ4LzREUWZ3QkVCOEZRY0grQTBHRkFSQWZRY2IrQTBIL0FSQWZRY2YrQTBIOEFSQWZRY2orQTBIL0FSQWZRY24rQTBIL0FSQWZDMEdRQVNUdEFVSEEvZ05Ca0FFUUgwSFAvZ05CQUJBZlFmRCtBMEVCRUI4amdBSUVRQ09CQWdSQVFRQWs3UUZCd1A0RFFRQVFIMEhCL2dOQmdBRVFIMEhFL2dOQkFCQWZCVUVBSk8wQlFjRCtBMEVBRUI5QndmNERRWVFCRUI4TEN4QWtDMjBBSTRFQ0JFQkI2UDREUWNBQkVCOUI2ZjREUWY4QkVCOUI2djREUWNFQkVCOUI2LzREUVEwUUh3VkI2UDREUWY4QkVCOUI2ZjREUWY4QkVCOUI2djREUWY4QkVCOUI2LzREUWY4QkVCOExJNEVDUVFBamdBSWJCRUJCNmY0RFFTQVFIMEhyL2dOQmlnRVFId3NMVmdCQmtQNERRWUFCRUI5QmtmNERRYjhCRUI5Qmt2NERRZk1CRUI5QmsvNERRY0VCRUI5QmxQNERRYjhCRUI4amdBSUVRRUdSL2dOQlB4QWZRWkwrQTBFQUVCOUJrLzREUVFBUUgwR1UvZ05CdUFFUUh3c0xMQUJCbGY0RFFmOEJFQjlCbHY0RFFUOFFIMEdYL2dOQkFCQWZRWmorQTBFQUVCOUJtZjREUWJnQkVCOExNd0JCbXY0RFFmOEFFQjlCbS80RFFmOEJFQjlCblA0RFFaOEJFQjlCbmY0RFFRQVFIMEdlL2dOQnVBRVFIMEVCSklZQkN5MEFRWi8rQTBIL0FSQWZRYUQrQTBIL0FSQWZRYUgrQTBFQUVCOUJvdjREUVFBUUgwR2ovZ05CdndFUUh3dGNBQ0FBUVlBQmNVRUFSeVN0QVNBQVFjQUFjVUVBUnlTc0FTQUFRU0J4UVFCSEpLc0JJQUJCRUhGQkFFY2txZ0VnQUVFSWNVRUFSeVN4QVNBQVFRUnhRUUJISkxBQklBQkJBbkZCQUVja3J3RWdBRUVCY1VFQVJ5U3VBUXRGQUVFUEpKb0JRUThrbXdGQkR5U2NBVUVQSkowQlFRQWtuZ0ZCQUNTZkFVRUFKS0FCUVFBa29RRkIvd0Frb2dGQi93QWtvd0ZCQVNTa0FVRUJKS1VCUVFBa3BnRUx2UUVBUVFBa3B3RkJBQ1NvQVVFQUpLa0JRUUVrcWdGQkFTU3JBVUVCSkt3QlFRRWtyUUZCQVNTdUFVRUJKSzhCUVFFa3NBRkJBU1N4QVVFQkpMSUJRUUFrc3dGQkFDUzBBVUVBSkxVQlFRQWt0Z0VRSnhBb0VDa1FLa0drL2dOQjl3QVFIMEVISktnQlFRY2txUUZCcGY0RFFmTUJFQjlCOHdFUUswR20vZ05COFFFUUgwRUJKTElCSTRBQ0JFQkJwUDREUVFBUUgwRUFKS2dCUVFBa3FRRkJwZjREUVFBUUgwRUFFQ3RCcHY0RFFmQUFFQjlCQUNTeUFRc1FMQXMrQUNBQVFRRnhRUUJISkxvQklBQkJBbkZCQUVja3V3RWdBRUVFY1VFQVJ5UzhBU0FBUVFoeFFRQkhKTDBCSUFCQkVIRkJBRWNrdmdFZ0FDUzVBUXMrQUNBQVFRRnhRUUJISk1BQklBQkJBbkZCQUVja3dRRWdBRUVFY1VFQVJ5VENBU0FBUVFoeFFRQkhKTU1CSUFCQkVIRkJBRWNreEFFZ0FDUy9BUXQ0QUVFQUpNVUJRUUFreGdGQkFDVEhBVUVBSk1vQlFRQWt5d0ZCQUNUTUFVRUFKTWdCUVFBa3lRRWpnUUlFUUVHRS9nTkJIaEFmUWFBOUpNWUJCVUdFL2dOQnF3RVFIMEhNMXdJa3hnRUxRWWYrQTBINEFSQWZRZmdCSk13Qkk0QUNCRUFqZ1FKRkJFQkJoUDREUVFBUUgwRUVKTVlCQ3dzTFF3QkJBQ1ROQVVFQUpNNEJJNEVDQkVCQmd2NERRZndBRUI5QkFDVFBBVUVBSk5BQlFRQWswUUVGUVlMK0EwSCtBQkFmUVFBa3p3RkJBU1RRQVVFQUpORUJDd3QxQUNPQkFnUkFRZkQrQTBINEFSQWZRYy8rQTBIK0FSQWZRYzMrQTBIK0FCQWZRWUQrQTBIUEFSQWZRWS8rQTBIaEFSQWZRZXorQTBIK0FSQWZRZlgrQTBHUEFSQWZCVUh3L2dOQi93RVFIMEhQL2dOQi93RVFIMEhOL2dOQi93RVFIMEdBL2dOQnp3RVFIMEdQL2dOQjRRRVFId3NMbGdFQkFYOUJ3d0lRSFNJQVFjQUJSZ1IvUVFFRklBQkJnQUZHUVFBak5Sc0xCRUJCQVNTQkFnVkJBQ1NCQWd0QkFDU1lBa0dBcU5hNUJ5U1NBa0VBSkpNQ1FRQWtsQUpCZ0tqV3VRY2tsUUpCQUNTV0FrRUFKSmNDSXpRRVFFRUJKSUFDQlVFQUpJQUNDeEFlRUNBUUlSQWxFQ1lRTFVFQUVDNUIvLzhESTdrQkVCOUI0UUVRTDBHUC9nTWp2d0VRSHhBd0VERVFNZ3RLQUNBQVFRQktKRFFnQVVFQVNpUTFJQUpCQUVva05pQURRUUJLSkRjZ0JFRUFTaVE0SUFWQkFFb2tPU0FHUVFCS0pEb2dCMEVBU2lRN0lBaEJBRW9rUENBSlFRQktKRDBRTXdzRkFDT1lBZ3U1QVFCQmdBZ2pnd0k2QUFCQmdRZ2poQUk2QUFCQmdnZ2poUUk2QUFCQmd3Z2poZ0k2QUFCQmhBZ2pod0k2QUFCQmhRZ2ppQUk2QUFCQmhnZ2ppUUk2QUFCQmh3Z2ppZ0k2QUFCQmlBZ2ppd0k3QVFCQmlnZ2pqQUk3QVFCQmpBZ2pqUUkyQWdCQmtRZ2pqZ0pCQUVjNkFBQkJrZ2dqandKQkFFYzZBQUJCa3dnamtBSkJBRWM2QUFCQmxBZ2prUUpCQUVjNkFBQkJsUWdqZ0FKQkFFYzZBQUJCbGdnamdRSkJBRWM2QUFCQmx3Z2pnZ0pCQUVjNkFBQUxhQUJCeUFrajhnRTdBUUJCeWdrajh3RTdBUUJCekFrajlBRkJBRWM2QUFCQnpRa2o5UUZCQUVjNkFBQkJ6Z2tqOWdGQkFFYzZBQUJCendrajl3RkJBRWM2QUFCQjBBa2orQUZCQUVjNkFBQkIwUWtqK1FGQkFFYzZBQUJCMGdraitnRkJBRWM2QUFBTE5RQkIrZ2tqeFFFMkFnQkIvZ2tqeGdFMkFnQkJnZ29qeUFGQkFFYzZBQUJCaFFvanlRRkJBRWM2QUFCQmhmNERJOGNCRUI4TFl3QkIzZ29qV0VFQVJ6b0FBRUhmQ2lOYk5nSUFRZU1LSTF3MkFnQkI1d29qWGpZQ0FFSHNDaU5mTmdJQVFmRUtJMkE2QUFCQjhnb2pZVG9BQUVIM0NpTmlRUUJIT2dBQVFmZ0tJMk0yQWdCQi9Rb2paRHNCQUVIL0NpTmRRUUJIT2dBQUMwZ0FRWkFMSTI5QkFFYzZBQUJCa1FzamNqWUNBRUdWQ3lOek5nSUFRWmtMSTNVMkFnQkJuZ3NqZGpZQ0FFR2pDeU4zT2dBQVFhUUxJM2c2QUFCQnBRc2pkRUVBUnpvQUFBdEhBRUgwQ3lPUkFVRUFSem9BQUVIMUN5T1RBVFlDQUVINUN5T1VBVFlDQUVIOUN5T1dBVFlDQUVHQ0RDT1hBVFlDQUVHSERDT1pBVHNCQUVHSkRDT1ZBVUVBUnpvQUFBdUhBUUFRTmtHeUNDUHNBVFlDQUVHMkNDUGhBVG9BQUVIRS9nTWo3UUVRSDBIa0NDTzNBVUVBUnpvQUFFSGxDQ080QVVFQVJ6b0FBQkEzRURoQnJBb2pzd0UyQWdCQnNBb2p0QUU2QUFCQnNRb2p0UUU2QUFBUU9SQTZRY0lMSTM5QkFFYzZBQUJCd3dzamdnRTJBZ0JCeHdzamd3RTJBZ0JCeXdzamhBRTdBUUFRTzBFQUpKZ0NDN2tCQUVHQUNDMEFBQ1NEQWtHQkNDMEFBQ1NFQWtHQ0NDMEFBQ1NGQWtHRENDMEFBQ1NHQWtHRUNDMEFBQ1NIQWtHRkNDMEFBQ1NJQWtHR0NDMEFBQ1NKQWtHSENDMEFBQ1NLQWtHSUNDOEJBQ1NMQWtHS0NDOEJBQ1NNQWtHTUNDZ0NBQ1NOQWtHUkNDMEFBRUVBU2lTT0FrR1NDQzBBQUVFQVNpU1BBa0dUQ0MwQUFFRUFTaVNRQWtHVUNDMEFBRUVBU2lTUkFrR1ZDQzBBQUVFQVNpU0FBa0dXQ0MwQUFFRUFTaVNCQWtHWENDMEFBRUVBU2lTQ0FndGVBUUYvUVFBazdBRkJBQ1R0QVVIRS9nTkJBQkFmUWNIK0F4QWRRWHh4SVFGQkFDVGhBVUhCL2dNZ0FSQWZJQUFFUUFKQVFRQWhBQU5BSUFCQmdOZ0ZUZzBCSUFCQmdNa0Zha0gvQVRvQUFDQUFRUUZxSVFBTUFBQUxBQXNMQzRJQkFRRi9JK01CSVFFZ0FFR0FBWEZCQUVjazR3RWdBRUhBQUhGQkFFY2s1QUVnQUVFZ2NVRUFSeVRsQVNBQVFSQnhRUUJISk9ZQklBQkJDSEZCQUVjazV3RWdBRUVFY1VFQVJ5VG9BU0FBUVFKeFFRQkhKT2tCSUFCQkFYRkJBRWNrNmdFajR3RkZRUUFnQVJzRVFFRUJFRDRMUVFBajR3RWdBUnNFUUVFQUVENExDeW9BUWVRSUxRQUFRUUJLSkxjQlFlVUlMUUFBUVFCS0pMZ0JRZi8vQXhBZEVDNUJqLzRERUIwUUx3dG9BRUhJQ1M4QkFDVHlBVUhLQ1M4QkFDVHpBVUhNQ1MwQUFFRUFTaVQwQVVITkNTMEFBRUVBU2lUMUFVSE9DUzBBQUVFQVNpVDJBVUhQQ1MwQUFFRUFTaVQzQVVIUUNTMEFBRUVBU2lUNEFVSFJDUzBBQUVFQVNpVDVBVUhTQ1MwQUFFRUFTaVQ2QVF0SEFFSDZDU2dDQUNURkFVSCtDU2dDQUNUR0FVR0NDaTBBQUVFQVNpVElBVUdGQ2kwQUFFRUFTaVRKQVVHRi9nTVFIU1RIQVVHRy9nTVFIU1RLQVVHSC9nTVFIU1RNQVFzSEFFRUFKTFlCQzJNQVFkNEtMUUFBUVFCS0pGaEIzd29vQWdBa1cwSGpDaWdDQUNSY1FlY0tLQUlBSkY1QjdBb29BZ0FrWDBIeENpMEFBQ1JnUWZJS0xRQUFKR0ZCOXdvdEFBQkJBRW9rWWtINENpZ0NBQ1JqUWYwS0x3RUFKR1JCL3dvdEFBQkJBRW9rWFF0SUFFR1FDeTBBQUVFQVNpUnZRWkVMS0FJQUpISkJsUXNvQWdBa2MwR1pDeWdDQUNSMVFaNExLQUlBSkhaQm93c3RBQUFrZDBHa0N5MEFBQ1I0UWJFTExRQUFRUUJLSkhRTFJ3QkI5QXN0QUFCQkFFb2trUUZCOVFzb0FnQWtrd0ZCK1Fzb0FnQWtsQUZCL1Fzb0FnQWtsZ0ZCZ2d3b0FnQWtsd0ZCaHd3dkFRQWttUUZCaVF3dEFBQkJBRW9rbFFFTHpBRUJBWDhRUFVHeUNDZ0NBQ1RzQVVHMkNDMEFBQ1RoQVVIRS9nTVFIU1R0QVVIQS9nTVFIUkEvRUVCQmdQNERFQjFCL3dGekpOb0JJOW9CSWdCQkVIRkJBRWNrMndFZ0FFRWdjVUVBUnlUY0FSQkJFRUpCckFvb0FnQWtzd0ZCc0FvdEFBQWt0QUZCc1FvdEFBQWt0UUZCQUNTMkFSQkVFRVZCd2dzdEFBQkJBRW9rZjBIREN5Z0NBQ1NDQVVISEN5Z0NBQ1NEQVVITEN5OEJBQ1NFQVJCR1FRQWttQUpCZ0tqV3VRY2trZ0pCQUNTVEFrRUFKSlFDUVlDbzFya0hKSlVDUVFBa2xnSkJBQ1NYQWdzRkFDT0JBZ3NGQUNPVkFnc0ZBQ09XQWdzRkFDT1hBZ3V5QWdFR2Z5TkxJZ1VnQUVaQkFDTktJQVJHUVFBZ0FFRUlTa0VBSUFGQkFFb2JHeHNFUUNBRFFRRnJFQjFCSUhGQkFFY2hDQ0FERUIxQklIRkJBRWNoQ1VFQUlRTURRQ0FEUVFoSUJFQkJCeUFEYXlBRElBZ2dDVWNiSWdjZ0FHb2lBMEdnQVV3RVFDQUJRYUFCYkNBRGFrRURiRUdBeVFWcUlnUXRBQUFoQ2lBRUlBbzZBQUFnQVVHZ0FXd2dBMnBCQTJ4Qmdja0ZhaUFFTFFBQk9nQUFJQUZCb0FGc0lBTnFRUU5zUVlMSkJXb2dCQzBBQWpvQUFDQUJRYUFCYkNBRGFrR0FrUVJxSUFCQkFDQUhhMnNnQVVHZ0FXeHFRZmlRQkdvdEFBQWlBMEVEY1NJRVFRUnlJQVFnQTBFRWNSczZBQUFnQmtFQmFpRUdDeUFIUVFGcUlRTU1BUXNMQlNBRUpFb0xJQUFnQlU0RVFDQUFRUWhxSWdFZ0FrRUhjU0lDYWlBQklBQWdBa2diSVFVTElBVWtTeUFHQ3lrQUlBQkJnSkFDUmdSQUlBRkJnQUZySUFGQmdBRnFJQUZCZ0FGeEd5RUJDeUFCUVFSMElBQnFDMG9BSUFCQkEzUWdBVUVCZEdvaUFFRUJha0UvY1NJQlFVQnJJQUVnQWh0QmdKQUVhaTBBQUNFQklBQkJQM0VpQUVGQWF5QUFJQUliUVlDUUJHb3RBQUFnQVVIL0FYRkJDSFJ5QzhnQkFDQUJFQjBnQUVFQmRIVkJBM0VoQUNBQlFjaitBMFlFUUNOQ0lRRUNRQ0FBUlEwQUFrQUNRQUpBQWtBZ0FFRUJhdzREQVFJREFBc01Bd3NqUXlFQkRBSUxJMFFoQVF3QkN5TkZJUUVMQlNBQlFjbitBMFlFUUNOR0lRRUNRQ0FBUlEwQUFrQUNRQUpBQWtBZ0FFRUJhdzREQVFJREFBc01Bd3NqUnlFQkRBSUxJMGdoQVF3QkN5TkpJUUVMQlNNK0lRRUNRQ0FBUlEwQUFrQUNRQUpBQWtBZ0FFRUJhdzREQVFJREFBc01Bd3NqUHlFQkRBSUxJMEFoQVF3QkN5TkJJUUVMQ3dzZ0FRdU1Bd0VHZnlBQklBQVFUU0FGUVFGMGFpSUFRWUNRZm1vZ0FrRUJjVUVOZENJQmFpMEFBQ0VSSUFCQmdaQithaUFCYWkwQUFDRVNJQU1oQUFOQUlBQWdCRXdFUUNBQUlBTnJJQVpxSWc0Z0NFZ0VRRUVBSVFVQ2YwRUJRUWNnQUdzZ0FFRUJJQXRCSUhGRklBdEJBRWdiR3lJQmRDQVNjUVJBUVFJaEJRc2dCVUVCYWdzZ0JVRUJJQUYwSUJGeEd5RUNJNEVDQkg5QkFTQU1RUUJPSUF0QkFFNGJCVUVBQ3dSL0lBdEJCM0VoQVNBTVFRQk9JZ1VFUUNBTVFRZHhJUUVMSUFFZ0FpQUZFRTRpQlVFZmNVRURkQ0VCSUFWQjRBZHhRUVYxUVFOMElROGdCVUdBK0FGeFFRcDFRUU4wQlNBQ1FjZitBeUFLSUFwQkFFd2JJZ29RVHlJRlFZQ0EvQWR4UVJCMUlRRWdCVUdBL2dOeFFRaDFJUThnQlVIL0FYRUxJUVVnQnlBSWJDQU9ha0VEYkNBSmFpSVFJQUU2QUFBZ0VFRUJhaUFQT2dBQUlCQkJBbW9nQlRvQUFDQUhRYUFCYkNBT2FrR0FrUVJxSUFKQkEzRWlBVUVFY2lBQklBdEJnQUZ4UVFBZ0MwRUFUaHNiT2dBQUlBMUJBV29oRFFzZ0FFRUJhaUVBREFFTEN5QU5DMzRCQTM4Z0EwRUhjU0VEUVFBZ0FpQUNRUU4xUVFOMGF5QUFHeUVIUWFBQklBQnJRUWNnQUVFSWFrR2dBVW9iSVFoQmZ5RUNJNEVDQkVBZ0JFR0EwSDVxTFFBQUlnSkJDSEZCQUVjaENTQUNRY0FBY1FSQVFRY2dBMnNoQXdzTElBWWdCU0FKSUFjZ0NDQURJQUFnQVVHZ0FVR0F5UVZCQUNBQ1FYOFFVQXVoQWdFQmZ5QURRUWR4SVFNZ0JTQUdFRTBnQkVHQTBINXFMUUFBSWdSQndBQnhCSDlCQnlBRGF3VWdBd3RCQVhScUlnVkJnSkIrYWlBRVFRaHhRUUJISWdaQkRYUnFMUUFBSVFjZ0FrRUhjU0VEUVFBaEFpQUJRYUFCYkNBQWFrRURiRUdBeVFWcUlBUkJCM0VDZnlBRlFZR1FmbW9nQmtFQmNVRU5kR290QUFCQkFTQURRUWNnQTJzZ0JFRWdjUnNpQTNSeEJFQkJBaUVDQ3lBQ1FRRnFDeUFDUVFFZ0EzUWdCM0ViSWdOQkFCQk9JZ0pCSDNGQkEzUTZBQUFnQVVHZ0FXd2dBR3BCQTJ4Qmdja0ZhaUFDUWVBSGNVRUZkVUVEZERvQUFDQUJRYUFCYkNBQWFrRURiRUdDeVFWcUlBSkJnUGdCY1VFS2RVRURkRG9BQUNBQlFhQUJiQ0FBYWtHQWtRUnFJQU5CQTNFaUFFRUVjaUFBSUFSQmdBRnhHem9BQUF2RUFRQWdCQ0FGRUUwZ0EwRUhjVUVCZEdvaUJFR0FrSDVxTFFBQUlRVkJBQ0VESUFGQm9BRnNJQUJxUVFOc1FZREpCV29DZnlBRVFZR1FmbW90QUFCQkFVRUhJQUpCQjNGcklnSjBjUVJBUVFJaEF3c2dBMEVCYWdzZ0EwRUJJQUowSUFWeEd5SURRY2YrQXhCUElnSkJnSUQ4QjNGQkVIVTZBQUFnQVVHZ0FXd2dBR3BCQTJ4Qmdja0ZhaUFDUVlEK0EzRkJDSFU2QUFBZ0FVR2dBV3dnQUdwQkEyeEJnc2tGYWlBQ09nQUFJQUZCb0FGc0lBQnFRWUNSQkdvZ0EwRURjVG9BQUF2VUFRRUdmeUFEUVFOMUlRb0RRQ0FFUWFBQlNBUkFJQVFnQldvaUJrR0FBazRFUUNBR1FZQUNheUVHQ3lBS1FRVjBJQUpxSUFaQkEzVnFJZ2hCZ0pCK2FpMEFBQ0VIUVFBaENTTThCRUFnQkNBQUlBWWdDQ0FIRUV3aUMwRUFTZ1JBUVFFaENTQUxRUUZySUFScUlRUUxDeUFKUlVFQUl6c2JCRUFnQkNBQUlBWWdBeUFJSUFFZ0J4QlJJZ1pCQUVvRVFDQUdRUUZySUFScUlRUUxCU0FKUlFSQUk0RUNCRUFnQkNBQUlBWWdBeUFJSUFFZ0J4QlNCU0FFSUFBZ0JpQURJQUVnQnhCVEN3c0xJQVJCQVdvaEJBd0JDd3NMTWdFRGZ5UHdBU0VESUFBajhRRWlCRWdFUUE4TFFRQWdBMEVIYXlJRGF5RUZJQUFnQVNBQ0lBQWdCR3NnQXlBRkVGUUxvQVVCRDM4Q1FFRW5JUVlEUUNBR1FRQklEUUVnQmtFQ2RDSUZRWUQ4QTJvaUF4QWRJUUlnQTBFQmFoQWRJUWNnQTBFQ2FoQWRJUU1nQWtFUWF5RUVJQWRCQ0dzaEMwRUlJUUlnQVFSQVFSQWhBaUFESUFOQkFYRnJJUU1MSUFBZ0FpQUVha2hCQUNBQUlBUk9Hd1JBSUFWQmcvd0RhaEFkSWdWQmdBRnhRUUJISVF3Z0JVRWdjVUVBUnlFTlFZQ0FBaUFERUUwZ0FpQUFJQVJySWdOclFRRnJJQU1nQlVIQUFIRWJRUUYwYWlJRFFZQ1FmbW9nQlVFSWNVRUFSeU9CQWlJQ0lBSWJRUUZ4UVExMElnSnFMUUFBSVE0Z0EwR0JrSDVxSUFKcUxRQUFJUTlCQnlFREEwQWdBMEVBVGdSQVFRQWhBZ0ovUVFGQkFDQURRUWRyYXlBRElBMGJJZ1IwSUE5eEJFQkJBaUVDQ3lBQ1FRRnFDeUFDUVFFZ0JIUWdEbkViSWdRRVFFRUhJQU5ySUF0cUlnSkJBRTRFZnlBQ1FhQUJUQVZCQUFzRVFFRUFJUWRCQUNFS0krb0JSU09CQWlJSUlBZ2JJZ2hGQkVBZ0FFR2dBV3dnQW1wQmdKRUVhaTBBQUNJSklSQWdDVUVEY1NJSlFRQkxRUUFnREJzRVFFRUJJUWNGUVFGQkFDQUpRUUJMUVFBZ0VFRUVjVUVBSTRFQ0d4c2JJUW9MQzBFQlFRQWdDa1VnQnhzZ0NCc0VRQ09CQWdSQUlBQkJvQUZzSUFKcVFRTnNRWURKQldvZ0JVRUhjU0FFUVFFUVRpSUVRUjl4UVFOME9nQUFJQUJCb0FGc0lBSnFRUU5zUVlISkJXb2dCRUhnQjNGQkJYVkJBM1E2QUFBZ0FFR2dBV3dnQW1wQkEyeEJnc2tGYWlBRVFZRDRBWEZCQ25WQkEzUTZBQUFGSUFCQm9BRnNJQUpxUVFOc1FZREpCV29nQkVISi9nTkJ5UDRESUFWQkVIRWJFRThpQkVHQWdQd0hjVUVRZFRvQUFDQUFRYUFCYkNBQ2FrRURiRUdCeVFWcUlBUkJnUDREY1VFSWRUb0FBQ0FBUWFBQmJDQUNha0VEYkVHQ3lRVnFJQVE2QUFBTEN3c0xJQU5CQVdzaEF3d0JDd3NMSUFaQkFXc2hCZ3dBQUFzQUN3dGtBUUYvUVlDQUFrR0FrQUlqNWdFYklRRkJBU1BxQVNPQkFoc0VRQ0FBSUFGQmdMZ0NRWUN3QWlQbkFSc2o3d0VnQUdwQi93RnhRUUFqN2dFUVZBc2o1UUVFUUNBQUlBRkJnTGdDUVlDd0FpUGtBUnNRVlFzajZRRUVRQ0FBSStnQkVGWUxDeVVCQVg4Q1FBTkFJQUJCa0FGS0RRRWdBRUgvQVhFUVZ5QUFRUUZxSVFBTUFBQUxBQXNMUmdFQ2Z3TkFJQUZCa0FGT1JRUkFRUUFoQUFOQUlBQkJvQUZJQkVBZ0FVR2dBV3dnQUdwQmdKRUVha0VBT2dBQUlBQkJBV29oQUF3QkN3c2dBVUVCYWlFQkRBRUxDd3NiQUVHUC9nTVFIVUVCSUFCMGNpSUFKTDhCUVkvK0F5QUFFQjhMQ3dCQkFTVEJBVUVCRUZvTExnRUJmd0ovSTNVaUFFRUFTZ1IvSTIwRlFRQUxCRUFnQUVFQmF5RUFDeUFBUlFzRVFFRUFKRzhMSUFBa2RRc3dBUUYvQW44amd3RWlBRUVBU2dSL0kzMEZRUUFMQkVBZ0FFRUJheUVBQ3lBQVJRc0VRRUVBSkg4TElBQWtnd0VMTWdFQmZ3Si9JNVlCSWdCQkFFb0VmeU9RQVFWQkFBc0VRQ0FBUVFGcklRQUxJQUJGQ3dSQVFRQWtrUUVMSUFBa2xnRUxSd0VDZnlBQUpHUkJsUDRERUIxQitBRnhJUUZCay80RElBQkIvd0Z4SWdJUUgwR1UvZ01nQVNBQVFRaDFRUWR4SWdCeUVCOGdBaVJWSUFBa1Z5TlZJMWRCQ0hSeUpGb0xvZ0VCQW44allrVkJBU05ZR3dSQUR3c2pZMEVCYXlJQVFRQk1CRUFqVFFSQUkwMGtZd0ovSTJRaUFTTlBkU0VBUVFFalRnUi9RUUVrWlNBQklBQnJCU0FBSUFGcUN5SUFRZjhQU2cwQUdrRUFDd1JBUVFBa1dBc2pUMEVBU2dSQUlBQVFYd0ovSTJRaUFTTlBkU0VBUVFFalRnUi9RUUVrWlNBQklBQnJCU0FBSUFGcUMwSC9EMG9OQUJwQkFBc0VRRUVBSkZnTEN3VkJDQ1JqQ3dVZ0FDUmpDd3RUQVFKL0kxeEJBV3NpQVVFQVRBUkFJMVFFUUNOVUlnRUVmeU5kQlVFQUN3UkFJMThoQUNBQVFRRnFJQUJCQVdzalV4dEJEM0VpQUVFUFNBUkFJQUFrWHdWQkFDUmRDd3NGUVFnaEFRc0xJQUVrWEF0VEFRSi9JM05CQVdzaUFVRUFUQVJBSTJzRVFDTnJJZ0VFZnlOMEJVRUFDd1JBSTNZaEFDQUFRUUZxSUFCQkFXc2phaHRCRDNFaUFFRVBTQVJBSUFBa2RnVkJBQ1IwQ3dzRlFRZ2hBUXNMSUFFa2N3dGNBUUovSTVRQlFRRnJJZ0ZCQUV3RVFDT01BUVJBSTR3QklnRUVmeU9WQVFWQkFBc0VRQ09YQVNFQUlBQkJBV29nQUVFQmF5T0xBUnRCRDNFaUFFRVBTQVJBSUFBa2x3RUZRUUFrbFFFTEN3VkJDQ0VCQ3dzZ0FTU1VBUXVwQWdFQ2YwR0F3QUFqZ2dKMElnRWhBaU96QVNBQWFpSUFJQUZPQkVBZ0FDQUNheVN6QVFKQUFrQUNRQUpBQWtBanRRRkJBV3BCQjNFaUFBUkFJQUJCQWtZTkFRSkFJQUJCQkdzT0JBTUFCQVVBQ3d3RkN5TmVJZ0ZCQUVvRWZ5TldCVUVBQ3dSQUlBRkJBV3NpQVVVRVFFRUFKRmdMQ3lBQkpGNFFYQkJkRUY0TUJBc2pYaUlCUVFCS0JIOGpWZ1ZCQUFzRVFDQUJRUUZySWdGRkJFQkJBQ1JZQ3dzZ0FTUmVFRndRWFJCZUVHQU1Bd3NqWGlJQlFRQktCSDhqVmdWQkFBc0VRQ0FCUVFGcklnRkZCRUJCQUNSWUN3c2dBU1JlRUZ3UVhSQmVEQUlMSTE0aUFVRUFTZ1IvSTFZRlFRQUxCRUFnQVVFQmF5SUJSUVJBUVFBa1dBc0xJQUVrWGhCY0VGMFFYaEJnREFFTEVHRVFZaEJqQ3lBQUpMVUJRUUVQQlNBQUpMTUJDMEVBQzNRQkFYOENRQUpBQWtBQ1FDQUFRUUZIQkVBQ1FDQUFRUUpyRGdNQ0F3UUFDd3dFQ3lOWklnQWpuZ0ZISVFFZ0FDU2VBU0FCRHdzamNDSUFJNThCUnlFQklBQWtud0VnQVE4TEk0QUJJZ0Fqb0FGSElRRWdBQ1NnQVNBQkR3c2prZ0VpQUNPaEFVY2hBU0FBSktFQklBRVBDMEVBQzFVQUFrQUNRQUpBSUFCQkFVY0VRQ0FBUVFKR0RRRWdBRUVEUmcwQ0RBTUxRUUVnQVhSQmdRRnhRUUJIRHd0QkFTQUJkRUdIQVhGQkFFY1BDMEVCSUFGMFFmNEFjVUVBUnc4TFFRRWdBWFJCQVhGQkFFY0xjd0VCZnlOYklBQnJJUUFEUUNBQVFRQk1CRUJCZ0JBaldtdEJBblFpQVVFQ2RDQUJJNElDR3lSYkkxc2dBRUVmZFNJQklBQWdBV3B6YXlFQUkyRkJBV3BCQjNFa1lRd0JDd3NnQUNSYkkxbEJBQ05ZR3dSL0kxOUJEM0VGUVE4UEN5TlFJMkVRWmdSL1FRRUZRWDhMYkVFUGFndHNBUUYvSTNJZ0FHc2hBQU5BSUFCQkFFd0VRRUdBRUNOeGEwRUNkQ09DQW5Ra2NpTnlJQUJCSDNVaUFTQUFJQUZxYzJzaEFDTjRRUUZxUVFkeEpIZ01BUXNMSUFBa2NpTndRUUFqYnhzRWZ5TjJRUTl4QlVFUER3c2paeU40RUdZRWYwRUJCVUYvQzJ4QkQyb0xEd0FqaEFGQkFYVkJzUDREYWhBZEN5c0JBWDhqaEFGQkFXb2hBQU5BSUFCQklFaEZCRUFnQUVFZ2F5RUFEQUVMQ3lBQUpJUUJFR2traHdFTDVnRUJBMzhqZ0FGRlFRRWpmeHNFUUVFUER3c2poUUVoQWlPR0FRUkFRWnorQXhBZFFRVjFRUTl4SWdJa2hRRkJBQ1NHQVFzamh3RWpoQUZCQVhGRlFRSjBkVUVQY1NFQkFrQUNRQUpBQWtBZ0FnUkFJQUpCQVVZTkFTQUNRUUpHRFFJTUF3c2dBVUVFZFNFQkRBTUxRUUVoQXd3Q0N5QUJRUUYxSVFGQkFpRUREQUVMSUFGQkFuVWhBVUVFSVFNTElBTkJBRW9FZnlBQklBTnRCVUVBQzBFUGFpRUJJNElCSUFCcklRQURRQ0FBUVFCTUJFQkJnQkFqZ1FGclFRRjBJNElDZENTQ0FTT0NBU0FBUVI5MUlnSWdBQ0FDYW5OcklRQVFhZ3dCQ3dzZ0FDU0NBU0FCQzQ4QkFRSi9JNU1CSUFCcklnQkJBRXdFUUNPWUFTT05BWFFqZ2dKMElBQkJIM1VpQVNBQUlBRnFjMnNoQUNPWkFTSUJRUUYxSWdJZ0FVRUJjU0FDUVFGeGN5SUJRUTUwY2lJQ1FiOS9jU0FCUVFaMGNpQUNJNDRCR3lTWkFRdEJBQ0FBSUFCQkFFZ2JKSk1CSTVJQlFRQWprUUViQkg4amx3RkJEM0VGUVE4UEMwRi9RUUVqbVFGQkFYRWJiRUVQYWdzd0FDQUFRVHhHQkVCQi93QVBDeUFBUVR4clFhQ05CbXdnQVd4QkEzVkJvSTBHYlVFOGFrR2dqUVpzUVl6eEFtMExsd0VCQVg5QkFDU2tBU0FBUVE4anFnRWJJQUZCRHlPckFSdHFJQUpCRHlPc0FSdHFJQU5CRHlPdEFSdHFJUVFnQUVFUEk2NEJHeUFCUVE4anJ3RWJhaUVBSUFBZ0FrRVBJN0FCRzJvaEFTQURRUThqc1FFYklRTkJBQ1NsQVVFQUpLWUJJQVFqcUFGQkFXb1FiU0VBSUFFZ0Eyb2pxUUZCQVdvUWJTRUJJQUFrb2dFZ0FTU2pBU0FCUWY4QmNTQUFRZjhCY1VFSWRISUwvd0lCQlg4alRDQUFhaUlDSkV3ald5QUNhMEVBVENJQ1JRUkFRUUVRWlNFQ0N5Tm1JQUJxSWdFa1ppTnlJQUZyUVFCTUlnRkZCRUJCQWhCbElRRUxJM2tnQUdva2VVRUFJNElCSTNsclFRQktJNFlCRzBVaUJFVUVRRUVERUdVaEJBc2ppQUVnQUdva2lBRWprd0VqaUFGclFRQk1JZ1ZGQkVCQkJCQmxJUVVMSUFJRVFDTk1JUU5CQUNSTUlBTVFaeVNhQVFzZ0FRUkFJMlloQTBFQUpHWWdBeEJvSkpzQkN5QUVCRUFqZVNFRFFRQWtlU0FERUdza25BRUxJQVVFUUNPSUFTRURRUUFraUFFZ0F4QnNKSjBCQzBFQklBVkJBU0FFUVFFZ0FTQUNHeHNiQkVCQkFTU21BUXRCZ0lDQUFpT0NBblJCeE5nQ2JTSUNJUUVqdEFFZ0FHb2lBQ0FDVGdSQUlBQWdBV3NoQUVFQkk2VUJRUUVqcEFFanBnRWJHd1JBSTVvQkk1c0JJNXdCSTUwQkVHNGFCU0FBSkxRQkN5TzJBU0lDUVFGMFFZQ1p3UUJxSWdFam9nRkJBbW82QUFBZ0FVRUJhaU9qQVVFQ2Fqb0FBQ0FDUVFGcUlnRkIvLzhEVGdSL0lBRkJBV3NGSUFFTEpMWUJDeUFBSkxRQkM2VURBUVovSUFBUVp5RUJJQUFRYUNFQ0lBQVFheUVFSUFBUWJDRUZJQUVrbWdFZ0FpU2JBU0FFSkp3QklBVWtuUUVqdEFFZ0FHb2lBRUdBZ0lBQ0k0SUNkRUhFMkFKdFRnUkFJQUJCZ0lDQUFpT0NBblJCeE5nQ2JXc2hBQ0FCSUFJZ0JDQUZFRzRoQXlPMkFVRUJkRUdBbWNFQWFpSUdJQU5CZ1A0RGNVRUlkVUVDYWpvQUFDQUdRUUZxSUFOQi93RnhRUUpxT2dBQUl6MEVRQ0FCUVE5QkQwRVBFRzRoQVNPMkFVRUJkRUdBbVNGcUlnTWdBVUdBL2dOeFFRaDFRUUpxT2dBQUlBTkJBV29nQVVIL0FYRkJBbW82QUFCQkR5QUNRUTlCRHhCdUlRRWp0Z0ZCQVhSQmdKa3BhaUlDSUFGQmdQNERjVUVJZFVFQ2Fqb0FBQ0FDUVFGcUlBRkIvd0Z4UVFKcU9nQUFRUTlCRHlBRVFROFFiaUVCSTdZQlFRRjBRWUNaTVdvaUFpQUJRWUQrQTNGQkNIVkJBbW82QUFBZ0FrRUJhaUFCUWY4QmNVRUNham9BQUVFUFFROUJEeUFGRUc0aEFTTzJBVUVCZEVHQW1UbHFJZ0lnQVVHQS9nTnhRUWgxUVFKcU9nQUFJQUpCQVdvZ0FVSC9BWEZCQW1vNkFBQUxJN1lCUVFGcUlnRkIvLzhEVGdSL0lBRkJBV3NGSUFFTEpMWUJDeUFBSkxRQkN4NEJBWDhnQUJCa0lRRWdBVVZCQUNNNkd3UkFJQUFRYndVZ0FCQndDd3N2QVFKL1FkY0FJNElDZENFQkk2Y0JJUUFEUUNBQUlBRk9CRUFnQVJCeElBQWdBV3NoQUF3QkN3c2dBQ1NuQVF1a0F3QUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCa1A0RFJ3UkFJQUJCbGY0RFJnMEJBa0FnQUVHUi9nTnJEaFlHQ3hBVUFBY01FUlVEQ0EwU0ZnUUpEaE1YQlFvUEFBc01Gd3RCa1A0REVCMUJnQUZ5RHd0QmxmNERFQjFCL3dGeUR3dEJtdjRERUIxQi93QnlEd3RCbi80REVCMUIvd0Z5RHd0QnBQNERFQjBQQzBHUi9nTVFIVUUvY2c4TFFaYitBeEFkUVQ5eUR3dEJtLzRERUIxQi93RnlEd3RCb1A0REVCMUIvd0Z5RHd0QnBmNERFQjBQQzBHUy9nTVFIUThMUVpmK0F4QWREd3RCblA0REVCMUJud0Z5RHd0Qm9mNERFQjBQQzBHQUFVRUFJN0lCR3lFQUlBQkJBWElnQUVGK2NTTllHeUVBSUFCQkFuSWdBRUY5Y1NOdkd5RUFJQUJCQkhJZ0FFRjdjU04vR3lFQUlBQkJDSElnQUVGM2NTT1JBUnRCOEFCeUR3dEJrLzRERUIxQi93RnlEd3RCbVA0REVCMUIvd0Z5RHd0Qm5mNERFQjFCL3dGeUR3dEJvdjRERUIwUEMwR1UvZ01RSFVHL0FYSVBDMEdaL2dNUUhVRy9BWElQQzBHZS9nTVFIVUcvQVhJUEMwR2ovZ01RSFVHL0FYSVBDMEYvQzV3QkFRRi9JOW9CSVFBajJ3RUVRQ0FBUVh0eElBQkJCSElqMGdFYklRQWdBRUYrY1NBQVFRRnlJOVVCR3lFQUlBQkJkM0VnQUVFSWNpUFRBUnNoQUNBQVFYMXhJQUJCQW5JajFBRWJJUUFGSTl3QkJFQWdBRUYrY1NBQVFRRnlJOVlCR3lFQUlBQkJmWEVnQUVFQ2NpUFhBUnNoQUNBQVFYdHhJQUJCQkhJajJBRWJJUUFnQUVGM2NTQUFRUWh5STlrQkd5RUFDd3NnQUVId0FYSUwxQUlBSUFCQmdJQUNTQVJBUVg4UEN5QUFRWURBQWtoQkFDQUFRWUNBQWs0YkJFQkJmdzhMSUFCQmdQd0RTRUVBSUFCQmdNQURUaHNFUUNBQVFZQkFhaEFkRHdzZ0FFR2YvUU5NUVFBZ0FFR0EvQU5PR3dSQVFmOEJRWDhqNFFGQkFrZ2JEd3NnQUVITi9nTkdCRUJCL3dFaEFFSE4vZ01RSFVFQmNVVUVRRUgrQVNFQUN5T0NBa1VFUUNBQVFmOStjU0VBQ3lBQUR3c2dBRUhFL2dOR0JFQWdBQ1B0QVJBZkkrMEJEd3NnQUVHbS9nTk1RUUFnQUVHUS9nTk9Hd1JBRUhJZ0FCQnpEd3NnQUVHdi9nTk1RUUFnQUVHbi9nTk9Hd1JBUWY4QkR3c2dBRUcvL2dOTVFRQWdBRUd3L2dOT0d3UkFFSElqZndSQUVHa1BDMEYvRHdzZ0FFR0UvZ05HQkVBZ0FDUEdBVUdBL2dOeFFRaDFJZ0FRSHlBQUR3c2dBRUdGL2dOR0JFQWdBQ1BIQVJBZkk4Y0JEd3NnQUVHUC9nTkdCRUFqdndGQjRBRnlEd3NnQUVHQS9nTkdCRUFRZEE4TFFYOExLUUVCZnlQZUFTQUFSZ1JBUVFFazRBRUxJQUFRZFNJQlFYOUdCSDhnQUJBZEJTQUJRZjhCY1FzTHBBSUJBMzhqOWdFRVFBOExJL2NCSVFNaitBRWhBaUFBUWY4L1RBUkFJQUlFZnlBQlFSQnhSUVZCQUF0RkJFQWdBVUVQY1NJQUJFQWdBRUVLUmdSQVFRRWs5QUVMQlVFQUpQUUJDd3NGSUFCQi8vOEFUQVJBSS9vQklnUUVmeUFBUWYvZkFFd0ZRUUVMQkVBZ0FVRVBjU1B5QVNBQ0d5RUFJQU1FZnlBQlFSOXhJUUVnQUVIZ0FYRUZJL2tCQkg4Z0FVSC9BSEVoQVNBQVFZQUJjUVZCQUNBQUlBUWJDd3NoQUNBQUlBRnlKUElCQlNQeUFVSC9BWEVnQVVFQVNrRUlkSElrOGdFTEJVRUFJQUJCLzc4QlRDQUNHd1JBSS9VQlFRQWdBeHNFUUNQeUFVRWZjU0FCUWVBQmNYSWs4Z0VQQ3lBQlFROXhJQUZCQTNFaitnRWJKUE1CQlVFQUlBQkIvLzhCVENBQ0d3UkFJQU1FUUNBQlFRRnhRUUJISlBVQkN3c0xDd3NMT0FFQmZ5Tk9JUUVnQUVId0FIRkJCSFVrVFNBQVFRaHhRUUJISkU0Z0FFRUhjU1JQSTJWQkFDTk9SVUVBSUFFYkd3UkFRUUFrV0FzTFpRQWpXQVJBUVFBalhTTlVHd1JBSTE5QkFXcEJEM0VrWHdzalV5QUFRUWh4UVFCSFJ3UkFRUkFqWDJ0QkQzRWtYd3NMSUFCQkJIVkJEM0VrVWlBQVFRaHhRUUJISkZNZ0FFRUhjU1JVSUFCQitBRnhRUUJLSWdBa1dTQUFSUVJBUVFBa1dBc0xaUUFqYndSQVFRQWpkQ05yR3dSQUkzWkJBV3BCRDNFa2Rnc2phaUFBUVFoeFFRQkhSd1JBUVJBamRtdEJEM0VrZGdzTElBQkJCSFZCRDNFa2FTQUFRUWh4UVFCSEpHb2dBRUVIY1NScklBQkIrQUZ4UVFCS0lnQWtjQ0FBUlFSQUlBQWtid3NMY2dBamtRRUVRRUVBSTVVQkk0d0JHd1JBSTVjQlFRRnFRUTl4SkpjQkN5T0xBU0FBUVFoeFFRQkhSd1JBUVJBamx3RnJRUTl4SkpjQkN3c2dBRUVFZFVFUGNTU0tBU0FBUVFoeFFRQkhKSXNCSUFCQkIzRWtqQUVnQUVINEFYRkJBRW9pQUNTU0FTQUFSUVJBSUFBa2tRRUxDemdBSUFCQkJIVWtqUUVnQUVFSWNVRUFSeVNPQVNBQVFRZHhJZ0FrandFZ0FFRUJkQ0lBUVFGSUJFQkJBU0VBQ3lBQVFRTjBKSmdCQzZvQkFRSi9RUUVrV0NOZVJRUkFRY0FBSkY0TFFZQVFJMXByUVFKMElnQkJBblFnQUNPQ0Foc2tXeU5VQkVBalZDUmNCVUVJSkZ3TFFRRWtYU05TSkY4aldpUmtJMDBFUUNOTkpHTUZRUWdrWXd0QkFTTlBRUUJLSWdBalRVRUFTaHNrWWtFQUpHVWdBQVIvQW44alpDSUFJMDkxSVFGQkFTTk9CSDlCQVNSbElBQWdBV3NGSUFBZ0FXb0xRZjhQU2cwQUdrRUFDd1ZCQUFzRVFFRUFKRmdMSTFsRkJFQkJBQ1JZQ3d1U0FRRUNmeUFBUVFkeElnRWtWeU5WSUFGQkNIUnlKRm9qdFFGQkFYRkJBVVloQWlOV1JTSUJCRUFnQUVIQUFIRkJBRWNoQVFzZ0FrVUVRRUVBSUFFalhrRUFUQnNFUUNOZVFRRnJKRjVCQUNOZVJTQUFRWUFCY1JzRVFFRUFKRmdMQ3dzZ0FFSEFBSEZCQUVja1ZpQUFRWUFCY1FSQUVIMGpWa0VBUVFBalhrSEFBRVlnQWhzYkJFQWpYa0VCYXlSZUN3c0xRQUJCQVNSdkkzVkZCRUJCd0FBa2RRdEJnQkFqY1d0QkFuUWpnZ0owSkhJamF3UkFJMnNrY3dWQkNDUnpDMEVCSkhRamFTUjJJM0JGQkVCQkFDUnZDd3VTQVFFQ2Z5QUFRUWR4SWdFa2JpTnNJQUZCQ0hSeUpIRWp0UUZCQVhGQkFVWWhBaU50UlNJQkJFQWdBRUhBQUhGQkFFY2hBUXNnQWtVRVFFRUFJQUVqZFVFQVRCc0VRQ04xUVFGckpIVkJBQ04xUlNBQVFZQUJjUnNFUUVFQUpHOExDd3NnQUVIQUFIRkJBRWNrYlNBQVFZQUJjUVJBRUg4amJVRUFRUUFqZFVIQUFFWWdBaHNiQkVBamRVRUJheVIxQ3dzTFBRQkJBU1IvSTRNQlJRUkFRWUFDSklNQkMwR0FFQ09CQVd0QkFYUWpnZ0owSklJQkk0SUJRUVpxSklJQlFRQWtoQUVqZ0FGRkJFQkJBQ1IvQ3d1UEFRRUJmeUFBUVFkeElnRWtmaU44SUFGQkNIUnlKSUVCSTdVQlFRRnhRUUZHSWdGRkJFQkJBRUVBSUFCQndBQnhJMzBiSTRNQlFRQk1Hd1JBSTRNQlFRRnJKSU1CUVFBamd3RkZJQUJCZ0FGeEd3UkFRUUFrZndzTEN5QUFRY0FBY1VFQVJ5UjlJQUJCZ0FGeEJFQVFnUUVqZlVFQVFRQWpnd0ZCZ0FKR0lBRWJHd1JBSTRNQlFRRnJKSU1CQ3dzTFVnQkJBU1NSQVNPV0FVVUVRRUhBQUNTV0FRc2ptQUVqalFGMEk0SUNkQ1NUQVNPTUFRUkFJNHdCSkpRQkJVRUlKSlFCQzBFQkpKVUJJNG9CSkpjQlFmLy9BU1NaQVNPU0FVVUVRRUVBSkpFQkN3dUxBUUVDZnlPMUFVRUJjVUVCUmlFQ0k1QUJSU0lCQkVBZ0FFSEFBSEZCQUVjaEFRc2dBa1VFUUVFQUlBRWpsZ0ZCQUV3YkJFQWpsZ0ZCQVdza2xnRkJBQ09XQVVVZ0FFR0FBWEViQkVCQkFDU1JBUXNMQ3lBQVFjQUFjVUVBUnlTUUFTQUFRWUFCY1FSQUVJTUJJNUFCUVFCQkFDT1dBVUhBQUVZZ0Foc2JCRUFqbGdGQkFXc2tsZ0VMQ3d1ZEJBQWpzZ0ZGUVFBZ0FFR20vZ05IR3dSQVFRQVBDd0pBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCa1A0RFJ3UkFJQUJCbXY0RFJnMEJBa0FnQUVHUi9nTnJEaFlEQndzUEFBUUlEQkFBQlFrTkVRQUdDZzRTRXhRVkFBc01GUXNnQVJCNERCVUxRUUFnQVVHQUFYRkJBRWNpQUNPQUFSc0VRRUVBSkljQkN5QUFKSUFCSUFCRkJFQWdBQ1IvQ3d3VUN5QUJRUVoxUVFOeEpGQWdBVUUvY1NSUlFjQUFJMUZySkY0TUV3c2dBVUVHZFVFRGNTUm5JQUZCUDNFa2FFSEFBQ05vYXlSMURCSUxJQUVrZWtHQUFpTjZheVNEQVF3UkN5QUJRVDl4SklrQlFjQUFJNGtCYXlTV0FRd1FDeUFCRUhrTUR3c2dBUkI2REE0TFFRRWtoZ0VnQVVFRmRVRVBjU1I3REEwTElBRVFld3dNQ3lBQkpGVWpWMEVJZENBQmNpUmFEQXNMSUFFa2JDTnVRUWgwSUFGeUpIRU1DZ3NnQVNSOEkzNUJDSFFnQVhJa2dRRU1DUXNnQVJCOERBZ0xJQUVRZmd3SEN5QUJFSUFCREFZTElBRVFnZ0VNQlFzZ0FSQ0VBUXdFQ3lBQlFRUjFRUWR4SktnQklBRkJCM0VrcVFGQkFTU2tBUXdEQ3lBQkVDdEJBU1NsQVF3Q0N5T3lBU0lBQkg5QkFBVWdBVUdBQVhFTEJFQkJCeVMxQVVFQUpHRkJBQ1I0Q3lBQlFZQUJjVVZCQUNBQUd3UkFBa0JCa1A0RElRQURRQ0FBUWFiK0EwNE5BU0FBUVFBUWtnRWdBRUVCYWlFQURBQUFDd0FMQ3lBQlFZQUJjVUVBUnlTeUFRd0JDMEVCRHd0QkFRczhBUUYvSUFCQkNIUWhBVUVBSVFBRFFBSkFJQUJCbndGS0RRQWdBRUdBL0FOcUlBQWdBV29RSFJBZklBQkJBV29oQUF3QkN3dEJoQVVrK3dFTEpRRUJmMEhSL2dNUUhTRUFRZEwrQXhBZFFmOEJjU0FBUWY4QmNVRUlkSEpCOFA4RGNRc3BBUUYvUWRQK0F4QWRJUUJCMVA0REVCMUIvd0Z4SUFCQi93RnhRUWgwY2tId1AzRkJnSUFDYWd1R0FRRURmeU9CQWtVRVFBOExJQUJCZ0FGeFJVRUFJL3dCR3dSQVFRQWsvQUZCMWY0RFFkWCtBeEFkUVlBQmNoQWZEd3NRaHdFaEFSQ0lBU0VDSUFCQi8zNXhRUUZxUVFSMElRTWdBRUdBQVhFRVFFRUJKUHdCSUFNay9RRWdBU1QrQVNBQ0pQOEJRZFgrQXlBQVFmOStjUkFmQlNBQklBSWdBeENUQVVIVi9nTkIvd0VRSHdzTFdRRUVmMEVCUWV2K0F5SURJQUJHSUFCQjZmNERSaHNFUUNBQVFRRnJJZ1FRSFVHL2YzRWlBa0UvY1NJRlFVQnJJQVVnQUNBRFJodEJnSkFFYWlBQk9nQUFJQUpCZ0FGeEJFQWdCQ0FDUVFGcVFZQUJjaEFmQ3dzTE1RQUNRQUpBQWtBQ1FDQUFCRUFDUUNBQVFRRnJEZ01DQXdRQUN3d0VDMEVKRHd0QkF3OExRUVVQQzBFSER3dEJBQXNmQUNBQVFRRWp6QUVRaXdFaUFIUnhCSDlCQVNBQWRDQUJjVVVGUVFBTEM0WUJBUVIvQTBBZ0FpQUFTQVJBSUFKQkJHb2hBaVBHQVNJQlFRUnFRZi8vQTNFaUF5VEdBU1BMQVFSQUk4a0JJUVFqeUFFRVFDUEtBU1RIQVVFQkpNSUJRUUlRV2tFQUpNZ0JRUUVreVFFRklBUUVRRUVBSk1rQkN3c2dBU0FERUl3QkJFQWp4d0ZCQVdvaUFVSC9BVW9FUUVFQkpNZ0JRUUFoQVFzZ0FTVEhBUXNMREFFTEN3c05BQ1BGQVJDTkFVRUFKTVVCQzBZQkFYOGp4Z0VoQUVFQUpNWUJRWVQrQTBFQUVCOGp5d0VFZnlBQVFRQVFqQUVGUVFBTEJFQWp4d0ZCQVdvaUFFSC9BVW9FUUVFQkpNZ0JRUUFoQUFzZ0FDVEhBUXNMZkFFRGZ5UExBU0VCSUFCQkJIRkJBRWNreXdFZ0FFRURjU0VDSUFGRkJFQWp6QUVRaXdFaEFTQUNFSXNCSVFNanhnRWhBQ1BMQVFSL1FRRWdBWFFnQUhFRlFRRWdBM1FnQUhGQkFFRUJJQUYwSUFCeEd3c0VRQ1BIQVVFQmFpSUFRZjhCU2dSQVFRRWt5QUZCQUNFQUN5QUFKTWNCQ3dzZ0FpVE1BUXZJQmdFQmZ3SkFBa0FnQUVITi9nTkdCRUJCemY0RElBRkJBWEVRSHd3QkN5QUFRZEQrQTBaQkFDT0FBaHNFUUVFQUpJQUNRZjhCSkl3Q0RBSUxJQUJCZ0lBQ1NBUkFJQUFnQVJCM0RBRUxJQUJCZ01BQ1NFRUFJQUJCZ0lBQ1Roc05BU0FBUVlEOEEwaEJBQ0FBUVlEQUEwNGJCRUFnQUVHQVFHb2dBUkFmREFJTElBQkJuLzBEVEVFQUlBQkJnUHdEVGhzRVFDUGhBVUVDVGc4TElBQkIvLzBEVEVFQUlBQkJvUDBEVGhzTkFDQUFRWUwrQTBZRVFDQUJRUUZ4UVFCSEpNOEJJQUZCQW5GQkFFY2swQUVnQVVHQUFYRkJBRWNrMFFGQkFROExJQUJCcHY0RFRFRUFJQUJCa1A0RFRoc0VRQkJ5SUFBZ0FSQ0ZBUThMSUFCQnYvNERURUVBSUFCQnNQNERUaHNFUUJCeUkzOEVRQ09FQVVFQmRVR3cvZ05xSUFFUUh3d0NDd3dDQ3lBQVFjditBMHhCQUNBQVFjRCtBMDRiQkVBZ0FFSEEvZ05HQkVBZ0FSQS9EQU1MSUFCQndmNERSZ1JBUWNIK0F5QUJRZmdCY1VIQi9nTVFIVUVIY1hKQmdBRnlFQjhNQWdzZ0FFSEUvZ05HQkVCQkFDVHRBU0FBUVFBUUh3d0NDeUFBUWNYK0EwWUVRQ0FCSk9JQkRBTUxJQUJCeHY0RFJnUkFJQUVRaGdFTUF3c0NRQUpBQWtBQ1FDQUFRY1ArQTBjRVFDQUFRY0wrQTJzT0NnRUVCQVFFQkFRRUF3SUVDeUFCSk80QkRBWUxJQUVrN3dFTUJRc2dBU1R3QVF3RUN5QUJKUEVCREFNTERBSUxJQUJCMWY0RFJnUkFJQUVRaVFFTUFRdEJBU0FBUWMvK0EwWWdBRUh3L2dOR0d3UkFJL3dCQkVBai9nRWlBa0dBZ0FGT0JIOGdBa0gvL3dGTUJVRUFDd1IvUVFFRklBSkIvNzhEVEVFQUlBSkJnS0FEVGhzTERRSUxDeUFBUWV2K0EweEJBQ0FBUWVqK0EwNGJCRUFnQUNBQkVJb0JEQUlMSUFCQmgvNERURUVBSUFCQmhQNERUaHNFUUJDT0FRSkFBa0FDUUFKQUlBQkJoUDREUndSQUlBQkJoZjREYXc0REFRSURCQXNRandFTUJRc0NRQ1BMQVFSQUk4a0JEUUVqeUFFRVFFRUFKTWdCQ3dzZ0FTVEhBUXNNQlFzZ0FTVEtBU1BKQVVFQUk4c0JHd1JBSUFFa3h3RkJBQ1RKQVFzTUJBc2dBUkNRQVF3REN3d0NDeUFBUVlEK0EwWUVRQ0FCUWY4QmN5VGFBU1BhQVNJQ1FSQnhRUUJISk5zQklBSkJJSEZCQUVjazNBRUxJQUJCai80RFJnUkFJQUVRTHd3Q0N5QUFRZi8vQTBZRVFDQUJFQzRNQWd0QkFROExRUUFQQzBFQkN5QUFJOThCSUFCR0JFQkJBU1RnQVFzZ0FDQUJFSkVCQkVBZ0FDQUJFQjhMQzF3QkEzOERRQUpBSUFNZ0FrNE5BQ0FBSUFOcUVIWWhCU0FCSUFOcUlRUURRQ0FFUWYrL0FreEZCRUFnQkVHQVFHb2hCQXdCQ3dzZ0JDQUZFSklCSUFOQkFXb2hBd3dCQ3dzait3RkJJQ09DQW5RZ0FrRUVkV3hxSlBzQkMzUUJBbjhqL0FGRkJFQVBDMEVRSVFBai9nRWovd0VDZnlQOUFTSUJRUkJJQkVBZ0FTRUFDeUFBQ3hDVEFTUCtBU0FBYWlUK0FTUC9BU0FBYWlUL0FTQUJJQUJySWdBay9RRkIxZjRESVFFZ0FFRUFUQVJBUVFBay9BRWdBVUgvQVJBZkJTQUJJQUJCQkhWQkFXdEIvMzV4RUI4TEN6TUFJKzBCSStJQlJrRUFJQUJCQVVaQkFTQUFHeHNFUUNBQlFRUnlJZ0ZCd0FCeEJFQVFXd3NGSUFGQmUzRWhBUXNnQVF1QkFnRUZmeVBqQVVVRVFBOExJK0VCSVFBZ0FDUHRBU0lDUVpBQlRnUi9RUUVGUWZnQ0k0SUNkQ0lCSVFNajdBRWlCQ0FCVGdSL1FRSUZRUU5CQUNBRUlBTk9Hd3NMSWdGSEJFQkJ3ZjRERUIwaEFDQUJKT0VCUVFBaEFnSkFBa0FDUUFKQUlBRUVRQ0FCUVFGckRnTUJBZ01FQ3lBQVFYeHhJZ0JCQ0hGQkFFY2hBZ3dEQ3lBQVFYMXhRUUZ5SWdCQkVIRkJBRWNoQWd3Q0N5QUFRWDV4UVFKeUlnQkJJSEZCQUVjaEFnd0JDeUFBUVFOeUlRQUxJQUlFUUJCYkN5QUJSUVJBRUpRQkN5QUJRUUZHQkVCQkFTVEFBVUVBRUZvTFFjSCtBeUFCSUFBUWxRRVFId1VnQWtHWkFVWUVRRUhCL2dNZ0FVSEIvZ01RSFJDVkFSQWZDd3NMb0FFQkFYOGo0d0VFUUNQc0FTQUFhaVRzQVNNNUlRRURRQ1BzQVVFRUk0SUNJZ0IwUWNnRElBQjBJKzBCUVprQlJodE9CRUFqN0FGQkJDT0NBaUlBZEVISUF5QUFkQ1B0QVVHWkFVWWJheVRzQVNQdEFTSUFRWkFCUmdSQUlBRUVRQkJZQlNBQUVGY0xFRmxCZnlSS1FYOGtTd1VnQUVHUUFVZ0VRQ0FCUlFSQUlBQVFWd3NMQzBFQUlBQkJBV29nQUVHWkFVb2JKTzBCREFFTEN3c1FsZ0VMT0FFQmYwRUVJNElDSWdCMFFjZ0RJQUIwSSswQlFaa0JSaHNoQUFOQUkrc0JJQUJPQkVBZ0FCQ1hBU1ByQVNBQWF5VHJBUXdCQ3dzTHNnRUJBMzhqMFFGRkJFQVBDd05BSUFNZ0FFZ0VRQ0FEUVFScUlRTUNmeVBOQVNJQ1FRUnFJZ0ZCLy84RFNnUkFJQUZCZ0lBRWF5RUJDeUFCQ3lUTkFTQUNRUUZCQWtFSEk5QUJHeUlDZEhFRWYwRUJJQUowSUFGeFJRVkJBQXNFUUVHQi9nTkJnZjRERUIxQkFYUkJBV3BCL3dGeEVCOGp6Z0ZCQVdvaUFVRUlSZ1JBUVFBa3pnRkJBU1REQVVFREVGcEJndjREUVlMK0F4QWRRZjkrY1JBZlFRQWswUUVGSUFFa3pnRUxDd3dCQ3dzTGxRRUFJL3NCUVFCS0JFQWord0VnQUdvaEFFRUFKUHNCQ3lPTkFpQUFhaVNOQWlPUkFrVUVRQ00zQkVBajZ3RWdBR29rNndFUW1BRUZJQUFRbHdFTEl6WUVRQ09uQVNBQWFpU25BUkJ5QlNBQUVIRUxJQUFRbVFFTEl6Z0VRQ1BGQVNBQWFpVEZBUkNPQVFVZ0FCQ05BUXNqbEFJZ0FHb2lBQ09TQWs0RVFDT1RBa0VCYWlTVEFpQUFJNUlDYXlFQUN5QUFKSlFDQ3d3QVFRUVFtZ0VqakFJUUhRc3BBUUYvUVFRUW1nRWpqQUpCQVdwQi8vOERjUkFkSVFBUW13RkIvd0Z4SUFCQi93RnhRUWgwY2dzT0FFRUVFSm9CSUFBZ0FSQ1NBUXN3QUVFQklBQjBRZjhCY1NFQUlBRkJBRW9FUUNPS0FpQUFja0gvQVhFa2lnSUZJNG9DSUFCQi93RnpjU1NLQWdzTENRQkJCU0FBRUo0QkN6b0JBWDhnQVVFQVRnUkFJQUJCRDNFZ0FVRVBjV3BCRUhGQkFFY1Fud0VGSUFGQkgzVWlBaUFCSUFKcWMwRVBjU0FBUVE5eFN4Q2ZBUXNMQ1FCQkJ5QUFFSjRCQ3drQVFRWWdBQkNlQVFzSkFFRUVJQUFRbmdFTFB3RUNmeUFCUVlEK0EzRkJDSFVoQWlBQlFmOEJjU0lCSVFNZ0FDQUJFSkVCQkVBZ0FDQURFQjhMSUFCQkFXb2lBQ0FDRUpFQkJFQWdBQ0FDRUI4TEN3NEFRUWdRbWdFZ0FDQUJFS1FCQzFvQUlBSUVRQ0FBUWYvL0EzRWlBQ0FCYWlBQUlBRnpjeUlBUVJCeFFRQkhFSjhCSUFCQmdBSnhRUUJIRUtNQkJTQUFJQUZxUWYvL0EzRWlBaUFBUWYvL0EzRkpFS01CSUFBZ0FYTWdBbk5CZ0NCeFFRQkhFSjhCQ3dzTEFFRUVFSm9CSUFBUWRndXBCUUVCZndKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FBUkFJQUJCQVVZTkFRSkFJQUJCQW1zT0RnTUVCUVlIQ0FrS0N3d05EZzhRQUFzTUVBc01GUXNRbkFGQi8vOERjU0lBUVlEK0EzRkJDSFVraEFJZ0FFSC9BWEVraFFJTUR3c2poUUpCL3dGeEk0UUNRZjhCY1VFSWRISWpnd0lRblFFTUV3c2poUUpCL3dGeEk0UUNRZjhCY1VFSWRISkJBV3BCLy84RGNTSUFRWUQrQTNGQkNIVWtoQUlNRXdzamhBSWlBRUVCRUtBQklBQkJBV3BCL3dGeElnQWtoQUlNRFFzamhBSWlBRUYvRUtBQklBQkJBV3RCL3dGeElnQWtoQUlNRFFzUW13RkIvd0Z4SklRQ0RBMExJNE1DSWdCQmdBRnhRWUFCUmhDakFTQUFRUUYwSUFCQi93RnhRUWQyY2tIL0FYRWtnd0lNRFFzUW5BRkIvLzhEY1NPTEFoQ2xBUXdJQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2lJQUk0VUNRZjhCY1NPRUFrSC9BWEZCQ0hSeUlnRkJBQkNtQVNBQUlBRnFRZi8vQTNFaUFFR0EvZ054UVFoMUpJZ0NJQUJCL3dGeEpJa0NRUUFRb2dGQkNBOExJNFVDUWY4QmNTT0VBa0gvQVhGQkNIUnlFS2NCUWY4QmNTU0RBZ3dMQ3lPRkFrSC9BWEVqaEFKQi93RnhRUWgwY2tFQmEwSC8vd054SWdCQmdQNERjVUVJZFNTRUFnd0xDeU9GQWlJQVFRRVFvQUVnQUVFQmFrSC9BWEVpQUNTRkFnd0ZDeU9GQWlJQVFYOFFvQUVnQUVFQmEwSC9BWEVpQUNTRkFnd0ZDeENiQVVIL0FYRWtoUUlNQlFzamd3SWlBRUVCY1VFQVN4Q2pBU0FBUVFkMElBQkIvd0Z4UVFGMmNrSC9BWEVrZ3dJTUJRdEJmdzhMSTR3Q1FRSnFRZi8vQTNFa2pBSU1CQXNnQUVVUW9RRkJBQkNpQVF3REN5QUFSUkNoQVVFQkVLSUJEQUlMSTR3Q1FRRnFRZi8vQTNFa2pBSU1BUXRCQUJDaEFVRUFFS0lCUVFBUW53RUxRUVFQQ3lBQVFmOEJjU1NGQWtFSUM1a0dBUUYvQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRUkJIQkVBZ0FFRVJSZzBCQWtBZ0FFRVNhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPQkFnUkFRYzMrQXhDbkFVSC9BWEVpQUVFQmNRUkFRYzMrQXlBQVFYNXhJZ0JCZ0FGeEJIOUJBQ1NDQWlBQVFmOStjUVZCQVNTQ0FpQUFRWUFCY2dzUW5RRkJ4QUFQQ3d0QkFTU1JBZ3dRQ3hDY0FVSC8vd054SWdCQmdQNERjVUVJZFNTR0FpQUFRZjhCY1NTSEFpT01Ba0VDYWtILy93TnhKSXdDREJFTEk0Y0NRZjhCY1NPR0FrSC9BWEZCQ0hSeUk0TUNFSjBCREJBTEk0Y0NRZjhCY1NPR0FrSC9BWEZCQ0hSeVFRRnFRZi8vQTNFaUFFR0EvZ054UVFoMUpJWUNEQkFMSTRZQ0lnQkJBUkNnQVNBQVFRRnFRZjhCY1NTR0FpT0dBa1VRb1FGQkFCQ2lBUXdPQ3lPR0FpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFa2hnSWpoZ0pGRUtFQlFRRVFvZ0VNRFFzUW13RkIvd0Z4SklZQ0RBb0xJNE1DSWdGQmdBRnhRWUFCUmlFQUk0b0NRUVIyUVFGeElBRkJBWFJ5UWY4QmNTU0RBZ3dLQ3hDYkFTRUFJNHdDSUFCQkdIUkJHSFZxUWYvL0EzRkJBV3BCLy84RGNTU01Ba0VJRHdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJaUFDT0hBa0gvQVhFamhnSkIvd0Z4UVFoMGNpSUJRUUFRcGdFZ0FDQUJha0gvL3dOeElnQkJnUDREY1VFSWRTU0lBaUFBUWY4QmNTU0pBa0VBRUtJQlFRZ1BDeU9IQWtIL0FYRWpoZ0pCL3dGeFFRaDBjaENuQVVIL0FYRWtnd0lNQ0Fzamh3SkIvd0Z4STRZQ1FmOEJjVUVJZEhKQkFXdEIvLzhEY1NJQVFZRCtBM0ZCQ0hVa2hnSU1DQXNqaHdJaUFFRUJFS0FCSUFCQkFXcEIvd0Z4SWdBa2h3SWdBRVVRb1FGQkFCQ2lBUXdHQ3lPSEFpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFaUFDU0hBaUFBUlJDaEFVRUJFS0lCREFVTEVKc0JRZjhCY1NTSEFnd0NDeU9EQWlJQlFRRnhRUUZHSVFBamlnSkJCSFpCQVhGQkIzUWdBVUgvQVhGQkFYWnlKSU1DREFJTFFYOFBDeU9NQWtFQmFrSC8vd054Skl3Q0RBRUxJQUFRb3dGQkFCQ2hBVUVBRUtJQlFRQVFud0VMUVFRUEN5QUFRZjhCY1NTSEFrRUlDL1VHQVFKL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFRWdSd1JBSUFCQklVWU5BUUpBSUFCQkltc09EZ01FQlFZSENBa0tDd3dORGc4UUFBc01FQXNqaWdKQkIzWkJBWEVFUUNPTUFrRUJha0gvL3dOeEpJd0NCUkNiQVNFQUk0d0NJQUJCR0hSQkdIVnFRZi8vQTNGQkFXcEIvLzhEY1NTTUFndEJDQThMRUp3QlFmLy9BM0VpQUVHQS9nTnhRUWgxSklnQ0lBQkIvd0Z4SklrQ0k0d0NRUUpxUWYvL0EzRWtqQUlNRkFzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJaUFDT0RBaENkQVF3UEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNrRUJha0gvL3dOeElnQkJnUDREY1VFSWRTU0lBZ3dOQ3lPSUFpSUFRUUVRb0FFZ0FFRUJha0gvQVhFaUFDU0lBZ3dPQ3lPSUFpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFaUFDU0lBZ3dPQ3hDYkFVSC9BWEVraUFJTURndEJCa0VBSTRvQ0lnSkJCWFpCQVhGQkFFc2JJZ0JCNEFCeUlBQWdBa0VFZGtFQmNVRUFTeHNoQUNPREFpRUJJQUpCQm5aQkFYRkJBRXNFZnlBQklBQnJRZjhCY1FVZ0FTQUFRUVp5SUFBZ0FVRVBjVUVKU3hzaUFFSGdBSElnQUNBQlFaa0JTeHNpQUdwQi93RnhDeUlCUlJDaEFTQUFRZUFBY1VFQVJ4Q2pBVUVBRUo4QklBRWtnd0lNRGdzamlnSkJCM1pCQVhGQkFFc0VRQkNiQVNFQUk0d0NJQUJCR0hSQkdIVnFRZi8vQTNGQkFXcEIvLzhEY1NTTUFnVWpqQUpCQVdwQi8vOERjU1NNQWd0QkNBOExJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJZ0FnQUVILy93TnhRUUFRcGdFZ0FFRUJkRUgvL3dOeElnQkJnUDREY1VFSWRTU0lBaUFBUWY4QmNTU0pBa0VBRUtJQlFRZ1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaUlBRUtjQlFmOEJjU1NEQWd3SEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNrRUJhMEgvL3dOeElnQkJnUDREY1VFSWRTU0lBZ3dGQ3lPSkFpSUFRUUVRb0FFZ0FFRUJha0gvQVhFaUFDU0pBZ3dHQ3lPSkFpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFaUFDU0pBZ3dHQ3hDYkFVSC9BWEVraVFJTUJnc2pnd0pCZjNOQi93RnhKSU1DUVFFUW9nRkJBUkNmQVF3R0MwRi9Ed3NnQUVIL0FYRWtpUUpCQ0E4TElBQkJBV3BCLy84RGNTSUFRWUQrQTNGQkNIVWtpQUlnQUVIL0FYRWtpUUlNQXdzZ0FFVVFvUUZCQUJDaUFRd0NDeUFBUlJDaEFVRUJFS0lCREFFTEk0d0NRUUZxUWYvL0EzRWtqQUlMUVFRTDhRVUJBWDhDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFUQkhCRUFnQUVFeFJnMEJBa0FnQUVFeWF3NE9Bd1FGQmdjSUNRb0xEQTBPRHhBQUN3d1FDeU9LQWtFRWRrRUJjUVJBSTR3Q1FRRnFRZi8vQTNFa2pBSUZFSnNCSVFBampBSWdBRUVZZEVFWWRXcEIvLzhEY1VFQmFrSC8vd054Skl3Q0MwRUlEd3NRbkFGQi8vOERjU1NMQWlPTUFrRUNha0gvL3dOeEpJd0NEQkVMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5SWdBamd3SVFuUUVNRGdzaml3SkJBV3BCLy84RGNTU0xBa0VJRHdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJaUFCQ25BU0lCUVFFUW9BRWdBVUVCYWtIL0FYRWlBVVVRb1FGQkFCQ2lBU0FBSUFFUW5RRU1EZ3NqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElpQUJDbkFTSUJRWDhRb0FFZ0FVRUJhMEgvQVhFaUFVVVFvUUZCQVJDaUFTQUFJQUVRblFFTURRc2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISVFtd0ZCL3dGeEVKMEJEQXNMUVFBUW9nRkJBQkNmQVVFQkVLTUJEQXNMSTRvQ1FRUjJRUUZ4UVFGR0JFQVFtd0VoQUNPTUFpQUFRUmgwUVJoMWFrSC8vd054UVFGcVFmLy9BM0VrakFJRkk0d0NRUUZxUWYvL0EzRWtqQUlMUVFnUEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNpSUFJNHNDUVFBUXBnRWppd0lnQUdwQi8vOERjU0lBUVlEK0EzRkJDSFVraUFJZ0FFSC9BWEVraVFKQkFCQ2lBVUVJRHdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJaUFCQ25BVUgvQVhFa2d3SU1CZ3NqaXdKQkFXdEIvLzhEY1NTTEFrRUlEd3NqZ3dJaUFFRUJFS0FCSUFCQkFXcEIvd0Z4SWdBa2d3SWdBRVVRb1FGQkFCQ2lBUXdHQ3lPREFpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFaUFDU0RBaUFBUlJDaEFVRUJFS0lCREFVTEVKc0JRZjhCY1NTREFnd0RDMEVBRUtJQlFRQVFud0VqaWdKQkJIWkJBWEZCQUUwUW93RU1Bd3RCZnc4TElBQkJBV3RCLy84RGNTSUFRWUQrQTNGQkNIVWtpQUlnQUVIL0FYRWtpUUlNQVFzampBSkJBV3BCLy84RGNTU01BZ3RCQkF1Q0FnQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFjQUFSd1JBSUFCQndRQkdEUUVDUUNBQVFjSUFhdzRPQXdRRkJnY0lDUkVLQ3d3TkRnOEFDd3dQQ3d3UEN5T0ZBaVNFQWd3T0N5T0dBaVNFQWd3TkN5T0hBaVNFQWd3TUN5T0lBaVNFQWd3TEN5T0pBaVNFQWd3S0N5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BVUgvQVhFa2hBSU1DUXNqZ3dJa2hBSU1DQXNqaEFJa2hRSU1Cd3NqaGdJa2hRSU1CZ3NqaHdJa2hRSU1CUXNqaUFJa2hRSU1CQXNqaVFJa2hRSU1Bd3NqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRcHdGQi93RnhKSVVDREFJTEk0TUNKSVVDREFFTFFYOFBDMEVFQy8wQkFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUWRBQVJ3UkFJQUJCMFFCR0RRRUNRQ0FBUWRJQWF3NE9FQU1FQlFZSENBa0tFQXNNRFE0QUN3d09DeU9FQWlTR0Fnd09DeU9GQWlTR0Fnd05DeU9IQWlTR0Fnd01DeU9JQWlTR0Fnd0xDeU9KQWlTR0Fnd0tDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVVIL0FYRWtoZ0lNQ1Fzamd3SWtoZ0lNQ0FzamhBSWtod0lNQndzamhRSWtod0lNQmdzamhnSWtod0lNQlFzamlBSWtod0lNQkFzamlRSWtod0lNQXdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RkIvd0Z4SkljQ0RBSUxJNE1DSkljQ0RBRUxRWDhQQzBFRUMvMEJBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFlQUFSd1JBSUFCQjRRQkdEUUVDUUNBQVFlSUFhdzRPQXdRUUJRWUhDQWtLQ3d3UURRNEFDd3dPQ3lPRUFpU0lBZ3dPQ3lPRkFpU0lBZ3dOQ3lPR0FpU0lBZ3dNQ3lPSEFpU0lBZ3dMQ3lPSkFpU0lBZ3dLQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFVSC9BWEVraUFJTUNRc2pnd0lraUFJTUNBc2poQUlraVFJTUJ3c2poUUlraVFJTUJnc2poZ0lraVFJTUJRc2pod0lraVFJTUJBc2ppQUlraVFJTUF3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISVFwd0ZCL3dGeEpJa0NEQUlMSTRNQ0pJa0NEQUVMUVg4UEMwRUVDNXNEQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCOEFCSEJFQWdBRUh4QUVZTkFRSkFJQUJCOGdCckRnNERCQVVHQndnSkNnc01EUTRQRVFBTERBOExJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJNFFDRUowQkRBOExJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJNFVDRUowQkRBNExJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJNFlDRUowQkRBMExJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJNGNDRUowQkRBd0xJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJNGdDRUowQkRBc0xJNGtDUWY4QmNTT0lBa0gvQVhGQkNIUnlJNGtDRUowQkRBb0xJL3dCUlFSQUFrQWp0d0VFUUVFQkpJNENEQUVMSTdrQkk3OEJjVUVmY1VVRVFFRUJKSThDREFFTFFRRWtrQUlMQ3d3SkN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNpT0RBaENkQVF3SUN5T0VBaVNEQWd3SEN5T0ZBaVNEQWd3R0N5T0dBaVNEQWd3RkN5T0hBaVNEQWd3RUN5T0lBaVNEQWd3REN5T0pBaVNEQWd3Q0N5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BVUgvQVhFa2d3SU1BUXRCZnc4TFFRUUxOd0VCZnlBQlFRQk9CRUFnQUVIL0FYRWdBQ0FCYWtIL0FYRkxFS01CQlNBQlFSOTFJZ0lnQVNBQ2FuTWdBRUgvQVhGS0VLTUJDd3MwQVFKL0k0TUNJZ0VnQUVIL0FYRWlBaENnQVNBQklBSVFzQUVnQUNBQmFrSC9BWEVpQUNTREFpQUFSUkNoQVVFQUVLSUJDMWdCQW44amd3SWlBU0FBYWlPS0FrRUVka0VCY1dwQi93RnhJZ0lnQUNBQmMzTkJFSEZCQUVjUW53RWdBRUgvQVhFZ0FXb2ppZ0pCQkhaQkFYRnFRWUFDY1VFQVN4Q2pBU0FDSklNQ0lBSkZFS0VCUVFBUW9nRUxpd0lBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVlBQlJ3UkFJQUJCZ1FGR0RRRUNRQ0FBUVlJQmF3NE9Bd1FGQmdjSUNRb0xEQTBPRHhBQUN3d1FDeU9FQWhDeEFRd1FDeU9GQWhDeEFRd1BDeU9HQWhDeEFRd09DeU9IQWhDeEFRd05DeU9JQWhDeEFRd01DeU9KQWhDeEFRd0xDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVJDeEFRd0tDeU9EQWhDeEFRd0pDeU9FQWhDeUFRd0lDeU9GQWhDeUFRd0hDeU9HQWhDeUFRd0dDeU9IQWhDeUFRd0ZDeU9JQWhDeUFRd0VDeU9KQWhDeUFRd0RDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVJDeUFRd0NDeU9EQWhDeUFRd0JDMEYvRHd0QkJBczNBUUovSTRNQ0lnRWdBRUgvQVhGQmYyd2lBaENnQVNBQklBSVFzQUVnQVNBQWEwSC9BWEVpQUNTREFpQUFSUkNoQVVFQkVLSUJDMWdCQW44amd3SWlBU0FBYXlPS0FrRUVka0VCY1d0Qi93RnhJZ0lnQUNBQmMzTkJFSEZCQUVjUW53RWdBU0FBUWY4QmNXc2ppZ0pCQkhaQkFYRnJRWUFDY1VFQVN4Q2pBU0FDSklNQ0lBSkZFS0VCUVFFUW9nRUxpd0lBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVpBQlJ3UkFJQUJCa1FGR0RRRUNRQ0FBUVpJQmF3NE9Bd1FGQmdjSUNRb0xEQTBPRHhBQUN3d1FDeU9FQWhDMEFRd1FDeU9GQWhDMEFRd1BDeU9HQWhDMEFRd09DeU9IQWhDMEFRd05DeU9JQWhDMEFRd01DeU9KQWhDMEFRd0xDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVJDMEFRd0tDeU9EQWhDMEFRd0pDeU9FQWhDMUFRd0lDeU9GQWhDMUFRd0hDeU9HQWhDMUFRd0dDeU9IQWhDMUFRd0ZDeU9JQWhDMUFRd0VDeU9KQWhDMUFRd0RDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVJDMUFRd0NDeU9EQWhDMUFRd0JDMEYvRHd0QkJBc2lBQ09EQWlBQWNTSUFKSU1DSUFCRkVLRUJRUUFRb2dGQkFSQ2ZBVUVBRUtNQkN5WUFJNE1DSUFCelFmOEJjU0lBSklNQ0lBQkZFS0VCUVFBUW9nRkJBQkNmQVVFQUVLTUJDNHNDQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUVHZ0FVY0VRQ0FBUWFFQlJnMEJBa0FnQUVHaUFXc09EZ01FQlFZSENBa0tDd3dORGc4UUFBc01FQXNqaEFJUXR3RU1FQXNqaFFJUXR3RU1Ed3NqaGdJUXR3RU1EZ3NqaHdJUXR3RU1EUXNqaUFJUXR3RU1EQXNqaVFJUXR3RU1Dd3NqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRcHdFUXR3RU1DZ3NqZ3dJUXR3RU1DUXNqaEFJUXVBRU1DQXNqaFFJUXVBRU1Cd3NqaGdJUXVBRU1CZ3NqaHdJUXVBRU1CUXNqaUFJUXVBRU1CQXNqaVFJUXVBRU1Bd3NqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRcHdFUXVBRU1BZ3NqZ3dJUXVBRU1BUXRCZnc4TFFRUUxKZ0FqZ3dJZ0FISkIvd0Z4SWdBa2d3SWdBRVVRb1FGQkFCQ2lBVUVBRUo4QlFRQVFvd0VMTEFFQmZ5T0RBaUlCSUFCQi93RnhRWDlzSWdBUW9BRWdBU0FBRUxBQklBQWdBV3BGRUtFQlFRRVFvZ0VMaXdJQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFiQUJSd1JBSUFCQnNRRkdEUUVDUUNBQVFiSUJhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPRUFoQzZBUXdRQ3lPRkFoQzZBUXdQQ3lPR0FoQzZBUXdPQ3lPSEFoQzZBUXdOQ3lPSUFoQzZBUXdNQ3lPSkFoQzZBUXdMQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQzZBUXdLQ3lPREFoQzZBUXdKQ3lPRUFoQzdBUXdJQ3lPRkFoQzdBUXdIQ3lPR0FoQzdBUXdHQ3lPSEFoQzdBUXdGQ3lPSUFoQzdBUXdFQ3lPSkFoQzdBUXdEQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQzdBUXdDQ3lPREFoQzdBUXdCQzBGL0R3dEJCQXM3QVFGL0lBQVFkU0lCUVg5R0JIOGdBQkFkQlNBQkMwSC9BWEVnQUVFQmFpSUJFSFVpQUVGL1JnUi9JQUVRSFFVZ0FBdEIvd0Z4UVFoMGNnc01BRUVJRUpvQklBQVF2UUVMTkFBZ0FFR0FBWEZCZ0FGR0VLTUJJQUJCQVhRZ0FFSC9BWEZCQjNaeVFmOEJjU0lBUlJDaEFVRUFFS0lCUVFBUW53RWdBQXN5QUNBQVFRRnhRUUJMRUtNQklBQkJCM1FnQUVIL0FYRkJBWFp5UWY4QmNTSUFSUkNoQVVFQUVLSUJRUUFRbndFZ0FBczRBUUYvSTRvQ1FRUjJRUUZ4SUFCQkFYUnlRZjhCY1NFQklBQkJnQUZ4UVlBQlJoQ2pBU0FCUlJDaEFVRUFFS0lCUVFBUW53RWdBUXM1QVFGL0k0b0NRUVIyUVFGeFFRZDBJQUJCL3dGeFFRRjJjaUVCSUFCQkFYRkJBVVlRb3dFZ0FVVVFvUUZCQUJDaUFVRUFFSjhCSUFFTEtnQWdBRUdBQVhGQmdBRkdFS01CSUFCQkFYUkIvd0Z4SWdCRkVLRUJRUUFRb2dGQkFCQ2ZBU0FBQ3owQkFYOGdBRUgvQVhGQkFYWWlBVUdBQVhJZ0FTQUFRWUFCY1VHQUFVWWJJZ0ZGRUtFQlFRQVFvZ0ZCQUJDZkFTQUFRUUZ4UVFGR0VLTUJJQUVMS3dBZ0FFRVBjVUVFZENBQVFmQUJjVUVFZG5JaUFFVVFvUUZCQUJDaUFVRUFFSjhCUVFBUW93RWdBQXNxQVFGL0lBQkIvd0Z4UVFGMklnRkZFS0VCUVFBUW9nRkJBQkNmQVNBQVFRRnhRUUZHRUtNQklBRUxIZ0JCQVNBQWRDQUJjVUgvQVhGRkVLRUJRUUFRb2dGQkFSQ2ZBU0FCQzhnSUFRVi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRUWR4SWdRRVFDQUVRUUZHRFFFQ1FDQUVRUUpyRGdZREJBVUdCd2dBQ3d3SUN5T0VBaUVCREFjTEk0VUNJUUVNQmdzamhnSWhBUXdGQ3lPSEFpRUJEQVFMSTRnQ0lRRU1Bd3NqaVFJaEFRd0NDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVNFQkRBRUxJNE1DSVFFTEFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUVId0FYRkJCSFVpQlFSQUlBVkJBVVlOQVFKQUlBVkJBbXNPRGdNRUJRWUhDQWtLQ3d3TkRnOFFBQXNNRUFzZ0FFRUhUQVIvSUFFUXZ3RWhBa0VCQlNBQVFROU1CSDhnQVJEQUFTRUNRUUVGUVFBTEN5RUREQThMSUFCQkYwd0VmeUFCRU1FQklRSkJBUVVnQUVFZlRBUi9JQUVRd2dFaEFrRUJCVUVBQ3dzaEF3d09DeUFBUVNkTUJIOGdBUkREQVNFQ1FRRUZJQUJCTDB3RWZ5QUJFTVFCSVFKQkFRVkJBQXNMSVFNTURRc2dBRUUzVEFSL0lBRVF4UUVoQWtFQkJTQUFRVDlNQkg4Z0FSREdBU0VDUVFFRlFRQUxDeUVEREF3TElBQkJ4d0JNQkg5QkFDQUJFTWNCSVFKQkFRVWdBRUhQQUV3RWYwRUJJQUVReHdFaEFrRUJCVUVBQ3dzaEF3d0xDeUFBUWRjQVRBUi9RUUlnQVJESEFTRUNRUUVGSUFCQjN3Qk1CSDlCQXlBQkVNY0JJUUpCQVFWQkFBc0xJUU1NQ2dzZ0FFSG5BRXdFZjBFRUlBRVF4d0VoQWtFQkJTQUFRZThBVEFSL1FRVWdBUkRIQVNFQ1FRRUZRUUFMQ3lFRERBa0xJQUJCOXdCTUJIOUJCaUFCRU1jQklRSkJBUVVnQUVIL0FFd0VmMEVISUFFUXh3RWhBa0VCQlVFQUN3c2hBd3dJQ3lBQVFZY0JUQVIvSUFGQmZuRWhBa0VCQlNBQVFZOEJUQVIvSUFGQmZYRWhBa0VCQlVFQUN3c2hBd3dIQ3lBQVFaY0JUQVIvSUFGQmUzRWhBa0VCQlNBQVFaOEJUQVIvSUFGQmQzRWhBa0VCQlVFQUN3c2hBd3dHQ3lBQVFhY0JUQVIvSUFGQmIzRWhBa0VCQlNBQVFhOEJUQVIvSUFGQlgzRWhBa0VCQlVFQUN3c2hBd3dGQ3lBQVFiY0JUQVIvSUFGQnYzOXhJUUpCQVFVZ0FFRy9BVXdFZnlBQlFmOStjU0VDUVFFRlFRQUxDeUVEREFRTElBQkJ4d0ZNQkg4Z0FVRUJjaUVDUVFFRklBQkJ6d0ZNQkg4Z0FVRUNjaUVDUVFFRlFRQUxDeUVEREFNTElBQkIxd0ZNQkg4Z0FVRUVjaUVDUVFFRklBQkIzd0ZNQkg4Z0FVRUljaUVDUVFFRlFRQUxDeUVEREFJTElBQkI1d0ZNQkg4Z0FVRVFjaUVDUVFFRklBQkI3d0ZNQkg4Z0FVRWdjaUVDUVFFRlFRQUxDeUVEREFFTElBQkI5d0ZNQkg4Z0FVSEFBSEloQWtFQkJTQUFRZjhCVEFSL0lBRkJnQUZ5SVFKQkFRVkJBQXNMSVFNTEFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBRUJFQWdCRUVCUmcwQkFrQWdCRUVDYXc0R0F3UUZCZ2NJQUFzTUNBc2dBaVNFQWd3SEN5QUNKSVVDREFZTElBSWtoZ0lNQlFzZ0FpU0hBZ3dFQ3lBQ0pJZ0NEQU1MSUFJa2lRSU1BZ3RCQVNBRlFRZEtJQVZCQkVnYkJFQWppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWdBaENkQVFzTUFRc2dBaVNEQWd0QkJFRi9JQU1iQzdzRUFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUVIQUFVY0VRQ0FBUWNFQlJnMEJBa0FnQUVIQ0FXc09EZ01TQkFVR0J3Z0pDZ3NNRVEwT0FBc01EZ3NqaWdKQkIzWkJBWEVORVF3T0N5T0xBaEMrQVVILy93TnhJUUFqaXdKQkFtcEIvLzhEY1NTTEFpQUFRWUQrQTNGQkNIVWtoQUlnQUVIL0FYRWtoUUpCQkE4TEk0b0NRUWQyUVFGeERSRU1EZ3NqaWdKQkIzWkJBWEVORUF3TUN5T0xBa0VDYTBILy93TnhJZ0FraXdJZ0FDT0ZBa0gvQVhFamhBSkIvd0Z4UVFoMGNoQ2xBUXdOQ3hDYkFSQ3hBUXdOQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVBSkl3Q0RBc0xJNG9DUVFkMlFRRnhRUUZIRFFvTUJ3c2ppd0lpQUJDK0FVSC8vd054Skl3Q0lBQkJBbXBCLy84RGNTU0xBZ3dKQ3lPS0FrRUhka0VCY1VFQlJnMEhEQW9MRUpzQlFmOEJjUkRJQVNFQUk0d0NRUUZxUWYvL0EzRWtqQUlnQUE4TEk0b0NRUWQyUVFGeFFRRkhEUWdqaXdKQkFtdEIvLzhEY1NJQUpJc0NJQUFqakFKQkFtcEIvLzhEY1JDbEFRd0ZDeENiQVJDeUFRd0dDeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09NQWhDbEFVRUlKSXdDREFRTFFYOFBDeU9MQWlJQUVMNEJRZi8vQTNFa2pBSWdBRUVDYWtILy93TnhKSXNDUVF3UEN5T0xBa0VDYTBILy93TnhJZ0FraXdJZ0FDT01Ba0VDYWtILy93TnhFS1VCQ3hDY0FVSC8vd054Skl3Q0MwRUlEd3NqakFKQkFXcEIvLzhEY1NTTUFrRUVEd3NqakFKQkFtcEIvLzhEY1NTTUFrRU1DNkFFQVFGL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQkIwQUZIQkVBZ0FFSFJBVVlOQVFKQUlBQkIwZ0ZyRGc0REFBUUZCZ2NJQ1FvQUN3QU1EUUFMREEwTEk0b0NRUVIyUVFGeERROE1EUXNqaXdJaUFSQytBVUgvL3dOeElRQWdBVUVDYWtILy93TnhKSXNDSUFCQmdQNERjVUVJZFNTR0FpQUFRZjhCY1NTSEFrRUVEd3NqaWdKQkJIWkJBWEVORHd3TUN5T0tBa0VFZGtFQmNRME9JNHNDUVFKclFmLy9BM0VpQUNTTEFpQUFJNHdDUVFKcVFmLy9BM0VRcFFFTUN3c2ppd0pCQW10Qi8vOERjU0lBSklzQ0lBQWpod0pCL3dGeEk0WUNRZjhCY1VFSWRISVFwUUVNQ3dzUW13RVF0QUVNQ3dzaml3SkJBbXRCLy84RGNTSUFKSXNDSUFBampBSVFwUUZCRUNTTUFnd0pDeU9LQWtFRWRrRUJjVUVCUncwSURBWUxJNHNDSWdBUXZnRkIvLzhEY1NTTUFrRUJKTGdCSUFCQkFtcEIvLzhEY1NTTEFnd0hDeU9LQWtFRWRrRUJjVUVCUmcwRkRBZ0xJNG9DUVFSMlFRRnhRUUZIRFFjaml3SkJBbXRCLy84RGNTSUFKSXNDSUFBampBSkJBbXBCLy84RGNSQ2xBUXdFQ3hDYkFSQzFBUXdGQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVZSkl3Q0RBTUxRWDhQQ3lPTEFpSUFFTDRCUWYvL0EzRWtqQUlnQUVFQ2FrSC8vd054SklzQ1FRd1BDeENjQVVILy93TnhKSXdDQzBFSUR3c2pqQUpCQVdwQi8vOERjU1NNQWtFRUR3c2pqQUpCQW1wQi8vOERjU1NNQWtFTUM3RURBUUYvQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCNEFGSEJFQWdBRUhoQVVZTkFRSkFJQUJCNGdGckRnNERBQUFFQlFZSENBa0FBQUFLQ3dBTERBc0xFSnNCUWY4QmNVR0EvZ05xSTRNQ0VKMEJEQXNMSTRzQ0lnRVF2Z0ZCLy84RGNTRUFJQUZCQW1wQi8vOERjU1NMQWlBQVFZRCtBM0ZCQ0hVa2lBSWdBRUgvQVhFa2lRSkJCQThMSTRVQ1FZRCtBMm9qZ3dJUW5RRkJCQThMSTRzQ1FRSnJRZi8vQTNFaUFDU0xBaUFBSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5RUtVQlFRZ1BDeENiQVJDM0FRd0hDeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09NQWhDbEFVRWdKSXdDUVFnUEN4Q2JBVUVZZEVFWWRTRUFJNHNDSUFCQkFSQ21BU09MQWlBQWFrSC8vd054SklzQ1FRQVFvUUZCQUJDaUFTT01Ba0VCYWtILy93TnhKSXdDUVF3UEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNpU01Ba0VFRHdzUW5BRkIvLzhEY1NPREFoQ2RBU09NQWtFQ2FrSC8vd054Skl3Q1FRUVBDeENiQVJDNEFRd0NDeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09NQWhDbEFVRW9KSXdDUVFnUEMwRi9Ed3NqakFKQkFXcEIvLzhEY1NTTUFrRUVDK2NEQVFGL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCOEFGSEJFQWdBRUh4QVVZTkFRSkFJQUJCOGdGckRnNERCQUFGQmdjSUNRb0xBQUFNRFFBTERBMExFSnNCUWY4QmNVR0EvZ05xRUtjQlFmOEJjU1NEQWd3TkN5T0xBaUlCRUw0QlFmLy9BM0VoQUNBQlFRSnFRZi8vQTNFa2l3SWdBRUdBL2dOeFFRaDFKSU1DSUFCQi93RnhKSW9DREEwTEk0VUNRWUQrQTJvUXB3RkIvd0Z4SklNQ0RBd0xRUUFrdHdFTUN3c2ppd0pCQW10Qi8vOERjU0lBSklzQ0lBQWppZ0pCL3dGeEk0TUNRZjhCY1VFSWRISVFwUUZCQ0E4TEVKc0JFTG9CREFnTEk0c0NRUUpyUWYvL0EzRWlBQ1NMQWlBQUk0d0NFS1VCUVRBa2pBSkJDQThMRUpzQlFSaDBRUmgxSVFBaml3SWhBVUVBRUtFQlFRQVFvZ0VnQVNBQVFRRVFwZ0VnQUNBQmFrSC8vd054SWdCQmdQNERjVUVJZFNTSUFpQUFRZjhCY1NTSkFpT01Ba0VCYWtILy93TnhKSXdDUVFnUEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNpU0xBa0VJRHdzUW5BRkIvLzhEY1JDbkFVSC9BWEVrZ3dJampBSkJBbXBCLy84RGNTU01BZ3dGQzBFQkpMZ0JEQVFMRUpzQkVMc0JEQUlMSTRzQ1FRSnJRZi8vQTNFaUFDU0xBaUFBSTR3Q0VLVUJRVGdrakFKQkNBOExRWDhQQ3lPTUFrRUJha0gvL3dOeEpJd0NDMEVFQzlnQkFRRi9JNHdDUVFGcVFmLy9BM0VoQVNPUUFnUkFJQUZCQVd0Qi8vOERjU0VCQ3lBQkpJd0NBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjhBRnhRUVIxSWdFRVFDQUJRUUZyRGc0QkFnTUVCUVlIQ0FrS0N3d05EZzhMSUFBUXFBRVBDeUFBRUtrQkR3c2dBQkNxQVE4TElBQVFxd0VQQ3lBQUVLd0JEd3NnQUJDdEFROExJQUFRcmdFUEN5QUFFSzhCRHdzZ0FCQ3pBUThMSUFBUXRnRVBDeUFBRUxrQkR3c2dBQkM4QVE4TElBQVF5UUVQQ3lBQUVNb0JEd3NnQUJETEFROExJQUFRekFFTHZnRUJBbjlCQUNTM0FVR1AvZ01RSFVFQklBQjBRWDl6Y1NJQkpMOEJRWS8rQXlBQkVCOGppd0pCQW10Qi8vOERjU1NMQWlPTEFpSUJJNHdDSWdKQi93RnhFQjhnQVVFQmFpQUNRWUQrQTNGQkNIVVFId0pBQWtBQ1FBSkFBa0FnQUFSQUlBQkJBVVlOQVFKQUlBQkJBbXNPQXdNRUJRQUxEQVVMUVFBa3dBRkJ3QUFrakFJTUJBdEJBQ1RCQVVISUFDU01BZ3dEQzBFQUpNSUJRZEFBSkl3Q0RBSUxRUUFrd3dGQjJBQWtqQUlNQVF0QkFDVEVBVUhnQUNTTUFnc0w2UUVCQW44anVBRUVRRUVCSkxjQlFRQWt1QUVMSTdrQkk3OEJjVUVmY1VFQVNnUkFJNDhDUlVFQUk3Y0JHd1IvSThBQlFRQWp1Z0ViQkg5QkFCRE9BVUVCQlNQQkFVRUFJN3NCR3dSL1FRRVF6Z0ZCQVFVandnRkJBQ084QVJzRWYwRUNFTTRCUVFFRkk4TUJRUUFqdlFFYkJIOUJBeERPQVVFQkJTUEVBVUVBSTc0Qkd3Ui9RUVFRemdGQkFRVkJBQXNMQ3dzTEJVRUFDd1JBUVFFamp3SWpqZ0liQkg5QkFDU1BBa0VBSkk0Q1FRQWtrQUpCQUNTUkFrRVlCVUVVQ3lFQUMwRUJJNDhDSTQ0Q0d3UkFRUUFrandKQkFDU09Ba0VBSkpBQ1FRQWtrUUlMSUFBUEMwRUFDN1lCQVFKL1FRRWttQUlqa0FJRVFDT01BaEFkUWY4QmNSRE5BUkNhQVVFQUpJOENRUUFramdKQkFDU1FBa0VBSkpFQ0N4RFBBU0lBUVFCS0JFQWdBQkNhQVF0QkJDRUFRUUFqa1FKRlFRRWpqd0lqamdJYkd3UkFJNHdDRUIxQi93RnhFTTBCSVFBTEk0b0NRZkFCY1NTS0FpQUFRUUJNQkVBZ0FBOExJQUFRbWdFamx3SkJBV29pQVNPVkFrNEVmeU9XQWtFQmFpU1dBaUFCSTVVQ2F3VWdBUXNrbHdJampBSWozUUZHQkVCQkFTVGdBUXNnQUFzRkFDTzJBUXV1QVFFRGZ5QUFRWDlCZ0FnZ0FFRUFTQnNnQUVFQVNoc2hBa0VBSVFBRFFDUGdBVVZCQUNBQlJVRUFRUUFnQUVVZ0F4c2JHd1JBRU5BQlFRQklCRUJCQVNFREJTT05Ba0hRcEFRamdnSjBUZ1JBUVFFaEFBVkJBU0FCSTdZQklBSk9RUUFnQWtGL1Noc2JJUUVMQ3d3QkN3c2dBQVJBSTQwQ1FkQ2tCQ09DQW5SckpJMENRUUFQQ3lBQkJFQkJBUThMSStBQkJFQkJBQ1RnQVVFQ0R3c2pqQUpCQVd0Qi8vOERjU1NNQWtGL0N3Y0FRWDhRMGdFTE5BRUNmd05BSUFGQkFFNUJBQ0FDSUFCSUd3UkFRWDhRMGdFaEFTQUNRUUZxSVFJTUFRc0xJQUZCQUVnRVFDQUJEd3RCQUFzRkFDT1NBZ3NGQUNPVEFnc0ZBQ09VQWd0YkFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FBUkFJQUJCQVVZTkFRSkFJQUJCQW1zT0JnTUVCUVlIQ0FBTERBZ0xJOUlCRHdzajFRRVBDeVBUQVE4TEk5UUJEd3NqMWdFUEN5UFhBUThMSTlnQkR3c2oyUUVQQzBFQUM0Y0JBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBQVJBSUFCQkFVWU5BUUpBSUFCQkFtc09CZ01FQlFZSENBQUxEQWdMSUFGQkFFY2swZ0VNQndzZ0FVRUFSeVRWQVF3R0N5QUJRUUJISk5NQkRBVUxJQUZCQUVjazFBRU1CQXNnQVVFQVJ5VFdBUXdEQ3lBQlFRQkhKTmNCREFJTElBRkJBRWNrMkFFTUFRc2dBVUVBUnlUWkFRc0xVUUVCZjBFQUpKRUNJQUFRMkFGRkJFQkJBU0VCQ3lBQVFRRVEyUUVnQVFSQVFRRkJBVUVBUVFGQkFDQUFRUU5NR3lJQVFRQWoyd0ViR3lBQVJVRUFJOXdCR3hzRVFFRUJKTVFCUVFRUVdnc0xDd2tBSUFCQkFCRFpBUXVhQVFBZ0FFRUFTZ1JBUVFBUTJnRUZRUUFRMndFTElBRkJBRW9FUUVFQkVOb0JCVUVCRU5zQkN5QUNRUUJLQkVCQkFoRGFBUVZCQWhEYkFRc2dBMEVBU2dSQVFRTVEyZ0VGUVFNUTJ3RUxJQVJCQUVvRVFFRUVFTm9CQlVFRUVOc0JDeUFGUVFCS0JFQkJCUkRhQVFWQkJSRGJBUXNnQmtFQVNnUkFRUVlRMmdFRlFRWVEyd0VMSUFkQkFFb0VRRUVIRU5vQkJVRUhFTnNCQ3dzSEFDQUFKTjBCQ3djQVFYOGszUUVMQndBZ0FDVGVBUXNIQUVGL0pONEJDd2NBSUFBazN3RUxCd0JCZnlUZkFRc0ZBQ09EQWdzRkFDT0VBZ3NGQUNPRkFnc0ZBQ09HQWdzRkFDT0hBZ3NGQUNPSUFnc0ZBQ09KQWdzRkFDT0tBZ3NGQUNPTUFnc0ZBQ09MQWdzTEFDT01BaEFkUWY4QmNRc0ZBQ1B0QVF1ckF3RUtmMEdBZ0FKQmdKQUNJK1lCR3lFSVFZQzRBa0dBc0FJajV3RWJJUWtEUUNBRlFZQUNTQVJBUVFBaEJBTkFJQVJCZ0FKSUJFQWdDQ0FGUVFOMVFRVjBJQWxxSUFSQkEzVnFJZ0pCZ0pCK2FpMEFBQkJOSVFZZ0JVRUlieUVCUVFjZ0JFRUliMnNoQjBFQUlRTUNmeUFBUVFCS1FRQWpnUUliQkVBZ0FrR0EwSDVxTFFBQUlRTUxJQU5Cd0FCeEN3UkFRUWNnQVdzaEFRdEJBQ0VDSUFGQkFYUWdCbW9pQmtHQWtINXFRUUZCQUNBRFFRaHhHeUlDUVExMGFpMEFBQ0VLUVFBaEFTQUdRWUdRZm1vZ0FrRU5kR290QUFCQkFTQUhkSEVFUUVFQ0lRRUxJQUZCQVdvZ0FVRUJJQWQwSUFweEd5RUJJQVZCQ0hRZ0JHcEJBMndoQWlBQVFRQktRUUFqZ1FJYkJFQWdBa0dBb1F0cUlnSWdBMEVIY1NBQlFRQVFUaUlCUVI5eFFRTjBPZ0FBSUFKQkFXb2dBVUhnQjNGQkJYVkJBM1E2QUFBZ0FrRUNhaUFCUVlENEFYRkJDblZCQTNRNkFBQUZJQUpCZ0tFTGFpSURJQUZCeC80REVFOGlBVUdBZ1B3SGNVRVFkVG9BQUNBRFFRRnFJQUZCZ1A0RGNVRUlkVG9BQUNBRFFRSnFJQUU2QUFBTElBUkJBV29oQkF3QkN3c2dCVUVCYWlFRkRBRUxDd3ZWQXdFTWZ3TkFJQVJCRjA1RkJFQkJBQ0VEQTBBZ0EwRWZTQVJBUVFGQkFDQURRUTlLSWdjYklRa2dCRUVQYXlBRUlBUkJEMG9pQUJ0QkJIUWlCU0FEUVE5cmFpQURJQVZxSUFjYklRaEJnSkFDUVlDQUFpQUFHeUVLUWNmK0F5RUhRWDhoQmtGL0lRVkJBQ0VCQTBBZ0FVRUlTQVJBUVFBaEFBTkFJQUJCQlVnRVFDQUFRUU4wSUFGcVFRSjBJZ0pCZ3Z3RGFoQWRJQWhHQkVBZ0FrR0QvQU5xRUIwaEFrRUJRUUFnQWtFSWNVRUFJNEVDR3hzZ0NVWUVRRUVJSVFGQkJTRUFJQUlpQlVFUWNRUi9RY24rQXdWQnlQNERDeUVIQ3dzZ0FFRUJhaUVBREFFTEN5QUJRUUZxSVFFTUFRc0xJQVZCQUVoQkFDT0JBaHNFUUVHQXVBSkJnTEFDSStjQkd5RUxRWDhoQUVFQUlRSURRQ0FDUVNCSUJFQkJBQ0VCQTBBZ0FVRWdTQVJBSUFGQkJYUWdDMm9nQW1vaUJrR0FrSDVxTFFBQUlBaEdCRUJCSUNFQ1FTQWhBU0FHSVFBTElBRkJBV29oQVF3QkN3c2dBa0VCYWlFQ0RBRUxDeUFBUVFCT0JIOGdBRUdBMEg1cUxRQUFCVUYvQ3lFR0MwRUFJUUFEUUNBQVFRaElCRUFnQ0NBS0lBbEJBRUVISUFBZ0EwRURkQ0FFUVFOMElBQnFRZmdCUVlDaEZ5QUhJQVlnQlJCUUdpQUFRUUZxSVFBTUFRc0xJQU5CQVdvaEF3d0JDd3NnQkVFQmFpRUVEQUVMQ3d1V0FnRUpmd05BSUFSQkNFNUZCRUJCQUNFQkEwQWdBVUVGU0FSQUlBRkJBM1FnQkdwQkFuUWlBRUdBL0FOcUVCMGFJQUJCZ2Z3RGFoQWRHaUFBUVlMOEEyb1FIU0VDUVFFaEJTUG9BUVJBSUFKQkFtOUJBVVlFUUNBQ1FRRnJJUUlMUVFJaEJRc2dBRUdEL0FOcUVCMGhCa0VBSVFkQkFVRUFJQVpCQ0hGQkFDT0JBaHNiSVFkQnlQNERJUWhCeWY0RFFjaitBeUFHUVJCeEd5RUlRUUFoQUFOQUlBQWdCVWdFUUVFQUlRTURRQ0FEUVFoSUJFQWdBQ0FDYWtHQWdBSWdCMEVBUVFjZ0F5QUVRUU4wSUFGQkJIUWdBMm9nQUVFRGRHcEJ3QUJCZ0tFZ0lBaEJmeUFHRUZBYUlBTkJBV29oQXd3QkN3c2dBRUVCYWlFQURBRUxDeUFCUVFGcUlRRU1BUXNMSUFSQkFXb2hCQXdCQ3dzTEJRQWp4Z0VMQlFBanh3RUxCUUFqeWdFTEdBRUJmeVBNQVNFQUk4c0JCRUFnQUVFRWNpRUFDeUFBQ3pBQkFYOERRQUpBSUFCQi8vOERUZzBBSUFCQmdMWEpCR29nQUJCMk9nQUFJQUJCQVdvaEFBd0JDd3RCQUNUZ0FRc1dBQkFiUHdCQmxBRklCRUJCbEFFL0FHdEFBQm9MQzl3QkFDQUFRWndDU1FSQUR3c2dBRUVRYXlFQUFrQUNRQUpBQWtBQ1FBSkFJQUZCQVVjRVFDQUJRUUpHRFFFQ1FDQUJRUU5yRGdNREJBVUFDd3dGQ3lBQUVCa01CUXNnQUNnQ0JFSC8vLy8vQUhGQkFFMEVRRUVBUVlBQlFjc0FRUkVRQUFBTElBQWdBQ2dDQkVFQmF6WUNCQ0FBRUFjTUJBc2dBQkFLREFNTElBQW9BZ1FpQVVHQWdJQ0FmM0VnQVVFQmFrR0FnSUNBZjNGSEJFQkJBRUdBQVVIV0FFRUdFQUFBQ3lBQUlBRkJBV28yQWdRZ0FVR0FnSUNBQjNFRVFDQUFFQWtMREFJTElBQVFDd3dCQzBFQVFZQUJRZUVBUVJnUUFBQUxDeTBBQWtBQ1FBSkFJQUJCQ0dzb0FnQU9Bd0FBQVFJTER3c2dBQ2dDQUNJQUJFQWdBQ0FCRVBnQkN3OExBQXNEQUFFTEhRQUNRQUpBQWtBam1nSU9BZ0VDQUFzQUMwRUFJUUFMSUFBUTBnRUxCd0FnQUNTYUFnc2xBQUpBQWtBQ1FBSkFJNW9DRGdNQkFnTUFDd0FMUVFFaEFBdEJmeUVCQ3lBQkVOSUJDd3VmQWdZQVFRZ0xMUjRBQUFBQkFBQUFBUUFBQUI0QUFBQitBR3dBYVFCaUFDOEFjZ0IwQUM4QWRBQnNBSE1BWmdBdUFIUUFjd0JCT0FzM0tBQUFBQUVBQUFBQkFBQUFLQUFBQUdFQWJBQnNBRzhBWXdCaEFIUUFhUUJ2QUc0QUlBQjBBRzhBYndBZ0FHd0FZUUJ5QUdjQVpRQkI4QUFMTFI0QUFBQUJBQUFBQVFBQUFCNEFBQUIrQUd3QWFRQmlBQzhBY2dCMEFDOEFjQUIxQUhJQVpRQXVBSFFBY3dCQm9BRUxNeVFBQUFBQkFBQUFBUUFBQUNRQUFBQkpBRzRBWkFCbEFIZ0FJQUJ2QUhVQWRBQWdBRzhBWmdBZ0FISUFZUUJ1QUdjQVpRQkIyQUVMSXhRQUFBQUJBQUFBQVFBQUFCUUFBQUIrQUd3QWFRQmlBQzhBY2dCMEFDNEFkQUJ6QUVHQUFnc1ZBd0FBQUJBQUFBQUFBQUFBRUFBQUFBQUFBQUFRQURNUWMyOTFjbU5sVFdGd2NHbHVaMVZTVENGamIzSmxMMlJwYzNRdlkyOXlaUzUxYm5SdmRXTm9aV1F1ZDJGemJTNXRZWEE9Iik6CiJ1bmRlZmluZWQiIT09dHlwZW9mIHdpbmRvd3x8InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZj9hd2FpdCBJKCJkYXRhOmFwcGxpY2F0aW9uL3dhc207YmFzZTY0LEFHRnpiUUVBQUFBQmlBRVJZQUovZndGL1lBQUFZQU4vZjM4QmYyQUVmMzkvZndCZ0FuOS9BR0FCZndGL1lBRi9BR0FEZjM5L0FHQUtmMzkvZjM5L2YzOS9md0JnQUFGL1lBWi9mMzkvZjM4QVlBZC9mMzkvZjM5L0FYOWdCMzkvZjM5L2YzOEFZQVIvZjM5L0FYOWdDSDkvZjM5L2YzOS9BR0FGZjM5L2YzOEJmMkFOZjM5L2YzOS9mMzkvZjM5L2Z3Ri9BZzBCQTJWdWRnVmhZbTl5ZEFBREEvOEIvUUVFQkFjQkJRQUdCQVlHQmdFRUJ3QUFCZ1VGQndjR0FRWUdCZ0VGQlFFRUFRRUdCZ0VCQVFFQkFRRUdBUUVHQmdFQkFRRUlDUUVCQVFFQkFRRUJCZ1lCQVFFQkFRRUJBUWtKQ1FrUEFBSUFFQXNNQ2dvSEJBWUJBUVlCQVFFQkJnRUJBUUVGQlFBRkJRa0JCUVVBRFFZR0JnRUZDUVVGQkFZR0JnWUdBUVlCQmdFR0FRWUFCZ2tKQmdRRkFBWUJBUVlBQkFjQkFBRUdBUVlHQ1FrRUJBWUVCZ1lHQkFRSEJRVUZCUVVGQlFVRkJBWUdCUVlHQlFZR0JRWUdCUVVGQlFVRkJRVUZCUVVBQlFVRkJRVUZCZ2tKQ1FVSkJRa0pDUVVFQmdZT0JnRUdBUVlCQ1FrSkNRa0pDUWtKQ1FrSkJnRUJDUWtKQ1FFQkJBUUJCUVlBQlFNQkFBRUc3UXViQW44QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQUVFQUMzOEFRWUFJQzM4QVFZQUlDMzhBUVlBSUMzOEFRWUFRQzM4QVFZQ0FBUXQvQUVHQWtBRUxmd0JCZ0lBQ0MzOEFRWUNRQXd0L0FFR0FnQUVMZndCQmdCQUxmd0JCZ0lBRUMzOEFRWUNRQkF0L0FFR0FBUXQvQUVHQWtRUUxmd0JCZ0xnQkMzOEFRWURKQlF0L0FFR0EyQVVMZndCQmdLRUxDMzhBUVlDQURBdC9BRUdBb1JjTGZ3QkJnSUFKQzM4QVFZQ2hJQXQvQUVHQStBQUxmd0JCZ0pBRUMzOEFRWUNKSFF0L0FFR0FtU0VMZndCQmdJQUlDMzhBUVlDWktRdC9BRUdBZ0FnTGZ3QkJnSmt4QzM4QVFZQ0FDQXQvQUVHQW1Ua0xmd0JCZ0lBSUMzOEFRWUNad1FBTGZ3QkJnSUFJQzM4QVFZQ1p5UUFMZndCQmdJQUlDMzhBUVlDWjBRQUxmd0JCZ0JRTGZ3QkJnSzNSQUF0L0FFR0FpUGdEQzM4QVFZQzF5UVFMZndCQi8vOERDMzhBUVFBTGZ3QkJnTFhOQkF0L0FFR1VBUXQvQVVFQUMzOEJRUUVMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFYOExmd0ZCZnd0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVQQzM4QlFROExmd0ZCRHd0L0FVRVBDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQi93QUxmd0ZCL3dBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQVF0L0FVRUJDMzhCUVFFTGZ3RkJBUXQvQVVFQkMzOEJRUUVMZndGQkFRdC9BVUVCQzM4QlFRRUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQmZ3dC9BVUYvQzM4QlFYOExmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBUXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBUXQvQVVFQkMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRWUNvMXJrSEMzOEJRUUFMZndGQkFBdC9BVUdBcU5hNUJ3dC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FFR0FBZ3QvQVVFQUN3ZndFR1VHYldWdGIzSjVBZ0FIWDE5aGJHeHZZd0FRQ0Y5ZmNtVjBZV2x1QUJJSlgxOXlaV3hsWVhObEFCb0pYMTlqYjJ4c1pXTjBBQXdMWDE5eWRIUnBYMkpoYzJVRG1RSUdZMjl1Wm1sbkFEUU9hR0Z6UTI5eVpWTjBZWEowWldRQU5RbHpZWFpsVTNSaGRHVUFQQWxzYjJGa1UzUmhkR1VBUndWcGMwZENRd0JJRW1kbGRGTjBaWEJ6VUdWeVUzUmxjRk5sZEFCSkMyZGxkRk4wWlhCVFpYUnpBRW9JWjJWMFUzUmxjSE1BU3hWbGVHVmpkWFJsVFhWc2RHbHdiR1ZHY21GdFpYTUExQUVNWlhobFkzVjBaVVp5WVcxbEFOTUJDVjlmYzJWMFlYSm5Zd0Q4QVJsbGVHVmpkWFJsUm5KaGJXVkJibVJEYUdWamEwRjFaR2x2QVBzQkZXVjRaV04xZEdWVmJuUnBiRU52Ym1ScGRHbHZiZ0Q5QVF0bGVHVmpkWFJsVTNSbGNBRFFBUlJuWlhSRGVXTnNaWE5RWlhKRGVXTnNaVk5sZEFEVkFReG5aWFJEZVdOc1pWTmxkSE1BMWdFSloyVjBRM2xqYkdWekFOY0JEbk5sZEVwdmVYQmhaRk4wWVhSbEFOd0JIMmRsZEU1MWJXSmxjazltVTJGdGNHeGxjMGx1UVhWa2FXOUNkV1ptWlhJQTBRRVFZMnhsWVhKQmRXUnBiMEoxWm1abGNnQkRISE5sZEUxaGJuVmhiRU52Ykc5eWFYcGhkR2x2YmxCaGJHVjBkR1VBSWhkWFFWTk5RazlaWDAxRlRVOVNXVjlNVDBOQlZFbFBUZ014RTFkQlUwMUNUMWxmVFVWTlQxSlpYMU5KV2tVRE1oSlhRVk5OUWs5WlgxZEJVMDFmVUVGSFJWTURNeDVCVTFORlRVSk1XVk5EVWtsUVZGOU5SVTFQVWxsZlRFOURRVlJKVDA0REJScEJVMU5GVFVKTVdWTkRVa2xRVkY5TlJVMVBVbGxmVTBsYVJRTUdGbGRCVTAxQ1QxbGZVMVJCVkVWZlRFOURRVlJKVDA0REJ4SlhRVk5OUWs5WlgxTlVRVlJGWDFOSldrVURDQ0JIUVUxRlFrOVpYMGxPVkVWU1RrRk1YMDFGVFU5U1dWOU1UME5CVkVsUFRnTVBIRWRCVFVWQ1QxbGZTVTVVUlZKT1FVeGZUVVZOVDFKWlgxTkpXa1VERUJKV1NVUkZUMTlTUVUxZlRFOURRVlJKVDA0RENRNVdTVVJGVDE5U1FVMWZVMGxhUlFNS0VWZFBVa3RmVWtGTlgweFBRMEZVU1U5T0F3c05WMDlTUzE5U1FVMWZVMGxhUlFNTUprOVVTRVZTWDBkQlRVVkNUMWxmU1U1VVJWSk9RVXhmVFVWTlQxSlpYMHhQUTBGVVNVOU9BdzBpVDFSSVJWSmZSMEZOUlVKUFdWOUpUbFJGVWs1QlRGOU5SVTFQVWxsZlUwbGFSUU1PR0VkU1FWQklTVU5UWDA5VlZGQlZWRjlNVDBOQlZFbFBUZ01kRkVkU1FWQklTVU5UWDA5VlZGQlZWRjlUU1ZwRkF4NFVSMEpEWDFCQlRFVlVWRVZmVEU5RFFWUkpUMDRERVJCSFFrTmZVRUZNUlZSVVJWOVRTVnBGQXhJWVFrZGZVRkpKVDFKSlZGbGZUVUZRWDB4UFEwRlVTVTlPQXhNVVFrZGZVRkpKVDFKSlZGbGZUVUZRWDFOSldrVURGQTVHVWtGTlJWOU1UME5CVkVsUFRnTVZDa1pTUVUxRlgxTkpXa1VERmhkQ1FVTkxSMUpQVlU1RVgwMUJVRjlNVDBOQlZFbFBUZ01YRTBKQlEwdEhVazlWVGtSZlRVRlFYMU5KV2tVREdCSlVTVXhGWDBSQlZFRmZURTlEUVZSSlQwNERHUTVVU1V4RlgwUkJWRUZmVTBsYVJRTWFFazlCVFY5VVNVeEZVMTlNVDBOQlZFbFBUZ01iRGs5QlRWOVVTVXhGVTE5VFNWcEZBeHdWUVZWRVNVOWZRbFZHUmtWU1gweFBRMEZVU1U5T0F5Y1JRVlZFU1U5ZlFsVkdSa1ZTWDFOSldrVURLQmxEU0VGT1RrVk1YekZmUWxWR1JrVlNYMHhQUTBGVVNVOU9BeDhWUTBoQlRrNUZURjh4WDBKVlJrWkZVbDlUU1ZwRkF5QVpRMGhCVGs1RlRGOHlYMEpWUmtaRlVsOU1UME5CVkVsUFRnTWhGVU5JUVU1T1JVeGZNbDlDVlVaR1JWSmZVMGxhUlFNaUdVTklRVTVPUlV4Zk0xOUNWVVpHUlZKZlRFOURRVlJKVDA0REl4VkRTRUZPVGtWTVh6TmZRbFZHUmtWU1gxTkpXa1VESkJsRFNFRk9Ua1ZNWHpSZlFsVkdSa1ZTWDB4UFEwRlVTVTlPQXlVVlEwaEJUazVGVEY4MFgwSlZSa1pGVWw5VFNWcEZBeVlXUTBGU1ZGSkpSRWRGWDFKQlRWOU1UME5CVkVsUFRnTXBFa05CVWxSU1NVUkhSVjlTUVUxZlUwbGFSUU1xRVVKUFQxUmZVazlOWDB4UFEwRlVTVTlPQXlzTlFrOVBWRjlTVDAxZlUwbGFSUU1zRmtOQlVsUlNTVVJIUlY5U1QwMWZURTlEUVZSSlQwNERMUkpEUVZKVVVrbEVSMFZmVWs5TlgxTkpXa1VETGgxRVJVSlZSMTlIUVUxRlFrOVpYMDFGVFU5U1dWOU1UME5CVkVsUFRnTXZHVVJGUWxWSFgwZEJUVVZDVDFsZlRVVk5UMUpaWDFOSldrVURNQ0ZuWlhSWFlYTnRRbTk1VDJabWMyVjBSbkp2YlVkaGJXVkNiM2xQWm1aelpYUUFIQnR6WlhSUWNtOW5jbUZ0UTI5MWJuUmxja0p5WldGcmNHOXBiblFBM1FFZGNtVnpaWFJRY205bmNtRnRRMjkxYm5SbGNrSnlaV0ZyY0c5cGJuUUEzZ0VaYzJWMFVtVmhaRWRpVFdWdGIzSjVRbkpsWVd0d2IybHVkQURmQVJ0eVpYTmxkRkpsWVdSSFlrMWxiVzl5ZVVKeVpXRnJjRzlwYm5RQTRBRWFjMlYwVjNKcGRHVkhZazFsYlc5eWVVSnlaV0ZyY0c5cGJuUUE0UUVjY21WelpYUlhjbWwwWlVkaVRXVnRiM0o1UW5KbFlXdHdiMmx1ZEFEaUFReG5aWFJTWldkcGMzUmxja0VBNHdFTVoyVjBVbVZuYVhOMFpYSkNBT1FCREdkbGRGSmxaMmx6ZEdWeVF3RGxBUXhuWlhSU1pXZHBjM1JsY2tRQTVnRU1aMlYwVW1WbmFYTjBaWEpGQU9jQkRHZGxkRkpsWjJsemRHVnlTQURvQVF4blpYUlNaV2RwYzNSbGNrd0E2UUVNWjJWMFVtVm5hWE4wWlhKR0FPb0JFV2RsZEZCeWIyZHlZVzFEYjNWdWRHVnlBT3NCRDJkbGRGTjBZV05yVUc5cGJuUmxjZ0RzQVJsblpYUlBjR052WkdWQmRGQnliMmR5WVcxRGIzVnVkR1Z5QU8wQkJXZGxkRXhaQU80QkhXUnlZWGRDWVdOclozSnZkVzVrVFdGd1ZHOVhZWE50VFdWdGIzSjVBTzhCR0dSeVlYZFVhV3hsUkdGMFlWUnZWMkZ6YlUxbGJXOXllUUR3QVJOa2NtRjNUMkZ0Vkc5WFlYTnRUV1Z0YjNKNUFQRUJCbWRsZEVSSlZnRHlBUWRuWlhSVVNVMUJBUE1CQm1kbGRGUk5RUUQwQVFablpYUlVRVU1BOVFFVGRYQmtZWFJsUkdWaWRXZEhRazFsYlc5eWVRRDJBUWdDOXdFS2hac0MvUUdnQWdFRWZ5QUJLQUlBSWdOQkFYRkZCRUJCQUVFWVFaVUNRUTBRQUFBTElBTkJmSEVpQWtFUVR3Ui9JQUpCOFAvLy93TkpCVUVBQzBVRVFFRUFRUmhCbHdKQkRSQUFBQXNnQWtHQUFra0VmeUFDUVFSMklRSkJBQVVnQWtFZklBSm5heUlEUVFScmRrRVFjeUVDSUFOQkIyc0xJZ05CRjBrRWZ5QUNRUkJKQlVFQUMwVUVRRUVBUVJoQnBBSkJEUkFBQUFzZ0FTZ0NGQ0VFSUFFb0FoQWlCUVJBSUFVZ0JEWUNGQXNnQkFSQUlBUWdCVFlDRUFzZ0EwRUVkQ0FDYWtFQ2RDQUFhaWdDWUNBQlJnUkFJQU5CQkhRZ0FtcEJBblFnQUdvZ0JEWUNZQ0FFUlFSQUlBTkJBblFnQUdvZ0EwRUNkQ0FBYWlnQ0JFRUJJQUowUVg5emNTSUJOZ0lFSUFGRkJFQWdBQ0FBS0FJQVFRRWdBM1JCZjNOeE5nSUFDd3NMQy8wREFRWi9JQUZGQkVCQkFFRVlRYzBCUVEwUUFBQUxJQUVvQWdBaUEwRUJjVVVFUUVFQVFSaEJ6d0ZCRFJBQUFBc2dBVUVRYWlBQktBSUFRWHh4YWlJRUtBSUFJZ1ZCQVhFRVFDQURRWHh4UVJCcUlBVkJmSEZxSWdKQjhQLy8vd05KQkVBZ0FDQUVFQUVnQVNBRFFRTnhJQUp5SWdNMkFnQWdBVUVRYWlBQktBSUFRWHh4YWlJRUtBSUFJUVVMQ3lBRFFRSnhCRUFnQVVFRWF5Z0NBQ0lDS0FJQUlnWkJBWEZGQkVCQkFFRVlRZVFCUVE4UUFBQUxJQVpCZkhGQkVHb2dBMEY4Y1dvaUIwSHcvLy8vQTBrRWZ5QUFJQUlRQVNBQ0lBWkJBM0VnQjNJaUF6WUNBQ0FDQlNBQkN5RUJDeUFFSUFWQkFuSTJBZ0FnQTBGOGNTSUNRUkJQQkg4Z0FrSHcvLy8vQTBrRlFRQUxSUVJBUVFCQkdFSHpBVUVORUFBQUN5QUVJQUZCRUdvZ0FtcEhCRUJCQUVFWVFmUUJRUTBRQUFBTElBUkJCR3NnQVRZQ0FDQUNRWUFDU1FSL0lBSkJCSFloQkVFQUJTQUNRUjhnQW1kcklnSkJCR3QyUVJCeklRUWdBa0VIYXdzaUEwRVhTUVIvSUFSQkVFa0ZRUUFMUlFSQVFRQkJHRUdFQWtFTkVBQUFDeUFEUVFSMElBUnFRUUowSUFCcUtBSmdJUUlnQVVFQU5nSVFJQUVnQWpZQ0ZDQUNCRUFnQWlBQk5nSVFDeUFEUVFSMElBUnFRUUowSUFCcUlBRTJBbUFnQUNBQUtBSUFRUUVnQTNSeU5nSUFJQU5CQW5RZ0FHb2dBMEVDZENBQWFpZ0NCRUVCSUFSMGNqWUNCQXZMQVFFQ2Z5QUNRUTl4UlVFQUlBRkJEM0ZGUVFBZ0FTQUNUUnNiUlFSQVFRQkJHRUdDQTBFRUVBQUFDeUFBS0FLZ0RDSURCRUFnQVNBRFFSQnFTUVJBUVFCQkdFR01BMEVQRUFBQUN5QUJRUkJySUFOR0JFQWdBeWdDQUNFRUlBRkJFR3NoQVFzRklBRWdBRUdrREdwSkJFQkJBRUVZUVpnRFFRUVFBQUFMQ3lBQ0lBRnJJZ0pCTUVrRVFBOExJQUVnQkVFQ2NTQUNRU0JyUVFGeWNqWUNBQ0FCUVFBMkFoQWdBVUVBTmdJVUlBRWdBbXBCRUdzaUFrRUNOZ0lBSUFBZ0FqWUNvQXdnQUNBQkVBSUxsd0VCQW45QkFUOEFJZ0JLQkg5QkFTQUFhMEFBUVFCSUJVRUFDd1JBQUF0Qm9BSkJBRFlDQUVIQURrRUFOZ0lBUVFBaEFBTkFBa0FnQUVFWFR3MEFJQUJCQW5SQm9BSnFRUUEyQWdSQkFDRUJBMEFDUUNBQlFSQlBEUUFnQUVFRWRDQUJha0VDZEVHZ0FtcEJBRFlDWUNBQlFRRnFJUUVNQVFzTElBQkJBV29oQUF3QkN3dEJvQUpCMEE0L0FFRVFkQkFEUWFBQ0pBQUxMUUFnQUVIdy8vLy9BMDhFUUVISUFFRVlRY2tEUVIwUUFBQUxJQUJCRDJwQmNIRWlBRUVRSUFCQkVFc2JDOTBCQVFGL0lBRkJnQUpKQkg4Z0FVRUVkaUVCUVFBRklBRkIrUC8vL3dGSkJFQkJBVUViSUFGbmEzUWdBV3BCQVdzaEFRc2dBVUVmSUFGbmF5SUNRUVJyZGtFUWN5RUJJQUpCQjJzTElnSkJGMGtFZnlBQlFSQkpCVUVBQzBVRVFFRUFRUmhCMGdKQkRSQUFBQXNnQWtFQ2RDQUFhaWdDQkVGL0lBRjBjU0lCQkg4Z0FXZ2dBa0VFZEdwQkFuUWdBR29vQW1BRklBQW9BZ0JCZnlBQ1FRRnFkSEVpQVFSL0lBRm9JZ0ZCQW5RZ0FHb29BZ1FpQWtVRVFFRUFRUmhCM3dKQkVSQUFBQXNnQW1nZ0FVRUVkR3BCQW5RZ0FHb29BbUFGUVFBTEN3czdBUUYvSUFBb0FnUWlBVUdBZ0lDQUIzRkJnSUNBZ0FGSEJFQWdBQ0FCUWYvLy8vOTRjVUdBZ0lDQUFYSTJBZ1FnQUVFUWFrRUNFUGtCQ3dzdEFRRi9JQUVvQWdBaUFrRUJjUVJBUVFCQkdFR3pCRUVDRUFBQUN5QUJJQUpCQVhJMkFnQWdBQ0FCRUFJTEhRQWdBQ0FBS0FJRVFmLy8vLzk0Y1RZQ0JDQUFRUkJxUVFRUStRRUxUd0VCZnlBQUtBSUVJZ0ZCZ0lDQWdBZHhRWUNBZ0lBQlJnUkFJQUZCLy8vLy93QnhRUUJMQkVBZ0FCQUpCU0FBSUFGQi8vLy8vM2h4UVlDQWdJQUNjallDQkNBQVFSQnFRUU1RK1FFTEN3dEtBUUYvSUFBb0FnUWlBVUdBZ0lDQUIzRkJnSUNBZ0FKR0JIOGdBVUdBZ0lDQWVIRkZCVUVBQ3dSQUlBQWdBVUgvLy8vL2VIRTJBZ1FnQUVFUWFrRUZFUGtCSXdBZ0FCQUlDd3Z6QVFFR2Z5TUNJZ1VpQWlFREl3TWhBQU5BQWtBZ0F5QUFUdzBBSUFNb0FnQWlCQ2dDQkNJQlFZQ0FnSUFIY1VHQWdJQ0FBMFlFZnlBQlFmLy8vLzhBY1VFQVN3VkJBQXNFUUNBRUVBY2dBaUFFTmdJQUlBSkJCR29oQWdWQkFDQUJRZi8vLy84QWNVVWdBVUdBZ0lDQUIzRWJCRUFqQUNBRUVBZ0ZJQVFnQVVILy8vLy9CM0UyQWdRTEN5QURRUVJxSVFNTUFRc0xJQUlrQXlBRklRQURRQUpBSUFBZ0FrOE5BQ0FBS0FJQUVBb2dBRUVFYWlFQURBRUxDeUFGSVFBRFFBSkFJQUFnQWs4TkFDQUFLQUlBSWdFZ0FTZ0NCRUgvLy8vL0IzRTJBZ1FnQVJBTElBQkJCR29oQUF3QkN3c2dCU1FEQzI4QkFYOC9BQ0lDSUFGQitQLy8vd0ZKQkg5QkFVRWJJQUZuYTNSQkFXc2dBV29GSUFFTFFSQWdBQ2dDb0F3Z0FrRVFkRUVRYTBkMGFrSC8vd05xUVlDQWZIRkJFSFlpQVNBQ0lBRktHMEFBUVFCSUJFQWdBVUFBUVFCSUJFQUFDd3NnQUNBQ1FSQjBQd0JCRUhRUUF3dUhBUUVDZnlBQktBSUFJUU1nQWtFUGNRUkFRUUJCR0VIdEFrRU5FQUFBQ3lBRFFYeHhJQUpySWdSQklFOEVRQ0FCSUFOQkFuRWdBbkkyQWdBZ0FVRVFhaUFDYWlJQklBUkJFR3RCQVhJMkFnQWdBQ0FCRUFJRklBRWdBMEYrY1RZQ0FDQUJRUkJxSUFFb0FnQkJmSEZxSUFGQkVHb2dBU2dDQUVGOGNXb29BZ0JCZlhFMkFnQUxDNUVCQVFKL0l3RUVRRUVBUVJoQjVnTkJEUkFBQUFzZ0FDQUJFQVVpQXhBR0lnSkZCRUJCQVNRQkVBeEJBQ1FCSUFBZ0F4QUdJZ0pGQkVBZ0FDQURFQTBnQUNBREVBWWlBa1VFUUVFQVFSaEI4Z05CRXhBQUFBc0xDeUFDS0FJQVFYeHhJQU5KQkVCQkFFRVlRZm9EUVEwUUFBQUxJQUpCQURZQ0JDQUNJQUUyQWd3Z0FDQUNFQUVnQUNBQ0lBTVFEaUFDQ3lJQkFYOGpBQ0lDQkg4Z0FnVVFCQ01BQ3lBQUVBOGlBQ0FCTmdJSUlBQkJFR29MVVFFQmZ5QUFLQUlFSWdGQmdJQ0FnSDl4SUFGQkFXcEJnSUNBZ0g5eFJ3UkFRUUJCZ0FGQjZBQkJBaEFBQUFzZ0FDQUJRUUZxTmdJRUlBQW9BZ0JCQVhFRVFFRUFRWUFCUWVzQVFRMFFBQUFMQ3hRQUlBQkJuQUpMQkVBZ0FFRVFheEFSQ3lBQUN5Y0FJQUJCZ0FJb0FnQkxCRUJCc0FGQjZBRkJGa0ViRUFBQUN5QUFRUU4wUVlRQ2FpZ0NBQXZFREFFRGZ3TkFJQUZCQTNGQkFDQUNHd1JBSUFBaUEwRUJhaUVBSUFFaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUNBQ1FRRnJJUUlNQVFzTElBQkJBM0ZGQkVBRFFDQUNRUkJKUlFSQUlBQWdBU2dDQURZQ0FDQUFRUVJxSUFGQkJHb29BZ0EyQWdBZ0FFRUlhaUFCUVFocUtBSUFOZ0lBSUFCQkRHb2dBVUVNYWlnQ0FEWUNBQ0FCUVJCcUlRRWdBRUVRYWlFQUlBSkJFR3NoQWd3QkN3c2dBa0VJY1FSQUlBQWdBU2dDQURZQ0FDQUFRUVJxSUFGQkJHb29BZ0EyQWdBZ0FVRUlhaUVCSUFCQkNHb2hBQXNnQWtFRWNRUkFJQUFnQVNnQ0FEWUNBQ0FCUVFScUlRRWdBRUVFYWlFQUN5QUNRUUp4QkVBZ0FDQUJMd0VBT3dFQUlBRkJBbW9oQVNBQVFRSnFJUUFMSUFKQkFYRUVRQ0FBSUFFdEFBQTZBQUFMRHdzZ0FrRWdUd1JBQWtBQ1FBSkFJQUJCQTNFaUEwRUJSd1JBSUFOQkFrWU5BU0FEUVFOR0RRSU1Bd3NnQVNnQ0FDRUZJQUFnQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBMEVCYWlFQUlBRkJBV29pQkVFQmFpRUJJQU1nQkMwQUFEb0FBQ0FDUVFOcklRSURRQ0FDUVJGSlJRUkFJQUFnQVVFQmFpZ0NBQ0lEUVFoMElBVkJHSFp5TmdJQUlBQkJCR29nQTBFWWRpQUJRUVZxS0FJQUlnTkJDSFJ5TmdJQUlBQkJDR29nQTBFWWRpQUJRUWxxS0FJQUlnTkJDSFJ5TmdJQUlBQkJER29nQVVFTmFpZ0NBQ0lGUVFoMElBTkJHSFp5TmdJQUlBRkJFR29oQVNBQVFSQnFJUUFnQWtFUWF5RUNEQUVMQ3d3Q0N5QUJLQUlBSVFVZ0FDQUJMUUFBT2dBQUlBQkJBV29pQTBFQmFpRUFJQUZCQVdvaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUNBQ1FRSnJJUUlEUUNBQ1FSSkpSUVJBSUFBZ0FVRUNhaWdDQUNJRFFSQjBJQVZCRUhaeU5nSUFJQUJCQkdvZ0EwRVFkaUFCUVFacUtBSUFJZ05CRUhSeU5nSUFJQUJCQ0dvZ0EwRVFkaUFCUVFwcUtBSUFJZ05CRUhSeU5nSUFJQUJCREdvZ0FVRU9haWdDQUNJRlFSQjBJQU5CRUhaeU5nSUFJQUZCRUdvaEFTQUFRUkJxSVFBZ0FrRVFheUVDREFFTEN3d0JDeUFCS0FJQUlRVWdBQ0lEUVFGcUlRQWdBU0lFUVFGcUlRRWdBeUFFTFFBQU9nQUFJQUpCQVdzaEFnTkFJQUpCRTBsRkJFQWdBQ0FCUVFOcUtBSUFJZ05CR0hRZ0JVRUlkbkkyQWdBZ0FFRUVhaUFEUVFoMklBRkJCMm9vQWdBaUEwRVlkSEkyQWdBZ0FFRUlhaUFEUVFoMklBRkJDMm9vQWdBaUEwRVlkSEkyQWdBZ0FFRU1haUFCUVE5cUtBSUFJZ1ZCR0hRZ0EwRUlkbkkyQWdBZ0FVRVFhaUVCSUFCQkVHb2hBQ0FDUVJCcklRSU1BUXNMQ3dzZ0FrRVFjUVJBSUFBZ0FTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJQUlBRkJBV29pQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlBSUFGQkFXb2lBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSUFJQUZCQVdvaUFTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJQUlBRkJBV29pQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlEUVFGcUlRQWdBVUVCYWlJRVFRRnFJUUVnQXlBRUxRQUFPZ0FBQ3lBQ1FRaHhCRUFnQUNBQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlBSUFGQkFXb2lBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSUFJQUZCQVdvaUFTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQTBFQmFpRUFJQUZCQVdvaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUFzZ0FrRUVjUVJBSUFBZ0FTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJRFFRRnFJUUFnQVVFQmFpSUVRUUZxSVFFZ0F5QUVMUUFBT2dBQUN5QUNRUUp4QkVBZ0FDQUJMUUFBT2dBQUlBQkJBV29pQTBFQmFpRUFJQUZCQVdvaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUFzZ0FrRUJjUVJBSUFBZ0FTMEFBRG9BQUFzTDBnSUJBbjhDUUNBQ0lRTWdBQ0FCUmcwQVFRRWdBQ0FEYWlBQlRTQUJJQU5xSUFCTkd3UkFJQUFnQVNBREVCUU1BUXNnQUNBQlNRUkFJQUZCQjNFZ0FFRUhjVVlFUUFOQUlBQkJCM0VFUUNBRFJRMEVJQU5CQVdzaEF5QUFJZ0pCQVdvaEFDQUJJZ1JCQVdvaEFTQUNJQVF0QUFBNkFBQU1BUXNMQTBBZ0EwRUlTVVVFUUNBQUlBRXBBd0EzQXdBZ0EwRUlheUVESUFCQkNHb2hBQ0FCUVFocUlRRU1BUXNMQ3dOQUlBTUVRQ0FBSWdKQkFXb2hBQ0FCSWdSQkFXb2hBU0FDSUFRdEFBQTZBQUFnQTBFQmF5RUREQUVMQ3dVZ0FVRUhjU0FBUVFkeFJnUkFBMEFnQUNBRGFrRUhjUVJBSUFORkRRUWdBQ0FEUVFGcklnTnFJQUVnQTJvdEFBQTZBQUFNQVFzTEEwQWdBMEVJU1VVRVFDQUFJQU5CQ0dzaUEyb2dBU0FEYWlrREFEY0RBQXdCQ3dzTEEwQWdBd1JBSUFBZ0EwRUJheUlEYWlBQklBTnFMUUFBT2dBQURBRUxDd3NMQ3pnQUl3QkZCRUJCQUVFWVFkRUVRUTBRQUFBTElBQkJEM0ZGUVFBZ0FCdEZCRUJCQUVFWVFkSUVRUUlRQUFBTEl3QWdBRUVRYXhBSUMwVUJCSDhqQXlNQ0lnRnJJZ0pCQVhRaUFFR0FBaUFBUVlBQ1N4c2lBMEVBRUJBaUFDQUJJQUlRRlNBQkJFQWdBUkFXQ3lBQUpBSWdBQ0FDYWlRRElBQWdBMm9rQkFzaUFRRi9Jd01pQVNNRVR3UkFFQmNqQXlFQkN5QUJJQUEyQWdBZ0FVRUVhaVFEQzdZQkFRSi9JQUFvQWdRaUFrSC8vLy8vQUhFaEFTQUFLQUlBUVFGeEJFQkJBRUdBQVVIekFFRU5FQUFBQ3lBQlFRRkdCRUFnQUVFUWFrRUJFUGtCSUFKQmdJQ0FnSGh4QkVBZ0FFR0FnSUNBZURZQ0JBVWpBQ0FBRUFnTEJTQUJRUUJOQkVCQkFFR0FBVUg4QUVFUEVBQUFDeUFBS0FJSUVCTkJFSEVFUUNBQUlBRkJBV3NnQWtHQWdJQ0FmM0Z5TmdJRUJTQUFJQUZCQVd0QmdJQ0FnSHR5TmdJRUlBSkJnSUNBZ0hoeFJRUkFJQUFRR0FzTEN3c1NBQ0FBUVp3Q1N3UkFJQUJCRUdzUUdRc0xVd0JCOHVYTEJ5UStRYURCZ2dVa1AwSFlzT0VDSkVCQmlKQWdKRUZCOHVYTEJ5UkNRYURCZ2dVa1EwSFlzT0VDSkVSQmlKQWdKRVZCOHVYTEJ5UkdRYURCZ2dVa1IwSFlzT0VDSkVoQmlKQWdKRWtMbHdJQkFYOENRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQkJESFVpQVFSQUlBRkJBVVlOQVFKQUlBRkJBbXNPREFJQ0F3TURBd1FFQlFVR0J3QUxEQWNMSTRBQ0JFQWpnUUlFUUNBQVFZQUNTQTBKSUFCQmdCSklRUUFnQUVIL0Ewb2JEUWtGUVFBZ0FFR0FBa2dqZ1FJYkRRa0xDd3NnQUVHQXJkRUFhZzhMSUFCQkFTUHlBU0lBUVFBZ0FFVWorZ0ViRzBFT2RHcEJnSzNRQUdvUEN5QUFRWUNRZm1vamdRSUVmMEhQL2dNUUhVRUJjUVZCQUF0QkRYUnFEd3NnQUNQekFVRU5kR3BCZ05uR0FHb1BDeUFBUVlDUWZtb1BDMEVBSVFFQ2Z5T0JBZ1JBUWZEK0F4QWRRUWR4SVFFTElBRkJBVWdMQkg5QkFRVWdBUXRCREhRZ0FHcEJnUEI5YWc4TElBQkJnRkJxRHdzZ0FFR0FtZEVBYWdzSkFDQUFFQnd0QUFBTHd3RUFRUUFrZ2dKQkFDU0RBa0VBSklRQ1FRQWtoUUpCQUNTR0FrRUFKSWNDUVFBa2lBSkJBQ1NKQWtFQUpJb0NRUUFraXdKQkFDU01Ba0VBSkkwQ1FRQWtqZ0pCQUNTUEFrRUFKSkFDUVFBa2tRSWpnQUlFUUE4TEk0RUNCRUJCRVNTREFrR0FBU1NLQWtFQUpJUUNRUUFraFFKQi93RWtoZ0pCMWdBa2h3SkJBQ1NJQWtFTkpJa0NCVUVCSklNQ1FiQUJKSW9DUVFBa2hBSkJFeVNGQWtFQUpJWUNRZGdCSkljQ1FRRWtpQUpCelFBa2lRSUxRWUFDSkl3Q1FmNy9BeVNMQWdzTEFDQUFFQndnQVRvQUFBdHpBUUYvUVFBazlBRkJBU1QxQVVISEFoQWRJZ0JGSlBZQklBQkJBMHhCQUNBQVFRRk9HeVQzQVNBQVFRWk1RUUFnQUVFRlRoc2srQUVnQUVFVFRFRUFJQUJCRDA0YkpQa0JJQUJCSGt4QkFDQUFRUmxPR3lUNkFVRUJKUElCUVFBazh3RkJ6LzREUVFBUUgwSHcvZ05CQVJBZkN5OEFRZEgrQTBIL0FSQWZRZEwrQTBIL0FSQWZRZFArQTBIL0FSQWZRZFQrQTBIL0FSQWZRZFgrQTBIL0FSQWZDN0FJQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFBRVFDQUFRUUZHRFFFQ1FDQUFRUUpyRGdzREJBVUdCd2dKQ2dzTURRQUxEQTBMUWZMbHl3Y2tQa0dnd1lJRkpEOUIyTERoQWlSQVFZaVFJQ1JCUWZMbHl3Y2tRa0dnd1lJRkpFTkIyTERoQWlSRVFZaVFJQ1JGUWZMbHl3Y2tSa0dnd1lJRkpFZEIyTERoQWlSSVFZaVFJQ1JKREF3TFFmLy8vd2NrUGtIajJ2NEhKRDlCZ09LUUJDUkFRUUFrUVVILy8vOEhKRUpCNDlyK0J5UkRRWURpa0FRa1JFRUFKRVZCLy8vL0J5UkdRZVBhL2dja1IwR0E0cEFFSkVoQkFDUkpEQXNMUWYvLy93Y2tQa0dFaWY0SEpEOUJ1dlRRQkNSQVFRQWtRVUgvLy84SEpFSkJzZjd2QXlSRFFZQ0lBaVJFUVFBa1JVSC8vLzhISkVaQi84dU9BeVJIUWY4QkpFaEJBQ1JKREFvTFFjWE4vd2NrUGtHRXVib0dKRDlCcWRhUkJDUkFRWWppNkFJa1FVSC8vLzhISkVKQjQ5citCeVJEUVlEaWtBUWtSRUVBSkVWQi8vLy9CeVJHUWVQYS9nY2tSMEdBNHBBRUpFaEJBQ1JKREFrTFFmLy8vd2NrUGtHQS9zc0NKRDlCZ0lUOUJ5UkFRUUFrUVVILy8vOEhKRUpCZ1A3TEFpUkRRWUNFL1Fja1JFRUFKRVZCLy8vL0J5UkdRWUQreXdJa1IwR0FoUDBISkVoQkFDUkpEQWdMUWYvLy93Y2tQa0d4L3U4REpEOUJ4Y2NCSkVCQkFDUkJRZi8vL3dja1FrR0VpZjRISkVOQnV2VFFCQ1JFUVFBa1JVSC8vLzhISkVaQmhJbitCeVJIUWJyMDBBUWtTRUVBSkVrTUJ3dEJBQ1ErUVlTSkFpUS9RWUM4L3dja1FFSC8vLzhISkVGQkFDUkNRWVNKQWlSRFFZQzgvd2NrUkVILy8vOEhKRVZCQUNSR1FZU0pBaVJIUVlDOC93Y2tTRUgvLy84SEpFa01CZ3RCcGYvL0J5UStRWlNwL2dja1AwSC9xZElFSkVCQkFDUkJRYVgvL3dja1FrR1VxZjRISkVOQi82blNCQ1JFUVFBa1JVR2wvLzhISkVaQmxLbitCeVJIUWYrcDBnUWtTRUVBSkVrTUJRdEIvLy8vQnlRK1FZRCsvd2NrUDBHQWdQd0hKRUJCQUNSQlFmLy8vd2NrUWtHQS92OEhKRU5CZ0lEOEJ5UkVRUUFrUlVILy8vOEhKRVpCZ1A3L0J5UkhRWUNBL0Fja1NFRUFKRWtNQkF0Qi8vLy9CeVErUVlEKy93Y2tQMEdBbE8wREpFQkJBQ1JCUWYvLy93Y2tRa0gveTQ0REpFTkIvd0VrUkVFQUpFVkIvLy8vQnlSR1FiSCs3d01rUjBHQWlBSWtTRUVBSkVrTUF3dEIvLy8vQnlRK1FmL0xqZ01rUDBIL0FTUkFRUUFrUVVILy8vOEhKRUpCaEluK0J5UkRRYnIwMEFRa1JFRUFKRVZCLy8vL0J5UkdRYkgrN3dNa1IwR0FpQUlrU0VFQUpFa01BZ3RCLy8vL0J5UStRZDZac2dRa1AwR01wY2tDSkVCQkFDUkJRZi8vL3dja1FrR0VpZjRISkVOQnV2VFFCQ1JFUVFBa1JVSC8vLzhISkVaQjQ5citCeVJIUVlEaWtBUWtTRUVBSkVrTUFRdEIvLy8vQnlRK1FhWExsZ1VrUDBIU3BNa0NKRUJCQUNSQlFmLy8vd2NrUWtHbHk1WUZKRU5CMHFUSkFpUkVRUUFrUlVILy8vOEhKRVpCcGN1V0JTUkhRZEtreVFJa1NFRUFKRWtMQzlvSUFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFZZ0JSd1JBSUFCQjRRQkdEUUVnQUVFVVJnMENJQUJCeGdCR0RRTWdBRUhaQUVZTkJDQUFRY1lCUmcwRUlBQkJoZ0ZHRFFVZ0FFR29BVVlOQlNBQVFiOEJSZzBHSUFCQnpnRkdEUVlnQUVIUkFVWU5CaUFBUWZBQlJnMEdJQUJCSjBZTkJ5QUFRY2tBUmcwSElBQkIzQUJHRFFjZ0FFR3pBVVlOQnlBQVFja0JSZzBJSUFCQjhBQkdEUWtnQUVIR0FFWU5DaUFBUWRNQlJnMExEQXdMUWYrNWxnVWtQa0dBL3Y4SEpEOUJnTVlCSkVCQkFDUkJRZis1bGdVa1FrR0EvdjhISkVOQmdNWUJKRVJCQUNSRlFmKzVsZ1VrUmtHQS92OEhKRWRCZ01ZQkpFaEJBQ1JKREFzTFFmLy8vd2NrUGtIL3k0NERKRDlCL3dFa1FFRUFKRUZCLy8vL0J5UkNRWVNKL2dja1EwRzY5TkFFSkVSQkFDUkZRZi8vL3dja1JrSC95NDRESkVkQi93RWtTRUVBSkVrTUNndEIvLy8vQnlRK1FZU0ovZ2NrUDBHNjlOQUVKRUJCQUNSQlFmLy8vd2NrUWtHeC91OERKRU5CZ0lnQ0pFUkJBQ1JGUWYvLy93Y2tSa0dFaWY0SEpFZEJ1dlRRQkNSSVFRQWtTUXdKQzBILzY5WUZKRDVCbFAvL0J5US9RY0swdFFVa1FFRUFKRUZCQUNSQ1FmLy8vd2NrUTBHRWlmNEhKRVJCdXZUUUJDUkZRUUFrUmtILy8vOEhKRWRCaEluK0J5UklRYnIwMEFRa1NRd0lDMEgvLy84SEpENUJoTnUyQlNRL1Fmdm1pUUlrUUVFQUpFRkIvLy8vQnlSQ1FZRG0vUWNrUTBHQWhORUVKRVJCQUNSRlFmLy8vd2NrUmtILysrb0NKRWRCZ0lEOEJ5UklRZjhCSkVrTUJ3dEJuUC8vQnlRK1FmL3IwZ1FrUDBIenFJNERKRUJCdXZRQUpFRkJ3b3IvQnlSQ1FZQ3Mvd2NrUTBHQTlOQUVKRVJCZ0lDb0FpUkZRZi8vL3dja1JrR0VpZjRISkVkQnV2VFFCQ1JJUVFBa1NRd0dDMEdBL3E4REpENUIvLy8vQnlRL1FjcWsvUWNrUUVFQUpFRkIvLy8vQnlSQ1FmLy8vd2NrUTBIL3k0NERKRVJCL3dFa1JVSC8vLzhISkVaQjQ5citCeVJIUVlEaWtBUWtTRUVBSkVrTUJRdEIvN21XQlNRK1FZRCsvd2NrUDBHQXhnRWtRRUVBSkVGQjBzYjlCeVJDUVlDQTJBWWtRMEdBZ0l3REpFUkJBQ1JGUWY4QkpFWkIvLy8vQnlSSFFmdisvd2NrU0VIL2lRSWtTUXdFQzBITy8vOEhKRDVCNzkrUEF5US9RYkdJOGdRa1FFSGF0T2tDSkVGQi8vLy9CeVJDUVlEbS9RY2tRMEdBaE5FRUpFUkJBQ1JGUWYvLy93Y2tSa0gveTQ0REpFZEIvd0VrU0VFQUpFa01Bd3RCLy8vL0J5UStRWVNKL2dja1AwRzY5TkFFSkVCQkFDUkJRZi8vL3dja1FrR0EvZ01rUTBHQWlNWUJKRVJCZ0pRQkpFVkIvLy8vQnlSR1FmL0xqZ01rUjBIL0FTUklRUUFrU1F3Q0MwSC8vLzhISkQ1Qi84dU9BeVEvUWY4QkpFQkJBQ1JCUVlEKy93Y2tRa0dBZ1B3SEpFTkJnSUNNQXlSRVFRQWtSVUgvLy84SEpFWkJzZjd2QXlSSFFZQ0lBaVJJUVFBa1NRd0JDMEgvLy84SEpENUJoTnUyQlNRL1Fmdm1pUUlrUUVFQUpFRkIvLy8vQnlSQ1FlUGEvZ2NrUTBIajJ2NEhKRVJCQUNSRlFmLy8vd2NrUmtIL3k0NERKRWRCL3dFa1NFRUFKRWtMQzBvQkFuOUJBQkFpSTRFQ0JFQVBDeU9BQWdSQUk0RUNSUVJBRHdzTFFiUUNJUUFEUUFKQUlBQkJ3d0pLRFFBZ0FCQWRJQUZxSVFFZ0FFRUJhaUVBREFFTEN5QUJRZjhCY1JBakM5d0JBRUVBSk9zQlFRQWs3QUZCQUNUdEFVRUFKTzRCUVFBazd3RkJBQ1R3QVVFQUpQRUJRWkFCSk8wQkk0RUNCRUJCd2Y0RFFZRUJFQjlCeFA0RFFaQUJFQjlCeC80RFFmd0JFQjhGUWNIK0EwR0ZBUkFmUWNiK0EwSC9BUkFmUWNmK0EwSDhBUkFmUWNqK0EwSC9BUkFmUWNuK0EwSC9BUkFmQzBHUUFTVHRBVUhBL2dOQmtBRVFIMEhQL2dOQkFCQWZRZkQrQTBFQkVCOGpnQUlFUUNPQkFnUkFRUUFrN1FGQndQNERRUUFRSDBIQi9nTkJnQUVRSDBIRS9nTkJBQkFmQlVFQUpPMEJRY0QrQTBFQUVCOUJ3ZjREUVlRQkVCOExDeEFrQzIwQUk0RUNCRUJCNlA0RFFjQUJFQjlCNmY0RFFmOEJFQjlCNnY0RFFjRUJFQjlCNi80RFFRMFFId1ZCNlA0RFFmOEJFQjlCNmY0RFFmOEJFQjlCNnY0RFFmOEJFQjlCNi80RFFmOEJFQjhMSTRFQ1FRQWpnQUliQkVCQjZmNERRU0FRSDBIci9nTkJpZ0VRSHdzTFZnQkJrUDREUVlBQkVCOUJrZjREUWI4QkVCOUJrdjREUWZNQkVCOUJrLzREUWNFQkVCOUJsUDREUWI4QkVCOGpnQUlFUUVHUi9nTkJQeEFmUVpMK0EwRUFFQjlCay80RFFRQVFIMEdVL2dOQnVBRVFId3NMTEFCQmxmNERRZjhCRUI5Qmx2NERRVDhRSDBHWC9nTkJBQkFmUVpqK0EwRUFFQjlCbWY0RFFiZ0JFQjhMTXdCQm12NERRZjhBRUI5Qm0vNERRZjhCRUI5Qm5QNERRWjhCRUI5Qm5mNERRUUFRSDBHZS9nTkJ1QUVRSDBFQkpJWUJDeTBBUVovK0EwSC9BUkFmUWFEK0EwSC9BUkFmUWFIK0EwRUFFQjlCb3Y0RFFRQVFIMEdqL2dOQnZ3RVFId3RjQUNBQVFZQUJjVUVBUnlTdEFTQUFRY0FBY1VFQVJ5U3NBU0FBUVNCeFFRQkhKS3NCSUFCQkVIRkJBRWNrcWdFZ0FFRUljVUVBUnlTeEFTQUFRUVJ4UVFCSEpMQUJJQUJCQW5GQkFFY2tyd0VnQUVFQmNVRUFSeVN1QVF0RkFFRVBKSm9CUVE4a213RkJEeVNjQVVFUEpKMEJRUUFrbmdGQkFDU2ZBVUVBSktBQlFRQWtvUUZCL3dBa29nRkIvd0Frb3dGQkFTU2tBVUVCSktVQlFRQWtwZ0VMdlFFQVFRQWtwd0ZCQUNTb0FVRUFKS2tCUVFFa3FnRkJBU1NyQVVFQkpLd0JRUUVrclFGQkFTU3VBVUVCSks4QlFRRWtzQUZCQVNTeEFVRUJKTElCUVFBa3N3RkJBQ1MwQVVFQUpMVUJRUUFrdGdFUUp4QW9FQ2tRS2tHay9nTkI5d0FRSDBFSEpLZ0JRUWNrcVFGQnBmNERRZk1CRUI5Qjh3RVFLMEdtL2dOQjhRRVFIMEVCSkxJQkk0QUNCRUJCcFA0RFFRQVFIMEVBSktnQlFRQWtxUUZCcGY0RFFRQVFIMEVBRUN0QnB2NERRZkFBRUI5QkFDU3lBUXNRTEFzK0FDQUFRUUZ4UVFCSEpMb0JJQUJCQW5GQkFFY2t1d0VnQUVFRWNVRUFSeVM4QVNBQVFRaHhRUUJISkwwQklBQkJFSEZCQUVja3ZnRWdBQ1M1QVFzK0FDQUFRUUZ4UVFCSEpNQUJJQUJCQW5GQkFFY2t3UUVnQUVFRWNVRUFSeVRDQVNBQVFRaHhRUUJISk1NQklBQkJFSEZCQUVja3hBRWdBQ1MvQVF0NEFFRUFKTVVCUVFBa3hnRkJBQ1RIQVVFQUpNb0JRUUFreXdGQkFDVE1BVUVBSk1nQlFRQWt5UUVqZ1FJRVFFR0UvZ05CSGhBZlFhQTlKTVlCQlVHRS9nTkJxd0VRSDBITTF3SWt4Z0VMUVlmK0EwSDRBUkFmUWZnQkpNd0JJNEFDQkVBamdRSkZCRUJCaFA0RFFRQVFIMEVFSk1ZQkN3c0xRd0JCQUNUTkFVRUFKTTRCSTRFQ0JFQkJndjREUWZ3QUVCOUJBQ1RQQVVFQUpOQUJRUUFrMFFFRlFZTCtBMEgrQUJBZlFRQWt6d0ZCQVNUUUFVRUFKTkVCQ3d0MUFDT0JBZ1JBUWZEK0EwSDRBUkFmUWMvK0EwSCtBUkFmUWMzK0EwSCtBQkFmUVlEK0EwSFBBUkFmUVkvK0EwSGhBUkFmUWV6K0EwSCtBUkFmUWZYK0EwR1BBUkFmQlVIdy9nTkIvd0VRSDBIUC9nTkIvd0VRSDBITi9nTkIvd0VRSDBHQS9nTkJ6d0VRSDBHUC9nTkI0UUVRSHdzTGxnRUJBWDlCd3dJUUhTSUFRY0FCUmdSL1FRRUZJQUJCZ0FGR1FRQWpOUnNMQkVCQkFTU0JBZ1ZCQUNTQkFndEJBQ1NZQWtHQXFOYTVCeVNTQWtFQUpKTUNRUUFrbEFKQmdLald1UWNrbFFKQkFDU1dBa0VBSkpjQ0l6UUVRRUVCSklBQ0JVRUFKSUFDQ3hBZUVDQVFJUkFsRUNZUUxVRUFFQzVCLy84REk3a0JFQjlCNFFFUUwwR1AvZ01qdndFUUh4QXdFREVRTWd0S0FDQUFRUUJLSkRRZ0FVRUFTaVExSUFKQkFFb2tOaUFEUVFCS0pEY2dCRUVBU2lRNElBVkJBRW9rT1NBR1FRQktKRG9nQjBFQVNpUTdJQWhCQUVva1BDQUpRUUJLSkQwUU13c0ZBQ09ZQWd1NUFRQkJnQWdqZ3dJNkFBQkJnUWdqaEFJNkFBQkJnZ2dqaFFJNkFBQkJnd2dqaGdJNkFBQkJoQWdqaHdJNkFBQkJoUWdqaUFJNkFBQkJoZ2dqaVFJNkFBQkJod2dqaWdJNkFBQkJpQWdqaXdJN0FRQkJpZ2dqakFJN0FRQkJqQWdqalFJMkFnQkJrUWdqamdKQkFFYzZBQUJCa2dnamp3SkJBRWM2QUFCQmt3Z2prQUpCQUVjNkFBQkJsQWdqa1FKQkFFYzZBQUJCbFFnamdBSkJBRWM2QUFCQmxnZ2pnUUpCQUVjNkFBQkJsd2dqZ2dKQkFFYzZBQUFMYUFCQnlBa2o4Z0U3QVFCQnlna2o4d0U3QVFCQnpBa2o5QUZCQUVjNkFBQkJ6UWtqOVFGQkFFYzZBQUJCemdrajlnRkJBRWM2QUFCQnp3a2o5d0ZCQUVjNkFBQkIwQWtqK0FGQkFFYzZBQUJCMFFraitRRkJBRWM2QUFCQjBna2orZ0ZCQUVjNkFBQUxOUUJCK2dranhRRTJBZ0JCL2dranhnRTJBZ0JCZ2dvanlBRkJBRWM2QUFCQmhRb2p5UUZCQUVjNkFBQkJoZjRESThjQkVCOExZd0JCM2dvaldFRUFSem9BQUVIZkNpTmJOZ0lBUWVNS0kxdzJBZ0JCNXdvalhqWUNBRUhzQ2lOZk5nSUFRZkVLSTJBNkFBQkI4Z29qWVRvQUFFSDNDaU5pUVFCSE9nQUFRZmdLSTJNMkFnQkIvUW9qWkRzQkFFSC9DaU5kUVFCSE9nQUFDMGdBUVpBTEkyOUJBRWM2QUFCQmtRc2pjallDQUVHVkN5TnpOZ0lBUVprTEkzVTJBZ0JCbmdzamRqWUNBRUdqQ3lOM09nQUFRYVFMSTNnNkFBQkJwUXNqZEVFQVJ6b0FBQXRIQUVIMEN5T1JBVUVBUnpvQUFFSDFDeU9UQVRZQ0FFSDVDeU9VQVRZQ0FFSDlDeU9XQVRZQ0FFR0NEQ09YQVRZQ0FFR0hEQ09aQVRzQkFFR0pEQ09WQVVFQVJ6b0FBQXVIQVFBUU5rR3lDQ1BzQVRZQ0FFRzJDQ1BoQVRvQUFFSEUvZ01qN1FFUUgwSGtDQ08zQVVFQVJ6b0FBRUhsQ0NPNEFVRUFSem9BQUJBM0VEaEJyQW9qc3dFMkFnQkJzQW9qdEFFNkFBQkJzUW9qdFFFNkFBQVFPUkE2UWNJTEkzOUJBRWM2QUFCQnd3c2pnZ0UyQWdCQnh3c2pnd0UyQWdCQnl3c2poQUU3QVFBUU8wRUFKSmdDQzdrQkFFR0FDQzBBQUNTREFrR0JDQzBBQUNTRUFrR0NDQzBBQUNTRkFrR0RDQzBBQUNTR0FrR0VDQzBBQUNTSEFrR0ZDQzBBQUNTSUFrR0dDQzBBQUNTSkFrR0hDQzBBQUNTS0FrR0lDQzhCQUNTTEFrR0tDQzhCQUNTTUFrR01DQ2dDQUNTTkFrR1JDQzBBQUVFQVNpU09Ba0dTQ0MwQUFFRUFTaVNQQWtHVENDMEFBRUVBU2lTUUFrR1VDQzBBQUVFQVNpU1JBa0dWQ0MwQUFFRUFTaVNBQWtHV0NDMEFBRUVBU2lTQkFrR1hDQzBBQUVFQVNpU0NBZ3RlQVFGL1FRQWs3QUZCQUNUdEFVSEUvZ05CQUJBZlFjSCtBeEFkUVh4eElRRkJBQ1RoQVVIQi9nTWdBUkFmSUFBRVFBSkFRUUFoQUFOQUlBQkJnTmdGVGcwQklBQkJnTWtGYWtIL0FUb0FBQ0FBUVFGcUlRQU1BQUFMQUFzTEM0SUJBUUYvSStNQklRRWdBRUdBQVhGQkFFY2s0d0VnQUVIQUFIRkJBRWNrNUFFZ0FFRWdjVUVBUnlUbEFTQUFRUkJ4UVFCSEpPWUJJQUJCQ0hGQkFFY2s1d0VnQUVFRWNVRUFSeVRvQVNBQVFRSnhRUUJISk9rQklBQkJBWEZCQUVjazZnRWo0d0ZGUVFBZ0FSc0VRRUVCRUQ0TFFRQWo0d0VnQVJzRVFFRUFFRDRMQ3lvQVFlUUlMUUFBUVFCS0pMY0JRZVVJTFFBQVFRQktKTGdCUWYvL0F4QWRFQzVCai80REVCMFFMd3RvQUVISUNTOEJBQ1R5QVVIS0NTOEJBQ1R6QVVITUNTMEFBRUVBU2lUMEFVSE5DUzBBQUVFQVNpVDFBVUhPQ1MwQUFFRUFTaVQyQVVIUENTMEFBRUVBU2lUM0FVSFFDUzBBQUVFQVNpVDRBVUhSQ1MwQUFFRUFTaVQ1QVVIU0NTMEFBRUVBU2lUNkFRdEhBRUg2Q1NnQ0FDVEZBVUgrQ1NnQ0FDVEdBVUdDQ2kwQUFFRUFTaVRJQVVHRkNpMEFBRUVBU2lUSkFVR0YvZ01RSFNUSEFVR0cvZ01RSFNUS0FVR0gvZ01RSFNUTUFRc0hBRUVBSkxZQkMyTUFRZDRLTFFBQVFRQktKRmhCM3dvb0FnQWtXMEhqQ2lnQ0FDUmNRZWNLS0FJQUpGNUI3QW9vQWdBa1gwSHhDaTBBQUNSZ1FmSUtMUUFBSkdGQjl3b3RBQUJCQUVva1lrSDRDaWdDQUNSalFmMEtMd0VBSkdSQi93b3RBQUJCQUVva1hRdElBRUdRQ3kwQUFFRUFTaVJ2UVpFTEtBSUFKSEpCbFFzb0FnQWtjMEdaQ3lnQ0FDUjFRWjRMS0FJQUpIWkJvd3N0QUFBa2QwR2tDeTBBQUNSNFFiRUxMUUFBUVFCS0pIUUxSd0JCOUFzdEFBQkJBRW9ra1FGQjlRc29BZ0Fra3dGQitRc29BZ0FrbEFGQi9Rc29BZ0FrbGdGQmdnd29BZ0FrbHdGQmh3d3ZBUUFrbVFGQmlRd3RBQUJCQUVva2xRRUx6QUVCQVg4UVBVR3lDQ2dDQUNUc0FVRzJDQzBBQUNUaEFVSEUvZ01RSFNUdEFVSEEvZ01RSFJBL0VFQkJnUDRERUIxQi93RnpKTm9CSTlvQklnQkJFSEZCQUVjazJ3RWdBRUVnY1VFQVJ5VGNBUkJCRUVKQnJBb29BZ0Frc3dGQnNBb3RBQUFrdEFGQnNRb3RBQUFrdFFGQkFDUzJBUkJFRUVWQndnc3RBQUJCQUVva2YwSERDeWdDQUNTQ0FVSEhDeWdDQUNTREFVSExDeThCQUNTRUFSQkdRUUFrbUFKQmdLald1UWNra2dKQkFDU1RBa0VBSkpRQ1FZQ28xcmtISkpVQ1FRQWtsZ0pCQUNTWEFnc0ZBQ09CQWdzRkFDT1ZBZ3NGQUNPV0Fnc0ZBQ09YQWd1eUFnRUdmeU5MSWdVZ0FFWkJBQ05LSUFSR1FRQWdBRUVJU2tFQUlBRkJBRW9iR3hzRVFDQURRUUZyRUIxQklIRkJBRWNoQ0NBREVCMUJJSEZCQUVjaENVRUFJUU1EUUNBRFFRaElCRUJCQnlBRGF5QURJQWdnQ1VjYklnY2dBR29pQTBHZ0FVd0VRQ0FCUWFBQmJDQURha0VEYkVHQXlRVnFJZ1F0QUFBaENpQUVJQW82QUFBZ0FVR2dBV3dnQTJwQkEyeEJnY2tGYWlBRUxRQUJPZ0FBSUFGQm9BRnNJQU5xUVFOc1FZTEpCV29nQkMwQUFqb0FBQ0FCUWFBQmJDQURha0dBa1FScUlBQkJBQ0FIYTJzZ0FVR2dBV3hxUWZpUUJHb3RBQUFpQTBFRGNTSUVRUVJ5SUFRZ0EwRUVjUnM2QUFBZ0JrRUJhaUVHQ3lBSFFRRnFJUU1NQVFzTEJTQUVKRW9MSUFBZ0JVNEVRQ0FBUVFocUlnRWdBa0VIY1NJQ2FpQUJJQUFnQWtnYklRVUxJQVVrU3lBR0N5a0FJQUJCZ0pBQ1JnUkFJQUZCZ0FGcklBRkJnQUZxSUFGQmdBRnhHeUVCQ3lBQlFRUjBJQUJxQzBvQUlBQkJBM1FnQVVFQmRHb2lBRUVCYWtFL2NTSUJRVUJySUFFZ0FodEJnSkFFYWkwQUFDRUJJQUJCUDNFaUFFRkFheUFBSUFJYlFZQ1FCR290QUFBZ0FVSC9BWEZCQ0hSeUM4Z0JBQ0FCRUIwZ0FFRUJkSFZCQTNFaEFDQUJRY2orQTBZRVFDTkNJUUVDUUNBQVJRMEFBa0FDUUFKQUFrQWdBRUVCYXc0REFRSURBQXNNQXdzalF5RUJEQUlMSTBRaEFRd0JDeU5GSVFFTEJTQUJRY24rQTBZRVFDTkdJUUVDUUNBQVJRMEFBa0FDUUFKQUFrQWdBRUVCYXc0REFRSURBQXNNQXdzalJ5RUJEQUlMSTBnaEFRd0JDeU5KSVFFTEJTTStJUUVDUUNBQVJRMEFBa0FDUUFKQUFrQWdBRUVCYXc0REFRSURBQXNNQXdzalB5RUJEQUlMSTBBaEFRd0JDeU5CSVFFTEN3c2dBUXVNQXdFR2Z5QUJJQUFRVFNBRlFRRjBhaUlBUVlDUWZtb2dBa0VCY1VFTmRDSUJhaTBBQUNFUklBQkJnWkIrYWlBQmFpMEFBQ0VTSUFNaEFBTkFJQUFnQkV3RVFDQUFJQU5ySUFacUlnNGdDRWdFUUVFQUlRVUNmMEVCUVFjZ0FHc2dBRUVCSUF0QklIRkZJQXRCQUVnYkd5SUJkQ0FTY1FSQVFRSWhCUXNnQlVFQmFnc2dCVUVCSUFGMElCRnhHeUVDSTRFQ0JIOUJBU0FNUVFCT0lBdEJBRTRiQlVFQUN3Ui9JQXRCQjNFaEFTQU1RUUJPSWdVRVFDQU1RUWR4SVFFTElBRWdBaUFGRUU0aUJVRWZjVUVEZENFQklBVkI0QWR4UVFWMVFRTjBJUThnQlVHQStBRnhRUXAxUVFOMEJTQUNRY2YrQXlBS0lBcEJBRXdiSWdvUVR5SUZRWUNBL0FkeFFSQjFJUUVnQlVHQS9nTnhRUWgxSVE4Z0JVSC9BWEVMSVFVZ0J5QUliQ0FPYWtFRGJDQUphaUlRSUFFNkFBQWdFRUVCYWlBUE9nQUFJQkJCQW1vZ0JUb0FBQ0FIUWFBQmJDQU9ha0dBa1FScUlBSkJBM0VpQVVFRWNpQUJJQXRCZ0FGeFFRQWdDMEVBVGhzYk9nQUFJQTFCQVdvaERRc2dBRUVCYWlFQURBRUxDeUFOQzM0QkEzOGdBMEVIY1NFRFFRQWdBaUFDUVFOMVFRTjBheUFBR3lFSFFhQUJJQUJyUVFjZ0FFRUlha0dnQVVvYklRaEJmeUVDSTRFQ0JFQWdCRUdBMEg1cUxRQUFJZ0pCQ0hGQkFFY2hDU0FDUWNBQWNRUkFRUWNnQTJzaEF3c0xJQVlnQlNBSklBY2dDQ0FESUFBZ0FVR2dBVUdBeVFWQkFDQUNRWDhRVUF1aEFnRUJmeUFEUVFkeElRTWdCU0FHRUUwZ0JFR0EwSDVxTFFBQUlnUkJ3QUJ4Qkg5QkJ5QURhd1VnQXd0QkFYUnFJZ1ZCZ0pCK2FpQUVRUWh4UVFCSElnWkJEWFJxTFFBQUlRY2dBa0VIY1NFRFFRQWhBaUFCUWFBQmJDQUFha0VEYkVHQXlRVnFJQVJCQjNFQ2Z5QUZRWUdRZm1vZ0JrRUJjVUVOZEdvdEFBQkJBU0FEUVFjZ0Eyc2dCRUVnY1JzaUEzUnhCRUJCQWlFQ0N5QUNRUUZxQ3lBQ1FRRWdBM1FnQjNFYklnTkJBQkJPSWdKQkgzRkJBM1E2QUFBZ0FVR2dBV3dnQUdwQkEyeEJnY2tGYWlBQ1FlQUhjVUVGZFVFRGREb0FBQ0FCUWFBQmJDQUFha0VEYkVHQ3lRVnFJQUpCZ1BnQmNVRUtkVUVEZERvQUFDQUJRYUFCYkNBQWFrR0FrUVJxSUFOQkEzRWlBRUVFY2lBQUlBUkJnQUZ4R3pvQUFBdkVBUUFnQkNBRkVFMGdBMEVIY1VFQmRHb2lCRUdBa0g1cUxRQUFJUVZCQUNFRElBRkJvQUZzSUFCcVFRTnNRWURKQldvQ2Z5QUVRWUdRZm1vdEFBQkJBVUVISUFKQkIzRnJJZ0owY1FSQVFRSWhBd3NnQTBFQmFnc2dBMEVCSUFKMElBVnhHeUlEUWNmK0F4QlBJZ0pCZ0lEOEIzRkJFSFU2QUFBZ0FVR2dBV3dnQUdwQkEyeEJnY2tGYWlBQ1FZRCtBM0ZCQ0hVNkFBQWdBVUdnQVd3Z0FHcEJBMnhCZ3NrRmFpQUNPZ0FBSUFGQm9BRnNJQUJxUVlDUkJHb2dBMEVEY1RvQUFBdlVBUUVHZnlBRFFRTjFJUW9EUUNBRVFhQUJTQVJBSUFRZ0JXb2lCa0dBQWs0RVFDQUdRWUFDYXlFR0N5QUtRUVYwSUFKcUlBWkJBM1ZxSWdoQmdKQithaTBBQUNFSFFRQWhDU004QkVBZ0JDQUFJQVlnQ0NBSEVFd2lDMEVBU2dSQVFRRWhDU0FMUVFGcklBUnFJUVFMQ3lBSlJVRUFJenNiQkVBZ0JDQUFJQVlnQXlBSUlBRWdCeEJSSWdaQkFFb0VRQ0FHUVFGcklBUnFJUVFMQlNBSlJRUkFJNEVDQkVBZ0JDQUFJQVlnQXlBSUlBRWdCeEJTQlNBRUlBQWdCaUFESUFFZ0J4QlRDd3NMSUFSQkFXb2hCQXdCQ3dzTE1nRURmeVB3QVNFRElBQWo4UUVpQkVnRVFBOExRUUFnQTBFSGF5SURheUVGSUFBZ0FTQUNJQUFnQkdzZ0F5QUZFRlFMb0FVQkQzOENRRUVuSVFZRFFDQUdRUUJJRFFFZ0JrRUNkQ0lGUVlEOEEyb2lBeEFkSVFJZ0EwRUJhaEFkSVFjZ0EwRUNhaEFkSVFNZ0FrRVFheUVFSUFkQkNHc2hDMEVJSVFJZ0FRUkFRUkFoQWlBRElBTkJBWEZySVFNTElBQWdBaUFFYWtoQkFDQUFJQVJPR3dSQUlBVkJnL3dEYWhBZElnVkJnQUZ4UVFCSElRd2dCVUVnY1VFQVJ5RU5RWUNBQWlBREVFMGdBaUFBSUFScklnTnJRUUZySUFNZ0JVSEFBSEViUVFGMGFpSURRWUNRZm1vZ0JVRUljVUVBUnlPQkFpSUNJQUliUVFGeFFRMTBJZ0pxTFFBQUlRNGdBMEdCa0g1cUlBSnFMUUFBSVE5QkJ5RURBMEFnQTBFQVRnUkFRUUFoQWdKL1FRRkJBQ0FEUVFkcmF5QURJQTBiSWdSMElBOXhCRUJCQWlFQ0N5QUNRUUZxQ3lBQ1FRRWdCSFFnRG5FYklnUUVRRUVISUFOcklBdHFJZ0pCQUU0RWZ5QUNRYUFCVEFWQkFBc0VRRUVBSVFkQkFDRUtJK29CUlNPQkFpSUlJQWdiSWdoRkJFQWdBRUdnQVd3Z0FtcEJnSkVFYWkwQUFDSUpJUkFnQ1VFRGNTSUpRUUJMUVFBZ0RCc0VRRUVCSVFjRlFRRkJBQ0FKUVFCTFFRQWdFRUVFY1VFQUk0RUNHeHNiSVFvTEMwRUJRUUFnQ2tVZ0J4c2dDQnNFUUNPQkFnUkFJQUJCb0FGc0lBSnFRUU5zUVlESkJXb2dCVUVIY1NBRVFRRVFUaUlFUVI5eFFRTjBPZ0FBSUFCQm9BRnNJQUpxUVFOc1FZSEpCV29nQkVIZ0IzRkJCWFZCQTNRNkFBQWdBRUdnQVd3Z0FtcEJBMnhCZ3NrRmFpQUVRWUQ0QVhGQkNuVkJBM1E2QUFBRklBQkJvQUZzSUFKcVFRTnNRWURKQldvZ0JFSEovZ05CeVA0RElBVkJFSEViRUU4aUJFR0FnUHdIY1VFUWRUb0FBQ0FBUWFBQmJDQUNha0VEYkVHQnlRVnFJQVJCZ1A0RGNVRUlkVG9BQUNBQVFhQUJiQ0FDYWtFRGJFR0N5UVZxSUFRNkFBQUxDd3NMSUFOQkFXc2hBd3dCQ3dzTElBWkJBV3NoQmd3QUFBc0FDd3RrQVFGL1FZQ0FBa0dBa0FJajVnRWJJUUZCQVNQcUFTT0JBaHNFUUNBQUlBRkJnTGdDUVlDd0FpUG5BUnNqN3dFZ0FHcEIvd0Z4UVFBajdnRVFWQXNqNVFFRVFDQUFJQUZCZ0xnQ1FZQ3dBaVBrQVJzUVZRc2o2UUVFUUNBQUkrZ0JFRllMQ3lVQkFYOENRQU5BSUFCQmtBRktEUUVnQUVIL0FYRVFWeUFBUVFGcUlRQU1BQUFMQUFzTFJnRUNmd05BSUFGQmtBRk9SUVJBUVFBaEFBTkFJQUJCb0FGSUJFQWdBVUdnQVd3Z0FHcEJnSkVFYWtFQU9nQUFJQUJCQVdvaEFBd0JDd3NnQVVFQmFpRUJEQUVMQ3dzYkFFR1AvZ01RSFVFQklBQjBjaUlBSkw4QlFZLytBeUFBRUI4TEN3QkJBU1RCQVVFQkVGb0xMZ0VCZndKL0kzVWlBRUVBU2dSL0kyMEZRUUFMQkVBZ0FFRUJheUVBQ3lBQVJRc0VRRUVBSkc4TElBQWtkUXN3QVFGL0FuOGpnd0VpQUVFQVNnUi9JMzBGUVFBTEJFQWdBRUVCYXlFQUN5QUFSUXNFUUVFQUpIOExJQUFrZ3dFTE1nRUJmd0ovSTVZQklnQkJBRW9FZnlPUUFRVkJBQXNFUUNBQVFRRnJJUUFMSUFCRkN3UkFRUUFra1FFTElBQWtsZ0VMUndFQ2Z5QUFKR1JCbFA0REVCMUIrQUZ4SVFGQmsvNERJQUJCL3dGeElnSVFIMEdVL2dNZ0FTQUFRUWgxUVFkeElnQnlFQjhnQWlSVklBQWtWeU5WSTFkQkNIUnlKRm9Mb2dFQkFuOGpZa1ZCQVNOWUd3UkFEd3NqWTBFQmF5SUFRUUJNQkVBalRRUkFJMDBrWXdKL0kyUWlBU05QZFNFQVFRRWpUZ1IvUVFFa1pTQUJJQUJyQlNBQUlBRnFDeUlBUWY4UFNnMEFHa0VBQ3dSQVFRQWtXQXNqVDBFQVNnUkFJQUFRWHdKL0kyUWlBU05QZFNFQVFRRWpUZ1IvUVFFa1pTQUJJQUJyQlNBQUlBRnFDMEgvRDBvTkFCcEJBQXNFUUVFQUpGZ0xDd1ZCQ0NSakN3VWdBQ1JqQ3d0VEFRSi9JMXhCQVdzaUFVRUFUQVJBSTFRRVFDTlVJZ0VFZnlOZEJVRUFDd1JBSTE4aEFDQUFRUUZxSUFCQkFXc2pVeHRCRDNFaUFFRVBTQVJBSUFBa1h3VkJBQ1JkQ3dzRlFRZ2hBUXNMSUFFa1hBdFRBUUovSTNOQkFXc2lBVUVBVEFSQUkyc0VRQ05ySWdFRWZ5TjBCVUVBQ3dSQUkzWWhBQ0FBUVFGcUlBQkJBV3NqYWh0QkQzRWlBRUVQU0FSQUlBQWtkZ1ZCQUNSMEN3c0ZRUWdoQVFzTElBRWtjd3RjQVFKL0k1UUJRUUZySWdGQkFFd0VRQ09NQVFSQUk0d0JJZ0VFZnlPVkFRVkJBQXNFUUNPWEFTRUFJQUJCQVdvZ0FFRUJheU9MQVJ0QkQzRWlBRUVQU0FSQUlBQWtsd0VGUVFBa2xRRUxDd1ZCQ0NFQkN3c2dBU1NVQVF1cEFnRUNmMEdBd0FBamdnSjBJZ0VoQWlPekFTQUFhaUlBSUFGT0JFQWdBQ0FDYXlTekFRSkFBa0FDUUFKQUFrQWp0UUZCQVdwQkIzRWlBQVJBSUFCQkFrWU5BUUpBSUFCQkJHc09CQU1BQkFVQUN3d0ZDeU5lSWdGQkFFb0VmeU5XQlVFQUN3UkFJQUZCQVdzaUFVVUVRRUVBSkZnTEN5QUJKRjRRWEJCZEVGNE1CQXNqWGlJQlFRQktCSDhqVmdWQkFBc0VRQ0FCUVFGcklnRkZCRUJCQUNSWUN3c2dBU1JlRUZ3UVhSQmVFR0FNQXdzalhpSUJRUUJLQkg4alZnVkJBQXNFUUNBQlFRRnJJZ0ZGQkVCQkFDUllDd3NnQVNSZUVGd1FYUkJlREFJTEkxNGlBVUVBU2dSL0kxWUZRUUFMQkVBZ0FVRUJheUlCUlFSQVFRQWtXQXNMSUFFa1hoQmNFRjBRWGhCZ0RBRUxFR0VRWWhCakN5QUFKTFVCUVFFUEJTQUFKTE1CQzBFQUMzUUJBWDhDUUFKQUFrQUNRQ0FBUVFGSEJFQUNRQ0FBUVFKckRnTUNBd1FBQ3d3RUN5TlpJZ0FqbmdGSElRRWdBQ1NlQVNBQkR3c2pjQ0lBSTU4QlJ5RUJJQUFrbndFZ0FROExJNEFCSWdBam9BRkhJUUVnQUNTZ0FTQUJEd3Nqa2dFaUFDT2hBVWNoQVNBQUpLRUJJQUVQQzBFQUMxVUFBa0FDUUFKQUlBQkJBVWNFUUNBQVFRSkdEUUVnQUVFRFJnMENEQU1MUVFFZ0FYUkJnUUZ4UVFCSER3dEJBU0FCZEVHSEFYRkJBRWNQQzBFQklBRjBRZjRBY1VFQVJ3OExRUUVnQVhSQkFYRkJBRWNMY3dFQmZ5TmJJQUJySVFBRFFDQUFRUUJNQkVCQmdCQWpXbXRCQW5RaUFVRUNkQ0FCSTRJQ0d5UmJJMXNnQUVFZmRTSUJJQUFnQVdwemF5RUFJMkZCQVdwQkIzRWtZUXdCQ3dzZ0FDUmJJMWxCQUNOWUd3Ui9JMTlCRDNFRlFROFBDeU5RSTJFUVpnUi9RUUVGUVg4TGJFRVBhZ3RzQVFGL0kzSWdBR3NoQUFOQUlBQkJBRXdFUUVHQUVDTnhhMEVDZENPQ0FuUWtjaU55SUFCQkgzVWlBU0FBSUFGcWMyc2hBQ040UVFGcVFRZHhKSGdNQVFzTElBQWtjaU53UVFBamJ4c0VmeU4yUVE5eEJVRVBEd3NqWnlONEVHWUVmMEVCQlVGL0MyeEJEMm9MRHdBamhBRkJBWFZCc1A0RGFoQWRDeXNCQVg4amhBRkJBV29oQUFOQUlBQkJJRWhGQkVBZ0FFRWdheUVBREFFTEN5QUFKSVFCRUdra2h3RUw1Z0VCQTM4amdBRkZRUUVqZnhzRVFFRVBEd3NqaFFFaEFpT0dBUVJBUVp6K0F4QWRRUVYxUVE5eElnSWtoUUZCQUNTR0FRc2pod0VqaEFGQkFYRkZRUUowZFVFUGNTRUJBa0FDUUFKQUFrQWdBZ1JBSUFKQkFVWU5BU0FDUVFKR0RRSU1Bd3NnQVVFRWRTRUJEQU1MUVFFaEF3d0NDeUFCUVFGMUlRRkJBaUVEREFFTElBRkJBblVoQVVFRUlRTUxJQU5CQUVvRWZ5QUJJQU50QlVFQUMwRVBhaUVCSTRJQklBQnJJUUFEUUNBQVFRQk1CRUJCZ0JBamdRRnJRUUYwSTRJQ2RDU0NBU09DQVNBQVFSOTFJZ0lnQUNBQ2FuTnJJUUFRYWd3QkN3c2dBQ1NDQVNBQkM0OEJBUUovSTVNQklBQnJJZ0JCQUV3RVFDT1lBU09OQVhRamdnSjBJQUJCSDNVaUFTQUFJQUZxYzJzaEFDT1pBU0lCUVFGMUlnSWdBVUVCY1NBQ1FRRnhjeUlCUVE1MGNpSUNRYjkvY1NBQlFRWjBjaUFDSTQ0Qkd5U1pBUXRCQUNBQUlBQkJBRWdiSkpNQkk1SUJRUUFqa1FFYkJIOGpsd0ZCRDNFRlFROFBDMEYvUVFFam1RRkJBWEViYkVFUGFnc3dBQ0FBUVR4R0JFQkIvd0FQQ3lBQVFUeHJRYUNOQm13Z0FXeEJBM1ZCb0kwR2JVRThha0dnalFac1FZenhBbTBMbHdFQkFYOUJBQ1NrQVNBQVFROGpxZ0ViSUFGQkR5T3JBUnRxSUFKQkR5T3NBUnRxSUFOQkR5T3RBUnRxSVFRZ0FFRVBJNjRCR3lBQlFROGpyd0ViYWlFQUlBQWdBa0VQSTdBQkcyb2hBU0FEUVE4anNRRWJJUU5CQUNTbEFVRUFKS1lCSUFRanFBRkJBV29RYlNFQUlBRWdBMm9qcVFGQkFXb1FiU0VCSUFBa29nRWdBU1NqQVNBQlFmOEJjU0FBUWY4QmNVRUlkSElML3dJQkJYOGpUQ0FBYWlJQ0pFd2pXeUFDYTBFQVRDSUNSUVJBUVFFUVpTRUNDeU5tSUFCcUlnRWtaaU55SUFGclFRQk1JZ0ZGQkVCQkFoQmxJUUVMSTNrZ0FHb2tlVUVBSTRJQkkzbHJRUUJLSTRZQkcwVWlCRVVFUUVFREVHVWhCQXNqaUFFZ0FHb2tpQUVqa3dFamlBRnJRUUJNSWdWRkJFQkJCQkJsSVFVTElBSUVRQ05NSVFOQkFDUk1JQU1RWnlTYUFRc2dBUVJBSTJZaEEwRUFKR1lnQXhCb0pKc0JDeUFFQkVBamVTRURRUUFrZVNBREVHc2tuQUVMSUFVRVFDT0lBU0VEUVFBa2lBRWdBeEJzSkowQkMwRUJJQVZCQVNBRVFRRWdBU0FDR3hzYkJFQkJBU1NtQVF0QmdJQ0FBaU9DQW5SQnhOZ0NiU0lDSVFFanRBRWdBR29pQUNBQ1RnUkFJQUFnQVdzaEFFRUJJNlVCUVFFanBBRWpwZ0ViR3dSQUk1b0JJNXNCSTV3Qkk1MEJFRzRhQlNBQUpMUUJDeU8yQVNJQ1FRRjBRWUNad1FCcUlnRWpvZ0ZCQW1vNkFBQWdBVUVCYWlPakFVRUNham9BQUNBQ1FRRnFJZ0ZCLy84RFRnUi9JQUZCQVdzRklBRUxKTFlCQ3lBQUpMUUJDNlVEQVFaL0lBQVFaeUVCSUFBUWFDRUNJQUFRYXlFRUlBQVFiQ0VGSUFFa21nRWdBaVNiQVNBRUpKd0JJQVVrblFFanRBRWdBR29pQUVHQWdJQUNJNElDZEVIRTJBSnRUZ1JBSUFCQmdJQ0FBaU9DQW5SQnhOZ0NiV3NoQUNBQklBSWdCQ0FGRUc0aEF5TzJBVUVCZEVHQW1jRUFhaUlHSUFOQmdQNERjVUVJZFVFQ2Fqb0FBQ0FHUVFGcUlBTkIvd0Z4UVFKcU9nQUFJejBFUUNBQlFROUJEMEVQRUc0aEFTTzJBVUVCZEVHQW1TRnFJZ01nQVVHQS9nTnhRUWgxUVFKcU9nQUFJQU5CQVdvZ0FVSC9BWEZCQW1vNkFBQkJEeUFDUVE5QkR4QnVJUUVqdGdGQkFYUkJnSmtwYWlJQ0lBRkJnUDREY1VFSWRVRUNham9BQUNBQ1FRRnFJQUZCL3dGeFFRSnFPZ0FBUVE5QkR5QUVRUThRYmlFQkk3WUJRUUYwUVlDWk1Xb2lBaUFCUVlEK0EzRkJDSFZCQW1vNkFBQWdBa0VCYWlBQlFmOEJjVUVDYWpvQUFFRVBRUTlCRHlBRkVHNGhBU08yQVVFQmRFR0FtVGxxSWdJZ0FVR0EvZ054UVFoMVFRSnFPZ0FBSUFKQkFXb2dBVUgvQVhGQkFtbzZBQUFMSTdZQlFRRnFJZ0ZCLy84RFRnUi9JQUZCQVdzRklBRUxKTFlCQ3lBQUpMUUJDeDRCQVg4Z0FCQmtJUUVnQVVWQkFDTTZHd1JBSUFBUWJ3VWdBQkJ3Q3dzdkFRSi9RZGNBSTRJQ2RDRUJJNmNCSVFBRFFDQUFJQUZPQkVBZ0FSQnhJQUFnQVdzaEFBd0JDd3NnQUNTbkFRdWtBd0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQmtQNERSd1JBSUFCQmxmNERSZzBCQWtBZ0FFR1IvZ05yRGhZR0N4QVVBQWNNRVJVRENBMFNGZ1FKRGhNWEJRb1BBQXNNRnd0QmtQNERFQjFCZ0FGeUR3dEJsZjRERUIxQi93RnlEd3RCbXY0REVCMUIvd0J5RHd0Qm4vNERFQjFCL3dGeUR3dEJwUDRERUIwUEMwR1IvZ01RSFVFL2NnOExRWmIrQXhBZFFUOXlEd3RCbS80REVCMUIvd0Z5RHd0Qm9QNERFQjFCL3dGeUR3dEJwZjRERUIwUEMwR1MvZ01RSFE4TFFaZitBeEFkRHd0Qm5QNERFQjFCbndGeUR3dEJvZjRERUIwUEMwR0FBVUVBSTdJQkd5RUFJQUJCQVhJZ0FFRitjU05ZR3lFQUlBQkJBbklnQUVGOWNTTnZHeUVBSUFCQkJISWdBRUY3Y1NOL0d5RUFJQUJCQ0hJZ0FFRjNjU09SQVJ0QjhBQnlEd3RCay80REVCMUIvd0Z5RHd0Qm1QNERFQjFCL3dGeUR3dEJuZjRERUIxQi93RnlEd3RCb3Y0REVCMFBDMEdVL2dNUUhVRy9BWElQQzBHWi9nTVFIVUcvQVhJUEMwR2UvZ01RSFVHL0FYSVBDMEdqL2dNUUhVRy9BWElQQzBGL0M1d0JBUUYvSTlvQklRQWoyd0VFUUNBQVFYdHhJQUJCQkhJajBnRWJJUUFnQUVGK2NTQUFRUUZ5STlVQkd5RUFJQUJCZDNFZ0FFRUljaVBUQVJzaEFDQUFRWDF4SUFCQkFuSWoxQUViSVFBRkk5d0JCRUFnQUVGK2NTQUFRUUZ5STlZQkd5RUFJQUJCZlhFZ0FFRUNjaVBYQVJzaEFDQUFRWHR4SUFCQkJISWoyQUViSVFBZ0FFRjNjU0FBUVFoeUk5a0JHeUVBQ3dzZ0FFSHdBWElMMUFJQUlBQkJnSUFDU0FSQVFYOFBDeUFBUVlEQUFraEJBQ0FBUVlDQUFrNGJCRUJCZnc4TElBQkJnUHdEU0VFQUlBQkJnTUFEVGhzRVFDQUFRWUJBYWhBZER3c2dBRUdmL1FOTVFRQWdBRUdBL0FOT0d3UkFRZjhCUVg4ajRRRkJBa2diRHdzZ0FFSE4vZ05HQkVCQi93RWhBRUhOL2dNUUhVRUJjVVVFUUVIK0FTRUFDeU9DQWtVRVFDQUFRZjkrY1NFQUN5QUFEd3NnQUVIRS9nTkdCRUFnQUNQdEFSQWZJKzBCRHdzZ0FFR20vZ05NUVFBZ0FFR1EvZ05PR3dSQUVISWdBQkJ6RHdzZ0FFR3YvZ05NUVFBZ0FFR24vZ05PR3dSQVFmOEJEd3NnQUVHLy9nTk1RUUFnQUVHdy9nTk9Hd1JBRUhJamZ3UkFFR2tQQzBGL0R3c2dBRUdFL2dOR0JFQWdBQ1BHQVVHQS9nTnhRUWgxSWdBUUh5QUFEd3NnQUVHRi9nTkdCRUFnQUNQSEFSQWZJOGNCRHdzZ0FFR1AvZ05HQkVBanZ3RkI0QUZ5RHdzZ0FFR0EvZ05HQkVBUWRBOExRWDhMS1FFQmZ5UGVBU0FBUmdSQVFRRWs0QUVMSUFBUWRTSUJRWDlHQkg4Z0FCQWRCU0FCUWY4QmNRc0xwQUlCQTM4ajlnRUVRQThMSS9jQklRTWorQUVoQWlBQVFmOC9UQVJBSUFJRWZ5QUJRUkJ4UlFWQkFBdEZCRUFnQVVFUGNTSUFCRUFnQUVFS1JnUkFRUUVrOUFFTEJVRUFKUFFCQ3dzRklBQkIvLzhBVEFSQUkvb0JJZ1FFZnlBQVFmL2ZBRXdGUVFFTEJFQWdBVUVQY1NQeUFTQUNHeUVBSUFNRWZ5QUJRUjl4SVFFZ0FFSGdBWEVGSS9rQkJIOGdBVUgvQUhFaEFTQUFRWUFCY1FWQkFDQUFJQVFiQ3dzaEFDQUFJQUZ5SlBJQkJTUHlBVUgvQVhFZ0FVRUFTa0VJZEhJazhnRUxCVUVBSUFCQi83OEJUQ0FDR3dSQUkvVUJRUUFnQXhzRVFDUHlBVUVmY1NBQlFlQUJjWElrOGdFUEN5QUJRUTl4SUFGQkEzRWorZ0ViSlBNQkJVRUFJQUJCLy84QlRDQUNHd1JBSUFNRVFDQUJRUUZ4UVFCSEpQVUJDd3NMQ3dzTE9BRUJmeU5PSVFFZ0FFSHdBSEZCQkhVa1RTQUFRUWh4UVFCSEpFNGdBRUVIY1NSUEkyVkJBQ05PUlVFQUlBRWJHd1JBUVFBa1dBc0xaUUFqV0FSQVFRQWpYU05VR3dSQUkxOUJBV3BCRDNFa1h3c2pVeUFBUVFoeFFRQkhSd1JBUVJBalgydEJEM0VrWHdzTElBQkJCSFZCRDNFa1VpQUFRUWh4UVFCSEpGTWdBRUVIY1NSVUlBQkIrQUZ4UVFCS0lnQWtXU0FBUlFSQVFRQWtXQXNMWlFBamJ3UkFRUUFqZENOckd3UkFJM1pCQVdwQkQzRWtkZ3NqYWlBQVFRaHhRUUJIUndSQVFSQWpkbXRCRDNFa2Rnc0xJQUJCQkhWQkQzRWthU0FBUVFoeFFRQkhKR29nQUVFSGNTUnJJQUJCK0FGeFFRQktJZ0FrY0NBQVJRUkFJQUFrYndzTGNnQWprUUVFUUVFQUk1VUJJNHdCR3dSQUk1Y0JRUUZxUVE5eEpKY0JDeU9MQVNBQVFRaHhRUUJIUndSQVFSQWpsd0ZyUVE5eEpKY0JDd3NnQUVFRWRVRVBjU1NLQVNBQVFRaHhRUUJISklzQklBQkJCM0VrakFFZ0FFSDRBWEZCQUVvaUFDU1NBU0FBUlFSQUlBQWtrUUVMQ3pnQUlBQkJCSFVralFFZ0FFRUljVUVBUnlTT0FTQUFRUWR4SWdBa2p3RWdBRUVCZENJQVFRRklCRUJCQVNFQUN5QUFRUU4wSkpnQkM2b0JBUUovUVFFa1dDTmVSUVJBUWNBQUpGNExRWUFRSTFwclFRSjBJZ0JCQW5RZ0FDT0NBaHNrV3lOVUJFQWpWQ1JjQlVFSUpGd0xRUUVrWFNOU0pGOGpXaVJrSTAwRVFDTk5KR01GUVFna1l3dEJBU05QUVFCS0lnQWpUVUVBU2hza1lrRUFKR1VnQUFSL0FuOGpaQ0lBSTA5MUlRRkJBU05PQkg5QkFTUmxJQUFnQVdzRklBQWdBV29MUWY4UFNnMEFHa0VBQ3dWQkFBc0VRRUVBSkZnTEkxbEZCRUJCQUNSWUN3dVNBUUVDZnlBQVFRZHhJZ0VrVnlOVklBRkJDSFJ5SkZvanRRRkJBWEZCQVVZaEFpTldSU0lCQkVBZ0FFSEFBSEZCQUVjaEFRc2dBa1VFUUVFQUlBRWpYa0VBVEJzRVFDTmVRUUZySkY1QkFDTmVSU0FBUVlBQmNSc0VRRUVBSkZnTEN3c2dBRUhBQUhGQkFFY2tWaUFBUVlBQmNRUkFFSDBqVmtFQVFRQWpYa0hBQUVZZ0Foc2JCRUFqWGtFQmF5UmVDd3NMUUFCQkFTUnZJM1ZGQkVCQndBQWtkUXRCZ0JBamNXdEJBblFqZ2dKMEpISWphd1JBSTJza2N3VkJDQ1J6QzBFQkpIUWphU1IySTNCRkJFQkJBQ1J2Q3d1U0FRRUNmeUFBUVFkeElnRWtiaU5zSUFGQkNIUnlKSEVqdFFGQkFYRkJBVVloQWlOdFJTSUJCRUFnQUVIQUFIRkJBRWNoQVFzZ0FrVUVRRUVBSUFFamRVRUFUQnNFUUNOMVFRRnJKSFZCQUNOMVJTQUFRWUFCY1JzRVFFRUFKRzhMQ3dzZ0FFSEFBSEZCQUVja2JTQUFRWUFCY1FSQUVIOGpiVUVBUVFBamRVSEFBRVlnQWhzYkJFQWpkVUVCYXlSMUN3c0xQUUJCQVNSL0k0TUJSUVJBUVlBQ0pJTUJDMEdBRUNPQkFXdEJBWFFqZ2dKMEpJSUJJNElCUVFacUpJSUJRUUFraEFFamdBRkZCRUJCQUNSL0N3dVBBUUVCZnlBQVFRZHhJZ0VrZmlOOElBRkJDSFJ5SklFQkk3VUJRUUZ4UVFGR0lnRkZCRUJCQUVFQUlBQkJ3QUJ4STMwYkk0TUJRUUJNR3dSQUk0TUJRUUZySklNQlFRQWpnd0ZGSUFCQmdBRnhHd1JBUVFBa2Z3c0xDeUFBUWNBQWNVRUFSeVI5SUFCQmdBRnhCRUFRZ1FFamZVRUFRUUFqZ3dGQmdBSkdJQUViR3dSQUk0TUJRUUZySklNQkN3c0xVZ0JCQVNTUkFTT1dBVVVFUUVIQUFDU1dBUXNqbUFFampRRjBJNElDZENTVEFTT01BUVJBSTR3QkpKUUJCVUVJSkpRQkMwRUJKSlVCSTRvQkpKY0JRZi8vQVNTWkFTT1NBVVVFUUVFQUpKRUJDd3VMQVFFQ2Z5TzFBVUVCY1VFQlJpRUNJNUFCUlNJQkJFQWdBRUhBQUhGQkFFY2hBUXNnQWtVRVFFRUFJQUVqbGdGQkFFd2JCRUFqbGdGQkFXc2tsZ0ZCQUNPV0FVVWdBRUdBQVhFYkJFQkJBQ1NSQVFzTEN5QUFRY0FBY1VFQVJ5U1FBU0FBUVlBQmNRUkFFSU1CSTVBQlFRQkJBQ09XQVVIQUFFWWdBaHNiQkVBamxnRkJBV3NrbGdFTEN3dWRCQUFqc2dGRlFRQWdBRUdtL2dOSEd3UkFRUUFQQ3dKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQmtQNERSd1JBSUFCQm12NERSZzBCQWtBZ0FFR1IvZ05yRGhZREJ3c1BBQVFJREJBQUJRa05FUUFHQ2c0U0V4UVZBQXNNRlFzZ0FSQjREQlVMUVFBZ0FVR0FBWEZCQUVjaUFDT0FBUnNFUUVFQUpJY0JDeUFBSklBQklBQkZCRUFnQUNSL0N3d1VDeUFCUVFaMVFRTnhKRkFnQVVFL2NTUlJRY0FBSTFGckpGNE1Fd3NnQVVFR2RVRURjU1JuSUFGQlAzRWthRUhBQUNOb2F5UjFEQklMSUFFa2VrR0FBaU42YXlTREFRd1JDeUFCUVQ5eEpJa0JRY0FBSTRrQmF5U1dBUXdRQ3lBQkVIa01Ed3NnQVJCNkRBNExRUUVraGdFZ0FVRUZkVUVQY1NSN0RBMExJQUVRZXd3TUN5QUJKRlVqVjBFSWRDQUJjaVJhREFzTElBRWtiQ051UVFoMElBRnlKSEVNQ2dzZ0FTUjhJMzVCQ0hRZ0FYSWtnUUVNQ1FzZ0FSQjhEQWdMSUFFUWZnd0hDeUFCRUlBQkRBWUxJQUVRZ2dFTUJRc2dBUkNFQVF3RUN5QUJRUVIxUVFkeEpLZ0JJQUZCQjNFa3FRRkJBU1NrQVF3REN5QUJFQ3RCQVNTbEFRd0NDeU95QVNJQUJIOUJBQVVnQVVHQUFYRUxCRUJCQnlTMUFVRUFKR0ZCQUNSNEN5QUJRWUFCY1VWQkFDQUFHd1JBQWtCQmtQNERJUUFEUUNBQVFhYitBMDROQVNBQVFRQVFrZ0VnQUVFQmFpRUFEQUFBQ3dBTEN5QUJRWUFCY1VFQVJ5U3lBUXdCQzBFQkR3dEJBUXM4QVFGL0lBQkJDSFFoQVVFQUlRQURRQUpBSUFCQm53RktEUUFnQUVHQS9BTnFJQUFnQVdvUUhSQWZJQUJCQVdvaEFBd0JDd3RCaEFVayt3RUxKUUVCZjBIUi9nTVFIU0VBUWRMK0F4QWRRZjhCY1NBQVFmOEJjVUVJZEhKQjhQOERjUXNwQVFGL1FkUCtBeEFkSVFCQjFQNERFQjFCL3dGeElBQkIvd0Z4UVFoMGNrSHdQM0ZCZ0lBQ2FndUdBUUVEZnlPQkFrVUVRQThMSUFCQmdBRnhSVUVBSS93Qkd3UkFRUUFrL0FGQjFmNERRZFgrQXhBZFFZQUJjaEFmRHdzUWh3RWhBUkNJQVNFQ0lBQkIvMzV4UVFGcVFRUjBJUU1nQUVHQUFYRUVRRUVCSlB3QklBTWsvUUVnQVNUK0FTQUNKUDhCUWRYK0F5QUFRZjkrY1JBZkJTQUJJQUlnQXhDVEFVSFYvZ05CL3dFUUh3c0xXUUVFZjBFQlFlditBeUlESUFCR0lBQkI2ZjREUmhzRVFDQUFRUUZySWdRUUhVRy9mM0VpQWtFL2NTSUZRVUJySUFVZ0FDQURSaHRCZ0pBRWFpQUJPZ0FBSUFKQmdBRnhCRUFnQkNBQ1FRRnFRWUFCY2hBZkN3c0xNUUFDUUFKQUFrQUNRQ0FBQkVBQ1FDQUFRUUZyRGdNQ0F3UUFDd3dFQzBFSkR3dEJBdzhMUVFVUEMwRUhEd3RCQUFzZkFDQUFRUUVqekFFUWl3RWlBSFJ4Qkg5QkFTQUFkQ0FCY1VVRlFRQUxDNFlCQVFSL0EwQWdBaUFBU0FSQUlBSkJCR29oQWlQR0FTSUJRUVJxUWYvL0EzRWlBeVRHQVNQTEFRUkFJOGtCSVFRanlBRUVRQ1BLQVNUSEFVRUJKTUlCUVFJUVdrRUFKTWdCUVFFa3lRRUZJQVFFUUVFQUpNa0JDd3NnQVNBREVJd0JCRUFqeHdGQkFXb2lBVUgvQVVvRVFFRUJKTWdCUVFBaEFRc2dBU1RIQVFzTERBRUxDd3NOQUNQRkFSQ05BVUVBSk1VQkMwWUJBWDhqeGdFaEFFRUFKTVlCUVlUK0EwRUFFQjhqeXdFRWZ5QUFRUUFRakFFRlFRQUxCRUFqeHdGQkFXb2lBRUgvQVVvRVFFRUJKTWdCUVFBaEFBc2dBQ1RIQVFzTGZBRURmeVBMQVNFQklBQkJCSEZCQUVja3l3RWdBRUVEY1NFQ0lBRkZCRUFqekFFUWl3RWhBU0FDRUlzQklRTWp4Z0VoQUNQTEFRUi9RUUVnQVhRZ0FIRUZRUUVnQTNRZ0FIRkJBRUVCSUFGMElBQnhHd3NFUUNQSEFVRUJhaUlBUWY4QlNnUkFRUUVreUFGQkFDRUFDeUFBSk1jQkN3c2dBaVRNQVF2SUJnRUJmd0pBQWtBZ0FFSE4vZ05HQkVCQnpmNERJQUZCQVhFUUh3d0JDeUFBUWREK0EwWkJBQ09BQWhzRVFFRUFKSUFDUWY4QkpJd0NEQUlMSUFCQmdJQUNTQVJBSUFBZ0FSQjNEQUVMSUFCQmdNQUNTRUVBSUFCQmdJQUNUaHNOQVNBQVFZRDhBMGhCQUNBQVFZREFBMDRiQkVBZ0FFR0FRR29nQVJBZkRBSUxJQUJCbi8wRFRFRUFJQUJCZ1B3RFRoc0VRQ1BoQVVFQ1RnOExJQUJCLy8wRFRFRUFJQUJCb1AwRFRoc05BQ0FBUVlMK0EwWUVRQ0FCUVFGeFFRQkhKTThCSUFGQkFuRkJBRWNrMEFFZ0FVR0FBWEZCQUVjazBRRkJBUThMSUFCQnB2NERURUVBSUFCQmtQNERUaHNFUUJCeUlBQWdBUkNGQVE4TElBQkJ2LzREVEVFQUlBQkJzUDREVGhzRVFCQnlJMzhFUUNPRUFVRUJkVUd3L2dOcUlBRVFId3dDQ3d3Q0N5QUFRY3YrQTB4QkFDQUFRY0QrQTA0YkJFQWdBRUhBL2dOR0JFQWdBUkEvREFNTElBQkJ3ZjREUmdSQVFjSCtBeUFCUWZnQmNVSEIvZ01RSFVFSGNYSkJnQUZ5RUI4TUFnc2dBRUhFL2dOR0JFQkJBQ1R0QVNBQVFRQVFId3dDQ3lBQVFjWCtBMFlFUUNBQkpPSUJEQU1MSUFCQnh2NERSZ1JBSUFFUWhnRU1Bd3NDUUFKQUFrQUNRQ0FBUWNQK0EwY0VRQ0FBUWNMK0Eyc09DZ0VFQkFRRUJBUUVBd0lFQ3lBQkpPNEJEQVlMSUFFazd3RU1CUXNnQVNUd0FRd0VDeUFCSlBFQkRBTUxEQUlMSUFCQjFmNERSZ1JBSUFFUWlRRU1BUXRCQVNBQVFjLytBMFlnQUVIdy9nTkdHd1JBSS93QkJFQWovZ0VpQWtHQWdBRk9CSDhnQWtILy93Rk1CVUVBQ3dSL1FRRUZJQUpCLzc4RFRFRUFJQUpCZ0tBRFRoc0xEUUlMQ3lBQVFlditBMHhCQUNBQVFlaitBMDRiQkVBZ0FDQUJFSW9CREFJTElBQkJoLzREVEVFQUlBQkJoUDREVGhzRVFCQ09BUUpBQWtBQ1FBSkFJQUJCaFA0RFJ3UkFJQUJCaGY0RGF3NERBUUlEQkFzUWp3RU1CUXNDUUNQTEFRUkFJOGtCRFFFanlBRUVRRUVBSk1nQkN3c2dBU1RIQVFzTUJRc2dBU1RLQVNQSkFVRUFJOHNCR3dSQUlBRWt4d0ZCQUNUSkFRc01CQXNnQVJDUUFRd0RDd3dDQ3lBQVFZRCtBMFlFUUNBQlFmOEJjeVRhQVNQYUFTSUNRUkJ4UVFCSEpOc0JJQUpCSUhGQkFFY2szQUVMSUFCQmovNERSZ1JBSUFFUUx3d0NDeUFBUWYvL0EwWUVRQ0FCRUM0TUFndEJBUThMUVFBUEMwRUJDeUFBSTk4QklBQkdCRUJCQVNUZ0FRc2dBQ0FCRUpFQkJFQWdBQ0FCRUI4TEMxd0JBMzhEUUFKQUlBTWdBazROQUNBQUlBTnFFSFloQlNBQklBTnFJUVFEUUNBRVFmKy9Ba3hGQkVBZ0JFR0FRR29oQkF3QkN3c2dCQ0FGRUpJQklBTkJBV29oQXd3QkN3c2ord0ZCSUNPQ0FuUWdBa0VFZFd4cUpQc0JDM1FCQW44ai9BRkZCRUFQQzBFUUlRQWovZ0VqL3dFQ2Z5UDlBU0lCUVJCSUJFQWdBU0VBQ3lBQUN4Q1RBU1ArQVNBQWFpVCtBU1AvQVNBQWFpVC9BU0FCSUFCcklnQWsvUUZCMWY0RElRRWdBRUVBVEFSQVFRQWsvQUVnQVVIL0FSQWZCU0FCSUFCQkJIVkJBV3RCLzM1eEVCOExDek1BSSswQkkrSUJSa0VBSUFCQkFVWkJBU0FBR3hzRVFDQUJRUVJ5SWdGQndBQnhCRUFRV3dzRklBRkJlM0VoQVFzZ0FRdUJBZ0VGZnlQakFVVUVRQThMSStFQklRQWdBQ1B0QVNJQ1FaQUJUZ1IvUVFFRlFmZ0NJNElDZENJQklRTWo3QUVpQkNBQlRnUi9RUUlGUVFOQkFDQUVJQU5PR3dzTElnRkhCRUJCd2Y0REVCMGhBQ0FCSk9FQlFRQWhBZ0pBQWtBQ1FBSkFJQUVFUUNBQlFRRnJEZ01CQWdNRUN5QUFRWHh4SWdCQkNIRkJBRWNoQWd3REN5QUFRWDF4UVFGeUlnQkJFSEZCQUVjaEFnd0NDeUFBUVg1eFFRSnlJZ0JCSUhGQkFFY2hBZ3dCQ3lBQVFRTnlJUUFMSUFJRVFCQmJDeUFCUlFSQUVKUUJDeUFCUVFGR0JFQkJBU1RBQVVFQUVGb0xRY0grQXlBQklBQVFsUUVRSHdVZ0FrR1pBVVlFUUVIQi9nTWdBVUhCL2dNUUhSQ1ZBUkFmQ3dzTG9BRUJBWDhqNHdFRVFDUHNBU0FBYWlUc0FTTTVJUUVEUUNQc0FVRUVJNElDSWdCMFFjZ0RJQUIwSSswQlFaa0JSaHRPQkVBajdBRkJCQ09DQWlJQWRFSElBeUFBZENQdEFVR1pBVVliYXlUc0FTUHRBU0lBUVpBQlJnUkFJQUVFUUJCWUJTQUFFRmNMRUZsQmZ5UktRWDhrU3dVZ0FFR1FBVWdFUUNBQlJRUkFJQUFRVndzTEMwRUFJQUJCQVdvZ0FFR1pBVW9iSk8wQkRBRUxDd3NRbGdFTE9BRUJmMEVFSTRJQ0lnQjBRY2dESUFCMEkrMEJRWmtCUmhzaEFBTkFJK3NCSUFCT0JFQWdBQkNYQVNQckFTQUFheVRyQVF3QkN3c0xzZ0VCQTM4ajBRRkZCRUFQQ3dOQUlBTWdBRWdFUUNBRFFRUnFJUU1DZnlQTkFTSUNRUVJxSWdGQi8vOERTZ1JBSUFGQmdJQUVheUVCQ3lBQkN5VE5BU0FDUVFGQkFrRUhJOUFCR3lJQ2RIRUVmMEVCSUFKMElBRnhSUVZCQUFzRVFFR0IvZ05CZ2Y0REVCMUJBWFJCQVdwQi93RnhFQjhqemdGQkFXb2lBVUVJUmdSQVFRQWt6Z0ZCQVNUREFVRURFRnBCZ3Y0RFFZTCtBeEFkUWY5K2NSQWZRUUFrMFFFRklBRWt6Z0VMQ3d3QkN3c0xsUUVBSS9zQlFRQktCRUFqK3dFZ0FHb2hBRUVBSlBzQkN5T05BaUFBYWlTTkFpT1JBa1VFUUNNM0JFQWo2d0VnQUdvazZ3RVFtQUVGSUFBUWx3RUxJellFUUNPbkFTQUFhaVNuQVJCeUJTQUFFSEVMSUFBUW1RRUxJemdFUUNQRkFTQUFhaVRGQVJDT0FRVWdBQkNOQVFzamxBSWdBR29pQUNPU0FrNEVRQ09UQWtFQmFpU1RBaUFBSTVJQ2F5RUFDeUFBSkpRQ0N3d0FRUVFRbWdFampBSVFIUXNwQVFGL1FRUVFtZ0VqakFKQkFXcEIvLzhEY1JBZElRQVFtd0ZCL3dGeElBQkIvd0Z4UVFoMGNnc09BRUVFRUpvQklBQWdBUkNTQVFzd0FFRUJJQUIwUWY4QmNTRUFJQUZCQUVvRVFDT0tBaUFBY2tIL0FYRWtpZ0lGSTRvQ0lBQkIvd0Z6Y1NTS0Fnc0xDUUJCQlNBQUVKNEJDem9CQVg4Z0FVRUFUZ1JBSUFCQkQzRWdBVUVQY1dwQkVIRkJBRWNRbndFRklBRkJIM1VpQWlBQklBSnFjMEVQY1NBQVFROXhTeENmQVFzTENRQkJCeUFBRUo0QkN3a0FRUVlnQUJDZUFRc0pBRUVFSUFBUW5nRUxQd0VDZnlBQlFZRCtBM0ZCQ0hVaEFpQUJRZjhCY1NJQklRTWdBQ0FCRUpFQkJFQWdBQ0FERUI4TElBQkJBV29pQUNBQ0VKRUJCRUFnQUNBQ0VCOExDdzRBUVFnUW1nRWdBQ0FCRUtRQkMxb0FJQUlFUUNBQVFmLy9BM0VpQUNBQmFpQUFJQUZ6Y3lJQVFSQnhRUUJIRUo4QklBQkJnQUp4UVFCSEVLTUJCU0FBSUFGcVFmLy9BM0VpQWlBQVFmLy9BM0ZKRUtNQklBQWdBWE1nQW5OQmdDQnhRUUJIRUo4QkN3c0xBRUVFRUpvQklBQVFkZ3VwQlFFQmZ3SkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBQVJBSUFCQkFVWU5BUUpBSUFCQkFtc09EZ01FQlFZSENBa0tDd3dORGc4UUFBc01FQXNNRlFzUW5BRkIvLzhEY1NJQVFZRCtBM0ZCQ0hVa2hBSWdBRUgvQVhFa2hRSU1Ed3NqaFFKQi93RnhJNFFDUWY4QmNVRUlkSElqZ3dJUW5RRU1Fd3NqaFFKQi93RnhJNFFDUWY4QmNVRUlkSEpCQVdwQi8vOERjU0lBUVlEK0EzRkJDSFVraEFJTUV3c2poQUlpQUVFQkVLQUJJQUJCQVdwQi93RnhJZ0FraEFJTURRc2poQUlpQUVGL0VLQUJJQUJCQVd0Qi93RnhJZ0FraEFJTURRc1Ftd0ZCL3dGeEpJUUNEQTBMSTRNQ0lnQkJnQUZ4UVlBQlJoQ2pBU0FBUVFGMElBQkIvd0Z4UVFkMmNrSC9BWEVrZ3dJTURRc1FuQUZCLy84RGNTT0xBaENsQVF3SUN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNpSUFJNFVDUWY4QmNTT0VBa0gvQVhGQkNIUnlJZ0ZCQUJDbUFTQUFJQUZxUWYvL0EzRWlBRUdBL2dOeFFRaDFKSWdDSUFCQi93RnhKSWtDUVFBUW9nRkJDQThMSTRVQ1FmOEJjU09FQWtIL0FYRkJDSFJ5RUtjQlFmOEJjU1NEQWd3TEN5T0ZBa0gvQVhFamhBSkIvd0Z4UVFoMGNrRUJhMEgvL3dOeElnQkJnUDREY1VFSWRTU0VBZ3dMQ3lPRkFpSUFRUUVRb0FFZ0FFRUJha0gvQVhFaUFDU0ZBZ3dGQ3lPRkFpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFaUFDU0ZBZ3dGQ3hDYkFVSC9BWEVraFFJTUJRc2pnd0lpQUVFQmNVRUFTeENqQVNBQVFRZDBJQUJCL3dGeFFRRjJja0gvQVhFa2d3SU1CUXRCZnc4TEk0d0NRUUpxUWYvL0EzRWtqQUlNQkFzZ0FFVVFvUUZCQUJDaUFRd0RDeUFBUlJDaEFVRUJFS0lCREFJTEk0d0NRUUZxUWYvL0EzRWtqQUlNQVF0QkFCQ2hBVUVBRUtJQlFRQVFud0VMUVFRUEN5QUFRZjhCY1NTRkFrRUlDNWtHQVFGL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVJCSEJFQWdBRUVSUmcwQkFrQWdBRUVTYXc0T0F3UUZCZ2NJQ1FvTERBME9EeEFBQ3d3UUN5T0JBZ1JBUWMzK0F4Q25BVUgvQVhFaUFFRUJjUVJBUWMzK0F5QUFRWDV4SWdCQmdBRnhCSDlCQUNTQ0FpQUFRZjkrY1FWQkFTU0NBaUFBUVlBQmNnc1FuUUZCeEFBUEN3dEJBU1NSQWd3UUN4Q2NBVUgvL3dOeElnQkJnUDREY1VFSWRTU0dBaUFBUWY4QmNTU0hBaU9NQWtFQ2FrSC8vd054Skl3Q0RCRUxJNGNDUWY4QmNTT0dBa0gvQVhGQkNIUnlJNE1DRUowQkRCQUxJNGNDUWY4QmNTT0dBa0gvQVhGQkNIUnlRUUZxUWYvL0EzRWlBRUdBL2dOeFFRaDFKSVlDREJBTEk0WUNJZ0JCQVJDZ0FTQUFRUUZxUWY4QmNTU0dBaU9HQWtVUW9RRkJBQkNpQVF3T0N5T0dBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWtoZ0lqaGdKRkVLRUJRUUVRb2dFTURRc1Ftd0ZCL3dGeEpJWUNEQW9MSTRNQ0lnRkJnQUZ4UVlBQlJpRUFJNG9DUVFSMlFRRnhJQUZCQVhSeVFmOEJjU1NEQWd3S0N4Q2JBU0VBSTR3Q0lBQkJHSFJCR0hWcVFmLy9BM0ZCQVdwQi8vOERjU1NNQWtFSUR3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQ09IQWtIL0FYRWpoZ0pCL3dGeFFRaDBjaUlCUVFBUXBnRWdBQ0FCYWtILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWlBQVFmOEJjU1NKQWtFQUVLSUJRUWdQQ3lPSEFrSC9BWEVqaGdKQi93RnhRUWgwY2hDbkFVSC9BWEVrZ3dJTUNBc2pod0pCL3dGeEk0WUNRZjhCY1VFSWRISkJBV3RCLy84RGNTSUFRWUQrQTNGQkNIVWtoZ0lNQ0Fzamh3SWlBRUVCRUtBQklBQkJBV3BCL3dGeElnQWtod0lnQUVVUW9RRkJBQkNpQVF3R0N5T0hBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NIQWlBQVJSQ2hBVUVCRUtJQkRBVUxFSnNCUWY4QmNTU0hBZ3dDQ3lPREFpSUJRUUZ4UVFGR0lRQWppZ0pCQkhaQkFYRkJCM1FnQVVIL0FYRkJBWFp5SklNQ0RBSUxRWDhQQ3lPTUFrRUJha0gvL3dOeEpJd0NEQUVMSUFBUW93RkJBQkNoQVVFQUVLSUJRUUFRbndFTFFRUVBDeUFBUWY4QmNTU0hBa0VJQy9VR0FRSi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBRUVnUndSQUlBQkJJVVlOQVFKQUlBQkJJbXNPRGdNRUJRWUhDQWtLQ3d3TkRnOFFBQXNNRUFzamlnSkJCM1pCQVhFRVFDT01Ba0VCYWtILy93TnhKSXdDQlJDYkFTRUFJNHdDSUFCQkdIUkJHSFZxUWYvL0EzRkJBV3BCLy84RGNTU01BZ3RCQ0E4TEVKd0JRZi8vQTNFaUFFR0EvZ054UVFoMUpJZ0NJQUJCL3dGeEpJa0NJNHdDUVFKcVFmLy9BM0VrakFJTUZBc2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQ09EQWhDZEFRd1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBja0VCYWtILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWd3TkN5T0lBaUlBUVFFUW9BRWdBRUVCYWtIL0FYRWlBQ1NJQWd3T0N5T0lBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NJQWd3T0N4Q2JBVUgvQVhFa2lBSU1EZ3RCQmtFQUk0b0NJZ0pCQlhaQkFYRkJBRXNiSWdCQjRBQnlJQUFnQWtFRWRrRUJjVUVBU3hzaEFDT0RBaUVCSUFKQkJuWkJBWEZCQUVzRWZ5QUJJQUJyUWY4QmNRVWdBU0FBUVFaeUlBQWdBVUVQY1VFSlN4c2lBRUhnQUhJZ0FDQUJRWmtCU3hzaUFHcEIvd0Z4Q3lJQlJSQ2hBU0FBUWVBQWNVRUFSeENqQVVFQUVKOEJJQUVrZ3dJTURnc2ppZ0pCQjNaQkFYRkJBRXNFUUJDYkFTRUFJNHdDSUFCQkdIUkJHSFZxUWYvL0EzRkJBV3BCLy84RGNTU01BZ1VqakFKQkFXcEIvLzhEY1NTTUFndEJDQThMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5SWdBZ0FFSC8vd054UVFBUXBnRWdBRUVCZEVILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWlBQVFmOEJjU1NKQWtFQUVLSUJRUWdQQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2lJQUVLY0JRZjhCY1NTREFnd0hDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBja0VCYTBILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWd3RkN5T0pBaUlBUVFFUW9BRWdBRUVCYWtIL0FYRWlBQ1NKQWd3R0N5T0pBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NKQWd3R0N4Q2JBVUgvQVhFa2lRSU1CZ3NqZ3dKQmYzTkIvd0Z4SklNQ1FRRVFvZ0ZCQVJDZkFRd0dDMEYvRHdzZ0FFSC9BWEVraVFKQkNBOExJQUJCQVdwQi8vOERjU0lBUVlEK0EzRkJDSFVraUFJZ0FFSC9BWEVraVFJTUF3c2dBRVVRb1FGQkFCQ2lBUXdDQ3lBQVJSQ2hBVUVCRUtJQkRBRUxJNHdDUVFGcVFmLy9BM0VrakFJTFFRUUw4UVVCQVg4Q1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRVEJIQkVBZ0FFRXhSZzBCQWtBZ0FFRXlhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPS0FrRUVka0VCY1FSQUk0d0NRUUZxUWYvL0EzRWtqQUlGRUpzQklRQWpqQUlnQUVFWWRFRVlkV3BCLy84RGNVRUJha0gvL3dOeEpJd0NDMEVJRHdzUW5BRkIvLzhEY1NTTEFpT01Ba0VDYWtILy93TnhKSXdDREJFTEk0a0NRZjhCY1NPSUFrSC9BWEZCQ0hSeUlnQWpnd0lRblFFTURnc2ppd0pCQVdwQi8vOERjU1NMQWtFSUR3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQkNuQVNJQlFRRVFvQUVnQVVFQmFrSC9BWEVpQVVVUW9RRkJBQkNpQVNBQUlBRVFuUUVNRGdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJaUFCQ25BU0lCUVg4UW9BRWdBVUVCYTBIL0FYRWlBVVVRb1FGQkFSQ2lBU0FBSUFFUW5RRU1EUXNqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRbXdGQi93RnhFSjBCREFzTFFRQVFvZ0ZCQUJDZkFVRUJFS01CREFzTEk0b0NRUVIyUVFGeFFRRkdCRUFRbXdFaEFDT01BaUFBUVJoMFFSaDFha0gvL3dOeFFRRnFRZi8vQTNFa2pBSUZJNHdDUVFGcVFmLy9BM0VrakFJTFFRZ1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaUlBSTRzQ1FRQVFwZ0VqaXdJZ0FHcEIvLzhEY1NJQVFZRCtBM0ZCQ0hVa2lBSWdBRUgvQVhFa2lRSkJBQkNpQVVFSUR3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQkNuQVVIL0FYRWtnd0lNQmdzaml3SkJBV3RCLy84RGNTU0xBa0VJRHdzamd3SWlBRUVCRUtBQklBQkJBV3BCL3dGeElnQWtnd0lnQUVVUW9RRkJBQkNpQVF3R0N5T0RBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NEQWlBQVJSQ2hBVUVCRUtJQkRBVUxFSnNCUWY4QmNTU0RBZ3dEQzBFQUVLSUJRUUFRbndFamlnSkJCSFpCQVhGQkFFMFFvd0VNQXd0QmZ3OExJQUJCQVd0Qi8vOERjU0lBUVlEK0EzRkJDSFVraUFJZ0FFSC9BWEVraVFJTUFRc2pqQUpCQVdwQi8vOERjU1NNQWd0QkJBdUNBZ0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRY0FBUndSQUlBQkJ3UUJHRFFFQ1FDQUFRY0lBYXc0T0F3UUZCZ2NJQ1JFS0N3d05EZzhBQ3d3UEN3d1BDeU9GQWlTRUFnd09DeU9HQWlTRUFnd05DeU9IQWlTRUFnd01DeU9JQWlTRUFnd0xDeU9KQWlTRUFnd0tDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVVIL0FYRWtoQUlNQ1Fzamd3SWtoQUlNQ0FzamhBSWtoUUlNQndzamhnSWtoUUlNQmdzamh3SWtoUUlNQlFzamlBSWtoUUlNQkFzamlRSWtoUUlNQXdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RkIvd0Z4SklVQ0RBSUxJNE1DSklVQ0RBRUxRWDhQQzBFRUMvMEJBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFkQUFSd1JBSUFCQjBRQkdEUUVDUUNBQVFkSUFhdzRPRUFNRUJRWUhDQWtLRUFzTURRNEFDd3dPQ3lPRUFpU0dBZ3dPQ3lPRkFpU0dBZ3dOQ3lPSEFpU0dBZ3dNQ3lPSUFpU0dBZ3dMQ3lPSkFpU0dBZ3dLQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFVSC9BWEVraGdJTUNRc2pnd0lraGdJTUNBc2poQUlraHdJTUJ3c2poUUlraHdJTUJnc2poZ0lraHdJTUJRc2ppQUlraHdJTUJBc2ppUUlraHdJTUF3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISVFwd0ZCL3dGeEpJY0NEQUlMSTRNQ0pJY0NEQUVMUVg4UEMwRUVDLzBCQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRZUFBUndSQUlBQkI0UUJHRFFFQ1FDQUFRZUlBYXc0T0F3UVFCUVlIQ0FrS0N3d1FEUTRBQ3d3T0N5T0VBaVNJQWd3T0N5T0ZBaVNJQWd3TkN5T0dBaVNJQWd3TUN5T0hBaVNJQWd3TEN5T0pBaVNJQWd3S0N5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BVUgvQVhFa2lBSU1DUXNqZ3dJa2lBSU1DQXNqaEFJa2lRSU1Cd3NqaFFJa2lRSU1CZ3NqaGdJa2lRSU1CUXNqaHdJa2lRSU1CQXNqaUFJa2lRSU1Bd3NqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRcHdGQi93RnhKSWtDREFJTEk0TUNKSWtDREFFTFFYOFBDMEVFQzVzREFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjhBQkhCRUFnQUVIeEFFWU5BUUpBSUFCQjhnQnJEZzREQkFVR0J3Z0pDZ3NNRFE0UEVRQUxEQThMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRRQ0VKMEJEQThMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRVQ0VKMEJEQTRMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRZQ0VKMEJEQTBMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRjQ0VKMEJEQXdMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRnQ0VKMEJEQXNMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRrQ0VKMEJEQW9MSS93QlJRUkFBa0FqdHdFRVFFRUJKSTRDREFFTEk3a0JJNzhCY1VFZmNVVUVRRUVCSkk4Q0RBRUxRUUVra0FJTEN3d0pDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaU9EQWhDZEFRd0lDeU9FQWlTREFnd0hDeU9GQWlTREFnd0dDeU9HQWlTREFnd0ZDeU9IQWlTREFnd0VDeU9JQWlTREFnd0RDeU9KQWlTREFnd0NDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVVIL0FYRWtnd0lNQVF0QmZ3OExRUVFMTndFQmZ5QUJRUUJPQkVBZ0FFSC9BWEVnQUNBQmFrSC9BWEZMRUtNQkJTQUJRUjkxSWdJZ0FTQUNhbk1nQUVIL0FYRktFS01CQ3dzMEFRSi9JNE1DSWdFZ0FFSC9BWEVpQWhDZ0FTQUJJQUlRc0FFZ0FDQUJha0gvQVhFaUFDU0RBaUFBUlJDaEFVRUFFS0lCQzFnQkFuOGpnd0lpQVNBQWFpT0tBa0VFZGtFQmNXcEIvd0Z4SWdJZ0FDQUJjM05CRUhGQkFFY1Fud0VnQUVIL0FYRWdBV29qaWdKQkJIWkJBWEZxUVlBQ2NVRUFTeENqQVNBQ0pJTUNJQUpGRUtFQlFRQVFvZ0VMaXdJQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFZQUJSd1JBSUFCQmdRRkdEUUVDUUNBQVFZSUJhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPRUFoQ3hBUXdRQ3lPRkFoQ3hBUXdQQ3lPR0FoQ3hBUXdPQ3lPSEFoQ3hBUXdOQ3lPSUFoQ3hBUXdNQ3lPSkFoQ3hBUXdMQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQ3hBUXdLQ3lPREFoQ3hBUXdKQ3lPRUFoQ3lBUXdJQ3lPRkFoQ3lBUXdIQ3lPR0FoQ3lBUXdHQ3lPSEFoQ3lBUXdGQ3lPSUFoQ3lBUXdFQ3lPSkFoQ3lBUXdEQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQ3lBUXdDQ3lPREFoQ3lBUXdCQzBGL0R3dEJCQXMzQVFKL0k0TUNJZ0VnQUVIL0FYRkJmMndpQWhDZ0FTQUJJQUlRc0FFZ0FTQUFhMEgvQVhFaUFDU0RBaUFBUlJDaEFVRUJFS0lCQzFnQkFuOGpnd0lpQVNBQWF5T0tBa0VFZGtFQmNXdEIvd0Z4SWdJZ0FDQUJjM05CRUhGQkFFY1Fud0VnQVNBQVFmOEJjV3NqaWdKQkJIWkJBWEZyUVlBQ2NVRUFTeENqQVNBQ0pJTUNJQUpGRUtFQlFRRVFvZ0VMaXdJQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFaQUJSd1JBSUFCQmtRRkdEUUVDUUNBQVFaSUJhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPRUFoQzBBUXdRQ3lPRkFoQzBBUXdQQ3lPR0FoQzBBUXdPQ3lPSEFoQzBBUXdOQ3lPSUFoQzBBUXdNQ3lPSkFoQzBBUXdMQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQzBBUXdLQ3lPREFoQzBBUXdKQ3lPRUFoQzFBUXdJQ3lPRkFoQzFBUXdIQ3lPR0FoQzFBUXdHQ3lPSEFoQzFBUXdGQ3lPSUFoQzFBUXdFQ3lPSkFoQzFBUXdEQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQzFBUXdDQ3lPREFoQzFBUXdCQzBGL0R3dEJCQXNpQUNPREFpQUFjU0lBSklNQ0lBQkZFS0VCUVFBUW9nRkJBUkNmQVVFQUVLTUJDeVlBSTRNQ0lBQnpRZjhCY1NJQUpJTUNJQUJGRUtFQlFRQVFvZ0ZCQUJDZkFVRUFFS01CQzRzQ0FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFR2dBVWNFUUNBQVFhRUJSZzBCQWtBZ0FFR2lBV3NPRGdNRUJRWUhDQWtLQ3d3TkRnOFFBQXNNRUFzamhBSVF0d0VNRUFzamhRSVF0d0VNRHdzamhnSVF0d0VNRGdzamh3SVF0d0VNRFFzamlBSVF0d0VNREFzamlRSVF0d0VNQ3dzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RVF0d0VNQ2dzamd3SVF0d0VNQ1FzamhBSVF1QUVNQ0FzamhRSVF1QUVNQndzamhnSVF1QUVNQmdzamh3SVF1QUVNQlFzamlBSVF1QUVNQkFzamlRSVF1QUVNQXdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RVF1QUVNQWdzamd3SVF1QUVNQVF0QmZ3OExRUVFMSmdBamd3SWdBSEpCL3dGeElnQWtnd0lnQUVVUW9RRkJBQkNpQVVFQUVKOEJRUUFRb3dFTExBRUJmeU9EQWlJQklBQkIvd0Z4UVg5c0lnQVFvQUVnQVNBQUVMQUJJQUFnQVdwRkVLRUJRUUVRb2dFTGl3SUFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRYkFCUndSQUlBQkJzUUZHRFFFQ1FDQUFRYklCYXc0T0F3UUZCZ2NJQ1FvTERBME9EeEFBQ3d3UUN5T0VBaEM2QVF3UUN5T0ZBaEM2QVF3UEN5T0dBaEM2QVF3T0N5T0hBaEM2QVF3TkN5T0lBaEM2QVF3TUN5T0pBaEM2QVF3TEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BUkM2QVF3S0N5T0RBaEM2QVF3SkN5T0VBaEM3QVF3SUN5T0ZBaEM3QVF3SEN5T0dBaEM3QVF3R0N5T0hBaEM3QVF3RkN5T0lBaEM3QVF3RUN5T0pBaEM3QVF3REN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BUkM3QVF3Q0N5T0RBaEM3QVF3QkMwRi9Ed3RCQkFzN0FRRi9JQUFRZFNJQlFYOUdCSDhnQUJBZEJTQUJDMEgvQVhFZ0FFRUJhaUlCRUhVaUFFRi9SZ1IvSUFFUUhRVWdBQXRCL3dGeFFRaDBjZ3NNQUVFSUVKb0JJQUFRdlFFTE5BQWdBRUdBQVhGQmdBRkdFS01CSUFCQkFYUWdBRUgvQVhGQkIzWnlRZjhCY1NJQVJSQ2hBVUVBRUtJQlFRQVFud0VnQUFzeUFDQUFRUUZ4UVFCTEVLTUJJQUJCQjNRZ0FFSC9BWEZCQVhaeVFmOEJjU0lBUlJDaEFVRUFFS0lCUVFBUW53RWdBQXM0QVFGL0k0b0NRUVIyUVFGeElBQkJBWFJ5UWY4QmNTRUJJQUJCZ0FGeFFZQUJSaENqQVNBQlJSQ2hBVUVBRUtJQlFRQVFud0VnQVFzNUFRRi9JNG9DUVFSMlFRRnhRUWQwSUFCQi93RnhRUUYyY2lFQklBQkJBWEZCQVVZUW93RWdBVVVRb1FGQkFCQ2lBVUVBRUo4QklBRUxLZ0FnQUVHQUFYRkJnQUZHRUtNQklBQkJBWFJCL3dGeElnQkZFS0VCUVFBUW9nRkJBQkNmQVNBQUN6MEJBWDhnQUVIL0FYRkJBWFlpQVVHQUFYSWdBU0FBUVlBQmNVR0FBVVliSWdGRkVLRUJRUUFRb2dGQkFCQ2ZBU0FBUVFGeFFRRkdFS01CSUFFTEt3QWdBRUVQY1VFRWRDQUFRZkFCY1VFRWRuSWlBRVVRb1FGQkFCQ2lBVUVBRUo4QlFRQVFvd0VnQUFzcUFRRi9JQUJCL3dGeFFRRjJJZ0ZGRUtFQlFRQVFvZ0ZCQUJDZkFTQUFRUUZ4UVFGR0VLTUJJQUVMSGdCQkFTQUFkQ0FCY1VIL0FYRkZFS0VCUVFBUW9nRkJBUkNmQVNBQkM4Z0lBUVYvQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVFkeElnUUVRQ0FFUVFGR0RRRUNRQ0FFUVFKckRnWURCQVVHQndnQUN3d0lDeU9FQWlFQkRBY0xJNFVDSVFFTUJnc2poZ0loQVF3RkN5T0hBaUVCREFRTEk0Z0NJUUVNQXdzamlRSWhBUXdDQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFTRUJEQUVMSTRNQ0lRRUxBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFSHdBWEZCQkhVaUJRUkFJQVZCQVVZTkFRSkFJQVZCQW1zT0RnTUVCUVlIQ0FrS0N3d05EZzhRQUFzTUVBc2dBRUVIVEFSL0lBRVF2d0VoQWtFQkJTQUFRUTlNQkg4Z0FSREFBU0VDUVFFRlFRQUxDeUVEREE4TElBQkJGMHdFZnlBQkVNRUJJUUpCQVFVZ0FFRWZUQVIvSUFFUXdnRWhBa0VCQlVFQUN3c2hBd3dPQ3lBQVFTZE1CSDhnQVJEREFTRUNRUUVGSUFCQkwwd0VmeUFCRU1RQklRSkJBUVZCQUFzTElRTU1EUXNnQUVFM1RBUi9JQUVReFFFaEFrRUJCU0FBUVQ5TUJIOGdBUkRHQVNFQ1FRRUZRUUFMQ3lFRERBd0xJQUJCeHdCTUJIOUJBQ0FCRU1jQklRSkJBUVVnQUVIUEFFd0VmMEVCSUFFUXh3RWhBa0VCQlVFQUN3c2hBd3dMQ3lBQVFkY0FUQVIvUVFJZ0FSREhBU0VDUVFFRklBQkIzd0JNQkg5QkF5QUJFTWNCSVFKQkFRVkJBQXNMSVFNTUNnc2dBRUhuQUV3RWYwRUVJQUVReHdFaEFrRUJCU0FBUWU4QVRBUi9RUVVnQVJESEFTRUNRUUVGUVFBTEN5RUREQWtMSUFCQjl3Qk1CSDlCQmlBQkVNY0JJUUpCQVFVZ0FFSC9BRXdFZjBFSElBRVF4d0VoQWtFQkJVRUFDd3NoQXd3SUN5QUFRWWNCVEFSL0lBRkJmbkVoQWtFQkJTQUFRWThCVEFSL0lBRkJmWEVoQWtFQkJVRUFDd3NoQXd3SEN5QUFRWmNCVEFSL0lBRkJlM0VoQWtFQkJTQUFRWjhCVEFSL0lBRkJkM0VoQWtFQkJVRUFDd3NoQXd3R0N5QUFRYWNCVEFSL0lBRkJiM0VoQWtFQkJTQUFRYThCVEFSL0lBRkJYM0VoQWtFQkJVRUFDd3NoQXd3RkN5QUFRYmNCVEFSL0lBRkJ2Mzl4SVFKQkFRVWdBRUcvQVV3RWZ5QUJRZjkrY1NFQ1FRRUZRUUFMQ3lFRERBUUxJQUJCeHdGTUJIOGdBVUVCY2lFQ1FRRUZJQUJCendGTUJIOGdBVUVDY2lFQ1FRRUZRUUFMQ3lFRERBTUxJQUJCMXdGTUJIOGdBVUVFY2lFQ1FRRUZJQUJCM3dGTUJIOGdBVUVJY2lFQ1FRRUZRUUFMQ3lFRERBSUxJQUJCNXdGTUJIOGdBVUVRY2lFQ1FRRUZJQUJCN3dGTUJIOGdBVUVnY2lFQ1FRRUZRUUFMQ3lFRERBRUxJQUJCOXdGTUJIOGdBVUhBQUhJaEFrRUJCU0FBUWY4QlRBUi9JQUZCZ0FGeUlRSkJBUVZCQUFzTElRTUxBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUVCRUFnQkVFQlJnMEJBa0FnQkVFQ2F3NEdBd1FGQmdjSUFBc01DQXNnQWlTRUFnd0hDeUFDSklVQ0RBWUxJQUlraGdJTUJRc2dBaVNIQWd3RUN5QUNKSWdDREFNTElBSWtpUUlNQWd0QkFTQUZRUWRLSUFWQkJFZ2JCRUFqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElnQWhDZEFRc01BUXNnQWlTREFndEJCRUYvSUFNYkM3c0VBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFSEFBVWNFUUNBQVFjRUJSZzBCQWtBZ0FFSENBV3NPRGdNU0JBVUdCd2dKQ2dzTUVRME9BQXNNRGdzamlnSkJCM1pCQVhFTkVRd09DeU9MQWhDK0FVSC8vd054SVFBaml3SkJBbXBCLy84RGNTU0xBaUFBUVlEK0EzRkJDSFVraEFJZ0FFSC9BWEVraFFKQkJBOExJNG9DUVFkMlFRRnhEUkVNRGdzamlnSkJCM1pCQVhFTkVBd01DeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09GQWtIL0FYRWpoQUpCL3dGeFFRaDBjaENsQVF3TkN4Q2JBUkN4QVF3TkN5T0xBa0VDYTBILy93TnhJZ0FraXdJZ0FDT01BaENsQVVFQUpJd0NEQXNMSTRvQ1FRZDJRUUZ4UVFGSERRb01Cd3NqaXdJaUFCQytBVUgvL3dOeEpJd0NJQUJCQW1wQi8vOERjU1NMQWd3SkN5T0tBa0VIZGtFQmNVRUJSZzBIREFvTEVKc0JRZjhCY1JESUFTRUFJNHdDUVFGcVFmLy9BM0VrakFJZ0FBOExJNG9DUVFkMlFRRnhRUUZIRFFnaml3SkJBbXRCLy84RGNTSUFKSXNDSUFBampBSkJBbXBCLy84RGNSQ2xBUXdGQ3hDYkFSQ3lBUXdHQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVJSkl3Q0RBUUxRWDhQQ3lPTEFpSUFFTDRCUWYvL0EzRWtqQUlnQUVFQ2FrSC8vd054SklzQ1FRd1BDeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09NQWtFQ2FrSC8vd054RUtVQkN4Q2NBVUgvL3dOeEpJd0NDMEVJRHdzampBSkJBV3BCLy84RGNTU01Ba0VFRHdzampBSkJBbXBCLy84RGNTU01Ba0VNQzZBRUFRRi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCMEFGSEJFQWdBRUhSQVVZTkFRSkFJQUJCMGdGckRnNERBQVFGQmdjSUNRb0FDd0FNRFFBTERBMExJNG9DUVFSMlFRRnhEUThNRFFzaml3SWlBUkMrQVVILy93TnhJUUFnQVVFQ2FrSC8vd054SklzQ0lBQkJnUDREY1VFSWRTU0dBaUFBUWY4QmNTU0hBa0VFRHdzamlnSkJCSFpCQVhFTkR3d01DeU9LQWtFRWRrRUJjUTBPSTRzQ1FRSnJRZi8vQTNFaUFDU0xBaUFBSTR3Q1FRSnFRZi8vQTNFUXBRRU1Dd3NqaXdKQkFtdEIvLzhEY1NJQUpJc0NJQUFqaHdKQi93RnhJNFlDUWY4QmNVRUlkSElRcFFFTUN3c1Ftd0VRdEFFTUN3c2ppd0pCQW10Qi8vOERjU0lBSklzQ0lBQWpqQUlRcFFGQkVDU01BZ3dKQ3lPS0FrRUVka0VCY1VFQlJ3MElEQVlMSTRzQ0lnQVF2Z0ZCLy84RGNTU01Ba0VCSkxnQklBQkJBbXBCLy84RGNTU0xBZ3dIQ3lPS0FrRUVka0VCY1VFQlJnMEZEQWdMSTRvQ1FRUjJRUUZ4UVFGSERRY2ppd0pCQW10Qi8vOERjU0lBSklzQ0lBQWpqQUpCQW1wQi8vOERjUkNsQVF3RUN4Q2JBUkMxQVF3RkN5T0xBa0VDYTBILy93TnhJZ0FraXdJZ0FDT01BaENsQVVFWUpJd0NEQU1MUVg4UEN5T0xBaUlBRUw0QlFmLy9BM0VrakFJZ0FFRUNha0gvL3dOeEpJc0NRUXdQQ3hDY0FVSC8vd054Skl3Q0MwRUlEd3NqakFKQkFXcEIvLzhEY1NTTUFrRUVEd3NqakFKQkFtcEIvLzhEY1NTTUFrRU1DN0VEQVFGL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjRBRkhCRUFnQUVIaEFVWU5BUUpBSUFCQjRnRnJEZzREQUFBRUJRWUhDQWtBQUFBS0N3QUxEQXNMRUpzQlFmOEJjVUdBL2dOcUk0TUNFSjBCREFzTEk0c0NJZ0VRdmdGQi8vOERjU0VBSUFGQkFtcEIvLzhEY1NTTEFpQUFRWUQrQTNGQkNIVWtpQUlnQUVIL0FYRWtpUUpCQkE4TEk0VUNRWUQrQTJvamd3SVFuUUZCQkE4TEk0c0NRUUpyUWYvL0EzRWlBQ1NMQWlBQUk0a0NRZjhCY1NPSUFrSC9BWEZCQ0hSeUVLVUJRUWdQQ3hDYkFSQzNBUXdIQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVnSkl3Q1FRZ1BDeENiQVVFWWRFRVlkU0VBSTRzQ0lBQkJBUkNtQVNPTEFpQUFha0gvL3dOeEpJc0NRUUFRb1FGQkFCQ2lBU09NQWtFQmFrSC8vd054Skl3Q1FRd1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaVNNQWtFRUR3c1FuQUZCLy84RGNTT0RBaENkQVNPTUFrRUNha0gvL3dOeEpJd0NRUVFQQ3hDYkFSQzRBUXdDQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVvSkl3Q1FRZ1BDMEYvRHdzampBSkJBV3BCLy84RGNTU01Ba0VFQytjREFRRi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjhBRkhCRUFnQUVIeEFVWU5BUUpBSUFCQjhnRnJEZzREQkFBRkJnY0lDUW9MQUFBTURRQUxEQTBMRUpzQlFmOEJjVUdBL2dOcUVLY0JRZjhCY1NTREFnd05DeU9MQWlJQkVMNEJRZi8vQTNFaEFDQUJRUUpxUWYvL0EzRWtpd0lnQUVHQS9nTnhRUWgxSklNQ0lBQkIvd0Z4SklvQ0RBMExJNFVDUVlEK0Eyb1Fwd0ZCL3dGeEpJTUNEQXdMUVFBa3R3RU1Dd3NqaXdKQkFtdEIvLzhEY1NJQUpJc0NJQUFqaWdKQi93RnhJNE1DUWY4QmNVRUlkSElRcFFGQkNBOExFSnNCRUxvQkRBZ0xJNHNDUVFKclFmLy9BM0VpQUNTTEFpQUFJNHdDRUtVQlFUQWtqQUpCQ0E4TEVKc0JRUmgwUVJoMUlRQWppd0loQVVFQUVLRUJRUUFRb2dFZ0FTQUFRUUVRcGdFZ0FDQUJha0gvL3dOeElnQkJnUDREY1VFSWRTU0lBaUFBUWY4QmNTU0pBaU9NQWtFQmFrSC8vd054Skl3Q1FRZ1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaVNMQWtFSUR3c1FuQUZCLy84RGNSQ25BVUgvQVhFa2d3SWpqQUpCQW1wQi8vOERjU1NNQWd3RkMwRUJKTGdCREFRTEVKc0JFTHNCREFJTEk0c0NRUUpyUWYvL0EzRWlBQ1NMQWlBQUk0d0NFS1VCUVRna2pBSkJDQThMUVg4UEN5T01Ba0VCYWtILy93TnhKSXdDQzBFRUM5Z0JBUUYvSTR3Q1FRRnFRZi8vQTNFaEFTT1FBZ1JBSUFGQkFXdEIvLzhEY1NFQkN5QUJKSXdDQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQkI4QUZ4UVFSMUlnRUVRQ0FCUVFGckRnNEJBZ01FQlFZSENBa0tDd3dORGc4TElBQVFxQUVQQ3lBQUVLa0JEd3NnQUJDcUFROExJQUFRcXdFUEN5QUFFS3dCRHdzZ0FCQ3RBUThMSUFBUXJnRVBDeUFBRUs4QkR3c2dBQkN6QVE4TElBQVF0Z0VQQ3lBQUVMa0JEd3NnQUJDOEFROExJQUFReVFFUEN5QUFFTW9CRHdzZ0FCRExBUThMSUFBUXpBRUx2Z0VCQW45QkFDUzNBVUdQL2dNUUhVRUJJQUIwUVg5emNTSUJKTDhCUVkvK0F5QUJFQjhqaXdKQkFtdEIvLzhEY1NTTEFpT0xBaUlCSTR3Q0lnSkIvd0Z4RUI4Z0FVRUJhaUFDUVlEK0EzRkJDSFVRSHdKQUFrQUNRQUpBQWtBZ0FBUkFJQUJCQVVZTkFRSkFJQUJCQW1zT0F3TUVCUUFMREFVTFFRQWt3QUZCd0FBa2pBSU1CQXRCQUNUQkFVSElBQ1NNQWd3REMwRUFKTUlCUWRBQUpJd0NEQUlMUVFBa3d3RkIyQUFrakFJTUFRdEJBQ1RFQVVIZ0FDU01BZ3NMNlFFQkFuOGp1QUVFUUVFQkpMY0JRUUFrdUFFTEk3a0JJNzhCY1VFZmNVRUFTZ1JBSTQ4Q1JVRUFJN2NCR3dSL0k4QUJRUUFqdWdFYkJIOUJBQkRPQVVFQkJTUEJBVUVBSTdzQkd3Ui9RUUVRemdGQkFRVWp3Z0ZCQUNPOEFSc0VmMEVDRU00QlFRRUZJOE1CUVFBanZRRWJCSDlCQXhET0FVRUJCU1BFQVVFQUk3NEJHd1IvUVFRUXpnRkJBUVZCQUFzTEN3c0xCVUVBQ3dSQVFRRWpqd0lqamdJYkJIOUJBQ1NQQWtFQUpJNENRUUFra0FKQkFDU1JBa0VZQlVFVUN5RUFDMEVCSTQ4Q0k0NENHd1JBUVFBa2p3SkJBQ1NPQWtFQUpKQUNRUUFra1FJTElBQVBDMEVBQzdZQkFRSi9RUUVrbUFJamtBSUVRQ09NQWhBZFFmOEJjUkROQVJDYUFVRUFKSThDUVFBa2pnSkJBQ1NRQWtFQUpKRUNDeERQQVNJQVFRQktCRUFnQUJDYUFRdEJCQ0VBUVFBamtRSkZRUUVqandJampnSWJHd1JBSTR3Q0VCMUIvd0Z4RU0wQklRQUxJNG9DUWZBQmNTU0tBaUFBUVFCTUJFQWdBQThMSUFBUW1nRWpsd0pCQVdvaUFTT1ZBazRFZnlPV0FrRUJhaVNXQWlBQkk1VUNhd1VnQVFza2x3SWpqQUlqM1FGR0JFQkJBU1RnQVFzZ0FBc0ZBQ08yQVF1dUFRRURmeUFBUVg5QmdBZ2dBRUVBU0JzZ0FFRUFTaHNoQWtFQUlRQURRQ1BnQVVWQkFDQUJSVUVBUVFBZ0FFVWdBeHNiR3dSQUVOQUJRUUJJQkVCQkFTRURCU09OQWtIUXBBUWpnZ0owVGdSQVFRRWhBQVZCQVNBQkk3WUJJQUpPUVFBZ0FrRi9TaHNiSVFFTEN3d0JDd3NnQUFSQUk0MENRZENrQkNPQ0FuUnJKSTBDUVFBUEN5QUJCRUJCQVE4TEkrQUJCRUJCQUNUZ0FVRUNEd3NqakFKQkFXdEIvLzhEY1NTTUFrRi9Dd2NBUVg4UTBnRUxOQUVDZndOQUlBRkJBRTVCQUNBQ0lBQklHd1JBUVg4UTBnRWhBU0FDUVFGcUlRSU1BUXNMSUFGQkFFZ0VRQ0FCRHd0QkFBc0ZBQ09TQWdzRkFDT1RBZ3NGQUNPVUFndGJBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBQVJBSUFCQkFVWU5BUUpBSUFCQkFtc09CZ01FQlFZSENBQUxEQWdMSTlJQkR3c2oxUUVQQ3lQVEFROExJOVFCRHdzajFnRVBDeVBYQVE4TEk5Z0JEd3NqMlFFUEMwRUFDNGNCQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUFSQUlBQkJBVVlOQVFKQUlBQkJBbXNPQmdNRUJRWUhDQUFMREFnTElBRkJBRWNrMGdFTUJ3c2dBVUVBUnlUVkFRd0dDeUFCUVFCSEpOTUJEQVVMSUFGQkFFY2sxQUVNQkFzZ0FVRUFSeVRXQVF3REN5QUJRUUJISk5jQkRBSUxJQUZCQUVjazJBRU1BUXNnQVVFQVJ5VFpBUXNMVVFFQmYwRUFKSkVDSUFBUTJBRkZCRUJCQVNFQkN5QUFRUUVRMlFFZ0FRUkFRUUZCQVVFQVFRRkJBQ0FBUVFOTUd5SUFRUUFqMndFYkd5QUFSVUVBSTl3Qkd4c0VRRUVCSk1RQlFRUVFXZ3NMQ3drQUlBQkJBQkRaQVF1YUFRQWdBRUVBU2dSQVFRQVEyZ0VGUVFBUTJ3RUxJQUZCQUVvRVFFRUJFTm9CQlVFQkVOc0JDeUFDUVFCS0JFQkJBaERhQVFWQkFoRGJBUXNnQTBFQVNnUkFRUU1RMmdFRlFRTVEyd0VMSUFSQkFFb0VRRUVFRU5vQkJVRUVFTnNCQ3lBRlFRQktCRUJCQlJEYUFRVkJCUkRiQVFzZ0JrRUFTZ1JBUVFZUTJnRUZRUVlRMndFTElBZEJBRW9FUUVFSEVOb0JCVUVIRU5zQkN3c0hBQ0FBSk4wQkN3Y0FRWDhrM1FFTEJ3QWdBQ1RlQVFzSEFFRi9KTjRCQ3djQUlBQWszd0VMQndCQmZ5VGZBUXNGQUNPREFnc0ZBQ09FQWdzRkFDT0ZBZ3NGQUNPR0Fnc0ZBQ09IQWdzRkFDT0lBZ3NGQUNPSkFnc0ZBQ09LQWdzRkFDT01BZ3NGQUNPTEFnc0xBQ09NQWhBZFFmOEJjUXNGQUNQdEFRdXJBd0VLZjBHQWdBSkJnSkFDSStZQkd5RUlRWUM0QWtHQXNBSWo1d0ViSVFrRFFDQUZRWUFDU0FSQVFRQWhCQU5BSUFSQmdBSklCRUFnQ0NBRlFRTjFRUVYwSUFscUlBUkJBM1ZxSWdKQmdKQithaTBBQUJCTklRWWdCVUVJYnlFQlFRY2dCRUVJYjJzaEIwRUFJUU1DZnlBQVFRQktRUUFqZ1FJYkJFQWdBa0dBMEg1cUxRQUFJUU1MSUFOQndBQnhDd1JBUVFjZ0FXc2hBUXRCQUNFQ0lBRkJBWFFnQm1vaUJrR0FrSDVxUVFGQkFDQURRUWh4R3lJQ1FRMTBhaTBBQUNFS1FRQWhBU0FHUVlHUWZtb2dBa0VOZEdvdEFBQkJBU0FIZEhFRVFFRUNJUUVMSUFGQkFXb2dBVUVCSUFkMElBcHhHeUVCSUFWQkNIUWdCR3BCQTJ3aEFpQUFRUUJLUVFBamdRSWJCRUFnQWtHQW9RdHFJZ0lnQTBFSGNTQUJRUUFRVGlJQlFSOXhRUU4wT2dBQUlBSkJBV29nQVVIZ0IzRkJCWFZCQTNRNkFBQWdBa0VDYWlBQlFZRDRBWEZCQ25WQkEzUTZBQUFGSUFKQmdLRUxhaUlESUFGQngvNERFRThpQVVHQWdQd0hjVUVRZFRvQUFDQURRUUZxSUFGQmdQNERjVUVJZFRvQUFDQURRUUpxSUFFNkFBQUxJQVJCQVdvaEJBd0JDd3NnQlVFQmFpRUZEQUVMQ3d2VkF3RU1md05BSUFSQkYwNUZCRUJCQUNFREEwQWdBMEVmU0FSQVFRRkJBQ0FEUVE5S0lnY2JJUWtnQkVFUGF5QUVJQVJCRDBvaUFCdEJCSFFpQlNBRFFROXJhaUFESUFWcUlBY2JJUWhCZ0pBQ1FZQ0FBaUFBR3lFS1FjZitBeUVIUVg4aEJrRi9JUVZCQUNFQkEwQWdBVUVJU0FSQVFRQWhBQU5BSUFCQkJVZ0VRQ0FBUVFOMElBRnFRUUowSWdKQmd2d0RhaEFkSUFoR0JFQWdBa0dEL0FOcUVCMGhBa0VCUVFBZ0FrRUljVUVBSTRFQ0d4c2dDVVlFUUVFSUlRRkJCU0VBSUFJaUJVRVFjUVIvUWNuK0F3VkJ5UDREQ3lFSEN3c2dBRUVCYWlFQURBRUxDeUFCUVFGcUlRRU1BUXNMSUFWQkFFaEJBQ09CQWhzRVFFR0F1QUpCZ0xBQ0krY0JHeUVMUVg4aEFFRUFJUUlEUUNBQ1FTQklCRUJCQUNFQkEwQWdBVUVnU0FSQUlBRkJCWFFnQzJvZ0Ftb2lCa0dBa0g1cUxRQUFJQWhHQkVCQklDRUNRU0FoQVNBR0lRQUxJQUZCQVdvaEFRd0JDd3NnQWtFQmFpRUNEQUVMQ3lBQVFRQk9CSDhnQUVHQTBINXFMUUFBQlVGL0N5RUdDMEVBSVFBRFFDQUFRUWhJQkVBZ0NDQUtJQWxCQUVFSElBQWdBMEVEZENBRVFRTjBJQUJxUWZnQlFZQ2hGeUFISUFZZ0JSQlFHaUFBUVFGcUlRQU1BUXNMSUFOQkFXb2hBd3dCQ3dzZ0JFRUJhaUVFREFFTEN3dVdBZ0VKZndOQUlBUkJDRTVGQkVCQkFDRUJBMEFnQVVFRlNBUkFJQUZCQTNRZ0JHcEJBblFpQUVHQS9BTnFFQjBhSUFCQmdmd0RhaEFkR2lBQVFZTDhBMm9RSFNFQ1FRRWhCU1BvQVFSQUlBSkJBbTlCQVVZRVFDQUNRUUZySVFJTFFRSWhCUXNnQUVHRC9BTnFFQjBoQmtFQUlRZEJBVUVBSUFaQkNIRkJBQ09CQWhzYklRZEJ5UDRESVFoQnlmNERRY2orQXlBR1FSQnhHeUVJUVFBaEFBTkFJQUFnQlVnRVFFRUFJUU1EUUNBRFFRaElCRUFnQUNBQ2FrR0FnQUlnQjBFQVFRY2dBeUFFUVFOMElBRkJCSFFnQTJvZ0FFRURkR3BCd0FCQmdLRWdJQWhCZnlBR0VGQWFJQU5CQVdvaEF3d0JDd3NnQUVFQmFpRUFEQUVMQ3lBQlFRRnFJUUVNQVFzTElBUkJBV29oQkF3QkN3c0xCUUFqeGdFTEJRQWp4d0VMQlFBanlnRUxHQUVCZnlQTUFTRUFJOHNCQkVBZ0FFRUVjaUVBQ3lBQUN6QUJBWDhEUUFKQUlBQkIvLzhEVGcwQUlBQkJnTFhKQkdvZ0FCQjJPZ0FBSUFCQkFXb2hBQXdCQ3d0QkFDVGdBUXNXQUJBYlB3QkJsQUZJQkVCQmxBRS9BR3RBQUJvTEM5d0JBQ0FBUVp3Q1NRUkFEd3NnQUVFUWF5RUFBa0FDUUFKQUFrQUNRQUpBSUFGQkFVY0VRQ0FCUVFKR0RRRUNRQ0FCUVFOckRnTURCQVVBQ3d3RkN5QUFFQmtNQlFzZ0FDZ0NCRUgvLy8vL0FIRkJBRTBFUUVFQVFZQUJRY3NBUVJFUUFBQUxJQUFnQUNnQ0JFRUJhellDQkNBQUVBY01CQXNnQUJBS0RBTUxJQUFvQWdRaUFVR0FnSUNBZjNFZ0FVRUJha0dBZ0lDQWYzRkhCRUJCQUVHQUFVSFdBRUVHRUFBQUN5QUFJQUZCQVdvMkFnUWdBVUdBZ0lDQUIzRUVRQ0FBRUFrTERBSUxJQUFRQ3d3QkMwRUFRWUFCUWVFQVFSZ1FBQUFMQ3kwQUFrQUNRQUpBSUFCQkNHc29BZ0FPQXdBQUFRSUxEd3NnQUNnQ0FDSUFCRUFnQUNBQkVQZ0JDdzhMQUFzREFBRUxIUUFDUUFKQUFrQWptZ0lPQWdFQ0FBc0FDMEVBSVFBTElBQVEwZ0VMQndBZ0FDU2FBZ3NsQUFKQUFrQUNRQUpBSTVvQ0RnTUJBZ01BQ3dBTFFRRWhBQXRCZnlFQkN5QUJFTklCQ3d1ZkFnWUFRUWdMTFI0QUFBQUJBQUFBQVFBQUFCNEFBQUIrQUd3QWFRQmlBQzhBY2dCMEFDOEFkQUJzQUhNQVpnQXVBSFFBY3dCQk9BczNLQUFBQUFFQUFBQUJBQUFBS0FBQUFHRUFiQUJzQUc4QVl3QmhBSFFBYVFCdkFHNEFJQUIwQUc4QWJ3QWdBR3dBWVFCeUFHY0FaUUJCOEFBTExSNEFBQUFCQUFBQUFRQUFBQjRBQUFCK0FHd0FhUUJpQUM4QWNnQjBBQzhBY0FCMUFISUFaUUF1QUhRQWN3QkJvQUVMTXlRQUFBQUJBQUFBQVFBQUFDUUFBQUJKQUc0QVpBQmxBSGdBSUFCdkFIVUFkQUFnQUc4QVpnQWdBSElBWVFCdUFHY0FaUUJCMkFFTEl4UUFBQUFCQUFBQUFRQUFBQlFBQUFCK0FHd0FhUUJpQUM4QWNnQjBBQzRBZEFCekFFR0FBZ3NWQXdBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBUUFETVFjMjkxY21ObFRXRndjR2x1WjFWU1RDRmpiM0psTDJScGMzUXZZMjl5WlM1MWJuUnZkV05vWldRdWQyRnpiUzV0WVhBPSIpOgphd2FpdCBPKCJkYXRhOmFwcGxpY2F0aW9uL3dhc207YmFzZTY0LEFHRnpiUUVBQUFBQmlBRVJZQUovZndGL1lBQUFZQU4vZjM4QmYyQUVmMzkvZndCZ0FuOS9BR0FCZndGL1lBRi9BR0FEZjM5L0FHQUtmMzkvZjM5L2YzOS9md0JnQUFGL1lBWi9mMzkvZjM4QVlBZC9mMzkvZjM5L0FYOWdCMzkvZjM5L2YzOEFZQVIvZjM5L0FYOWdDSDkvZjM5L2YzOS9BR0FGZjM5L2YzOEJmMkFOZjM5L2YzOS9mMzkvZjM5L2Z3Ri9BZzBCQTJWdWRnVmhZbTl5ZEFBREEvOEIvUUVFQkFjQkJRQUdCQVlHQmdFRUJ3QUFCZ1VGQndjR0FRWUdCZ0VGQlFFRUFRRUdCZ0VCQVFFQkFRRUdBUUVHQmdFQkFRRUlDUUVCQVFFQkFRRUJCZ1lCQVFFQkFRRUJBUWtKQ1FrUEFBSUFFQXNNQ2dvSEJBWUJBUVlCQVFFQkJnRUJBUUVGQlFBRkJRa0JCUVVBRFFZR0JnRUZDUVVGQkFZR0JnWUdBUVlCQmdFR0FRWUFCZ2tKQmdRRkFBWUJBUVlBQkFjQkFBRUdBUVlHQ1FrRUJBWUVCZ1lHQkFRSEJRVUZCUVVGQlFVRkJBWUdCUVlHQlFZR0JRWUdCUVVGQlFVRkJRVUZCUVVBQlFVRkJRVUZCZ2tKQ1FVSkJRa0pDUVVFQmdZT0JnRUdBUVlCQ1FrSkNRa0pDUWtKQ1FrSkJnRUJDUWtKQ1FFQkJBUUJCUVlBQlFNQkFBRUc3UXViQW44QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQUVFQUMzOEFRWUFJQzM4QVFZQUlDMzhBUVlBSUMzOEFRWUFRQzM4QVFZQ0FBUXQvQUVHQWtBRUxmd0JCZ0lBQ0MzOEFRWUNRQXd0L0FFR0FnQUVMZndCQmdCQUxmd0JCZ0lBRUMzOEFRWUNRQkF0L0FFR0FBUXQvQUVHQWtRUUxmd0JCZ0xnQkMzOEFRWURKQlF0L0FFR0EyQVVMZndCQmdLRUxDMzhBUVlDQURBdC9BRUdBb1JjTGZ3QkJnSUFKQzM4QVFZQ2hJQXQvQUVHQStBQUxmd0JCZ0pBRUMzOEFRWUNKSFF0L0FFR0FtU0VMZndCQmdJQUlDMzhBUVlDWktRdC9BRUdBZ0FnTGZ3QkJnSmt4QzM4QVFZQ0FDQXQvQUVHQW1Ua0xmd0JCZ0lBSUMzOEFRWUNad1FBTGZ3QkJnSUFJQzM4QVFZQ1p5UUFMZndCQmdJQUlDMzhBUVlDWjBRQUxmd0JCZ0JRTGZ3QkJnSzNSQUF0L0FFR0FpUGdEQzM4QVFZQzF5UVFMZndCQi8vOERDMzhBUVFBTGZ3QkJnTFhOQkF0L0FFR1VBUXQvQVVFQUMzOEJRUUVMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFYOExmd0ZCZnd0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVQQzM4QlFROExmd0ZCRHd0L0FVRVBDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQi93QUxmd0ZCL3dBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQVF0L0FVRUJDMzhCUVFFTGZ3RkJBUXQvQVVFQkMzOEJRUUVMZndGQkFRdC9BVUVCQzM4QlFRRUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQmZ3dC9BVUYvQzM4QlFYOExmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBUXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBUXQvQVVFQkMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRUUFMZndGQkFBdC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FVRUFDMzhCUVFBTGZ3RkJBQXQvQVVFQUMzOEJRWUNvMXJrSEMzOEJRUUFMZndGQkFBdC9BVUdBcU5hNUJ3dC9BVUVBQzM4QlFRQUxmd0ZCQUF0L0FFR0FBZ3QvQVVFQUN3ZndFR1VHYldWdGIzSjVBZ0FIWDE5aGJHeHZZd0FRQ0Y5ZmNtVjBZV2x1QUJJSlgxOXlaV3hsWVhObEFCb0pYMTlqYjJ4c1pXTjBBQXdMWDE5eWRIUnBYMkpoYzJVRG1RSUdZMjl1Wm1sbkFEUU9hR0Z6UTI5eVpWTjBZWEowWldRQU5RbHpZWFpsVTNSaGRHVUFQQWxzYjJGa1UzUmhkR1VBUndWcGMwZENRd0JJRW1kbGRGTjBaWEJ6VUdWeVUzUmxjRk5sZEFCSkMyZGxkRk4wWlhCVFpYUnpBRW9JWjJWMFUzUmxjSE1BU3hWbGVHVmpkWFJsVFhWc2RHbHdiR1ZHY21GdFpYTUExQUVNWlhobFkzVjBaVVp5WVcxbEFOTUJDVjlmYzJWMFlYSm5Zd0Q4QVJsbGVHVmpkWFJsUm5KaGJXVkJibVJEYUdWamEwRjFaR2x2QVBzQkZXVjRaV04xZEdWVmJuUnBiRU52Ym1ScGRHbHZiZ0Q5QVF0bGVHVmpkWFJsVTNSbGNBRFFBUlJuWlhSRGVXTnNaWE5RWlhKRGVXTnNaVk5sZEFEVkFReG5aWFJEZVdOc1pWTmxkSE1BMWdFSloyVjBRM2xqYkdWekFOY0JEbk5sZEVwdmVYQmhaRk4wWVhSbEFOd0JIMmRsZEU1MWJXSmxjazltVTJGdGNHeGxjMGx1UVhWa2FXOUNkV1ptWlhJQTBRRVFZMnhsWVhKQmRXUnBiMEoxWm1abGNnQkRISE5sZEUxaGJuVmhiRU52Ykc5eWFYcGhkR2x2YmxCaGJHVjBkR1VBSWhkWFFWTk5RazlaWDAxRlRVOVNXVjlNVDBOQlZFbFBUZ014RTFkQlUwMUNUMWxmVFVWTlQxSlpYMU5KV2tVRE1oSlhRVk5OUWs5WlgxZEJVMDFmVUVGSFJWTURNeDVCVTFORlRVSk1XVk5EVWtsUVZGOU5SVTFQVWxsZlRFOURRVlJKVDA0REJScEJVMU5GVFVKTVdWTkRVa2xRVkY5TlJVMVBVbGxmVTBsYVJRTUdGbGRCVTAxQ1QxbGZVMVJCVkVWZlRFOURRVlJKVDA0REJ4SlhRVk5OUWs5WlgxTlVRVlJGWDFOSldrVURDQ0JIUVUxRlFrOVpYMGxPVkVWU1RrRk1YMDFGVFU5U1dWOU1UME5CVkVsUFRnTVBIRWRCVFVWQ1QxbGZTVTVVUlZKT1FVeGZUVVZOVDFKWlgxTkpXa1VERUJKV1NVUkZUMTlTUVUxZlRFOURRVlJKVDA0RENRNVdTVVJGVDE5U1FVMWZVMGxhUlFNS0VWZFBVa3RmVWtGTlgweFBRMEZVU1U5T0F3c05WMDlTUzE5U1FVMWZVMGxhUlFNTUprOVVTRVZTWDBkQlRVVkNUMWxmU1U1VVJWSk9RVXhmVFVWTlQxSlpYMHhQUTBGVVNVOU9BdzBpVDFSSVJWSmZSMEZOUlVKUFdWOUpUbFJGVWs1QlRGOU5SVTFQVWxsZlUwbGFSUU1PR0VkU1FWQklTVU5UWDA5VlZGQlZWRjlNVDBOQlZFbFBUZ01kRkVkU1FWQklTVU5UWDA5VlZGQlZWRjlUU1ZwRkF4NFVSMEpEWDFCQlRFVlVWRVZmVEU5RFFWUkpUMDRERVJCSFFrTmZVRUZNUlZSVVJWOVRTVnBGQXhJWVFrZGZVRkpKVDFKSlZGbGZUVUZRWDB4UFEwRlVTVTlPQXhNVVFrZGZVRkpKVDFKSlZGbGZUVUZRWDFOSldrVURGQTVHVWtGTlJWOU1UME5CVkVsUFRnTVZDa1pTUVUxRlgxTkpXa1VERmhkQ1FVTkxSMUpQVlU1RVgwMUJVRjlNVDBOQlZFbFBUZ01YRTBKQlEwdEhVazlWVGtSZlRVRlFYMU5KV2tVREdCSlVTVXhGWDBSQlZFRmZURTlEUVZSSlQwNERHUTVVU1V4RlgwUkJWRUZmVTBsYVJRTWFFazlCVFY5VVNVeEZVMTlNVDBOQlZFbFBUZ01iRGs5QlRWOVVTVXhGVTE5VFNWcEZBeHdWUVZWRVNVOWZRbFZHUmtWU1gweFBRMEZVU1U5T0F5Y1JRVlZFU1U5ZlFsVkdSa1ZTWDFOSldrVURLQmxEU0VGT1RrVk1YekZmUWxWR1JrVlNYMHhQUTBGVVNVOU9BeDhWUTBoQlRrNUZURjh4WDBKVlJrWkZVbDlUU1ZwRkF5QVpRMGhCVGs1RlRGOHlYMEpWUmtaRlVsOU1UME5CVkVsUFRnTWhGVU5JUVU1T1JVeGZNbDlDVlVaR1JWSmZVMGxhUlFNaUdVTklRVTVPUlV4Zk0xOUNWVVpHUlZKZlRFOURRVlJKVDA0REl4VkRTRUZPVGtWTVh6TmZRbFZHUmtWU1gxTkpXa1VESkJsRFNFRk9Ua1ZNWHpSZlFsVkdSa1ZTWDB4UFEwRlVTVTlPQXlVVlEwaEJUazVGVEY4MFgwSlZSa1pGVWw5VFNWcEZBeVlXUTBGU1ZGSkpSRWRGWDFKQlRWOU1UME5CVkVsUFRnTXBFa05CVWxSU1NVUkhSVjlTUVUxZlUwbGFSUU1xRVVKUFQxUmZVazlOWDB4UFEwRlVTVTlPQXlzTlFrOVBWRjlTVDAxZlUwbGFSUU1zRmtOQlVsUlNTVVJIUlY5U1QwMWZURTlEUVZSSlQwNERMUkpEUVZKVVVrbEVSMFZmVWs5TlgxTkpXa1VETGgxRVJVSlZSMTlIUVUxRlFrOVpYMDFGVFU5U1dWOU1UME5CVkVsUFRnTXZHVVJGUWxWSFgwZEJUVVZDVDFsZlRVVk5UMUpaWDFOSldrVURNQ0ZuWlhSWFlYTnRRbTk1VDJabWMyVjBSbkp2YlVkaGJXVkNiM2xQWm1aelpYUUFIQnR6WlhSUWNtOW5jbUZ0UTI5MWJuUmxja0p5WldGcmNHOXBiblFBM1FFZGNtVnpaWFJRY205bmNtRnRRMjkxYm5SbGNrSnlaV0ZyY0c5cGJuUUEzZ0VaYzJWMFVtVmhaRWRpVFdWdGIzSjVRbkpsWVd0d2IybHVkQURmQVJ0eVpYTmxkRkpsWVdSSFlrMWxiVzl5ZVVKeVpXRnJjRzlwYm5RQTRBRWFjMlYwVjNKcGRHVkhZazFsYlc5eWVVSnlaV0ZyY0c5cGJuUUE0UUVjY21WelpYUlhjbWwwWlVkaVRXVnRiM0o1UW5KbFlXdHdiMmx1ZEFEaUFReG5aWFJTWldkcGMzUmxja0VBNHdFTVoyVjBVbVZuYVhOMFpYSkNBT1FCREdkbGRGSmxaMmx6ZEdWeVF3RGxBUXhuWlhSU1pXZHBjM1JsY2tRQTVnRU1aMlYwVW1WbmFYTjBaWEpGQU9jQkRHZGxkRkpsWjJsemRHVnlTQURvQVF4blpYUlNaV2RwYzNSbGNrd0E2UUVNWjJWMFVtVm5hWE4wWlhKR0FPb0JFV2RsZEZCeWIyZHlZVzFEYjNWdWRHVnlBT3NCRDJkbGRGTjBZV05yVUc5cGJuUmxjZ0RzQVJsblpYUlBjR052WkdWQmRGQnliMmR5WVcxRGIzVnVkR1Z5QU8wQkJXZGxkRXhaQU80QkhXUnlZWGRDWVdOclozSnZkVzVrVFdGd1ZHOVhZWE50VFdWdGIzSjVBTzhCR0dSeVlYZFVhV3hsUkdGMFlWUnZWMkZ6YlUxbGJXOXllUUR3QVJOa2NtRjNUMkZ0Vkc5WFlYTnRUV1Z0YjNKNUFQRUJCbWRsZEVSSlZnRHlBUWRuWlhSVVNVMUJBUE1CQm1kbGRGUk5RUUQwQVFablpYUlVRVU1BOVFFVGRYQmtZWFJsUkdWaWRXZEhRazFsYlc5eWVRRDJBUWdDOXdFS2hac0MvUUdnQWdFRWZ5QUJLQUlBSWdOQkFYRkZCRUJCQUVFWVFaVUNRUTBRQUFBTElBTkJmSEVpQWtFUVR3Ui9JQUpCOFAvLy93TkpCVUVBQzBVRVFFRUFRUmhCbHdKQkRSQUFBQXNnQWtHQUFra0VmeUFDUVFSMklRSkJBQVVnQWtFZklBSm5heUlEUVFScmRrRVFjeUVDSUFOQkIyc0xJZ05CRjBrRWZ5QUNRUkJKQlVFQUMwVUVRRUVBUVJoQnBBSkJEUkFBQUFzZ0FTZ0NGQ0VFSUFFb0FoQWlCUVJBSUFVZ0JEWUNGQXNnQkFSQUlBUWdCVFlDRUFzZ0EwRUVkQ0FDYWtFQ2RDQUFhaWdDWUNBQlJnUkFJQU5CQkhRZ0FtcEJBblFnQUdvZ0JEWUNZQ0FFUlFSQUlBTkJBblFnQUdvZ0EwRUNkQ0FBYWlnQ0JFRUJJQUowUVg5emNTSUJOZ0lFSUFGRkJFQWdBQ0FBS0FJQVFRRWdBM1JCZjNOeE5nSUFDd3NMQy8wREFRWi9JQUZGQkVCQkFFRVlRYzBCUVEwUUFBQUxJQUVvQWdBaUEwRUJjVVVFUUVFQVFSaEJ6d0ZCRFJBQUFBc2dBVUVRYWlBQktBSUFRWHh4YWlJRUtBSUFJZ1ZCQVhFRVFDQURRWHh4UVJCcUlBVkJmSEZxSWdKQjhQLy8vd05KQkVBZ0FDQUVFQUVnQVNBRFFRTnhJQUp5SWdNMkFnQWdBVUVRYWlBQktBSUFRWHh4YWlJRUtBSUFJUVVMQ3lBRFFRSnhCRUFnQVVFRWF5Z0NBQ0lDS0FJQUlnWkJBWEZGQkVCQkFFRVlRZVFCUVE4UUFBQUxJQVpCZkhGQkVHb2dBMEY4Y1dvaUIwSHcvLy8vQTBrRWZ5QUFJQUlRQVNBQ0lBWkJBM0VnQjNJaUF6WUNBQ0FDQlNBQkN5RUJDeUFFSUFWQkFuSTJBZ0FnQTBGOGNTSUNRUkJQQkg4Z0FrSHcvLy8vQTBrRlFRQUxSUVJBUVFCQkdFSHpBVUVORUFBQUN5QUVJQUZCRUdvZ0FtcEhCRUJCQUVFWVFmUUJRUTBRQUFBTElBUkJCR3NnQVRZQ0FDQUNRWUFDU1FSL0lBSkJCSFloQkVFQUJTQUNRUjhnQW1kcklnSkJCR3QyUVJCeklRUWdBa0VIYXdzaUEwRVhTUVIvSUFSQkVFa0ZRUUFMUlFSQVFRQkJHRUdFQWtFTkVBQUFDeUFEUVFSMElBUnFRUUowSUFCcUtBSmdJUUlnQVVFQU5nSVFJQUVnQWpZQ0ZDQUNCRUFnQWlBQk5nSVFDeUFEUVFSMElBUnFRUUowSUFCcUlBRTJBbUFnQUNBQUtBSUFRUUVnQTNSeU5nSUFJQU5CQW5RZ0FHb2dBMEVDZENBQWFpZ0NCRUVCSUFSMGNqWUNCQXZMQVFFQ2Z5QUNRUTl4UlVFQUlBRkJEM0ZGUVFBZ0FTQUNUUnNiUlFSQVFRQkJHRUdDQTBFRUVBQUFDeUFBS0FLZ0RDSURCRUFnQVNBRFFSQnFTUVJBUVFCQkdFR01BMEVQRUFBQUN5QUJRUkJySUFOR0JFQWdBeWdDQUNFRUlBRkJFR3NoQVFzRklBRWdBRUdrREdwSkJFQkJBRUVZUVpnRFFRUVFBQUFMQ3lBQ0lBRnJJZ0pCTUVrRVFBOExJQUVnQkVFQ2NTQUNRU0JyUVFGeWNqWUNBQ0FCUVFBMkFoQWdBVUVBTmdJVUlBRWdBbXBCRUdzaUFrRUNOZ0lBSUFBZ0FqWUNvQXdnQUNBQkVBSUxsd0VCQW45QkFUOEFJZ0JLQkg5QkFTQUFhMEFBUVFCSUJVRUFDd1JBQUF0Qm9BSkJBRFlDQUVIQURrRUFOZ0lBUVFBaEFBTkFBa0FnQUVFWFR3MEFJQUJCQW5SQm9BSnFRUUEyQWdSQkFDRUJBMEFDUUNBQlFSQlBEUUFnQUVFRWRDQUJha0VDZEVHZ0FtcEJBRFlDWUNBQlFRRnFJUUVNQVFzTElBQkJBV29oQUF3QkN3dEJvQUpCMEE0L0FFRVFkQkFEUWFBQ0pBQUxMUUFnQUVIdy8vLy9BMDhFUUVISUFFRVlRY2tEUVIwUUFBQUxJQUJCRDJwQmNIRWlBRUVRSUFCQkVFc2JDOTBCQVFGL0lBRkJnQUpKQkg4Z0FVRUVkaUVCUVFBRklBRkIrUC8vL3dGSkJFQkJBVUViSUFGbmEzUWdBV3BCQVdzaEFRc2dBVUVmSUFGbmF5SUNRUVJyZGtFUWN5RUJJQUpCQjJzTElnSkJGMGtFZnlBQlFSQkpCVUVBQzBVRVFFRUFRUmhCMGdKQkRSQUFBQXNnQWtFQ2RDQUFhaWdDQkVGL0lBRjBjU0lCQkg4Z0FXZ2dBa0VFZEdwQkFuUWdBR29vQW1BRklBQW9BZ0JCZnlBQ1FRRnFkSEVpQVFSL0lBRm9JZ0ZCQW5RZ0FHb29BZ1FpQWtVRVFFRUFRUmhCM3dKQkVSQUFBQXNnQW1nZ0FVRUVkR3BCQW5RZ0FHb29BbUFGUVFBTEN3czdBUUYvSUFBb0FnUWlBVUdBZ0lDQUIzRkJnSUNBZ0FGSEJFQWdBQ0FCUWYvLy8vOTRjVUdBZ0lDQUFYSTJBZ1FnQUVFUWFrRUNFUGtCQ3dzdEFRRi9JQUVvQWdBaUFrRUJjUVJBUVFCQkdFR3pCRUVDRUFBQUN5QUJJQUpCQVhJMkFnQWdBQ0FCRUFJTEhRQWdBQ0FBS0FJRVFmLy8vLzk0Y1RZQ0JDQUFRUkJxUVFRUStRRUxUd0VCZnlBQUtBSUVJZ0ZCZ0lDQWdBZHhRWUNBZ0lBQlJnUkFJQUZCLy8vLy93QnhRUUJMQkVBZ0FCQUpCU0FBSUFGQi8vLy8vM2h4UVlDQWdJQUNjallDQkNBQVFSQnFRUU1RK1FFTEN3dEtBUUYvSUFBb0FnUWlBVUdBZ0lDQUIzRkJnSUNBZ0FKR0JIOGdBVUdBZ0lDQWVIRkZCVUVBQ3dSQUlBQWdBVUgvLy8vL2VIRTJBZ1FnQUVFUWFrRUZFUGtCSXdBZ0FCQUlDd3Z6QVFFR2Z5TUNJZ1VpQWlFREl3TWhBQU5BQWtBZ0F5QUFUdzBBSUFNb0FnQWlCQ2dDQkNJQlFZQ0FnSUFIY1VHQWdJQ0FBMFlFZnlBQlFmLy8vLzhBY1VFQVN3VkJBQXNFUUNBRUVBY2dBaUFFTmdJQUlBSkJCR29oQWdWQkFDQUJRZi8vLy84QWNVVWdBVUdBZ0lDQUIzRWJCRUFqQUNBRUVBZ0ZJQVFnQVVILy8vLy9CM0UyQWdRTEN5QURRUVJxSVFNTUFRc0xJQUlrQXlBRklRQURRQUpBSUFBZ0FrOE5BQ0FBS0FJQUVBb2dBRUVFYWlFQURBRUxDeUFGSVFBRFFBSkFJQUFnQWs4TkFDQUFLQUlBSWdFZ0FTZ0NCRUgvLy8vL0IzRTJBZ1FnQVJBTElBQkJCR29oQUF3QkN3c2dCU1FEQzI4QkFYOC9BQ0lDSUFGQitQLy8vd0ZKQkg5QkFVRWJJQUZuYTNSQkFXc2dBV29GSUFFTFFSQWdBQ2dDb0F3Z0FrRVFkRUVRYTBkMGFrSC8vd05xUVlDQWZIRkJFSFlpQVNBQ0lBRktHMEFBUVFCSUJFQWdBVUFBUVFCSUJFQUFDd3NnQUNBQ1FSQjBQd0JCRUhRUUF3dUhBUUVDZnlBQktBSUFJUU1nQWtFUGNRUkFRUUJCR0VIdEFrRU5FQUFBQ3lBRFFYeHhJQUpySWdSQklFOEVRQ0FCSUFOQkFuRWdBbkkyQWdBZ0FVRVFhaUFDYWlJQklBUkJFR3RCQVhJMkFnQWdBQ0FCRUFJRklBRWdBMEYrY1RZQ0FDQUJRUkJxSUFFb0FnQkJmSEZxSUFGQkVHb2dBU2dDQUVGOGNXb29BZ0JCZlhFMkFnQUxDNUVCQVFKL0l3RUVRRUVBUVJoQjVnTkJEUkFBQUFzZ0FDQUJFQVVpQXhBR0lnSkZCRUJCQVNRQkVBeEJBQ1FCSUFBZ0F4QUdJZ0pGQkVBZ0FDQURFQTBnQUNBREVBWWlBa1VFUUVFQVFSaEI4Z05CRXhBQUFBc0xDeUFDS0FJQVFYeHhJQU5KQkVCQkFFRVlRZm9EUVEwUUFBQUxJQUpCQURZQ0JDQUNJQUUyQWd3Z0FDQUNFQUVnQUNBQ0lBTVFEaUFDQ3lJQkFYOGpBQ0lDQkg4Z0FnVVFCQ01BQ3lBQUVBOGlBQ0FCTmdJSUlBQkJFR29MVVFFQmZ5QUFLQUlFSWdGQmdJQ0FnSDl4SUFGQkFXcEJnSUNBZ0g5eFJ3UkFRUUJCZ0FGQjZBQkJBaEFBQUFzZ0FDQUJRUUZxTmdJRUlBQW9BZ0JCQVhFRVFFRUFRWUFCUWVzQVFRMFFBQUFMQ3hRQUlBQkJuQUpMQkVBZ0FFRVFheEFSQ3lBQUN5Y0FJQUJCZ0FJb0FnQkxCRUJCc0FGQjZBRkJGa0ViRUFBQUN5QUFRUU4wUVlRQ2FpZ0NBQXZFREFFRGZ3TkFJQUZCQTNGQkFDQUNHd1JBSUFBaUEwRUJhaUVBSUFFaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUNBQ1FRRnJJUUlNQVFzTElBQkJBM0ZGQkVBRFFDQUNRUkJKUlFSQUlBQWdBU2dDQURZQ0FDQUFRUVJxSUFGQkJHb29BZ0EyQWdBZ0FFRUlhaUFCUVFocUtBSUFOZ0lBSUFCQkRHb2dBVUVNYWlnQ0FEWUNBQ0FCUVJCcUlRRWdBRUVRYWlFQUlBSkJFR3NoQWd3QkN3c2dBa0VJY1FSQUlBQWdBU2dDQURZQ0FDQUFRUVJxSUFGQkJHb29BZ0EyQWdBZ0FVRUlhaUVCSUFCQkNHb2hBQXNnQWtFRWNRUkFJQUFnQVNnQ0FEWUNBQ0FCUVFScUlRRWdBRUVFYWlFQUN5QUNRUUp4QkVBZ0FDQUJMd0VBT3dFQUlBRkJBbW9oQVNBQVFRSnFJUUFMSUFKQkFYRUVRQ0FBSUFFdEFBQTZBQUFMRHdzZ0FrRWdUd1JBQWtBQ1FBSkFJQUJCQTNFaUEwRUJSd1JBSUFOQkFrWU5BU0FEUVFOR0RRSU1Bd3NnQVNnQ0FDRUZJQUFnQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBMEVCYWlFQUlBRkJBV29pQkVFQmFpRUJJQU1nQkMwQUFEb0FBQ0FDUVFOcklRSURRQ0FDUVJGSlJRUkFJQUFnQVVFQmFpZ0NBQ0lEUVFoMElBVkJHSFp5TmdJQUlBQkJCR29nQTBFWWRpQUJRUVZxS0FJQUlnTkJDSFJ5TmdJQUlBQkJDR29nQTBFWWRpQUJRUWxxS0FJQUlnTkJDSFJ5TmdJQUlBQkJER29nQVVFTmFpZ0NBQ0lGUVFoMElBTkJHSFp5TmdJQUlBRkJFR29oQVNBQVFSQnFJUUFnQWtFUWF5RUNEQUVMQ3d3Q0N5QUJLQUlBSVFVZ0FDQUJMUUFBT2dBQUlBQkJBV29pQTBFQmFpRUFJQUZCQVdvaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUNBQ1FRSnJJUUlEUUNBQ1FSSkpSUVJBSUFBZ0FVRUNhaWdDQUNJRFFSQjBJQVZCRUhaeU5nSUFJQUJCQkdvZ0EwRVFkaUFCUVFacUtBSUFJZ05CRUhSeU5nSUFJQUJCQ0dvZ0EwRVFkaUFCUVFwcUtBSUFJZ05CRUhSeU5nSUFJQUJCREdvZ0FVRU9haWdDQUNJRlFSQjBJQU5CRUhaeU5nSUFJQUZCRUdvaEFTQUFRUkJxSVFBZ0FrRVFheUVDREFFTEN3d0JDeUFCS0FJQUlRVWdBQ0lEUVFGcUlRQWdBU0lFUVFGcUlRRWdBeUFFTFFBQU9nQUFJQUpCQVdzaEFnTkFJQUpCRTBsRkJFQWdBQ0FCUVFOcUtBSUFJZ05CR0hRZ0JVRUlkbkkyQWdBZ0FFRUVhaUFEUVFoMklBRkJCMm9vQWdBaUEwRVlkSEkyQWdBZ0FFRUlhaUFEUVFoMklBRkJDMm9vQWdBaUEwRVlkSEkyQWdBZ0FFRU1haUFCUVE5cUtBSUFJZ1ZCR0hRZ0EwRUlkbkkyQWdBZ0FVRVFhaUVCSUFCQkVHb2hBQ0FDUVJCcklRSU1BUXNMQ3dzZ0FrRVFjUVJBSUFBZ0FTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJQUlBRkJBV29pQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlBSUFGQkFXb2lBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSUFJQUZCQVdvaUFTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJQUlBRkJBV29pQVMwQUFEb0FBQ0FBUVFGcUlnQWdBVUVCYWlJQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlEUVFGcUlRQWdBVUVCYWlJRVFRRnFJUUVnQXlBRUxRQUFPZ0FBQ3lBQ1FRaHhCRUFnQUNBQkxRQUFPZ0FBSUFCQkFXb2lBQ0FCUVFGcUlnRXRBQUE2QUFBZ0FFRUJhaUlBSUFGQkFXb2lBUzBBQURvQUFDQUFRUUZxSWdBZ0FVRUJhaUlCTFFBQU9nQUFJQUJCQVdvaUFDQUJRUUZxSWdFdEFBQTZBQUFnQUVFQmFpSUFJQUZCQVdvaUFTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQTBFQmFpRUFJQUZCQVdvaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUFzZ0FrRUVjUVJBSUFBZ0FTMEFBRG9BQUNBQVFRRnFJZ0FnQVVFQmFpSUJMUUFBT2dBQUlBQkJBV29pQUNBQlFRRnFJZ0V0QUFBNkFBQWdBRUVCYWlJRFFRRnFJUUFnQVVFQmFpSUVRUUZxSVFFZ0F5QUVMUUFBT2dBQUN5QUNRUUp4QkVBZ0FDQUJMUUFBT2dBQUlBQkJBV29pQTBFQmFpRUFJQUZCQVdvaUJFRUJhaUVCSUFNZ0JDMEFBRG9BQUFzZ0FrRUJjUVJBSUFBZ0FTMEFBRG9BQUFzTDBnSUJBbjhDUUNBQ0lRTWdBQ0FCUmcwQVFRRWdBQ0FEYWlBQlRTQUJJQU5xSUFCTkd3UkFJQUFnQVNBREVCUU1BUXNnQUNBQlNRUkFJQUZCQjNFZ0FFRUhjVVlFUUFOQUlBQkJCM0VFUUNBRFJRMEVJQU5CQVdzaEF5QUFJZ0pCQVdvaEFDQUJJZ1JCQVdvaEFTQUNJQVF0QUFBNkFBQU1BUXNMQTBBZ0EwRUlTVVVFUUNBQUlBRXBBd0EzQXdBZ0EwRUlheUVESUFCQkNHb2hBQ0FCUVFocUlRRU1BUXNMQ3dOQUlBTUVRQ0FBSWdKQkFXb2hBQ0FCSWdSQkFXb2hBU0FDSUFRdEFBQTZBQUFnQTBFQmF5RUREQUVMQ3dVZ0FVRUhjU0FBUVFkeFJnUkFBMEFnQUNBRGFrRUhjUVJBSUFORkRRUWdBQ0FEUVFGcklnTnFJQUVnQTJvdEFBQTZBQUFNQVFzTEEwQWdBMEVJU1VVRVFDQUFJQU5CQ0dzaUEyb2dBU0FEYWlrREFEY0RBQXdCQ3dzTEEwQWdBd1JBSUFBZ0EwRUJheUlEYWlBQklBTnFMUUFBT2dBQURBRUxDd3NMQ3pnQUl3QkZCRUJCQUVFWVFkRUVRUTBRQUFBTElBQkJEM0ZGUVFBZ0FCdEZCRUJCQUVFWVFkSUVRUUlRQUFBTEl3QWdBRUVRYXhBSUMwVUJCSDhqQXlNQ0lnRnJJZ0pCQVhRaUFFR0FBaUFBUVlBQ1N4c2lBMEVBRUJBaUFDQUJJQUlRRlNBQkJFQWdBUkFXQ3lBQUpBSWdBQ0FDYWlRRElBQWdBMm9rQkFzaUFRRi9Jd01pQVNNRVR3UkFFQmNqQXlFQkN5QUJJQUEyQWdBZ0FVRUVhaVFEQzdZQkFRSi9JQUFvQWdRaUFrSC8vLy8vQUhFaEFTQUFLQUlBUVFGeEJFQkJBRUdBQVVIekFFRU5FQUFBQ3lBQlFRRkdCRUFnQUVFUWFrRUJFUGtCSUFKQmdJQ0FnSGh4QkVBZ0FFR0FnSUNBZURZQ0JBVWpBQ0FBRUFnTEJTQUJRUUJOQkVCQkFFR0FBVUg4QUVFUEVBQUFDeUFBS0FJSUVCTkJFSEVFUUNBQUlBRkJBV3NnQWtHQWdJQ0FmM0Z5TmdJRUJTQUFJQUZCQVd0QmdJQ0FnSHR5TmdJRUlBSkJnSUNBZ0hoeFJRUkFJQUFRR0FzTEN3c1NBQ0FBUVp3Q1N3UkFJQUJCRUdzUUdRc0xVd0JCOHVYTEJ5UStRYURCZ2dVa1AwSFlzT0VDSkVCQmlKQWdKRUZCOHVYTEJ5UkNRYURCZ2dVa1EwSFlzT0VDSkVSQmlKQWdKRVZCOHVYTEJ5UkdRYURCZ2dVa1IwSFlzT0VDSkVoQmlKQWdKRWtMbHdJQkFYOENRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQkJESFVpQVFSQUlBRkJBVVlOQVFKQUlBRkJBbXNPREFJQ0F3TURBd1FFQlFVR0J3QUxEQWNMSTRBQ0JFQWpnUUlFUUNBQVFZQUNTQTBKSUFCQmdCSklRUUFnQUVIL0Ewb2JEUWtGUVFBZ0FFR0FBa2dqZ1FJYkRRa0xDd3NnQUVHQXJkRUFhZzhMSUFCQkFTUHlBU0lBUVFBZ0FFVWorZ0ViRzBFT2RHcEJnSzNRQUdvUEN5QUFRWUNRZm1vamdRSUVmMEhQL2dNUUhVRUJjUVZCQUF0QkRYUnFEd3NnQUNQekFVRU5kR3BCZ05uR0FHb1BDeUFBUVlDUWZtb1BDMEVBSVFFQ2Z5T0JBZ1JBUWZEK0F4QWRRUWR4SVFFTElBRkJBVWdMQkg5QkFRVWdBUXRCREhRZ0FHcEJnUEI5YWc4TElBQkJnRkJxRHdzZ0FFR0FtZEVBYWdzSkFDQUFFQnd0QUFBTHd3RUFRUUFrZ2dKQkFDU0RBa0VBSklRQ1FRQWtoUUpCQUNTR0FrRUFKSWNDUVFBa2lBSkJBQ1NKQWtFQUpJb0NRUUFraXdKQkFDU01Ba0VBSkkwQ1FRQWtqZ0pCQUNTUEFrRUFKSkFDUVFBa2tRSWpnQUlFUUE4TEk0RUNCRUJCRVNTREFrR0FBU1NLQWtFQUpJUUNRUUFraFFKQi93RWtoZ0pCMWdBa2h3SkJBQ1NJQWtFTkpJa0NCVUVCSklNQ1FiQUJKSW9DUVFBa2hBSkJFeVNGQWtFQUpJWUNRZGdCSkljQ1FRRWtpQUpCelFBa2lRSUxRWUFDSkl3Q1FmNy9BeVNMQWdzTEFDQUFFQndnQVRvQUFBdHpBUUYvUVFBazlBRkJBU1QxQVVISEFoQWRJZ0JGSlBZQklBQkJBMHhCQUNBQVFRRk9HeVQzQVNBQVFRWk1RUUFnQUVFRlRoc2srQUVnQUVFVFRFRUFJQUJCRDA0YkpQa0JJQUJCSGt4QkFDQUFRUmxPR3lUNkFVRUJKUElCUVFBazh3RkJ6LzREUVFBUUgwSHcvZ05CQVJBZkN5OEFRZEgrQTBIL0FSQWZRZEwrQTBIL0FSQWZRZFArQTBIL0FSQWZRZFQrQTBIL0FSQWZRZFgrQTBIL0FSQWZDN0FJQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFBRVFDQUFRUUZHRFFFQ1FDQUFRUUpyRGdzREJBVUdCd2dKQ2dzTURRQUxEQTBMUWZMbHl3Y2tQa0dnd1lJRkpEOUIyTERoQWlSQVFZaVFJQ1JCUWZMbHl3Y2tRa0dnd1lJRkpFTkIyTERoQWlSRVFZaVFJQ1JGUWZMbHl3Y2tSa0dnd1lJRkpFZEIyTERoQWlSSVFZaVFJQ1JKREF3TFFmLy8vd2NrUGtIajJ2NEhKRDlCZ09LUUJDUkFRUUFrUVVILy8vOEhKRUpCNDlyK0J5UkRRWURpa0FRa1JFRUFKRVZCLy8vL0J5UkdRZVBhL2dja1IwR0E0cEFFSkVoQkFDUkpEQXNMUWYvLy93Y2tQa0dFaWY0SEpEOUJ1dlRRQkNSQVFRQWtRVUgvLy84SEpFSkJzZjd2QXlSRFFZQ0lBaVJFUVFBa1JVSC8vLzhISkVaQi84dU9BeVJIUWY4QkpFaEJBQ1JKREFvTFFjWE4vd2NrUGtHRXVib0dKRDlCcWRhUkJDUkFRWWppNkFJa1FVSC8vLzhISkVKQjQ5citCeVJEUVlEaWtBUWtSRUVBSkVWQi8vLy9CeVJHUWVQYS9nY2tSMEdBNHBBRUpFaEJBQ1JKREFrTFFmLy8vd2NrUGtHQS9zc0NKRDlCZ0lUOUJ5UkFRUUFrUVVILy8vOEhKRUpCZ1A3TEFpUkRRWUNFL1Fja1JFRUFKRVZCLy8vL0J5UkdRWUQreXdJa1IwR0FoUDBISkVoQkFDUkpEQWdMUWYvLy93Y2tQa0d4L3U4REpEOUJ4Y2NCSkVCQkFDUkJRZi8vL3dja1FrR0VpZjRISkVOQnV2VFFCQ1JFUVFBa1JVSC8vLzhISkVaQmhJbitCeVJIUWJyMDBBUWtTRUVBSkVrTUJ3dEJBQ1ErUVlTSkFpUS9RWUM4L3dja1FFSC8vLzhISkVGQkFDUkNRWVNKQWlSRFFZQzgvd2NrUkVILy8vOEhKRVZCQUNSR1FZU0pBaVJIUVlDOC93Y2tTRUgvLy84SEpFa01CZ3RCcGYvL0J5UStRWlNwL2dja1AwSC9xZElFSkVCQkFDUkJRYVgvL3dja1FrR1VxZjRISkVOQi82blNCQ1JFUVFBa1JVR2wvLzhISkVaQmxLbitCeVJIUWYrcDBnUWtTRUVBSkVrTUJRdEIvLy8vQnlRK1FZRCsvd2NrUDBHQWdQd0hKRUJCQUNSQlFmLy8vd2NrUWtHQS92OEhKRU5CZ0lEOEJ5UkVRUUFrUlVILy8vOEhKRVpCZ1A3L0J5UkhRWUNBL0Fja1NFRUFKRWtNQkF0Qi8vLy9CeVErUVlEKy93Y2tQMEdBbE8wREpFQkJBQ1JCUWYvLy93Y2tRa0gveTQ0REpFTkIvd0VrUkVFQUpFVkIvLy8vQnlSR1FiSCs3d01rUjBHQWlBSWtTRUVBSkVrTUF3dEIvLy8vQnlRK1FmL0xqZ01rUDBIL0FTUkFRUUFrUVVILy8vOEhKRUpCaEluK0J5UkRRYnIwMEFRa1JFRUFKRVZCLy8vL0J5UkdRYkgrN3dNa1IwR0FpQUlrU0VFQUpFa01BZ3RCLy8vL0J5UStRZDZac2dRa1AwR01wY2tDSkVCQkFDUkJRZi8vL3dja1FrR0VpZjRISkVOQnV2VFFCQ1JFUVFBa1JVSC8vLzhISkVaQjQ5citCeVJIUVlEaWtBUWtTRUVBSkVrTUFRdEIvLy8vQnlRK1FhWExsZ1VrUDBIU3BNa0NKRUJCQUNSQlFmLy8vd2NrUWtHbHk1WUZKRU5CMHFUSkFpUkVRUUFrUlVILy8vOEhKRVpCcGN1V0JTUkhRZEtreVFJa1NFRUFKRWtMQzlvSUFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFZZ0JSd1JBSUFCQjRRQkdEUUVnQUVFVVJnMENJQUJCeGdCR0RRTWdBRUhaQUVZTkJDQUFRY1lCUmcwRUlBQkJoZ0ZHRFFVZ0FFR29BVVlOQlNBQVFiOEJSZzBHSUFCQnpnRkdEUVlnQUVIUkFVWU5CaUFBUWZBQlJnMEdJQUJCSjBZTkJ5QUFRY2tBUmcwSElBQkIzQUJHRFFjZ0FFR3pBVVlOQnlBQVFja0JSZzBJSUFCQjhBQkdEUWtnQUVIR0FFWU5DaUFBUWRNQlJnMExEQXdMUWYrNWxnVWtQa0dBL3Y4SEpEOUJnTVlCSkVCQkFDUkJRZis1bGdVa1FrR0EvdjhISkVOQmdNWUJKRVJCQUNSRlFmKzVsZ1VrUmtHQS92OEhKRWRCZ01ZQkpFaEJBQ1JKREFzTFFmLy8vd2NrUGtIL3k0NERKRDlCL3dFa1FFRUFKRUZCLy8vL0J5UkNRWVNKL2dja1EwRzY5TkFFSkVSQkFDUkZRZi8vL3dja1JrSC95NDRESkVkQi93RWtTRUVBSkVrTUNndEIvLy8vQnlRK1FZU0ovZ2NrUDBHNjlOQUVKRUJCQUNSQlFmLy8vd2NrUWtHeC91OERKRU5CZ0lnQ0pFUkJBQ1JGUWYvLy93Y2tSa0dFaWY0SEpFZEJ1dlRRQkNSSVFRQWtTUXdKQzBILzY5WUZKRDVCbFAvL0J5US9RY0swdFFVa1FFRUFKRUZCQUNSQ1FmLy8vd2NrUTBHRWlmNEhKRVJCdXZUUUJDUkZRUUFrUmtILy8vOEhKRWRCaEluK0J5UklRYnIwMEFRa1NRd0lDMEgvLy84SEpENUJoTnUyQlNRL1Fmdm1pUUlrUUVFQUpFRkIvLy8vQnlSQ1FZRG0vUWNrUTBHQWhORUVKRVJCQUNSRlFmLy8vd2NrUmtILysrb0NKRWRCZ0lEOEJ5UklRZjhCSkVrTUJ3dEJuUC8vQnlRK1FmL3IwZ1FrUDBIenFJNERKRUJCdXZRQUpFRkJ3b3IvQnlSQ1FZQ3Mvd2NrUTBHQTlOQUVKRVJCZ0lDb0FpUkZRZi8vL3dja1JrR0VpZjRISkVkQnV2VFFCQ1JJUVFBa1NRd0dDMEdBL3E4REpENUIvLy8vQnlRL1FjcWsvUWNrUUVFQUpFRkIvLy8vQnlSQ1FmLy8vd2NrUTBIL3k0NERKRVJCL3dFa1JVSC8vLzhISkVaQjQ5citCeVJIUVlEaWtBUWtTRUVBSkVrTUJRdEIvN21XQlNRK1FZRCsvd2NrUDBHQXhnRWtRRUVBSkVGQjBzYjlCeVJDUVlDQTJBWWtRMEdBZ0l3REpFUkJBQ1JGUWY4QkpFWkIvLy8vQnlSSFFmdisvd2NrU0VIL2lRSWtTUXdFQzBITy8vOEhKRDVCNzkrUEF5US9RYkdJOGdRa1FFSGF0T2tDSkVGQi8vLy9CeVJDUVlEbS9RY2tRMEdBaE5FRUpFUkJBQ1JGUWYvLy93Y2tSa0gveTQ0REpFZEIvd0VrU0VFQUpFa01Bd3RCLy8vL0J5UStRWVNKL2dja1AwRzY5TkFFSkVCQkFDUkJRZi8vL3dja1FrR0EvZ01rUTBHQWlNWUJKRVJCZ0pRQkpFVkIvLy8vQnlSR1FmL0xqZ01rUjBIL0FTUklRUUFrU1F3Q0MwSC8vLzhISkQ1Qi84dU9BeVEvUWY4QkpFQkJBQ1JCUVlEKy93Y2tRa0dBZ1B3SEpFTkJnSUNNQXlSRVFRQWtSVUgvLy84SEpFWkJzZjd2QXlSSFFZQ0lBaVJJUVFBa1NRd0JDMEgvLy84SEpENUJoTnUyQlNRL1Fmdm1pUUlrUUVFQUpFRkIvLy8vQnlSQ1FlUGEvZ2NrUTBIajJ2NEhKRVJCQUNSRlFmLy8vd2NrUmtIL3k0NERKRWRCL3dFa1NFRUFKRWtMQzBvQkFuOUJBQkFpSTRFQ0JFQVBDeU9BQWdSQUk0RUNSUVJBRHdzTFFiUUNJUUFEUUFKQUlBQkJ3d0pLRFFBZ0FCQWRJQUZxSVFFZ0FFRUJhaUVBREFFTEN5QUJRZjhCY1JBakM5d0JBRUVBSk9zQlFRQWs3QUZCQUNUdEFVRUFKTzRCUVFBazd3RkJBQ1R3QVVFQUpQRUJRWkFCSk8wQkk0RUNCRUJCd2Y0RFFZRUJFQjlCeFA0RFFaQUJFQjlCeC80RFFmd0JFQjhGUWNIK0EwR0ZBUkFmUWNiK0EwSC9BUkFmUWNmK0EwSDhBUkFmUWNqK0EwSC9BUkFmUWNuK0EwSC9BUkFmQzBHUUFTVHRBVUhBL2dOQmtBRVFIMEhQL2dOQkFCQWZRZkQrQTBFQkVCOGpnQUlFUUNPQkFnUkFRUUFrN1FGQndQNERRUUFRSDBIQi9nTkJnQUVRSDBIRS9nTkJBQkFmQlVFQUpPMEJRY0QrQTBFQUVCOUJ3ZjREUVlRQkVCOExDeEFrQzIwQUk0RUNCRUJCNlA0RFFjQUJFQjlCNmY0RFFmOEJFQjlCNnY0RFFjRUJFQjlCNi80RFFRMFFId1ZCNlA0RFFmOEJFQjlCNmY0RFFmOEJFQjlCNnY0RFFmOEJFQjlCNi80RFFmOEJFQjhMSTRFQ1FRQWpnQUliQkVCQjZmNERRU0FRSDBIci9nTkJpZ0VRSHdzTFZnQkJrUDREUVlBQkVCOUJrZjREUWI4QkVCOUJrdjREUWZNQkVCOUJrLzREUWNFQkVCOUJsUDREUWI4QkVCOGpnQUlFUUVHUi9nTkJQeEFmUVpMK0EwRUFFQjlCay80RFFRQVFIMEdVL2dOQnVBRVFId3NMTEFCQmxmNERRZjhCRUI5Qmx2NERRVDhRSDBHWC9nTkJBQkFmUVpqK0EwRUFFQjlCbWY0RFFiZ0JFQjhMTXdCQm12NERRZjhBRUI5Qm0vNERRZjhCRUI5Qm5QNERRWjhCRUI5Qm5mNERRUUFRSDBHZS9nTkJ1QUVRSDBFQkpJWUJDeTBBUVovK0EwSC9BUkFmUWFEK0EwSC9BUkFmUWFIK0EwRUFFQjlCb3Y0RFFRQVFIMEdqL2dOQnZ3RVFId3RjQUNBQVFZQUJjVUVBUnlTdEFTQUFRY0FBY1VFQVJ5U3NBU0FBUVNCeFFRQkhKS3NCSUFCQkVIRkJBRWNrcWdFZ0FFRUljVUVBUnlTeEFTQUFRUVJ4UVFCSEpMQUJJQUJCQW5GQkFFY2tyd0VnQUVFQmNVRUFSeVN1QVF0RkFFRVBKSm9CUVE4a213RkJEeVNjQVVFUEpKMEJRUUFrbmdGQkFDU2ZBVUVBSktBQlFRQWtvUUZCL3dBa29nRkIvd0Frb3dGQkFTU2tBVUVCSktVQlFRQWtwZ0VMdlFFQVFRQWtwd0ZCQUNTb0FVRUFKS2tCUVFFa3FnRkJBU1NyQVVFQkpLd0JRUUVrclFGQkFTU3VBVUVCSks4QlFRRWtzQUZCQVNTeEFVRUJKTElCUVFBa3N3RkJBQ1MwQVVFQUpMVUJRUUFrdGdFUUp4QW9FQ2tRS2tHay9nTkI5d0FRSDBFSEpLZ0JRUWNrcVFGQnBmNERRZk1CRUI5Qjh3RVFLMEdtL2dOQjhRRVFIMEVCSkxJQkk0QUNCRUJCcFA0RFFRQVFIMEVBSktnQlFRQWtxUUZCcGY0RFFRQVFIMEVBRUN0QnB2NERRZkFBRUI5QkFDU3lBUXNRTEFzK0FDQUFRUUZ4UVFCSEpMb0JJQUJCQW5GQkFFY2t1d0VnQUVFRWNVRUFSeVM4QVNBQVFRaHhRUUJISkwwQklBQkJFSEZCQUVja3ZnRWdBQ1M1QVFzK0FDQUFRUUZ4UVFCSEpNQUJJQUJCQW5GQkFFY2t3UUVnQUVFRWNVRUFSeVRDQVNBQVFRaHhRUUJISk1NQklBQkJFSEZCQUVja3hBRWdBQ1MvQVF0NEFFRUFKTVVCUVFBa3hnRkJBQ1RIQVVFQUpNb0JRUUFreXdGQkFDVE1BVUVBSk1nQlFRQWt5UUVqZ1FJRVFFR0UvZ05CSGhBZlFhQTlKTVlCQlVHRS9nTkJxd0VRSDBITTF3SWt4Z0VMUVlmK0EwSDRBUkFmUWZnQkpNd0JJNEFDQkVBamdRSkZCRUJCaFA0RFFRQVFIMEVFSk1ZQkN3c0xRd0JCQUNUTkFVRUFKTTRCSTRFQ0JFQkJndjREUWZ3QUVCOUJBQ1RQQVVFQUpOQUJRUUFrMFFFRlFZTCtBMEgrQUJBZlFRQWt6d0ZCQVNUUUFVRUFKTkVCQ3d0MUFDT0JBZ1JBUWZEK0EwSDRBUkFmUWMvK0EwSCtBUkFmUWMzK0EwSCtBQkFmUVlEK0EwSFBBUkFmUVkvK0EwSGhBUkFmUWV6K0EwSCtBUkFmUWZYK0EwR1BBUkFmQlVIdy9nTkIvd0VRSDBIUC9nTkIvd0VRSDBITi9nTkIvd0VRSDBHQS9nTkJ6d0VRSDBHUC9nTkI0UUVRSHdzTGxnRUJBWDlCd3dJUUhTSUFRY0FCUmdSL1FRRUZJQUJCZ0FGR1FRQWpOUnNMQkVCQkFTU0JBZ1ZCQUNTQkFndEJBQ1NZQWtHQXFOYTVCeVNTQWtFQUpKTUNRUUFrbEFKQmdLald1UWNrbFFKQkFDU1dBa0VBSkpjQ0l6UUVRRUVCSklBQ0JVRUFKSUFDQ3hBZUVDQVFJUkFsRUNZUUxVRUFFQzVCLy84REk3a0JFQjlCNFFFUUwwR1AvZ01qdndFUUh4QXdFREVRTWd0S0FDQUFRUUJLSkRRZ0FVRUFTaVExSUFKQkFFb2tOaUFEUVFCS0pEY2dCRUVBU2lRNElBVkJBRW9rT1NBR1FRQktKRG9nQjBFQVNpUTdJQWhCQUVva1BDQUpRUUJLSkQwUU13c0ZBQ09ZQWd1NUFRQkJnQWdqZ3dJNkFBQkJnUWdqaEFJNkFBQkJnZ2dqaFFJNkFBQkJnd2dqaGdJNkFBQkJoQWdqaHdJNkFBQkJoUWdqaUFJNkFBQkJoZ2dqaVFJNkFBQkJod2dqaWdJNkFBQkJpQWdqaXdJN0FRQkJpZ2dqakFJN0FRQkJqQWdqalFJMkFnQkJrUWdqamdKQkFFYzZBQUJCa2dnamp3SkJBRWM2QUFCQmt3Z2prQUpCQUVjNkFBQkJsQWdqa1FKQkFFYzZBQUJCbFFnamdBSkJBRWM2QUFCQmxnZ2pnUUpCQUVjNkFBQkJsd2dqZ2dKQkFFYzZBQUFMYUFCQnlBa2o4Z0U3QVFCQnlna2o4d0U3QVFCQnpBa2o5QUZCQUVjNkFBQkJ6UWtqOVFGQkFFYzZBQUJCemdrajlnRkJBRWM2QUFCQnp3a2o5d0ZCQUVjNkFBQkIwQWtqK0FGQkFFYzZBQUJCMFFraitRRkJBRWM2QUFCQjBna2orZ0ZCQUVjNkFBQUxOUUJCK2dranhRRTJBZ0JCL2dranhnRTJBZ0JCZ2dvanlBRkJBRWM2QUFCQmhRb2p5UUZCQUVjNkFBQkJoZjRESThjQkVCOExZd0JCM2dvaldFRUFSem9BQUVIZkNpTmJOZ0lBUWVNS0kxdzJBZ0JCNXdvalhqWUNBRUhzQ2lOZk5nSUFRZkVLSTJBNkFBQkI4Z29qWVRvQUFFSDNDaU5pUVFCSE9nQUFRZmdLSTJNMkFnQkIvUW9qWkRzQkFFSC9DaU5kUVFCSE9nQUFDMGdBUVpBTEkyOUJBRWM2QUFCQmtRc2pjallDQUVHVkN5TnpOZ0lBUVprTEkzVTJBZ0JCbmdzamRqWUNBRUdqQ3lOM09nQUFRYVFMSTNnNkFBQkJwUXNqZEVFQVJ6b0FBQXRIQUVIMEN5T1JBVUVBUnpvQUFFSDFDeU9UQVRZQ0FFSDVDeU9VQVRZQ0FFSDlDeU9XQVRZQ0FFR0NEQ09YQVRZQ0FFR0hEQ09aQVRzQkFFR0pEQ09WQVVFQVJ6b0FBQXVIQVFBUU5rR3lDQ1BzQVRZQ0FFRzJDQ1BoQVRvQUFFSEUvZ01qN1FFUUgwSGtDQ08zQVVFQVJ6b0FBRUhsQ0NPNEFVRUFSem9BQUJBM0VEaEJyQW9qc3dFMkFnQkJzQW9qdEFFNkFBQkJzUW9qdFFFNkFBQVFPUkE2UWNJTEkzOUJBRWM2QUFCQnd3c2pnZ0UyQWdCQnh3c2pnd0UyQWdCQnl3c2poQUU3QVFBUU8wRUFKSmdDQzdrQkFFR0FDQzBBQUNTREFrR0JDQzBBQUNTRUFrR0NDQzBBQUNTRkFrR0RDQzBBQUNTR0FrR0VDQzBBQUNTSEFrR0ZDQzBBQUNTSUFrR0dDQzBBQUNTSkFrR0hDQzBBQUNTS0FrR0lDQzhCQUNTTEFrR0tDQzhCQUNTTUFrR01DQ2dDQUNTTkFrR1JDQzBBQUVFQVNpU09Ba0dTQ0MwQUFFRUFTaVNQQWtHVENDMEFBRUVBU2lTUUFrR1VDQzBBQUVFQVNpU1JBa0dWQ0MwQUFFRUFTaVNBQWtHV0NDMEFBRUVBU2lTQkFrR1hDQzBBQUVFQVNpU0NBZ3RlQVFGL1FRQWs3QUZCQUNUdEFVSEUvZ05CQUJBZlFjSCtBeEFkUVh4eElRRkJBQ1RoQVVIQi9nTWdBUkFmSUFBRVFBSkFRUUFoQUFOQUlBQkJnTmdGVGcwQklBQkJnTWtGYWtIL0FUb0FBQ0FBUVFGcUlRQU1BQUFMQUFzTEM0SUJBUUYvSStNQklRRWdBRUdBQVhGQkFFY2s0d0VnQUVIQUFIRkJBRWNrNUFFZ0FFRWdjVUVBUnlUbEFTQUFRUkJ4UVFCSEpPWUJJQUJCQ0hGQkFFY2s1d0VnQUVFRWNVRUFSeVRvQVNBQVFRSnhRUUJISk9rQklBQkJBWEZCQUVjazZnRWo0d0ZGUVFBZ0FSc0VRRUVCRUQ0TFFRQWo0d0VnQVJzRVFFRUFFRDRMQ3lvQVFlUUlMUUFBUVFCS0pMY0JRZVVJTFFBQVFRQktKTGdCUWYvL0F4QWRFQzVCai80REVCMFFMd3RvQUVISUNTOEJBQ1R5QVVIS0NTOEJBQ1R6QVVITUNTMEFBRUVBU2lUMEFVSE5DUzBBQUVFQVNpVDFBVUhPQ1MwQUFFRUFTaVQyQVVIUENTMEFBRUVBU2lUM0FVSFFDUzBBQUVFQVNpVDRBVUhSQ1MwQUFFRUFTaVQ1QVVIU0NTMEFBRUVBU2lUNkFRdEhBRUg2Q1NnQ0FDVEZBVUgrQ1NnQ0FDVEdBVUdDQ2kwQUFFRUFTaVRJQVVHRkNpMEFBRUVBU2lUSkFVR0YvZ01RSFNUSEFVR0cvZ01RSFNUS0FVR0gvZ01RSFNUTUFRc0hBRUVBSkxZQkMyTUFRZDRLTFFBQVFRQktKRmhCM3dvb0FnQWtXMEhqQ2lnQ0FDUmNRZWNLS0FJQUpGNUI3QW9vQWdBa1gwSHhDaTBBQUNSZ1FmSUtMUUFBSkdGQjl3b3RBQUJCQUVva1lrSDRDaWdDQUNSalFmMEtMd0VBSkdSQi93b3RBQUJCQUVva1hRdElBRUdRQ3kwQUFFRUFTaVJ2UVpFTEtBSUFKSEpCbFFzb0FnQWtjMEdaQ3lnQ0FDUjFRWjRMS0FJQUpIWkJvd3N0QUFBa2QwR2tDeTBBQUNSNFFiRUxMUUFBUVFCS0pIUUxSd0JCOUFzdEFBQkJBRW9ra1FGQjlRc29BZ0Fra3dGQitRc29BZ0FrbEFGQi9Rc29BZ0FrbGdGQmdnd29BZ0FrbHdGQmh3d3ZBUUFrbVFGQmlRd3RBQUJCQUVva2xRRUx6QUVCQVg4UVBVR3lDQ2dDQUNUc0FVRzJDQzBBQUNUaEFVSEUvZ01RSFNUdEFVSEEvZ01RSFJBL0VFQkJnUDRERUIxQi93RnpKTm9CSTlvQklnQkJFSEZCQUVjazJ3RWdBRUVnY1VFQVJ5VGNBUkJCRUVKQnJBb29BZ0Frc3dGQnNBb3RBQUFrdEFGQnNRb3RBQUFrdFFGQkFDUzJBUkJFRUVWQndnc3RBQUJCQUVva2YwSERDeWdDQUNTQ0FVSEhDeWdDQUNTREFVSExDeThCQUNTRUFSQkdRUUFrbUFKQmdLald1UWNra2dKQkFDU1RBa0VBSkpRQ1FZQ28xcmtISkpVQ1FRQWtsZ0pCQUNTWEFnc0ZBQ09CQWdzRkFDT1ZBZ3NGQUNPV0Fnc0ZBQ09YQWd1eUFnRUdmeU5MSWdVZ0FFWkJBQ05LSUFSR1FRQWdBRUVJU2tFQUlBRkJBRW9iR3hzRVFDQURRUUZyRUIxQklIRkJBRWNoQ0NBREVCMUJJSEZCQUVjaENVRUFJUU1EUUNBRFFRaElCRUJCQnlBRGF5QURJQWdnQ1VjYklnY2dBR29pQTBHZ0FVd0VRQ0FCUWFBQmJDQURha0VEYkVHQXlRVnFJZ1F0QUFBaENpQUVJQW82QUFBZ0FVR2dBV3dnQTJwQkEyeEJnY2tGYWlBRUxRQUJPZ0FBSUFGQm9BRnNJQU5xUVFOc1FZTEpCV29nQkMwQUFqb0FBQ0FCUWFBQmJDQURha0dBa1FScUlBQkJBQ0FIYTJzZ0FVR2dBV3hxUWZpUUJHb3RBQUFpQTBFRGNTSUVRUVJ5SUFRZ0EwRUVjUnM2QUFBZ0JrRUJhaUVHQ3lBSFFRRnFJUU1NQVFzTEJTQUVKRW9MSUFBZ0JVNEVRQ0FBUVFocUlnRWdBa0VIY1NJQ2FpQUJJQUFnQWtnYklRVUxJQVVrU3lBR0N5a0FJQUJCZ0pBQ1JnUkFJQUZCZ0FGcklBRkJnQUZxSUFGQmdBRnhHeUVCQ3lBQlFRUjBJQUJxQzBvQUlBQkJBM1FnQVVFQmRHb2lBRUVCYWtFL2NTSUJRVUJySUFFZ0FodEJnSkFFYWkwQUFDRUJJQUJCUDNFaUFFRkFheUFBSUFJYlFZQ1FCR290QUFBZ0FVSC9BWEZCQ0hSeUM4Z0JBQ0FCRUIwZ0FFRUJkSFZCQTNFaEFDQUJRY2orQTBZRVFDTkNJUUVDUUNBQVJRMEFBa0FDUUFKQUFrQWdBRUVCYXc0REFRSURBQXNNQXdzalF5RUJEQUlMSTBRaEFRd0JDeU5GSVFFTEJTQUJRY24rQTBZRVFDTkdJUUVDUUNBQVJRMEFBa0FDUUFKQUFrQWdBRUVCYXc0REFRSURBQXNNQXdzalJ5RUJEQUlMSTBnaEFRd0JDeU5KSVFFTEJTTStJUUVDUUNBQVJRMEFBa0FDUUFKQUFrQWdBRUVCYXc0REFRSURBQXNNQXdzalB5RUJEQUlMSTBBaEFRd0JDeU5CSVFFTEN3c2dBUXVNQXdFR2Z5QUJJQUFRVFNBRlFRRjBhaUlBUVlDUWZtb2dBa0VCY1VFTmRDSUJhaTBBQUNFUklBQkJnWkIrYWlBQmFpMEFBQ0VTSUFNaEFBTkFJQUFnQkV3RVFDQUFJQU5ySUFacUlnNGdDRWdFUUVFQUlRVUNmMEVCUVFjZ0FHc2dBRUVCSUF0QklIRkZJQXRCQUVnYkd5SUJkQ0FTY1FSQVFRSWhCUXNnQlVFQmFnc2dCVUVCSUFGMElCRnhHeUVDSTRFQ0JIOUJBU0FNUVFCT0lBdEJBRTRiQlVFQUN3Ui9JQXRCQjNFaEFTQU1RUUJPSWdVRVFDQU1RUWR4SVFFTElBRWdBaUFGRUU0aUJVRWZjVUVEZENFQklBVkI0QWR4UVFWMVFRTjBJUThnQlVHQStBRnhRUXAxUVFOMEJTQUNRY2YrQXlBS0lBcEJBRXdiSWdvUVR5SUZRWUNBL0FkeFFSQjFJUUVnQlVHQS9nTnhRUWgxSVE4Z0JVSC9BWEVMSVFVZ0J5QUliQ0FPYWtFRGJDQUphaUlRSUFFNkFBQWdFRUVCYWlBUE9nQUFJQkJCQW1vZ0JUb0FBQ0FIUWFBQmJDQU9ha0dBa1FScUlBSkJBM0VpQVVFRWNpQUJJQXRCZ0FGeFFRQWdDMEVBVGhzYk9nQUFJQTFCQVdvaERRc2dBRUVCYWlFQURBRUxDeUFOQzM0QkEzOGdBMEVIY1NFRFFRQWdBaUFDUVFOMVFRTjBheUFBR3lFSFFhQUJJQUJyUVFjZ0FFRUlha0dnQVVvYklRaEJmeUVDSTRFQ0JFQWdCRUdBMEg1cUxRQUFJZ0pCQ0hGQkFFY2hDU0FDUWNBQWNRUkFRUWNnQTJzaEF3c0xJQVlnQlNBSklBY2dDQ0FESUFBZ0FVR2dBVUdBeVFWQkFDQUNRWDhRVUF1aEFnRUJmeUFEUVFkeElRTWdCU0FHRUUwZ0JFR0EwSDVxTFFBQUlnUkJ3QUJ4Qkg5QkJ5QURhd1VnQXd0QkFYUnFJZ1ZCZ0pCK2FpQUVRUWh4UVFCSElnWkJEWFJxTFFBQUlRY2dBa0VIY1NFRFFRQWhBaUFCUWFBQmJDQUFha0VEYkVHQXlRVnFJQVJCQjNFQ2Z5QUZRWUdRZm1vZ0JrRUJjVUVOZEdvdEFBQkJBU0FEUVFjZ0Eyc2dCRUVnY1JzaUEzUnhCRUJCQWlFQ0N5QUNRUUZxQ3lBQ1FRRWdBM1FnQjNFYklnTkJBQkJPSWdKQkgzRkJBM1E2QUFBZ0FVR2dBV3dnQUdwQkEyeEJnY2tGYWlBQ1FlQUhjVUVGZFVFRGREb0FBQ0FCUWFBQmJDQUFha0VEYkVHQ3lRVnFJQUpCZ1BnQmNVRUtkVUVEZERvQUFDQUJRYUFCYkNBQWFrR0FrUVJxSUFOQkEzRWlBRUVFY2lBQUlBUkJnQUZ4R3pvQUFBdkVBUUFnQkNBRkVFMGdBMEVIY1VFQmRHb2lCRUdBa0g1cUxRQUFJUVZCQUNFRElBRkJvQUZzSUFCcVFRTnNRWURKQldvQ2Z5QUVRWUdRZm1vdEFBQkJBVUVISUFKQkIzRnJJZ0owY1FSQVFRSWhBd3NnQTBFQmFnc2dBMEVCSUFKMElBVnhHeUlEUWNmK0F4QlBJZ0pCZ0lEOEIzRkJFSFU2QUFBZ0FVR2dBV3dnQUdwQkEyeEJnY2tGYWlBQ1FZRCtBM0ZCQ0hVNkFBQWdBVUdnQVd3Z0FHcEJBMnhCZ3NrRmFpQUNPZ0FBSUFGQm9BRnNJQUJxUVlDUkJHb2dBMEVEY1RvQUFBdlVBUUVHZnlBRFFRTjFJUW9EUUNBRVFhQUJTQVJBSUFRZ0JXb2lCa0dBQWs0RVFDQUdRWUFDYXlFR0N5QUtRUVYwSUFKcUlBWkJBM1ZxSWdoQmdKQithaTBBQUNFSFFRQWhDU004QkVBZ0JDQUFJQVlnQ0NBSEVFd2lDMEVBU2dSQVFRRWhDU0FMUVFGcklBUnFJUVFMQ3lBSlJVRUFJenNiQkVBZ0JDQUFJQVlnQXlBSUlBRWdCeEJSSWdaQkFFb0VRQ0FHUVFGcklBUnFJUVFMQlNBSlJRUkFJNEVDQkVBZ0JDQUFJQVlnQXlBSUlBRWdCeEJTQlNBRUlBQWdCaUFESUFFZ0J4QlRDd3NMSUFSQkFXb2hCQXdCQ3dzTE1nRURmeVB3QVNFRElBQWo4UUVpQkVnRVFBOExRUUFnQTBFSGF5SURheUVGSUFBZ0FTQUNJQUFnQkdzZ0F5QUZFRlFMb0FVQkQzOENRRUVuSVFZRFFDQUdRUUJJRFFFZ0JrRUNkQ0lGUVlEOEEyb2lBeEFkSVFJZ0EwRUJhaEFkSVFjZ0EwRUNhaEFkSVFNZ0FrRVFheUVFSUFkQkNHc2hDMEVJSVFJZ0FRUkFRUkFoQWlBRElBTkJBWEZySVFNTElBQWdBaUFFYWtoQkFDQUFJQVJPR3dSQUlBVkJnL3dEYWhBZElnVkJnQUZ4UVFCSElRd2dCVUVnY1VFQVJ5RU5RWUNBQWlBREVFMGdBaUFBSUFScklnTnJRUUZySUFNZ0JVSEFBSEViUVFGMGFpSURRWUNRZm1vZ0JVRUljVUVBUnlPQkFpSUNJQUliUVFGeFFRMTBJZ0pxTFFBQUlRNGdBMEdCa0g1cUlBSnFMUUFBSVE5QkJ5RURBMEFnQTBFQVRnUkFRUUFoQWdKL1FRRkJBQ0FEUVFkcmF5QURJQTBiSWdSMElBOXhCRUJCQWlFQ0N5QUNRUUZxQ3lBQ1FRRWdCSFFnRG5FYklnUUVRRUVISUFOcklBdHFJZ0pCQUU0RWZ5QUNRYUFCVEFWQkFBc0VRRUVBSVFkQkFDRUtJK29CUlNPQkFpSUlJQWdiSWdoRkJFQWdBRUdnQVd3Z0FtcEJnSkVFYWkwQUFDSUpJUkFnQ1VFRGNTSUpRUUJMUVFBZ0RCc0VRRUVCSVFjRlFRRkJBQ0FKUVFCTFFRQWdFRUVFY1VFQUk0RUNHeHNiSVFvTEMwRUJRUUFnQ2tVZ0J4c2dDQnNFUUNPQkFnUkFJQUJCb0FGc0lBSnFRUU5zUVlESkJXb2dCVUVIY1NBRVFRRVFUaUlFUVI5eFFRTjBPZ0FBSUFCQm9BRnNJQUpxUVFOc1FZSEpCV29nQkVIZ0IzRkJCWFZCQTNRNkFBQWdBRUdnQVd3Z0FtcEJBMnhCZ3NrRmFpQUVRWUQ0QVhGQkNuVkJBM1E2QUFBRklBQkJvQUZzSUFKcVFRTnNRWURKQldvZ0JFSEovZ05CeVA0RElBVkJFSEViRUU4aUJFR0FnUHdIY1VFUWRUb0FBQ0FBUWFBQmJDQUNha0VEYkVHQnlRVnFJQVJCZ1A0RGNVRUlkVG9BQUNBQVFhQUJiQ0FDYWtFRGJFR0N5UVZxSUFRNkFBQUxDd3NMSUFOQkFXc2hBd3dCQ3dzTElBWkJBV3NoQmd3QUFBc0FDd3RrQVFGL1FZQ0FBa0dBa0FJajVnRWJJUUZCQVNQcUFTT0JBaHNFUUNBQUlBRkJnTGdDUVlDd0FpUG5BUnNqN3dFZ0FHcEIvd0Z4UVFBajdnRVFWQXNqNVFFRVFDQUFJQUZCZ0xnQ1FZQ3dBaVBrQVJzUVZRc2o2UUVFUUNBQUkrZ0JFRllMQ3lVQkFYOENRQU5BSUFCQmtBRktEUUVnQUVIL0FYRVFWeUFBUVFGcUlRQU1BQUFMQUFzTFJnRUNmd05BSUFGQmtBRk9SUVJBUVFBaEFBTkFJQUJCb0FGSUJFQWdBVUdnQVd3Z0FHcEJnSkVFYWtFQU9nQUFJQUJCQVdvaEFBd0JDd3NnQVVFQmFpRUJEQUVMQ3dzYkFFR1AvZ01RSFVFQklBQjBjaUlBSkw4QlFZLytBeUFBRUI4TEN3QkJBU1RCQVVFQkVGb0xMZ0VCZndKL0kzVWlBRUVBU2dSL0kyMEZRUUFMQkVBZ0FFRUJheUVBQ3lBQVJRc0VRRUVBSkc4TElBQWtkUXN3QVFGL0FuOGpnd0VpQUVFQVNnUi9JMzBGUVFBTEJFQWdBRUVCYXlFQUN5QUFSUXNFUUVFQUpIOExJQUFrZ3dFTE1nRUJmd0ovSTVZQklnQkJBRW9FZnlPUUFRVkJBQXNFUUNBQVFRRnJJUUFMSUFCRkN3UkFRUUFra1FFTElBQWtsZ0VMUndFQ2Z5QUFKR1JCbFA0REVCMUIrQUZ4SVFGQmsvNERJQUJCL3dGeElnSVFIMEdVL2dNZ0FTQUFRUWgxUVFkeElnQnlFQjhnQWlSVklBQWtWeU5WSTFkQkNIUnlKRm9Mb2dFQkFuOGpZa1ZCQVNOWUd3UkFEd3NqWTBFQmF5SUFRUUJNQkVBalRRUkFJMDBrWXdKL0kyUWlBU05QZFNFQVFRRWpUZ1IvUVFFa1pTQUJJQUJyQlNBQUlBRnFDeUlBUWY4UFNnMEFHa0VBQ3dSQVFRQWtXQXNqVDBFQVNnUkFJQUFRWHdKL0kyUWlBU05QZFNFQVFRRWpUZ1IvUVFFa1pTQUJJQUJyQlNBQUlBRnFDMEgvRDBvTkFCcEJBQXNFUUVFQUpGZ0xDd1ZCQ0NSakN3VWdBQ1JqQ3d0VEFRSi9JMXhCQVdzaUFVRUFUQVJBSTFRRVFDTlVJZ0VFZnlOZEJVRUFDd1JBSTE4aEFDQUFRUUZxSUFCQkFXc2pVeHRCRDNFaUFFRVBTQVJBSUFBa1h3VkJBQ1JkQ3dzRlFRZ2hBUXNMSUFFa1hBdFRBUUovSTNOQkFXc2lBVUVBVEFSQUkyc0VRQ05ySWdFRWZ5TjBCVUVBQ3dSQUkzWWhBQ0FBUVFGcUlBQkJBV3NqYWh0QkQzRWlBRUVQU0FSQUlBQWtkZ1ZCQUNSMEN3c0ZRUWdoQVFzTElBRWtjd3RjQVFKL0k1UUJRUUZySWdGQkFFd0VRQ09NQVFSQUk0d0JJZ0VFZnlPVkFRVkJBQXNFUUNPWEFTRUFJQUJCQVdvZ0FFRUJheU9MQVJ0QkQzRWlBRUVQU0FSQUlBQWtsd0VGUVFBa2xRRUxDd1ZCQ0NFQkN3c2dBU1NVQVF1cEFnRUNmMEdBd0FBamdnSjBJZ0VoQWlPekFTQUFhaUlBSUFGT0JFQWdBQ0FDYXlTekFRSkFBa0FDUUFKQUFrQWp0UUZCQVdwQkIzRWlBQVJBSUFCQkFrWU5BUUpBSUFCQkJHc09CQU1BQkFVQUN3d0ZDeU5lSWdGQkFFb0VmeU5XQlVFQUN3UkFJQUZCQVdzaUFVVUVRRUVBSkZnTEN5QUJKRjRRWEJCZEVGNE1CQXNqWGlJQlFRQktCSDhqVmdWQkFBc0VRQ0FCUVFGcklnRkZCRUJCQUNSWUN3c2dBU1JlRUZ3UVhSQmVFR0FNQXdzalhpSUJRUUJLQkg4alZnVkJBQXNFUUNBQlFRRnJJZ0ZGQkVCQkFDUllDd3NnQVNSZUVGd1FYUkJlREFJTEkxNGlBVUVBU2dSL0kxWUZRUUFMQkVBZ0FVRUJheUlCUlFSQVFRQWtXQXNMSUFFa1hoQmNFRjBRWGhCZ0RBRUxFR0VRWWhCakN5QUFKTFVCUVFFUEJTQUFKTE1CQzBFQUMzUUJBWDhDUUFKQUFrQUNRQ0FBUVFGSEJFQUNRQ0FBUVFKckRnTUNBd1FBQ3d3RUN5TlpJZ0FqbmdGSElRRWdBQ1NlQVNBQkR3c2pjQ0lBSTU4QlJ5RUJJQUFrbndFZ0FROExJNEFCSWdBam9BRkhJUUVnQUNTZ0FTQUJEd3Nqa2dFaUFDT2hBVWNoQVNBQUpLRUJJQUVQQzBFQUMxVUFBa0FDUUFKQUlBQkJBVWNFUUNBQVFRSkdEUUVnQUVFRFJnMENEQU1MUVFFZ0FYUkJnUUZ4UVFCSER3dEJBU0FCZEVHSEFYRkJBRWNQQzBFQklBRjBRZjRBY1VFQVJ3OExRUUVnQVhSQkFYRkJBRWNMY3dFQmZ5TmJJQUJySVFBRFFDQUFRUUJNQkVCQmdCQWpXbXRCQW5RaUFVRUNkQ0FCSTRJQ0d5UmJJMXNnQUVFZmRTSUJJQUFnQVdwemF5RUFJMkZCQVdwQkIzRWtZUXdCQ3dzZ0FDUmJJMWxCQUNOWUd3Ui9JMTlCRDNFRlFROFBDeU5RSTJFUVpnUi9RUUVGUVg4TGJFRVBhZ3RzQVFGL0kzSWdBR3NoQUFOQUlBQkJBRXdFUUVHQUVDTnhhMEVDZENPQ0FuUWtjaU55SUFCQkgzVWlBU0FBSUFGcWMyc2hBQ040UVFGcVFRZHhKSGdNQVFzTElBQWtjaU53UVFBamJ4c0VmeU4yUVE5eEJVRVBEd3NqWnlONEVHWUVmMEVCQlVGL0MyeEJEMm9MRHdBamhBRkJBWFZCc1A0RGFoQWRDeXNCQVg4amhBRkJBV29oQUFOQUlBQkJJRWhGQkVBZ0FFRWdheUVBREFFTEN5QUFKSVFCRUdra2h3RUw1Z0VCQTM4amdBRkZRUUVqZnhzRVFFRVBEd3NqaFFFaEFpT0dBUVJBUVp6K0F4QWRRUVYxUVE5eElnSWtoUUZCQUNTR0FRc2pod0VqaEFGQkFYRkZRUUowZFVFUGNTRUJBa0FDUUFKQUFrQWdBZ1JBSUFKQkFVWU5BU0FDUVFKR0RRSU1Bd3NnQVVFRWRTRUJEQU1MUVFFaEF3d0NDeUFCUVFGMUlRRkJBaUVEREFFTElBRkJBblVoQVVFRUlRTUxJQU5CQUVvRWZ5QUJJQU50QlVFQUMwRVBhaUVCSTRJQklBQnJJUUFEUUNBQVFRQk1CRUJCZ0JBamdRRnJRUUYwSTRJQ2RDU0NBU09DQVNBQVFSOTFJZ0lnQUNBQ2FuTnJJUUFRYWd3QkN3c2dBQ1NDQVNBQkM0OEJBUUovSTVNQklBQnJJZ0JCQUV3RVFDT1lBU09OQVhRamdnSjBJQUJCSDNVaUFTQUFJQUZxYzJzaEFDT1pBU0lCUVFGMUlnSWdBVUVCY1NBQ1FRRnhjeUlCUVE1MGNpSUNRYjkvY1NBQlFRWjBjaUFDSTQ0Qkd5U1pBUXRCQUNBQUlBQkJBRWdiSkpNQkk1SUJRUUFqa1FFYkJIOGpsd0ZCRDNFRlFROFBDMEYvUVFFam1RRkJBWEViYkVFUGFnc3dBQ0FBUVR4R0JFQkIvd0FQQ3lBQVFUeHJRYUNOQm13Z0FXeEJBM1ZCb0kwR2JVRThha0dnalFac1FZenhBbTBMbHdFQkFYOUJBQ1NrQVNBQVFROGpxZ0ViSUFGQkR5T3JBUnRxSUFKQkR5T3NBUnRxSUFOQkR5T3RBUnRxSVFRZ0FFRVBJNjRCR3lBQlFROGpyd0ViYWlFQUlBQWdBa0VQSTdBQkcyb2hBU0FEUVE4anNRRWJJUU5CQUNTbEFVRUFKS1lCSUFRanFBRkJBV29RYlNFQUlBRWdBMm9qcVFGQkFXb1FiU0VCSUFBa29nRWdBU1NqQVNBQlFmOEJjU0FBUWY4QmNVRUlkSElML3dJQkJYOGpUQ0FBYWlJQ0pFd2pXeUFDYTBFQVRDSUNSUVJBUVFFUVpTRUNDeU5tSUFCcUlnRWtaaU55SUFGclFRQk1JZ0ZGQkVCQkFoQmxJUUVMSTNrZ0FHb2tlVUVBSTRJQkkzbHJRUUJLSTRZQkcwVWlCRVVFUUVFREVHVWhCQXNqaUFFZ0FHb2tpQUVqa3dFamlBRnJRUUJNSWdWRkJFQkJCQkJsSVFVTElBSUVRQ05NSVFOQkFDUk1JQU1RWnlTYUFRc2dBUVJBSTJZaEEwRUFKR1lnQXhCb0pKc0JDeUFFQkVBamVTRURRUUFrZVNBREVHc2tuQUVMSUFVRVFDT0lBU0VEUVFBa2lBRWdBeEJzSkowQkMwRUJJQVZCQVNBRVFRRWdBU0FDR3hzYkJFQkJBU1NtQVF0QmdJQ0FBaU9DQW5SQnhOZ0NiU0lDSVFFanRBRWdBR29pQUNBQ1RnUkFJQUFnQVdzaEFFRUJJNlVCUVFFanBBRWpwZ0ViR3dSQUk1b0JJNXNCSTV3Qkk1MEJFRzRhQlNBQUpMUUJDeU8yQVNJQ1FRRjBRWUNad1FCcUlnRWpvZ0ZCQW1vNkFBQWdBVUVCYWlPakFVRUNham9BQUNBQ1FRRnFJZ0ZCLy84RFRnUi9JQUZCQVdzRklBRUxKTFlCQ3lBQUpMUUJDNlVEQVFaL0lBQVFaeUVCSUFBUWFDRUNJQUFRYXlFRUlBQVFiQ0VGSUFFa21nRWdBaVNiQVNBRUpKd0JJQVVrblFFanRBRWdBR29pQUVHQWdJQUNJNElDZEVIRTJBSnRUZ1JBSUFCQmdJQ0FBaU9DQW5SQnhOZ0NiV3NoQUNBQklBSWdCQ0FGRUc0aEF5TzJBVUVCZEVHQW1jRUFhaUlHSUFOQmdQNERjVUVJZFVFQ2Fqb0FBQ0FHUVFGcUlBTkIvd0Z4UVFKcU9nQUFJejBFUUNBQlFROUJEMEVQRUc0aEFTTzJBVUVCZEVHQW1TRnFJZ01nQVVHQS9nTnhRUWgxUVFKcU9nQUFJQU5CQVdvZ0FVSC9BWEZCQW1vNkFBQkJEeUFDUVE5QkR4QnVJUUVqdGdGQkFYUkJnSmtwYWlJQ0lBRkJnUDREY1VFSWRVRUNham9BQUNBQ1FRRnFJQUZCL3dGeFFRSnFPZ0FBUVE5QkR5QUVRUThRYmlFQkk3WUJRUUYwUVlDWk1Xb2lBaUFCUVlEK0EzRkJDSFZCQW1vNkFBQWdBa0VCYWlBQlFmOEJjVUVDYWpvQUFFRVBRUTlCRHlBRkVHNGhBU08yQVVFQmRFR0FtVGxxSWdJZ0FVR0EvZ054UVFoMVFRSnFPZ0FBSUFKQkFXb2dBVUgvQVhGQkFtbzZBQUFMSTdZQlFRRnFJZ0ZCLy84RFRnUi9JQUZCQVdzRklBRUxKTFlCQ3lBQUpMUUJDeDRCQVg4Z0FCQmtJUUVnQVVWQkFDTTZHd1JBSUFBUWJ3VWdBQkJ3Q3dzdkFRSi9RZGNBSTRJQ2RDRUJJNmNCSVFBRFFDQUFJQUZPQkVBZ0FSQnhJQUFnQVdzaEFBd0JDd3NnQUNTbkFRdWtBd0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQmtQNERSd1JBSUFCQmxmNERSZzBCQWtBZ0FFR1IvZ05yRGhZR0N4QVVBQWNNRVJVRENBMFNGZ1FKRGhNWEJRb1BBQXNNRnd0QmtQNERFQjFCZ0FGeUR3dEJsZjRERUIxQi93RnlEd3RCbXY0REVCMUIvd0J5RHd0Qm4vNERFQjFCL3dGeUR3dEJwUDRERUIwUEMwR1IvZ01RSFVFL2NnOExRWmIrQXhBZFFUOXlEd3RCbS80REVCMUIvd0Z5RHd0Qm9QNERFQjFCL3dGeUR3dEJwZjRERUIwUEMwR1MvZ01RSFE4TFFaZitBeEFkRHd0Qm5QNERFQjFCbndGeUR3dEJvZjRERUIwUEMwR0FBVUVBSTdJQkd5RUFJQUJCQVhJZ0FFRitjU05ZR3lFQUlBQkJBbklnQUVGOWNTTnZHeUVBSUFCQkJISWdBRUY3Y1NOL0d5RUFJQUJCQ0hJZ0FFRjNjU09SQVJ0QjhBQnlEd3RCay80REVCMUIvd0Z5RHd0Qm1QNERFQjFCL3dGeUR3dEJuZjRERUIxQi93RnlEd3RCb3Y0REVCMFBDMEdVL2dNUUhVRy9BWElQQzBHWi9nTVFIVUcvQVhJUEMwR2UvZ01RSFVHL0FYSVBDMEdqL2dNUUhVRy9BWElQQzBGL0M1d0JBUUYvSTlvQklRQWoyd0VFUUNBQVFYdHhJQUJCQkhJajBnRWJJUUFnQUVGK2NTQUFRUUZ5STlVQkd5RUFJQUJCZDNFZ0FFRUljaVBUQVJzaEFDQUFRWDF4SUFCQkFuSWoxQUViSVFBRkk5d0JCRUFnQUVGK2NTQUFRUUZ5STlZQkd5RUFJQUJCZlhFZ0FFRUNjaVBYQVJzaEFDQUFRWHR4SUFCQkJISWoyQUViSVFBZ0FFRjNjU0FBUVFoeUk5a0JHeUVBQ3dzZ0FFSHdBWElMMUFJQUlBQkJnSUFDU0FSQVFYOFBDeUFBUVlEQUFraEJBQ0FBUVlDQUFrNGJCRUJCZnc4TElBQkJnUHdEU0VFQUlBQkJnTUFEVGhzRVFDQUFRWUJBYWhBZER3c2dBRUdmL1FOTVFRQWdBRUdBL0FOT0d3UkFRZjhCUVg4ajRRRkJBa2diRHdzZ0FFSE4vZ05HQkVCQi93RWhBRUhOL2dNUUhVRUJjVVVFUUVIK0FTRUFDeU9DQWtVRVFDQUFRZjkrY1NFQUN5QUFEd3NnQUVIRS9nTkdCRUFnQUNQdEFSQWZJKzBCRHdzZ0FFR20vZ05NUVFBZ0FFR1EvZ05PR3dSQUVISWdBQkJ6RHdzZ0FFR3YvZ05NUVFBZ0FFR24vZ05PR3dSQVFmOEJEd3NnQUVHLy9nTk1RUUFnQUVHdy9nTk9Hd1JBRUhJamZ3UkFFR2tQQzBGL0R3c2dBRUdFL2dOR0JFQWdBQ1BHQVVHQS9nTnhRUWgxSWdBUUh5QUFEd3NnQUVHRi9nTkdCRUFnQUNQSEFSQWZJOGNCRHdzZ0FFR1AvZ05HQkVBanZ3RkI0QUZ5RHdzZ0FFR0EvZ05HQkVBUWRBOExRWDhMS1FFQmZ5UGVBU0FBUmdSQVFRRWs0QUVMSUFBUWRTSUJRWDlHQkg4Z0FCQWRCU0FCUWY4QmNRc0xwQUlCQTM4ajlnRUVRQThMSS9jQklRTWorQUVoQWlBQVFmOC9UQVJBSUFJRWZ5QUJRUkJ4UlFWQkFBdEZCRUFnQVVFUGNTSUFCRUFnQUVFS1JnUkFRUUVrOUFFTEJVRUFKUFFCQ3dzRklBQkIvLzhBVEFSQUkvb0JJZ1FFZnlBQVFmL2ZBRXdGUVFFTEJFQWdBVUVQY1NQeUFTQUNHeUVBSUFNRWZ5QUJRUjl4SVFFZ0FFSGdBWEVGSS9rQkJIOGdBVUgvQUhFaEFTQUFRWUFCY1FWQkFDQUFJQVFiQ3dzaEFDQUFJQUZ5SlBJQkJTUHlBVUgvQVhFZ0FVRUFTa0VJZEhJazhnRUxCVUVBSUFCQi83OEJUQ0FDR3dSQUkvVUJRUUFnQXhzRVFDUHlBVUVmY1NBQlFlQUJjWElrOGdFUEN5QUJRUTl4SUFGQkEzRWorZ0ViSlBNQkJVRUFJQUJCLy84QlRDQUNHd1JBSUFNRVFDQUJRUUZ4UVFCSEpQVUJDd3NMQ3dzTE9BRUJmeU5PSVFFZ0FFSHdBSEZCQkhVa1RTQUFRUWh4UVFCSEpFNGdBRUVIY1NSUEkyVkJBQ05PUlVFQUlBRWJHd1JBUVFBa1dBc0xaUUFqV0FSQVFRQWpYU05VR3dSQUkxOUJBV3BCRDNFa1h3c2pVeUFBUVFoeFFRQkhSd1JBUVJBalgydEJEM0VrWHdzTElBQkJCSFZCRDNFa1VpQUFRUWh4UVFCSEpGTWdBRUVIY1NSVUlBQkIrQUZ4UVFCS0lnQWtXU0FBUlFSQVFRQWtXQXNMWlFBamJ3UkFRUUFqZENOckd3UkFJM1pCQVdwQkQzRWtkZ3NqYWlBQVFRaHhRUUJIUndSQVFSQWpkbXRCRDNFa2Rnc0xJQUJCQkhWQkQzRWthU0FBUVFoeFFRQkhKR29nQUVFSGNTUnJJQUJCK0FGeFFRQktJZ0FrY0NBQVJRUkFJQUFrYndzTGNnQWprUUVFUUVFQUk1VUJJNHdCR3dSQUk1Y0JRUUZxUVE5eEpKY0JDeU9MQVNBQVFRaHhRUUJIUndSQVFSQWpsd0ZyUVE5eEpKY0JDd3NnQUVFRWRVRVBjU1NLQVNBQVFRaHhRUUJISklzQklBQkJCM0VrakFFZ0FFSDRBWEZCQUVvaUFDU1NBU0FBUlFSQUlBQWtrUUVMQ3pnQUlBQkJCSFVralFFZ0FFRUljVUVBUnlTT0FTQUFRUWR4SWdBa2p3RWdBRUVCZENJQVFRRklCRUJCQVNFQUN5QUFRUU4wSkpnQkM2b0JBUUovUVFFa1dDTmVSUVJBUWNBQUpGNExRWUFRSTFwclFRSjBJZ0JCQW5RZ0FDT0NBaHNrV3lOVUJFQWpWQ1JjQlVFSUpGd0xRUUVrWFNOU0pGOGpXaVJrSTAwRVFDTk5KR01GUVFna1l3dEJBU05QUVFCS0lnQWpUVUVBU2hza1lrRUFKR1VnQUFSL0FuOGpaQ0lBSTA5MUlRRkJBU05PQkg5QkFTUmxJQUFnQVdzRklBQWdBV29MUWY4UFNnMEFHa0VBQ3dWQkFBc0VRRUVBSkZnTEkxbEZCRUJCQUNSWUN3dVNBUUVDZnlBQVFRZHhJZ0VrVnlOVklBRkJDSFJ5SkZvanRRRkJBWEZCQVVZaEFpTldSU0lCQkVBZ0FFSEFBSEZCQUVjaEFRc2dBa1VFUUVFQUlBRWpYa0VBVEJzRVFDTmVRUUZySkY1QkFDTmVSU0FBUVlBQmNSc0VRRUVBSkZnTEN3c2dBRUhBQUhGQkFFY2tWaUFBUVlBQmNRUkFFSDBqVmtFQVFRQWpYa0hBQUVZZ0Foc2JCRUFqWGtFQmF5UmVDd3NMUUFCQkFTUnZJM1ZGQkVCQndBQWtkUXRCZ0JBamNXdEJBblFqZ2dKMEpISWphd1JBSTJza2N3VkJDQ1J6QzBFQkpIUWphU1IySTNCRkJFQkJBQ1J2Q3d1U0FRRUNmeUFBUVFkeElnRWtiaU5zSUFGQkNIUnlKSEVqdFFGQkFYRkJBVVloQWlOdFJTSUJCRUFnQUVIQUFIRkJBRWNoQVFzZ0FrVUVRRUVBSUFFamRVRUFUQnNFUUNOMVFRRnJKSFZCQUNOMVJTQUFRWUFCY1JzRVFFRUFKRzhMQ3dzZ0FFSEFBSEZCQUVja2JTQUFRWUFCY1FSQUVIOGpiVUVBUVFBamRVSEFBRVlnQWhzYkJFQWpkVUVCYXlSMUN3c0xQUUJCQVNSL0k0TUJSUVJBUVlBQ0pJTUJDMEdBRUNPQkFXdEJBWFFqZ2dKMEpJSUJJNElCUVFacUpJSUJRUUFraEFFamdBRkZCRUJCQUNSL0N3dVBBUUVCZnlBQVFRZHhJZ0VrZmlOOElBRkJDSFJ5SklFQkk3VUJRUUZ4UVFGR0lnRkZCRUJCQUVFQUlBQkJ3QUJ4STMwYkk0TUJRUUJNR3dSQUk0TUJRUUZySklNQlFRQWpnd0ZGSUFCQmdBRnhHd1JBUVFBa2Z3c0xDeUFBUWNBQWNVRUFSeVI5SUFCQmdBRnhCRUFRZ1FFamZVRUFRUUFqZ3dGQmdBSkdJQUViR3dSQUk0TUJRUUZySklNQkN3c0xVZ0JCQVNTUkFTT1dBVVVFUUVIQUFDU1dBUXNqbUFFampRRjBJNElDZENTVEFTT01BUVJBSTR3QkpKUUJCVUVJSkpRQkMwRUJKSlVCSTRvQkpKY0JRZi8vQVNTWkFTT1NBVVVFUUVFQUpKRUJDd3VMQVFFQ2Z5TzFBVUVCY1VFQlJpRUNJNUFCUlNJQkJFQWdBRUhBQUhGQkFFY2hBUXNnQWtVRVFFRUFJQUVqbGdGQkFFd2JCRUFqbGdGQkFXc2tsZ0ZCQUNPV0FVVWdBRUdBQVhFYkJFQkJBQ1NSQVFzTEN5QUFRY0FBY1VFQVJ5U1FBU0FBUVlBQmNRUkFFSU1CSTVBQlFRQkJBQ09XQVVIQUFFWWdBaHNiQkVBamxnRkJBV3NrbGdFTEN3dWRCQUFqc2dGRlFRQWdBRUdtL2dOSEd3UkFRUUFQQ3dKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQmtQNERSd1JBSUFCQm12NERSZzBCQWtBZ0FFR1IvZ05yRGhZREJ3c1BBQVFJREJBQUJRa05FUUFHQ2c0U0V4UVZBQXNNRlFzZ0FSQjREQlVMUVFBZ0FVR0FBWEZCQUVjaUFDT0FBUnNFUUVFQUpJY0JDeUFBSklBQklBQkZCRUFnQUNSL0N3d1VDeUFCUVFaMVFRTnhKRkFnQVVFL2NTUlJRY0FBSTFGckpGNE1Fd3NnQVVFR2RVRURjU1JuSUFGQlAzRWthRUhBQUNOb2F5UjFEQklMSUFFa2VrR0FBaU42YXlTREFRd1JDeUFCUVQ5eEpJa0JRY0FBSTRrQmF5U1dBUXdRQ3lBQkVIa01Ed3NnQVJCNkRBNExRUUVraGdFZ0FVRUZkVUVQY1NSN0RBMExJQUVRZXd3TUN5QUJKRlVqVjBFSWRDQUJjaVJhREFzTElBRWtiQ051UVFoMElBRnlKSEVNQ2dzZ0FTUjhJMzVCQ0hRZ0FYSWtnUUVNQ1FzZ0FSQjhEQWdMSUFFUWZnd0hDeUFCRUlBQkRBWUxJQUVRZ2dFTUJRc2dBUkNFQVF3RUN5QUJRUVIxUVFkeEpLZ0JJQUZCQjNFa3FRRkJBU1NrQVF3REN5QUJFQ3RCQVNTbEFRd0NDeU95QVNJQUJIOUJBQVVnQVVHQUFYRUxCRUJCQnlTMUFVRUFKR0ZCQUNSNEN5QUJRWUFCY1VWQkFDQUFHd1JBQWtCQmtQNERJUUFEUUNBQVFhYitBMDROQVNBQVFRQVFrZ0VnQUVFQmFpRUFEQUFBQ3dBTEN5QUJRWUFCY1VFQVJ5U3lBUXdCQzBFQkR3dEJBUXM4QVFGL0lBQkJDSFFoQVVFQUlRQURRQUpBSUFCQm53RktEUUFnQUVHQS9BTnFJQUFnQVdvUUhSQWZJQUJCQVdvaEFBd0JDd3RCaEFVayt3RUxKUUVCZjBIUi9nTVFIU0VBUWRMK0F4QWRRZjhCY1NBQVFmOEJjVUVJZEhKQjhQOERjUXNwQVFGL1FkUCtBeEFkSVFCQjFQNERFQjFCL3dGeElBQkIvd0Z4UVFoMGNrSHdQM0ZCZ0lBQ2FndUdBUUVEZnlPQkFrVUVRQThMSUFCQmdBRnhSVUVBSS93Qkd3UkFRUUFrL0FGQjFmNERRZFgrQXhBZFFZQUJjaEFmRHdzUWh3RWhBUkNJQVNFQ0lBQkIvMzV4UVFGcVFRUjBJUU1nQUVHQUFYRUVRRUVCSlB3QklBTWsvUUVnQVNUK0FTQUNKUDhCUWRYK0F5QUFRZjkrY1JBZkJTQUJJQUlnQXhDVEFVSFYvZ05CL3dFUUh3c0xXUUVFZjBFQlFlditBeUlESUFCR0lBQkI2ZjREUmhzRVFDQUFRUUZySWdRUUhVRy9mM0VpQWtFL2NTSUZRVUJySUFVZ0FDQURSaHRCZ0pBRWFpQUJPZ0FBSUFKQmdBRnhCRUFnQkNBQ1FRRnFRWUFCY2hBZkN3c0xNUUFDUUFKQUFrQUNRQ0FBQkVBQ1FDQUFRUUZyRGdNQ0F3UUFDd3dFQzBFSkR3dEJBdzhMUVFVUEMwRUhEd3RCQUFzZkFDQUFRUUVqekFFUWl3RWlBSFJ4Qkg5QkFTQUFkQ0FCY1VVRlFRQUxDNFlCQVFSL0EwQWdBaUFBU0FSQUlBSkJCR29oQWlQR0FTSUJRUVJxUWYvL0EzRWlBeVRHQVNQTEFRUkFJOGtCSVFRanlBRUVRQ1BLQVNUSEFVRUJKTUlCUVFJUVdrRUFKTWdCUVFFa3lRRUZJQVFFUUVFQUpNa0JDd3NnQVNBREVJd0JCRUFqeHdGQkFXb2lBVUgvQVVvRVFFRUJKTWdCUVFBaEFRc2dBU1RIQVFzTERBRUxDd3NOQUNQRkFSQ05BVUVBSk1VQkMwWUJBWDhqeGdFaEFFRUFKTVlCUVlUK0EwRUFFQjhqeXdFRWZ5QUFRUUFRakFFRlFRQUxCRUFqeHdGQkFXb2lBRUgvQVVvRVFFRUJKTWdCUVFBaEFBc2dBQ1RIQVFzTGZBRURmeVBMQVNFQklBQkJCSEZCQUVja3l3RWdBRUVEY1NFQ0lBRkZCRUFqekFFUWl3RWhBU0FDRUlzQklRTWp4Z0VoQUNQTEFRUi9RUUVnQVhRZ0FIRUZRUUVnQTNRZ0FIRkJBRUVCSUFGMElBQnhHd3NFUUNQSEFVRUJhaUlBUWY4QlNnUkFRUUVreUFGQkFDRUFDeUFBSk1jQkN3c2dBaVRNQVF2SUJnRUJmd0pBQWtBZ0FFSE4vZ05HQkVCQnpmNERJQUZCQVhFUUh3d0JDeUFBUWREK0EwWkJBQ09BQWhzRVFFRUFKSUFDUWY4QkpJd0NEQUlMSUFCQmdJQUNTQVJBSUFBZ0FSQjNEQUVMSUFCQmdNQUNTRUVBSUFCQmdJQUNUaHNOQVNBQVFZRDhBMGhCQUNBQVFZREFBMDRiQkVBZ0FFR0FRR29nQVJBZkRBSUxJQUJCbi8wRFRFRUFJQUJCZ1B3RFRoc0VRQ1BoQVVFQ1RnOExJQUJCLy8wRFRFRUFJQUJCb1AwRFRoc05BQ0FBUVlMK0EwWUVRQ0FCUVFGeFFRQkhKTThCSUFGQkFuRkJBRWNrMEFFZ0FVR0FBWEZCQUVjazBRRkJBUThMSUFCQnB2NERURUVBSUFCQmtQNERUaHNFUUJCeUlBQWdBUkNGQVE4TElBQkJ2LzREVEVFQUlBQkJzUDREVGhzRVFCQnlJMzhFUUNPRUFVRUJkVUd3L2dOcUlBRVFId3dDQ3d3Q0N5QUFRY3YrQTB4QkFDQUFRY0QrQTA0YkJFQWdBRUhBL2dOR0JFQWdBUkEvREFNTElBQkJ3ZjREUmdSQVFjSCtBeUFCUWZnQmNVSEIvZ01RSFVFSGNYSkJnQUZ5RUI4TUFnc2dBRUhFL2dOR0JFQkJBQ1R0QVNBQVFRQVFId3dDQ3lBQVFjWCtBMFlFUUNBQkpPSUJEQU1MSUFCQnh2NERSZ1JBSUFFUWhnRU1Bd3NDUUFKQUFrQUNRQ0FBUWNQK0EwY0VRQ0FBUWNMK0Eyc09DZ0VFQkFRRUJBUUVBd0lFQ3lBQkpPNEJEQVlMSUFFazd3RU1CUXNnQVNUd0FRd0VDeUFCSlBFQkRBTUxEQUlMSUFCQjFmNERSZ1JBSUFFUWlRRU1BUXRCQVNBQVFjLytBMFlnQUVIdy9nTkdHd1JBSS93QkJFQWovZ0VpQWtHQWdBRk9CSDhnQWtILy93Rk1CVUVBQ3dSL1FRRUZJQUpCLzc4RFRFRUFJQUpCZ0tBRFRoc0xEUUlMQ3lBQVFlditBMHhCQUNBQVFlaitBMDRiQkVBZ0FDQUJFSW9CREFJTElBQkJoLzREVEVFQUlBQkJoUDREVGhzRVFCQ09BUUpBQWtBQ1FBSkFJQUJCaFA0RFJ3UkFJQUJCaGY0RGF3NERBUUlEQkFzUWp3RU1CUXNDUUNQTEFRUkFJOGtCRFFFanlBRUVRRUVBSk1nQkN3c2dBU1RIQVFzTUJRc2dBU1RLQVNQSkFVRUFJOHNCR3dSQUlBRWt4d0ZCQUNUSkFRc01CQXNnQVJDUUFRd0RDd3dDQ3lBQVFZRCtBMFlFUUNBQlFmOEJjeVRhQVNQYUFTSUNRUkJ4UVFCSEpOc0JJQUpCSUhGQkFFY2szQUVMSUFCQmovNERSZ1JBSUFFUUx3d0NDeUFBUWYvL0EwWUVRQ0FCRUM0TUFndEJBUThMUVFBUEMwRUJDeUFBSTk4QklBQkdCRUJCQVNUZ0FRc2dBQ0FCRUpFQkJFQWdBQ0FCRUI4TEMxd0JBMzhEUUFKQUlBTWdBazROQUNBQUlBTnFFSFloQlNBQklBTnFJUVFEUUNBRVFmKy9Ba3hGQkVBZ0JFR0FRR29oQkF3QkN3c2dCQ0FGRUpJQklBTkJBV29oQXd3QkN3c2ord0ZCSUNPQ0FuUWdBa0VFZFd4cUpQc0JDM1FCQW44ai9BRkZCRUFQQzBFUUlRQWovZ0VqL3dFQ2Z5UDlBU0lCUVJCSUJFQWdBU0VBQ3lBQUN4Q1RBU1ArQVNBQWFpVCtBU1AvQVNBQWFpVC9BU0FCSUFCcklnQWsvUUZCMWY0RElRRWdBRUVBVEFSQVFRQWsvQUVnQVVIL0FSQWZCU0FCSUFCQkJIVkJBV3RCLzM1eEVCOExDek1BSSswQkkrSUJSa0VBSUFCQkFVWkJBU0FBR3hzRVFDQUJRUVJ5SWdGQndBQnhCRUFRV3dzRklBRkJlM0VoQVFzZ0FRdUJBZ0VGZnlQakFVVUVRQThMSStFQklRQWdBQ1B0QVNJQ1FaQUJUZ1IvUVFFRlFmZ0NJNElDZENJQklRTWo3QUVpQkNBQlRnUi9RUUlGUVFOQkFDQUVJQU5PR3dzTElnRkhCRUJCd2Y0REVCMGhBQ0FCSk9FQlFRQWhBZ0pBQWtBQ1FBSkFJQUVFUUNBQlFRRnJEZ01CQWdNRUN5QUFRWHh4SWdCQkNIRkJBRWNoQWd3REN5QUFRWDF4UVFGeUlnQkJFSEZCQUVjaEFnd0NDeUFBUVg1eFFRSnlJZ0JCSUhGQkFFY2hBZ3dCQ3lBQVFRTnlJUUFMSUFJRVFCQmJDeUFCUlFSQUVKUUJDeUFCUVFGR0JFQkJBU1RBQVVFQUVGb0xRY0grQXlBQklBQVFsUUVRSHdVZ0FrR1pBVVlFUUVIQi9nTWdBVUhCL2dNUUhSQ1ZBUkFmQ3dzTG9BRUJBWDhqNHdFRVFDUHNBU0FBYWlUc0FTTTVJUUVEUUNQc0FVRUVJNElDSWdCMFFjZ0RJQUIwSSswQlFaa0JSaHRPQkVBajdBRkJCQ09DQWlJQWRFSElBeUFBZENQdEFVR1pBVVliYXlUc0FTUHRBU0lBUVpBQlJnUkFJQUVFUUJCWUJTQUFFRmNMRUZsQmZ5UktRWDhrU3dVZ0FFR1FBVWdFUUNBQlJRUkFJQUFRVndzTEMwRUFJQUJCQVdvZ0FFR1pBVW9iSk8wQkRBRUxDd3NRbGdFTE9BRUJmMEVFSTRJQ0lnQjBRY2dESUFCMEkrMEJRWmtCUmhzaEFBTkFJK3NCSUFCT0JFQWdBQkNYQVNQckFTQUFheVRyQVF3QkN3c0xzZ0VCQTM4ajBRRkZCRUFQQ3dOQUlBTWdBRWdFUUNBRFFRUnFJUU1DZnlQTkFTSUNRUVJxSWdGQi8vOERTZ1JBSUFGQmdJQUVheUVCQ3lBQkN5VE5BU0FDUVFGQkFrRUhJOUFCR3lJQ2RIRUVmMEVCSUFKMElBRnhSUVZCQUFzRVFFR0IvZ05CZ2Y0REVCMUJBWFJCQVdwQi93RnhFQjhqemdGQkFXb2lBVUVJUmdSQVFRQWt6Z0ZCQVNUREFVRURFRnBCZ3Y0RFFZTCtBeEFkUWY5K2NSQWZRUUFrMFFFRklBRWt6Z0VMQ3d3QkN3c0xsUUVBSS9zQlFRQktCRUFqK3dFZ0FHb2hBRUVBSlBzQkN5T05BaUFBYWlTTkFpT1JBa1VFUUNNM0JFQWo2d0VnQUdvazZ3RVFtQUVGSUFBUWx3RUxJellFUUNPbkFTQUFhaVNuQVJCeUJTQUFFSEVMSUFBUW1RRUxJemdFUUNQRkFTQUFhaVRGQVJDT0FRVWdBQkNOQVFzamxBSWdBR29pQUNPU0FrNEVRQ09UQWtFQmFpU1RBaUFBSTVJQ2F5RUFDeUFBSkpRQ0N3d0FRUVFRbWdFampBSVFIUXNwQVFGL1FRUVFtZ0VqakFKQkFXcEIvLzhEY1JBZElRQVFtd0ZCL3dGeElBQkIvd0Z4UVFoMGNnc09BRUVFRUpvQklBQWdBUkNTQVFzd0FFRUJJQUIwUWY4QmNTRUFJQUZCQUVvRVFDT0tBaUFBY2tIL0FYRWtpZ0lGSTRvQ0lBQkIvd0Z6Y1NTS0Fnc0xDUUJCQlNBQUVKNEJDem9CQVg4Z0FVRUFUZ1JBSUFCQkQzRWdBVUVQY1dwQkVIRkJBRWNRbndFRklBRkJIM1VpQWlBQklBSnFjMEVQY1NBQVFROXhTeENmQVFzTENRQkJCeUFBRUo0QkN3a0FRUVlnQUJDZUFRc0pBRUVFSUFBUW5nRUxQd0VDZnlBQlFZRCtBM0ZCQ0hVaEFpQUJRZjhCY1NJQklRTWdBQ0FCRUpFQkJFQWdBQ0FERUI4TElBQkJBV29pQUNBQ0VKRUJCRUFnQUNBQ0VCOExDdzRBUVFnUW1nRWdBQ0FCRUtRQkMxb0FJQUlFUUNBQVFmLy9BM0VpQUNBQmFpQUFJQUZ6Y3lJQVFSQnhRUUJIRUo4QklBQkJnQUp4UVFCSEVLTUJCU0FBSUFGcVFmLy9BM0VpQWlBQVFmLy9BM0ZKRUtNQklBQWdBWE1nQW5OQmdDQnhRUUJIRUo4QkN3c0xBRUVFRUpvQklBQVFkZ3VwQlFFQmZ3SkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBQVJBSUFCQkFVWU5BUUpBSUFCQkFtc09EZ01FQlFZSENBa0tDd3dORGc4UUFBc01FQXNNRlFzUW5BRkIvLzhEY1NJQVFZRCtBM0ZCQ0hVa2hBSWdBRUgvQVhFa2hRSU1Ed3NqaFFKQi93RnhJNFFDUWY4QmNVRUlkSElqZ3dJUW5RRU1Fd3NqaFFKQi93RnhJNFFDUWY4QmNVRUlkSEpCQVdwQi8vOERjU0lBUVlEK0EzRkJDSFVraEFJTUV3c2poQUlpQUVFQkVLQUJJQUJCQVdwQi93RnhJZ0FraEFJTURRc2poQUlpQUVGL0VLQUJJQUJCQVd0Qi93RnhJZ0FraEFJTURRc1Ftd0ZCL3dGeEpJUUNEQTBMSTRNQ0lnQkJnQUZ4UVlBQlJoQ2pBU0FBUVFGMElBQkIvd0Z4UVFkMmNrSC9BWEVrZ3dJTURRc1FuQUZCLy84RGNTT0xBaENsQVF3SUN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNpSUFJNFVDUWY4QmNTT0VBa0gvQVhGQkNIUnlJZ0ZCQUJDbUFTQUFJQUZxUWYvL0EzRWlBRUdBL2dOeFFRaDFKSWdDSUFCQi93RnhKSWtDUVFBUW9nRkJDQThMSTRVQ1FmOEJjU09FQWtIL0FYRkJDSFJ5RUtjQlFmOEJjU1NEQWd3TEN5T0ZBa0gvQVhFamhBSkIvd0Z4UVFoMGNrRUJhMEgvL3dOeElnQkJnUDREY1VFSWRTU0VBZ3dMQ3lPRkFpSUFRUUVRb0FFZ0FFRUJha0gvQVhFaUFDU0ZBZ3dGQ3lPRkFpSUFRWDhRb0FFZ0FFRUJhMEgvQVhFaUFDU0ZBZ3dGQ3hDYkFVSC9BWEVraFFJTUJRc2pnd0lpQUVFQmNVRUFTeENqQVNBQVFRZDBJQUJCL3dGeFFRRjJja0gvQVhFa2d3SU1CUXRCZnc4TEk0d0NRUUpxUWYvL0EzRWtqQUlNQkFzZ0FFVVFvUUZCQUJDaUFRd0RDeUFBUlJDaEFVRUJFS0lCREFJTEk0d0NRUUZxUWYvL0EzRWtqQUlNQVF0QkFCQ2hBVUVBRUtJQlFRQVFud0VMUVFRUEN5QUFRZjhCY1NTRkFrRUlDNWtHQVFGL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVJCSEJFQWdBRUVSUmcwQkFrQWdBRUVTYXc0T0F3UUZCZ2NJQ1FvTERBME9EeEFBQ3d3UUN5T0JBZ1JBUWMzK0F4Q25BVUgvQVhFaUFFRUJjUVJBUWMzK0F5QUFRWDV4SWdCQmdBRnhCSDlCQUNTQ0FpQUFRZjkrY1FWQkFTU0NBaUFBUVlBQmNnc1FuUUZCeEFBUEN3dEJBU1NSQWd3UUN4Q2NBVUgvL3dOeElnQkJnUDREY1VFSWRTU0dBaUFBUWY4QmNTU0hBaU9NQWtFQ2FrSC8vd054Skl3Q0RCRUxJNGNDUWY4QmNTT0dBa0gvQVhGQkNIUnlJNE1DRUowQkRCQUxJNGNDUWY4QmNTT0dBa0gvQVhGQkNIUnlRUUZxUWYvL0EzRWlBRUdBL2dOeFFRaDFKSVlDREJBTEk0WUNJZ0JCQVJDZ0FTQUFRUUZxUWY4QmNTU0dBaU9HQWtVUW9RRkJBQkNpQVF3T0N5T0dBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWtoZ0lqaGdKRkVLRUJRUUVRb2dFTURRc1Ftd0ZCL3dGeEpJWUNEQW9MSTRNQ0lnRkJnQUZ4UVlBQlJpRUFJNG9DUVFSMlFRRnhJQUZCQVhSeVFmOEJjU1NEQWd3S0N4Q2JBU0VBSTR3Q0lBQkJHSFJCR0hWcVFmLy9BM0ZCQVdwQi8vOERjU1NNQWtFSUR3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQ09IQWtIL0FYRWpoZ0pCL3dGeFFRaDBjaUlCUVFBUXBnRWdBQ0FCYWtILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWlBQVFmOEJjU1NKQWtFQUVLSUJRUWdQQ3lPSEFrSC9BWEVqaGdKQi93RnhRUWgwY2hDbkFVSC9BWEVrZ3dJTUNBc2pod0pCL3dGeEk0WUNRZjhCY1VFSWRISkJBV3RCLy84RGNTSUFRWUQrQTNGQkNIVWtoZ0lNQ0Fzamh3SWlBRUVCRUtBQklBQkJBV3BCL3dGeElnQWtod0lnQUVVUW9RRkJBQkNpQVF3R0N5T0hBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NIQWlBQVJSQ2hBVUVCRUtJQkRBVUxFSnNCUWY4QmNTU0hBZ3dDQ3lPREFpSUJRUUZ4UVFGR0lRQWppZ0pCQkhaQkFYRkJCM1FnQVVIL0FYRkJBWFp5SklNQ0RBSUxRWDhQQ3lPTUFrRUJha0gvL3dOeEpJd0NEQUVMSUFBUW93RkJBQkNoQVVFQUVLSUJRUUFRbndFTFFRUVBDeUFBUWY4QmNTU0hBa0VJQy9VR0FRSi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBRUVnUndSQUlBQkJJVVlOQVFKQUlBQkJJbXNPRGdNRUJRWUhDQWtLQ3d3TkRnOFFBQXNNRUFzamlnSkJCM1pCQVhFRVFDT01Ba0VCYWtILy93TnhKSXdDQlJDYkFTRUFJNHdDSUFCQkdIUkJHSFZxUWYvL0EzRkJBV3BCLy84RGNTU01BZ3RCQ0E4TEVKd0JRZi8vQTNFaUFFR0EvZ054UVFoMUpJZ0NJQUJCL3dGeEpJa0NJNHdDUVFKcVFmLy9BM0VrakFJTUZBc2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQ09EQWhDZEFRd1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBja0VCYWtILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWd3TkN5T0lBaUlBUVFFUW9BRWdBRUVCYWtIL0FYRWlBQ1NJQWd3T0N5T0lBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NJQWd3T0N4Q2JBVUgvQVhFa2lBSU1EZ3RCQmtFQUk0b0NJZ0pCQlhaQkFYRkJBRXNiSWdCQjRBQnlJQUFnQWtFRWRrRUJjVUVBU3hzaEFDT0RBaUVCSUFKQkJuWkJBWEZCQUVzRWZ5QUJJQUJyUWY4QmNRVWdBU0FBUVFaeUlBQWdBVUVQY1VFSlN4c2lBRUhnQUhJZ0FDQUJRWmtCU3hzaUFHcEIvd0Z4Q3lJQlJSQ2hBU0FBUWVBQWNVRUFSeENqQVVFQUVKOEJJQUVrZ3dJTURnc2ppZ0pCQjNaQkFYRkJBRXNFUUJDYkFTRUFJNHdDSUFCQkdIUkJHSFZxUWYvL0EzRkJBV3BCLy84RGNTU01BZ1VqakFKQkFXcEIvLzhEY1NTTUFndEJDQThMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5SWdBZ0FFSC8vd054UVFBUXBnRWdBRUVCZEVILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWlBQVFmOEJjU1NKQWtFQUVLSUJRUWdQQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2lJQUVLY0JRZjhCY1NTREFnd0hDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBja0VCYTBILy93TnhJZ0JCZ1A0RGNVRUlkU1NJQWd3RkN5T0pBaUlBUVFFUW9BRWdBRUVCYWtIL0FYRWlBQ1NKQWd3R0N5T0pBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NKQWd3R0N4Q2JBVUgvQVhFa2lRSU1CZ3NqZ3dKQmYzTkIvd0Z4SklNQ1FRRVFvZ0ZCQVJDZkFRd0dDMEYvRHdzZ0FFSC9BWEVraVFKQkNBOExJQUJCQVdwQi8vOERjU0lBUVlEK0EzRkJDSFVraUFJZ0FFSC9BWEVraVFJTUF3c2dBRVVRb1FGQkFCQ2lBUXdDQ3lBQVJSQ2hBVUVCRUtJQkRBRUxJNHdDUVFGcVFmLy9BM0VrakFJTFFRUUw4UVVCQVg4Q1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRVEJIQkVBZ0FFRXhSZzBCQWtBZ0FFRXlhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPS0FrRUVka0VCY1FSQUk0d0NRUUZxUWYvL0EzRWtqQUlGRUpzQklRQWpqQUlnQUVFWWRFRVlkV3BCLy84RGNVRUJha0gvL3dOeEpJd0NDMEVJRHdzUW5BRkIvLzhEY1NTTEFpT01Ba0VDYWtILy93TnhKSXdDREJFTEk0a0NRZjhCY1NPSUFrSC9BWEZCQ0hSeUlnQWpnd0lRblFFTURnc2ppd0pCQVdwQi8vOERjU1NMQWtFSUR3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQkNuQVNJQlFRRVFvQUVnQVVFQmFrSC9BWEVpQVVVUW9RRkJBQkNpQVNBQUlBRVFuUUVNRGdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJaUFCQ25BU0lCUVg4UW9BRWdBVUVCYTBIL0FYRWlBVVVRb1FGQkFSQ2lBU0FBSUFFUW5RRU1EUXNqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRbXdGQi93RnhFSjBCREFzTFFRQVFvZ0ZCQUJDZkFVRUJFS01CREFzTEk0b0NRUVIyUVFGeFFRRkdCRUFRbXdFaEFDT01BaUFBUVJoMFFSaDFha0gvL3dOeFFRRnFRZi8vQTNFa2pBSUZJNHdDUVFGcVFmLy9BM0VrakFJTFFRZ1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaUlBSTRzQ1FRQVFwZ0VqaXdJZ0FHcEIvLzhEY1NJQVFZRCtBM0ZCQ0hVa2lBSWdBRUgvQVhFa2lRSkJBQkNpQVVFSUR3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISWlBQkNuQVVIL0FYRWtnd0lNQmdzaml3SkJBV3RCLy84RGNTU0xBa0VJRHdzamd3SWlBRUVCRUtBQklBQkJBV3BCL3dGeElnQWtnd0lnQUVVUW9RRkJBQkNpQVF3R0N5T0RBaUlBUVg4UW9BRWdBRUVCYTBIL0FYRWlBQ1NEQWlBQVJSQ2hBVUVCRUtJQkRBVUxFSnNCUWY4QmNTU0RBZ3dEQzBFQUVLSUJRUUFRbndFamlnSkJCSFpCQVhGQkFFMFFvd0VNQXd0QmZ3OExJQUJCQVd0Qi8vOERjU0lBUVlEK0EzRkJDSFVraUFJZ0FFSC9BWEVraVFJTUFRc2pqQUpCQVdwQi8vOERjU1NNQWd0QkJBdUNBZ0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRY0FBUndSQUlBQkJ3UUJHRFFFQ1FDQUFRY0lBYXc0T0F3UUZCZ2NJQ1JFS0N3d05EZzhBQ3d3UEN3d1BDeU9GQWlTRUFnd09DeU9HQWlTRUFnd05DeU9IQWlTRUFnd01DeU9JQWlTRUFnd0xDeU9KQWlTRUFnd0tDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVVIL0FYRWtoQUlNQ1Fzamd3SWtoQUlNQ0FzamhBSWtoUUlNQndzamhnSWtoUUlNQmdzamh3SWtoUUlNQlFzamlBSWtoUUlNQkFzamlRSWtoUUlNQXdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RkIvd0Z4SklVQ0RBSUxJNE1DSklVQ0RBRUxRWDhQQzBFRUMvMEJBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFkQUFSd1JBSUFCQjBRQkdEUUVDUUNBQVFkSUFhdzRPRUFNRUJRWUhDQWtLRUFzTURRNEFDd3dPQ3lPRUFpU0dBZ3dPQ3lPRkFpU0dBZ3dOQ3lPSEFpU0dBZ3dNQ3lPSUFpU0dBZ3dMQ3lPSkFpU0dBZ3dLQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFVSC9BWEVraGdJTUNRc2pnd0lraGdJTUNBc2poQUlraHdJTUJ3c2poUUlraHdJTUJnc2poZ0lraHdJTUJRc2ppQUlraHdJTUJBc2ppUUlraHdJTUF3c2ppUUpCL3dGeEk0Z0NRZjhCY1VFSWRISVFwd0ZCL3dGeEpJY0NEQUlMSTRNQ0pJY0NEQUVMUVg4UEMwRUVDLzBCQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRZUFBUndSQUlBQkI0UUJHRFFFQ1FDQUFRZUlBYXc0T0F3UVFCUVlIQ0FrS0N3d1FEUTRBQ3d3T0N5T0VBaVNJQWd3T0N5T0ZBaVNJQWd3TkN5T0dBaVNJQWd3TUN5T0hBaVNJQWd3TEN5T0pBaVNJQWd3S0N5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BVUgvQVhFa2lBSU1DUXNqZ3dJa2lBSU1DQXNqaEFJa2lRSU1Cd3NqaFFJa2lRSU1CZ3NqaGdJa2lRSU1CUXNqaHdJa2lRSU1CQXNqaUFJa2lRSU1Bd3NqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElRcHdGQi93RnhKSWtDREFJTEk0TUNKSWtDREFFTFFYOFBDMEVFQzVzREFBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjhBQkhCRUFnQUVIeEFFWU5BUUpBSUFCQjhnQnJEZzREQkFVR0J3Z0pDZ3NNRFE0UEVRQUxEQThMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRRQ0VKMEJEQThMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRVQ0VKMEJEQTRMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRZQ0VKMEJEQTBMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRjQ0VKMEJEQXdMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRnQ0VKMEJEQXNMSTRrQ1FmOEJjU09JQWtIL0FYRkJDSFJ5STRrQ0VKMEJEQW9MSS93QlJRUkFBa0FqdHdFRVFFRUJKSTRDREFFTEk3a0JJNzhCY1VFZmNVVUVRRUVCSkk4Q0RBRUxRUUVra0FJTEN3d0pDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaU9EQWhDZEFRd0lDeU9FQWlTREFnd0hDeU9GQWlTREFnd0dDeU9HQWlTREFnd0ZDeU9IQWlTREFnd0VDeU9JQWlTREFnd0RDeU9KQWlTREFnd0NDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaENuQVVIL0FYRWtnd0lNQVF0QmZ3OExRUVFMTndFQmZ5QUJRUUJPQkVBZ0FFSC9BWEVnQUNBQmFrSC9BWEZMRUtNQkJTQUJRUjkxSWdJZ0FTQUNhbk1nQUVIL0FYRktFS01CQ3dzMEFRSi9JNE1DSWdFZ0FFSC9BWEVpQWhDZ0FTQUJJQUlRc0FFZ0FDQUJha0gvQVhFaUFDU0RBaUFBUlJDaEFVRUFFS0lCQzFnQkFuOGpnd0lpQVNBQWFpT0tBa0VFZGtFQmNXcEIvd0Z4SWdJZ0FDQUJjM05CRUhGQkFFY1Fud0VnQUVIL0FYRWdBV29qaWdKQkJIWkJBWEZxUVlBQ2NVRUFTeENqQVNBQ0pJTUNJQUpGRUtFQlFRQVFvZ0VMaXdJQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFZQUJSd1JBSUFCQmdRRkdEUUVDUUNBQVFZSUJhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPRUFoQ3hBUXdRQ3lPRkFoQ3hBUXdQQ3lPR0FoQ3hBUXdPQ3lPSEFoQ3hBUXdOQ3lPSUFoQ3hBUXdNQ3lPSkFoQ3hBUXdMQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQ3hBUXdLQ3lPREFoQ3hBUXdKQ3lPRUFoQ3lBUXdJQ3lPRkFoQ3lBUXdIQ3lPR0FoQ3lBUXdHQ3lPSEFoQ3lBUXdGQ3lPSUFoQ3lBUXdFQ3lPSkFoQ3lBUXdEQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQ3lBUXdDQ3lPREFoQ3lBUXdCQzBGL0R3dEJCQXMzQVFKL0k0TUNJZ0VnQUVIL0FYRkJmMndpQWhDZ0FTQUJJQUlRc0FFZ0FTQUFhMEgvQVhFaUFDU0RBaUFBUlJDaEFVRUJFS0lCQzFnQkFuOGpnd0lpQVNBQWF5T0tBa0VFZGtFQmNXdEIvd0Z4SWdJZ0FDQUJjM05CRUhGQkFFY1Fud0VnQVNBQVFmOEJjV3NqaWdKQkJIWkJBWEZyUVlBQ2NVRUFTeENqQVNBQ0pJTUNJQUpGRUtFQlFRRVFvZ0VMaXdJQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFaQUJSd1JBSUFCQmtRRkdEUUVDUUNBQVFaSUJhdzRPQXdRRkJnY0lDUW9MREEwT0R4QUFDd3dRQ3lPRUFoQzBBUXdRQ3lPRkFoQzBBUXdQQ3lPR0FoQzBBUXdPQ3lPSEFoQzBBUXdOQ3lPSUFoQzBBUXdNQ3lPSkFoQzBBUXdMQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQzBBUXdLQ3lPREFoQzBBUXdKQ3lPRUFoQzFBUXdJQ3lPRkFoQzFBUXdIQ3lPR0FoQzFBUXdHQ3lPSEFoQzFBUXdGQ3lPSUFoQzFBUXdFQ3lPSkFoQzFBUXdEQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFSQzFBUXdDQ3lPREFoQzFBUXdCQzBGL0R3dEJCQXNpQUNPREFpQUFjU0lBSklNQ0lBQkZFS0VCUVFBUW9nRkJBUkNmQVVFQUVLTUJDeVlBSTRNQ0lBQnpRZjhCY1NJQUpJTUNJQUJGRUtFQlFRQVFvZ0ZCQUJDZkFVRUFFS01CQzRzQ0FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFR2dBVWNFUUNBQVFhRUJSZzBCQWtBZ0FFR2lBV3NPRGdNRUJRWUhDQWtLQ3d3TkRnOFFBQXNNRUFzamhBSVF0d0VNRUFzamhRSVF0d0VNRHdzamhnSVF0d0VNRGdzamh3SVF0d0VNRFFzamlBSVF0d0VNREFzamlRSVF0d0VNQ3dzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RVF0d0VNQ2dzamd3SVF0d0VNQ1FzamhBSVF1QUVNQ0FzamhRSVF1QUVNQndzamhnSVF1QUVNQmdzamh3SVF1QUVNQlFzamlBSVF1QUVNQkFzamlRSVF1QUVNQXdzamlRSkIvd0Z4STRnQ1FmOEJjVUVJZEhJUXB3RVF1QUVNQWdzamd3SVF1QUVNQVF0QmZ3OExRUVFMSmdBamd3SWdBSEpCL3dGeElnQWtnd0lnQUVVUW9RRkJBQkNpQVVFQUVKOEJRUUFRb3dFTExBRUJmeU9EQWlJQklBQkIvd0Z4UVg5c0lnQVFvQUVnQVNBQUVMQUJJQUFnQVdwRkVLRUJRUUVRb2dFTGl3SUFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUFRYkFCUndSQUlBQkJzUUZHRFFFQ1FDQUFRYklCYXc0T0F3UUZCZ2NJQ1FvTERBME9EeEFBQ3d3UUN5T0VBaEM2QVF3UUN5T0ZBaEM2QVF3UEN5T0dBaEM2QVF3T0N5T0hBaEM2QVF3TkN5T0lBaEM2QVF3TUN5T0pBaEM2QVF3TEN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BUkM2QVF3S0N5T0RBaEM2QVF3SkN5T0VBaEM3QVF3SUN5T0ZBaEM3QVF3SEN5T0dBaEM3QVF3R0N5T0hBaEM3QVF3RkN5T0lBaEM3QVF3RUN5T0pBaEM3QVF3REN5T0pBa0gvQVhFamlBSkIvd0Z4UVFoMGNoQ25BUkM3QVF3Q0N5T0RBaEM3QVF3QkMwRi9Ed3RCQkFzN0FRRi9JQUFRZFNJQlFYOUdCSDhnQUJBZEJTQUJDMEgvQVhFZ0FFRUJhaUlCRUhVaUFFRi9SZ1IvSUFFUUhRVWdBQXRCL3dGeFFRaDBjZ3NNQUVFSUVKb0JJQUFRdlFFTE5BQWdBRUdBQVhGQmdBRkdFS01CSUFCQkFYUWdBRUgvQVhGQkIzWnlRZjhCY1NJQVJSQ2hBVUVBRUtJQlFRQVFud0VnQUFzeUFDQUFRUUZ4UVFCTEVLTUJJQUJCQjNRZ0FFSC9BWEZCQVhaeVFmOEJjU0lBUlJDaEFVRUFFS0lCUVFBUW53RWdBQXM0QVFGL0k0b0NRUVIyUVFGeElBQkJBWFJ5UWY4QmNTRUJJQUJCZ0FGeFFZQUJSaENqQVNBQlJSQ2hBVUVBRUtJQlFRQVFud0VnQVFzNUFRRi9JNG9DUVFSMlFRRnhRUWQwSUFCQi93RnhRUUYyY2lFQklBQkJBWEZCQVVZUW93RWdBVVVRb1FGQkFCQ2lBVUVBRUo4QklBRUxLZ0FnQUVHQUFYRkJnQUZHRUtNQklBQkJBWFJCL3dGeElnQkZFS0VCUVFBUW9nRkJBQkNmQVNBQUN6MEJBWDhnQUVIL0FYRkJBWFlpQVVHQUFYSWdBU0FBUVlBQmNVR0FBVVliSWdGRkVLRUJRUUFRb2dGQkFCQ2ZBU0FBUVFGeFFRRkdFS01CSUFFTEt3QWdBRUVQY1VFRWRDQUFRZkFCY1VFRWRuSWlBRVVRb1FGQkFCQ2lBVUVBRUo4QlFRQVFvd0VnQUFzcUFRRi9JQUJCL3dGeFFRRjJJZ0ZGRUtFQlFRQVFvZ0ZCQUJDZkFTQUFRUUZ4UVFGR0VLTUJJQUVMSGdCQkFTQUFkQ0FCY1VIL0FYRkZFS0VCUVFBUW9nRkJBUkNmQVNBQkM4Z0lBUVYvQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FBUVFkeElnUUVRQ0FFUVFGR0RRRUNRQ0FFUVFKckRnWURCQVVHQndnQUN3d0lDeU9FQWlFQkRBY0xJNFVDSVFFTUJnc2poZ0loQVF3RkN5T0hBaUVCREFRTEk0Z0NJUUVNQXdzamlRSWhBUXdDQ3lPSkFrSC9BWEVqaUFKQi93RnhRUWgwY2hDbkFTRUJEQUVMSTRNQ0lRRUxBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFSHdBWEZCQkhVaUJRUkFJQVZCQVVZTkFRSkFJQVZCQW1zT0RnTUVCUVlIQ0FrS0N3d05EZzhRQUFzTUVBc2dBRUVIVEFSL0lBRVF2d0VoQWtFQkJTQUFRUTlNQkg4Z0FSREFBU0VDUVFFRlFRQUxDeUVEREE4TElBQkJGMHdFZnlBQkVNRUJJUUpCQVFVZ0FFRWZUQVIvSUFFUXdnRWhBa0VCQlVFQUN3c2hBd3dPQ3lBQVFTZE1CSDhnQVJEREFTRUNRUUVGSUFCQkwwd0VmeUFCRU1RQklRSkJBUVZCQUFzTElRTU1EUXNnQUVFM1RBUi9JQUVReFFFaEFrRUJCU0FBUVQ5TUJIOGdBUkRHQVNFQ1FRRUZRUUFMQ3lFRERBd0xJQUJCeHdCTUJIOUJBQ0FCRU1jQklRSkJBUVVnQUVIUEFFd0VmMEVCSUFFUXh3RWhBa0VCQlVFQUN3c2hBd3dMQ3lBQVFkY0FUQVIvUVFJZ0FSREhBU0VDUVFFRklBQkIzd0JNQkg5QkF5QUJFTWNCSVFKQkFRVkJBQXNMSVFNTUNnc2dBRUhuQUV3RWYwRUVJQUVReHdFaEFrRUJCU0FBUWU4QVRBUi9RUVVnQVJESEFTRUNRUUVGUVFBTEN5RUREQWtMSUFCQjl3Qk1CSDlCQmlBQkVNY0JJUUpCQVFVZ0FFSC9BRXdFZjBFSElBRVF4d0VoQWtFQkJVRUFDd3NoQXd3SUN5QUFRWWNCVEFSL0lBRkJmbkVoQWtFQkJTQUFRWThCVEFSL0lBRkJmWEVoQWtFQkJVRUFDd3NoQXd3SEN5QUFRWmNCVEFSL0lBRkJlM0VoQWtFQkJTQUFRWjhCVEFSL0lBRkJkM0VoQWtFQkJVRUFDd3NoQXd3R0N5QUFRYWNCVEFSL0lBRkJiM0VoQWtFQkJTQUFRYThCVEFSL0lBRkJYM0VoQWtFQkJVRUFDd3NoQXd3RkN5QUFRYmNCVEFSL0lBRkJ2Mzl4SVFKQkFRVWdBRUcvQVV3RWZ5QUJRZjkrY1NFQ1FRRUZRUUFMQ3lFRERBUUxJQUJCeHdGTUJIOGdBVUVCY2lFQ1FRRUZJQUJCendGTUJIOGdBVUVDY2lFQ1FRRUZRUUFMQ3lFRERBTUxJQUJCMXdGTUJIOGdBVUVFY2lFQ1FRRUZJQUJCM3dGTUJIOGdBVUVJY2lFQ1FRRUZRUUFMQ3lFRERBSUxJQUJCNXdGTUJIOGdBVUVRY2lFQ1FRRUZJQUJCN3dGTUJIOGdBVUVnY2lFQ1FRRUZRUUFMQ3lFRERBRUxJQUJCOXdGTUJIOGdBVUhBQUhJaEFrRUJCU0FBUWY4QlRBUi9JQUZCZ0FGeUlRSkJBUVZCQUFzTElRTUxBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQUVCRUFnQkVFQlJnMEJBa0FnQkVFQ2F3NEdBd1FGQmdjSUFBc01DQXNnQWlTRUFnd0hDeUFDSklVQ0RBWUxJQUlraGdJTUJRc2dBaVNIQWd3RUN5QUNKSWdDREFNTElBSWtpUUlNQWd0QkFTQUZRUWRLSUFWQkJFZ2JCRUFqaVFKQi93RnhJNGdDUWY4QmNVRUlkSElnQWhDZEFRc01BUXNnQWlTREFndEJCRUYvSUFNYkM3c0VBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FFSEFBVWNFUUNBQVFjRUJSZzBCQWtBZ0FFSENBV3NPRGdNU0JBVUdCd2dKQ2dzTUVRME9BQXNNRGdzamlnSkJCM1pCQVhFTkVRd09DeU9MQWhDK0FVSC8vd054SVFBaml3SkJBbXBCLy84RGNTU0xBaUFBUVlEK0EzRkJDSFVraEFJZ0FFSC9BWEVraFFKQkJBOExJNG9DUVFkMlFRRnhEUkVNRGdzamlnSkJCM1pCQVhFTkVBd01DeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09GQWtIL0FYRWpoQUpCL3dGeFFRaDBjaENsQVF3TkN4Q2JBUkN4QVF3TkN5T0xBa0VDYTBILy93TnhJZ0FraXdJZ0FDT01BaENsQVVFQUpJd0NEQXNMSTRvQ1FRZDJRUUZ4UVFGSERRb01Cd3NqaXdJaUFCQytBVUgvL3dOeEpJd0NJQUJCQW1wQi8vOERjU1NMQWd3SkN5T0tBa0VIZGtFQmNVRUJSZzBIREFvTEVKc0JRZjhCY1JESUFTRUFJNHdDUVFGcVFmLy9BM0VrakFJZ0FBOExJNG9DUVFkMlFRRnhRUUZIRFFnaml3SkJBbXRCLy84RGNTSUFKSXNDSUFBampBSkJBbXBCLy84RGNSQ2xBUXdGQ3hDYkFSQ3lBUXdHQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVJSkl3Q0RBUUxRWDhQQ3lPTEFpSUFFTDRCUWYvL0EzRWtqQUlnQUVFQ2FrSC8vd054SklzQ1FRd1BDeU9MQWtFQ2EwSC8vd054SWdBa2l3SWdBQ09NQWtFQ2FrSC8vd054RUtVQkN4Q2NBVUgvL3dOeEpJd0NDMEVJRHdzampBSkJBV3BCLy84RGNTU01Ba0VFRHdzampBSkJBbXBCLy84RGNTU01Ba0VNQzZBRUFRRi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUJCMEFGSEJFQWdBRUhSQVVZTkFRSkFJQUJCMGdGckRnNERBQVFGQmdjSUNRb0FDd0FNRFFBTERBMExJNG9DUVFSMlFRRnhEUThNRFFzaml3SWlBUkMrQVVILy93TnhJUUFnQVVFQ2FrSC8vd054SklzQ0lBQkJnUDREY1VFSWRTU0dBaUFBUWY4QmNTU0hBa0VFRHdzamlnSkJCSFpCQVhFTkR3d01DeU9LQWtFRWRrRUJjUTBPSTRzQ1FRSnJRZi8vQTNFaUFDU0xBaUFBSTR3Q1FRSnFRZi8vQTNFUXBRRU1Dd3NqaXdKQkFtdEIvLzhEY1NJQUpJc0NJQUFqaHdKQi93RnhJNFlDUWY4QmNVRUlkSElRcFFFTUN3c1Ftd0VRdEFFTUN3c2ppd0pCQW10Qi8vOERjU0lBSklzQ0lBQWpqQUlRcFFGQkVDU01BZ3dKQ3lPS0FrRUVka0VCY1VFQlJ3MElEQVlMSTRzQ0lnQVF2Z0ZCLy84RGNTU01Ba0VCSkxnQklBQkJBbXBCLy84RGNTU0xBZ3dIQ3lPS0FrRUVka0VCY1VFQlJnMEZEQWdMSTRvQ1FRUjJRUUZ4UVFGSERRY2ppd0pCQW10Qi8vOERjU0lBSklzQ0lBQWpqQUpCQW1wQi8vOERjUkNsQVF3RUN4Q2JBUkMxQVF3RkN5T0xBa0VDYTBILy93TnhJZ0FraXdJZ0FDT01BaENsQVVFWUpJd0NEQU1MUVg4UEN5T0xBaUlBRUw0QlFmLy9BM0VrakFJZ0FFRUNha0gvL3dOeEpJc0NRUXdQQ3hDY0FVSC8vd054Skl3Q0MwRUlEd3NqakFKQkFXcEIvLzhEY1NTTUFrRUVEd3NqakFKQkFtcEIvLzhEY1NTTUFrRU1DN0VEQVFGL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjRBRkhCRUFnQUVIaEFVWU5BUUpBSUFCQjRnRnJEZzREQUFBRUJRWUhDQWtBQUFBS0N3QUxEQXNMRUpzQlFmOEJjVUdBL2dOcUk0TUNFSjBCREFzTEk0c0NJZ0VRdmdGQi8vOERjU0VBSUFGQkFtcEIvLzhEY1NTTEFpQUFRWUQrQTNGQkNIVWtpQUlnQUVIL0FYRWtpUUpCQkE4TEk0VUNRWUQrQTJvamd3SVFuUUZCQkE4TEk0c0NRUUpyUWYvL0EzRWlBQ1NMQWlBQUk0a0NRZjhCY1NPSUFrSC9BWEZCQ0hSeUVLVUJRUWdQQ3hDYkFSQzNBUXdIQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVnSkl3Q1FRZ1BDeENiQVVFWWRFRVlkU0VBSTRzQ0lBQkJBUkNtQVNPTEFpQUFha0gvL3dOeEpJc0NRUUFRb1FGQkFCQ2lBU09NQWtFQmFrSC8vd054Skl3Q1FRd1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaVNNQWtFRUR3c1FuQUZCLy84RGNTT0RBaENkQVNPTUFrRUNha0gvL3dOeEpJd0NRUVFQQ3hDYkFSQzRBUXdDQ3lPTEFrRUNhMEgvL3dOeElnQWtpd0lnQUNPTUFoQ2xBVUVvSkl3Q1FRZ1BDMEYvRHdzampBSkJBV3BCLy84RGNTU01Ba0VFQytjREFRRi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjhBRkhCRUFnQUVIeEFVWU5BUUpBSUFCQjhnRnJEZzREQkFBRkJnY0lDUW9MQUFBTURRQUxEQTBMRUpzQlFmOEJjVUdBL2dOcUVLY0JRZjhCY1NTREFnd05DeU9MQWlJQkVMNEJRZi8vQTNFaEFDQUJRUUpxUWYvL0EzRWtpd0lnQUVHQS9nTnhRUWgxSklNQ0lBQkIvd0Z4SklvQ0RBMExJNFVDUVlEK0Eyb1Fwd0ZCL3dGeEpJTUNEQXdMUVFBa3R3RU1Dd3NqaXdKQkFtdEIvLzhEY1NJQUpJc0NJQUFqaWdKQi93RnhJNE1DUWY4QmNVRUlkSElRcFFGQkNBOExFSnNCRUxvQkRBZ0xJNHNDUVFKclFmLy9BM0VpQUNTTEFpQUFJNHdDRUtVQlFUQWtqQUpCQ0E4TEVKc0JRUmgwUVJoMUlRQWppd0loQVVFQUVLRUJRUUFRb2dFZ0FTQUFRUUVRcGdFZ0FDQUJha0gvL3dOeElnQkJnUDREY1VFSWRTU0lBaUFBUWY4QmNTU0pBaU9NQWtFQmFrSC8vd054Skl3Q1FRZ1BDeU9KQWtIL0FYRWppQUpCL3dGeFFRaDBjaVNMQWtFSUR3c1FuQUZCLy84RGNSQ25BVUgvQVhFa2d3SWpqQUpCQW1wQi8vOERjU1NNQWd3RkMwRUJKTGdCREFRTEVKc0JFTHNCREFJTEk0c0NRUUpyUWYvL0EzRWlBQ1NMQWlBQUk0d0NFS1VCUVRna2pBSkJDQThMUVg4UEN5T01Ba0VCYWtILy93TnhKSXdDQzBFRUM5Z0JBUUYvSTR3Q1FRRnFRZi8vQTNFaEFTT1FBZ1JBSUFGQkFXdEIvLzhEY1NFQkN5QUJKSXdDQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQkI4QUZ4UVFSMUlnRUVRQ0FCUVFGckRnNEJBZ01FQlFZSENBa0tDd3dORGc4TElBQVFxQUVQQ3lBQUVLa0JEd3NnQUJDcUFROExJQUFRcXdFUEN5QUFFS3dCRHdzZ0FCQ3RBUThMSUFBUXJnRVBDeUFBRUs4QkR3c2dBQkN6QVE4TElBQVF0Z0VQQ3lBQUVMa0JEd3NnQUJDOEFROExJQUFReVFFUEN5QUFFTW9CRHdzZ0FCRExBUThMSUFBUXpBRUx2Z0VCQW45QkFDUzNBVUdQL2dNUUhVRUJJQUIwUVg5emNTSUJKTDhCUVkvK0F5QUJFQjhqaXdKQkFtdEIvLzhEY1NTTEFpT0xBaUlCSTR3Q0lnSkIvd0Z4RUI4Z0FVRUJhaUFDUVlEK0EzRkJDSFVRSHdKQUFrQUNRQUpBQWtBZ0FBUkFJQUJCQVVZTkFRSkFJQUJCQW1zT0F3TUVCUUFMREFVTFFRQWt3QUZCd0FBa2pBSU1CQXRCQUNUQkFVSElBQ1NNQWd3REMwRUFKTUlCUWRBQUpJd0NEQUlMUVFBa3d3RkIyQUFrakFJTUFRdEJBQ1RFQVVIZ0FDU01BZ3NMNlFFQkFuOGp1QUVFUUVFQkpMY0JRUUFrdUFFTEk3a0JJNzhCY1VFZmNVRUFTZ1JBSTQ4Q1JVRUFJN2NCR3dSL0k4QUJRUUFqdWdFYkJIOUJBQkRPQVVFQkJTUEJBVUVBSTdzQkd3Ui9RUUVRemdGQkFRVWp3Z0ZCQUNPOEFSc0VmMEVDRU00QlFRRUZJOE1CUVFBanZRRWJCSDlCQXhET0FVRUJCU1BFQVVFQUk3NEJHd1IvUVFRUXpnRkJBUVZCQUFzTEN3c0xCVUVBQ3dSQVFRRWpqd0lqamdJYkJIOUJBQ1NQQWtFQUpJNENRUUFra0FKQkFDU1JBa0VZQlVFVUN5RUFDMEVCSTQ4Q0k0NENHd1JBUVFBa2p3SkJBQ1NPQWtFQUpKQUNRUUFra1FJTElBQVBDMEVBQzdZQkFRSi9RUUVrbUFJamtBSUVRQ09NQWhBZFFmOEJjUkROQVJDYUFVRUFKSThDUVFBa2pnSkJBQ1NRQWtFQUpKRUNDeERQQVNJQVFRQktCRUFnQUJDYUFRdEJCQ0VBUVFBamtRSkZRUUVqandJampnSWJHd1JBSTR3Q0VCMUIvd0Z4RU0wQklRQUxJNG9DUWZBQmNTU0tBaUFBUVFCTUJFQWdBQThMSUFBUW1nRWpsd0pCQVdvaUFTT1ZBazRFZnlPV0FrRUJhaVNXQWlBQkk1VUNhd1VnQVFza2x3SWpqQUlqM1FGR0JFQkJBU1RnQVFzZ0FBc0ZBQ08yQVF1dUFRRURmeUFBUVg5QmdBZ2dBRUVBU0JzZ0FFRUFTaHNoQWtFQUlRQURRQ1BnQVVWQkFDQUJSVUVBUVFBZ0FFVWdBeHNiR3dSQUVOQUJRUUJJQkVCQkFTRURCU09OQWtIUXBBUWpnZ0owVGdSQVFRRWhBQVZCQVNBQkk3WUJJQUpPUVFBZ0FrRi9TaHNiSVFFTEN3d0JDd3NnQUFSQUk0MENRZENrQkNPQ0FuUnJKSTBDUVFBUEN5QUJCRUJCQVE4TEkrQUJCRUJCQUNUZ0FVRUNEd3NqakFKQkFXdEIvLzhEY1NTTUFrRi9Dd2NBUVg4UTBnRUxOQUVDZndOQUlBRkJBRTVCQUNBQ0lBQklHd1JBUVg4UTBnRWhBU0FDUVFGcUlRSU1BUXNMSUFGQkFFZ0VRQ0FCRHd0QkFBc0ZBQ09TQWdzRkFDT1RBZ3NGQUNPVUFndGJBQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBQVJBSUFCQkFVWU5BUUpBSUFCQkFtc09CZ01FQlFZSENBQUxEQWdMSTlJQkR3c2oxUUVQQ3lQVEFROExJOVFCRHdzajFnRVBDeVBYQVE4TEk5Z0JEd3NqMlFFUEMwRUFDNGNCQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUFSQUlBQkJBVVlOQVFKQUlBQkJBbXNPQmdNRUJRWUhDQUFMREFnTElBRkJBRWNrMGdFTUJ3c2dBVUVBUnlUVkFRd0dDeUFCUVFCSEpOTUJEQVVMSUFGQkFFY2sxQUVNQkFzZ0FVRUFSeVRXQVF3REN5QUJRUUJISk5jQkRBSUxJQUZCQUVjazJBRU1BUXNnQVVFQVJ5VFpBUXNMVVFFQmYwRUFKSkVDSUFBUTJBRkZCRUJCQVNFQkN5QUFRUUVRMlFFZ0FRUkFRUUZCQVVFQVFRRkJBQ0FBUVFOTUd5SUFRUUFqMndFYkd5QUFSVUVBSTl3Qkd4c0VRRUVCSk1RQlFRUVFXZ3NMQ3drQUlBQkJBQkRaQVF1YUFRQWdBRUVBU2dSQVFRQVEyZ0VGUVFBUTJ3RUxJQUZCQUVvRVFFRUJFTm9CQlVFQkVOc0JDeUFDUVFCS0JFQkJBaERhQVFWQkFoRGJBUXNnQTBFQVNnUkFRUU1RMmdFRlFRTVEyd0VMSUFSQkFFb0VRRUVFRU5vQkJVRUVFTnNCQ3lBRlFRQktCRUJCQlJEYUFRVkJCUkRiQVFzZ0JrRUFTZ1JBUVFZUTJnRUZRUVlRMndFTElBZEJBRW9FUUVFSEVOb0JCVUVIRU5zQkN3c0hBQ0FBSk4wQkN3Y0FRWDhrM1FFTEJ3QWdBQ1RlQVFzSEFFRi9KTjRCQ3djQUlBQWszd0VMQndCQmZ5VGZBUXNGQUNPREFnc0ZBQ09FQWdzRkFDT0ZBZ3NGQUNPR0Fnc0ZBQ09IQWdzRkFDT0lBZ3NGQUNPSkFnc0ZBQ09LQWdzRkFDT01BZ3NGQUNPTEFnc0xBQ09NQWhBZFFmOEJjUXNGQUNQdEFRdXJBd0VLZjBHQWdBSkJnSkFDSStZQkd5RUlRWUM0QWtHQXNBSWo1d0ViSVFrRFFDQUZRWUFDU0FSQVFRQWhCQU5BSUFSQmdBSklCRUFnQ0NBRlFRTjFRUVYwSUFscUlBUkJBM1ZxSWdKQmdKQithaTBBQUJCTklRWWdCVUVJYnlFQlFRY2dCRUVJYjJzaEIwRUFJUU1DZnlBQVFRQktRUUFqZ1FJYkJFQWdBa0dBMEg1cUxRQUFJUU1MSUFOQndBQnhDd1JBUVFjZ0FXc2hBUXRCQUNFQ0lBRkJBWFFnQm1vaUJrR0FrSDVxUVFGQkFDQURRUWh4R3lJQ1FRMTBhaTBBQUNFS1FRQWhBU0FHUVlHUWZtb2dBa0VOZEdvdEFBQkJBU0FIZEhFRVFFRUNJUUVMSUFGQkFXb2dBVUVCSUFkMElBcHhHeUVCSUFWQkNIUWdCR3BCQTJ3aEFpQUFRUUJLUVFBamdRSWJCRUFnQWtHQW9RdHFJZ0lnQTBFSGNTQUJRUUFRVGlJQlFSOXhRUU4wT2dBQUlBSkJBV29nQVVIZ0IzRkJCWFZCQTNRNkFBQWdBa0VDYWlBQlFZRDRBWEZCQ25WQkEzUTZBQUFGSUFKQmdLRUxhaUlESUFGQngvNERFRThpQVVHQWdQd0hjVUVRZFRvQUFDQURRUUZxSUFGQmdQNERjVUVJZFRvQUFDQURRUUpxSUFFNkFBQUxJQVJCQVdvaEJBd0JDd3NnQlVFQmFpRUZEQUVMQ3d2VkF3RU1md05BSUFSQkYwNUZCRUJCQUNFREEwQWdBMEVmU0FSQVFRRkJBQ0FEUVE5S0lnY2JJUWtnQkVFUGF5QUVJQVJCRDBvaUFCdEJCSFFpQlNBRFFROXJhaUFESUFWcUlBY2JJUWhCZ0pBQ1FZQ0FBaUFBR3lFS1FjZitBeUVIUVg4aEJrRi9JUVZCQUNFQkEwQWdBVUVJU0FSQVFRQWhBQU5BSUFCQkJVZ0VRQ0FBUVFOMElBRnFRUUowSWdKQmd2d0RhaEFkSUFoR0JFQWdBa0dEL0FOcUVCMGhBa0VCUVFBZ0FrRUljVUVBSTRFQ0d4c2dDVVlFUUVFSUlRRkJCU0VBSUFJaUJVRVFjUVIvUWNuK0F3VkJ5UDREQ3lFSEN3c2dBRUVCYWlFQURBRUxDeUFCUVFGcUlRRU1BUXNMSUFWQkFFaEJBQ09CQWhzRVFFR0F1QUpCZ0xBQ0krY0JHeUVMUVg4aEFFRUFJUUlEUUNBQ1FTQklCRUJCQUNFQkEwQWdBVUVnU0FSQUlBRkJCWFFnQzJvZ0Ftb2lCa0dBa0g1cUxRQUFJQWhHQkVCQklDRUNRU0FoQVNBR0lRQUxJQUZCQVdvaEFRd0JDd3NnQWtFQmFpRUNEQUVMQ3lBQVFRQk9CSDhnQUVHQTBINXFMUUFBQlVGL0N5RUdDMEVBSVFBRFFDQUFRUWhJQkVBZ0NDQUtJQWxCQUVFSElBQWdBMEVEZENBRVFRTjBJQUJxUWZnQlFZQ2hGeUFISUFZZ0JSQlFHaUFBUVFGcUlRQU1BUXNMSUFOQkFXb2hBd3dCQ3dzZ0JFRUJhaUVFREFFTEN3dVdBZ0VKZndOQUlBUkJDRTVGQkVCQkFDRUJBMEFnQVVFRlNBUkFJQUZCQTNRZ0JHcEJBblFpQUVHQS9BTnFFQjBhSUFCQmdmd0RhaEFkR2lBQVFZTDhBMm9RSFNFQ1FRRWhCU1BvQVFSQUlBSkJBbTlCQVVZRVFDQUNRUUZySVFJTFFRSWhCUXNnQUVHRC9BTnFFQjBoQmtFQUlRZEJBVUVBSUFaQkNIRkJBQ09CQWhzYklRZEJ5UDRESVFoQnlmNERRY2orQXlBR1FSQnhHeUVJUVFBaEFBTkFJQUFnQlVnRVFFRUFJUU1EUUNBRFFRaElCRUFnQUNBQ2FrR0FnQUlnQjBFQVFRY2dBeUFFUVFOMElBRkJCSFFnQTJvZ0FFRURkR3BCd0FCQmdLRWdJQWhCZnlBR0VGQWFJQU5CQVdvaEF3d0JDd3NnQUVFQmFpRUFEQUVMQ3lBQlFRRnFJUUVNQVFzTElBUkJBV29oQkF3QkN3c0xCUUFqeGdFTEJRQWp4d0VMQlFBanlnRUxHQUVCZnlQTUFTRUFJOHNCQkVBZ0FFRUVjaUVBQ3lBQUN6QUJBWDhEUUFKQUlBQkIvLzhEVGcwQUlBQkJnTFhKQkdvZ0FCQjJPZ0FBSUFCQkFXb2hBQXdCQ3d0QkFDVGdBUXNXQUJBYlB3QkJsQUZJQkVCQmxBRS9BR3RBQUJvTEM5d0JBQ0FBUVp3Q1NRUkFEd3NnQUVFUWF5RUFBa0FDUUFKQUFrQUNRQUpBSUFGQkFVY0VRQ0FCUVFKR0RRRUNRQ0FCUVFOckRnTURCQVVBQ3d3RkN5QUFFQmtNQlFzZ0FDZ0NCRUgvLy8vL0FIRkJBRTBFUUVFQVFZQUJRY3NBUVJFUUFBQUxJQUFnQUNnQ0JFRUJhellDQkNBQUVBY01CQXNnQUJBS0RBTUxJQUFvQWdRaUFVR0FnSUNBZjNFZ0FVRUJha0dBZ0lDQWYzRkhCRUJCQUVHQUFVSFdBRUVHRUFBQUN5QUFJQUZCQVdvMkFnUWdBVUdBZ0lDQUIzRUVRQ0FBRUFrTERBSUxJQUFRQ3d3QkMwRUFRWUFCUWVFQVFSZ1FBQUFMQ3kwQUFrQUNRQUpBSUFCQkNHc29BZ0FPQXdBQUFRSUxEd3NnQUNnQ0FDSUFCRUFnQUNBQkVQZ0JDdzhMQUFzREFBRUxIUUFDUUFKQUFrQWptZ0lPQWdFQ0FBc0FDMEVBSVFBTElBQVEwZ0VMQndBZ0FDU2FBZ3NsQUFKQUFrQUNRQUpBSTVvQ0RnTUJBZ01BQ3dBTFFRRWhBQXRCZnlFQkN5QUJFTklCQ3d1ZkFnWUFRUWdMTFI0QUFBQUJBQUFBQVFBQUFCNEFBQUIrQUd3QWFRQmlBQzhBY2dCMEFDOEFkQUJzQUhNQVpnQXVBSFFBY3dCQk9BczNLQUFBQUFFQUFBQUJBQUFBS0FBQUFHRUFiQUJzQUc4QVl3QmhBSFFBYVFCdkFHNEFJQUIwQUc4QWJ3QWdBR3dBWVFCeUFHY0FaUUJCOEFBTExSNEFBQUFCQUFBQUFRQUFBQjRBQUFCK0FHd0FhUUJpQUM4QWNnQjBBQzhBY0FCMUFISUFaUUF1QUhRQWN3QkJvQUVMTXlRQUFBQUJBQUFBQVFBQUFDUUFBQUJKQUc0QVpBQmxBSGdBSUFCdkFIVUFkQUFnQUc4QVpnQWdBSElBWVFCdUFHY0FaUUJCMkFFTEl4UUFBQUFCQUFBQUFRQUFBQlFBQUFCK0FHd0FhUUJpQUM4QWNnQjBBQzRBZEFCekFFR0FBZ3NWQXdBQUFCQUFBQUFBQUFBQUVBQUFBQUFBQUFBUUFETVFjMjkxY21ObFRXRndjR2x1WjFWU1RDRmpiM0psTDJScGMzUXZZMjl5WlM1MWJuUnZkV05vWldRdWQyRnpiUzV0WVhBPSIpKS5pbnN0YW5jZTsKY29uc3QgYj1uZXcgVWludDhBcnJheShhLmV4cG9ydHMubWVtb3J5LmJ1ZmZlcik7cmV0dXJue2luc3RhbmNlOmEsYnl0ZU1lbW9yeTpiLHR5cGU6IldlYiBBc3NlbWJseSJ9fTtsZXQgcix1LEUsYztjPXtncmFwaGljc1dvcmtlclBvcnQ6dm9pZCAwLG1lbW9yeVdvcmtlclBvcnQ6dm9pZCAwLGNvbnRyb2xsZXJXb3JrZXJQb3J0OnZvaWQgMCxhdWRpb1dvcmtlclBvcnQ6dm9pZCAwLHdhc21JbnN0YW5jZTp2b2lkIDAsd2FzbUJ5dGVNZW1vcnk6dm9pZCAwLG9wdGlvbnM6dm9pZCAwLFdBU01CT1lfQk9PVF9ST01fTE9DQVRJT046MCxXQVNNQk9ZX0dBTUVfQllURVNfTE9DQVRJT046MCxXQVNNQk9ZX0dBTUVfUkFNX0JBTktTX0xPQ0FUSU9OOjAsV0FTTUJPWV9JTlRFUk5BTF9TVEFURV9TSVpFOjAsV0FTTUJPWV9JTlRFUk5BTF9TVEFURV9MT0NBVElPTjowLFdBU01CT1lfSU5URVJOQUxfTUVNT1JZX1NJWkU6MCxXQVNNQk9ZX0lOVEVSTkFMX01FTU9SWV9MT0NBVElPTjowLFdBU01CT1lfUEFMRVRURV9NRU1PUllfU0laRTowLApXQVNNQk9ZX1BBTEVUVEVfTUVNT1JZX0xPQ0FUSU9OOjAsV0FTTUJPWV9DVVJSRU5UX0ZSQU1FX09VVFBVVF9MT0NBVElPTjowLFdBU01CT1lfQ1VSUkVOVF9GUkFNRV9TSVpFOjAsV0FTTUJPWV9TT1VORF9PVVRQVVRfTE9DQVRJT046MCxXQVNNQk9ZX0NIQU5ORUxfMV9PVVRQVVRfTE9DQVRJT046MCxXQVNNQk9ZX0NIQU5ORUxfMl9PVVRQVVRfTE9DQVRJT046MCxXQVNNQk9ZX0NIQU5ORUxfM19PVVRQVVRfTE9DQVRJT046MCxXQVNNQk9ZX0NIQU5ORUxfNF9PVVRQVVRfTE9DQVRJT046MCxwYXVzZWQ6ITAsdXBkYXRlSWQ6dm9pZCAwLHRpbWVTdGFtcHNVbnRpbFJlYWR5OjAsZnBzVGltZVN0YW1wczpbXSxzcGVlZDowLGZyYW1lU2tpcENvdW50ZXI6MCxjdXJyZW50QXVkaW9MYXRlbmN5SW5TZWNvbmRzOjAsbWVzc2FnZUhhbmRsZXI6KGEpPT57Y29uc3QgYj1uKGEpO3N3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSBmLkNPTk5FQ1Q6IkdSQVBISUNTIj09PWIubWVzc2FnZS53b3JrZXJJZD8KKGMuZ3JhcGhpY3NXb3JrZXJQb3J0PWIubWVzc2FnZS5wb3J0c1swXSxxKEouYmluZCh2b2lkIDAsYyksYy5ncmFwaGljc1dvcmtlclBvcnQpKToiTUVNT1JZIj09PWIubWVzc2FnZS53b3JrZXJJZD8oYy5tZW1vcnlXb3JrZXJQb3J0PWIubWVzc2FnZS5wb3J0c1swXSxxKE0uYmluZCh2b2lkIDAsYyksYy5tZW1vcnlXb3JrZXJQb3J0KSk6IkNPTlRST0xMRVIiPT09Yi5tZXNzYWdlLndvcmtlcklkPyhjLmNvbnRyb2xsZXJXb3JrZXJQb3J0PWIubWVzc2FnZS5wb3J0c1swXSxxKEwuYmluZCh2b2lkIDAsYyksYy5jb250cm9sbGVyV29ya2VyUG9ydCkpOiJBVURJTyI9PT1iLm1lc3NhZ2Uud29ya2VySWQmJihjLmF1ZGlvV29ya2VyUG9ydD1iLm1lc3NhZ2UucG9ydHNbMF0scShLLmJpbmQodm9pZCAwLGMpLGMuYXVkaW9Xb3JrZXJQb3J0KSk7ayhoKHZvaWQgMCxiLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgZi5JTlNUQU5USUFURV9XQVNNOihhc3luYygpPT57bGV0IGE7YT1hd2FpdCBQKHApOwpjLndhc21JbnN0YW5jZT1hLmluc3RhbmNlO2Mud2FzbUJ5dGVNZW1vcnk9YS5ieXRlTWVtb3J5O2soaCh7dHlwZTphLnR5cGV9LGIubWVzc2FnZUlkKSl9KSgpO2JyZWFrO2Nhc2UgZi5DT05GSUc6Yy53YXNtSW5zdGFuY2UuZXhwb3J0cy5jb25maWcuYXBwbHkoYyxiLm1lc3NhZ2UuY29uZmlnKTtjLm9wdGlvbnM9Yi5tZXNzYWdlLm9wdGlvbnM7ayhoKHZvaWQgMCxiLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgZi5SRVNFVF9BVURJT19RVUVVRTpjLndhc21JbnN0YW5jZS5leHBvcnRzLmNsZWFyQXVkaW9CdWZmZXIoKTtrKGgodm9pZCAwLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSBmLlBMQVk6aWYoIWMucGF1c2VkfHwhYy53YXNtSW5zdGFuY2V8fCFjLndhc21CeXRlTWVtb3J5KXtrKGgoe2Vycm9yOiEwfSxiLm1lc3NhZ2VJZCkpO2JyZWFrfWMucGF1c2VkPSExO2MuZnBzVGltZVN0YW1wcz1bXTt3KGMpO2MuZnJhbWVTa2lwQ291bnRlcj0wO2MuY3VycmVudEF1ZGlvTGF0ZW5jeUluU2Vjb25kcz0KMDtjLm9wdGlvbnMuaXNHYmNDb2xvcml6YXRpb25FbmFibGVkP2Mub3B0aW9ucy5nYmNDb2xvcml6YXRpb25QYWxldHRlJiZjLndhc21JbnN0YW5jZS5leHBvcnRzLnNldE1hbnVhbENvbG9yaXphdGlvblBhbGV0dGUoIndhc21ib3lnYiBicm93biByZWQgZGFya2Jyb3duIGdyZWVuIGRhcmtncmVlbiBpbnZlcnRlZCBwYXN0ZWxtaXggb3JhbmdlIHllbGxvdyBibHVlIGRhcmtibHVlIGdyYXlzY2FsZSIuc3BsaXQoIiAiKS5pbmRleE9mKGMub3B0aW9ucy5nYmNDb2xvcml6YXRpb25QYWxldHRlLnRvTG93ZXJDYXNlKCkpKTpjLndhc21JbnN0YW5jZS5leHBvcnRzLnNldE1hbnVhbENvbG9yaXphdGlvblBhbGV0dGUoMCk7RihjLDFFMy9jLm9wdGlvbnMuZ2FtZWJveUZyYW1lUmF0ZSk7ayhoKHZvaWQgMCxiLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgZi5QQVVTRTpjLnBhdXNlZD0hMDtjLnVwZGF0ZUlkJiYoY2xlYXJUaW1lb3V0KGMudXBkYXRlSWQpLGMudXBkYXRlSWQ9dm9pZCAwKTtrKGgodm9pZCAwLApiLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgZi5SVU5fV0FTTV9FWFBPUlQ6YT1iLm1lc3NhZ2UucGFyYW1ldGVycz9jLndhc21JbnN0YW5jZS5leHBvcnRzW2IubWVzc2FnZS5leHBvcnRdLmFwcGx5KHZvaWQgMCxiLm1lc3NhZ2UucGFyYW1ldGVycyk6Yy53YXNtSW5zdGFuY2UuZXhwb3J0c1tiLm1lc3NhZ2UuZXhwb3J0XSgpO2soaCh7dHlwZTpmLlJVTl9XQVNNX0VYUE9SVCxyZXNwb25zZTphfSxiLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgZi5HRVRfV0FTTV9NRU1PUllfU0VDVElPTjp7YT0wO2xldCBkPWMud2FzbUJ5dGVNZW1vcnkubGVuZ3RoO2IubWVzc2FnZS5zdGFydCYmKGE9Yi5tZXNzYWdlLnN0YXJ0KTtiLm1lc3NhZ2UuZW5kJiYoZD1iLm1lc3NhZ2UuZW5kKTthPWMud2FzbUJ5dGVNZW1vcnkuc2xpY2UoYSxkKS5idWZmZXI7ayhoKHt0eXBlOmYuUlVOX1dBU01fRVhQT1JULHJlc3BvbnNlOmF9LGIubWVzc2FnZUlkKSxbYV0pO2JyZWFrfWNhc2UgZi5HRVRfV0FTTV9DT05TVEFOVDprKGgoe3R5cGU6Zi5HRVRfV0FTTV9DT05TVEFOVCwKcmVzcG9uc2U6Yy53YXNtSW5zdGFuY2UuZXhwb3J0c1tiLm1lc3NhZ2UuY29uc3RhbnRdLnZhbHVlT2YoKX0sYi5tZXNzYWdlSWQpKTticmVhaztjYXNlIGYuRk9SQ0VfT1VUUFVUX0ZSQU1FOkMoYyk7YnJlYWs7Y2FzZSBmLlNFVF9TUEVFRDpjLnNwZWVkPWIubWVzc2FnZS5zcGVlZDtjLmZwc1RpbWVTdGFtcHM9W107Yy50aW1lU3RhbXBzVW50aWxSZWFkeT02MDt3KGMpO2MuZnJhbWVTa2lwQ291bnRlcj0wO2MuY3VycmVudEF1ZGlvTGF0ZW5jeUluU2Vjb25kcz0wO2Mud2FzbUluc3RhbmNlLmV4cG9ydHMuY2xlYXJBdWRpb0J1ZmZlcigpO2JyZWFrO2Nhc2UgZi5JU19HQkM6YT0wPGMud2FzbUluc3RhbmNlLmV4cG9ydHMuaXNHQkMoKTtrKGgoe3R5cGU6Zi5JU19HQkMscmVzcG9uc2U6YX0sYi5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKCJVbmtub3duIFdhc21Cb3kgV29ya2VyIG1lc3NhZ2U6IixiKX19LGdldEZQUzooKT0+MDxjLnRpbWVTdGFtcHNVbnRpbFJlYWR5PwpjLnNwZWVkJiYwPGMuc3BlZWQ/Yy5vcHRpb25zLmdhbWVib3lGcmFtZVJhdGUqYy5zcGVlZDpjLm9wdGlvbnMuZ2FtZWJveUZyYW1lUmF0ZTpjLmZwc1RpbWVTdGFtcHM/Yy5mcHNUaW1lU3RhbXBzLmxlbmd0aDowfTtxKGMubWVzc2FnZUhhbmRsZXIpfSkoKTsK",
"LIB"),b=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiKXtlP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTprLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbShhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGUpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZSlzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugay5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZihhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZCsrLGI9YCR7Yn0tJHtkfWAsMUU1PGQmJihkPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGU9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaztlfHwoaz1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZD0wLGw7Y29uc3Qgbj0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6aChmKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgYj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApO2ZvcihsZXQgYz0wOzE0ND5jOysrYyl7bGV0IGU9NDgwKmMsZj02NDAqYztmb3IobGV0IGM9MDsxNjA+YzsrK2Mpe2NvbnN0IGQ9ZSszKmMsZz1mKyhjPDwyKTtiW2crMF09YVtkKzBdO2JbZysxXT1hW2QrMV07YltnKzJdPWFbZCsyXTtiW2crM109MjU1fX1hPWJ9aChmKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bSgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9CmEubWVzc2FnZS5wb3J0c1swXTttKG4sbCk7aChmKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmwucG9zdE1lc3NhZ2UoZih7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"GRAPHICS"),c=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtjP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGMpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoYylzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gZChhLGIscil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6cixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGM9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtjfHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHQ9KGEpPT57Y29uc3QgYj1hLmRhdGE/YS5kYXRhOmE7aWYoYi5tZXNzYWdlKXN3aXRjaChiLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGQoYi5tZXNzYWdlLGIubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e2NvbnN0IGE9e3R5cGU6IlVQREFURUQiLG51bWJlck9mU2FtcGxlczpiLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczpiLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzpiLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSxjPVtdO1siYXVkaW9CdWZmZXIiLCJjaGFubmVsMUJ1ZmZlciIsImNoYW5uZWwyQnVmZmVyIiwiY2hhbm5lbDNCdWZmZXIiLCJjaGFubmVsNEJ1ZmZlciJdLmZvckVhY2goKGQpPT57aWYoYi5tZXNzYWdlW2RdKXt7dmFyIGY9Cm5ldyBVaW50OEFycmF5KGIubWVzc2FnZVtkXSk7dmFyIGc9Yi5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBhPW5ldyBGbG9hdDMyQXJyYXkoZyk7dmFyIGg9bmV3IEZsb2F0MzJBcnJheShnKTtsZXQgYz0wO2cqPTI7Zm9yKHZhciBlPTA7ZTxnO2UrPTIpYVtjXT1xKGZbZV0pLGMrKztjPTA7Zm9yKGU9MTtlPGc7ZSs9MiloW2NdPXEoZltlXSksYysrO2Y9YS5idWZmZXI7aD1oLmJ1ZmZlcn1hW2RdPXt9O2FbZF0ubGVmdD1mO2FbZF0ucmlnaHQ9aDtjLnB1c2goZik7Yy5wdXNoKGgpfX0pO20oZChhKSxjKX19fTtwKChhKT0+e2E9YS5kYXRhP2EuZGF0YTphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6bD1hLm1lc3NhZ2UucG9ydHNbMF07cCh0LGwpO20oZCh2b2lkIDAsYS5tZXNzYWdlSWQpKTticmVhaztjYXNlICJHRVRfQ09OU1RBTlRTIjpsLnBvc3RNZXNzYWdlKGQoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiQVVESU9fTEFURU5DWSI6bC5wb3N0TWVzc2FnZShkKGEubWVzc2FnZSwKYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",
"AUDIO"),d=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",
"CONTROLLER"),e=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"MEMORY"),f=[];[b,c,d,e].forEach((b)=>{const c=new MessageChannel,d=new Promise((d)=>{let e=0;a.postMessage({type:u.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{e++;2<=e&&d()});b.postMessage({type:u.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{e++;2<=e&&d()})});f.push(d)});await Promise.all(f);L.setWorker(b);I.setWorker(c);G.setWorker(d);v.setWorker(e);return a};var bb=Z(function(a){(function(){if("undefined"!==typeof performance&&null!==performance&&performance.now)a.exports=
function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-f)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var e=1E9*process.uptime();var f=d-e}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-g},g=(new Date).getTime()}).call(ya)}),D="undefined"===typeof window?ya:window;M=["moz","webkit"];var S=D.requestAnimationFrame,
N=D.cancelAnimationFrame||D.cancelRequestAnimationFrame;for(K=0;!S&&K<M.length;K++)S=D[M[K]+"RequestAnimationFrame"],N=D[M[K]+"CancelAnimationFrame"]||D[M[K]+"CancelRequestAnimationFrame"];if(!S||!N){var ka=0,Ba=0,O=[],cb=1E3/60;S=function(a){if(0===O.length){var b=bb(),c=Math.max(0,cb-(b-ka));ka=c+b;setTimeout(function(){for(var a=O.slice(0),b=O.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(ka)}catch(f){setTimeout(function(){throw f;},0)}},Math.round(c))}O.push({handle:++Ba,callback:a,
cancelled:!1});return Ba};N=function(a){for(var b=0;b<O.length;b++)O[b].handle===a&&(O[b].cancelled=!0)}}var F=function(a){return S.call(D,a)};F.cancel=function(){N.apply(D,arguments)};F.polyfill=function(a){a||(a=D);a.requestAnimationFrame=S;a.cancelAnimationFrame=N};var Ca=Z(function(a){var b=function(a){function c(a,b,d,e){if("undefined"===typeof a)return c[0];if("undefined"!==typeof b){if(10!==+b||d){var k=d||"0123456789abcdefghijklmnopqrstuvwxyz";a=String(a);e||(a=a.toLowerCase(),k=k.toLowerCase());
var r=a.length,f=Math.abs(b);d={};for(e=0;e<k.length;e++)d[k[e]]=e;for(e=0;e<r;e++)if(k=a[e],"-"!==k&&k in d&&d[k]>=f&&("1"!==k||1!==f))throw Error(k+" is not a valid digit in base "+b+".");b=A(b);r=[];for(e=(f="-"===a[0])?1:0;e<a.length;e++)if(k=a[e],k in d)r.push(A(d[k]));else if("<"===k){k=e;do e++;while(">"!==a[e]&&e<a.length);r.push(A(a.slice(k+1,e)))}else throw Error(k+" is not a valid character");b=X(r,b,f)}else b=A(a);return b}return A(a)}function e(a,b){this.value=a;this.sign=b;this.isSmall=
!1}function f(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){this.value=a}function h(a){return-9007199254740992<a&&9007199254740992>a}function l(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/1E14)]}function n(a){u(a);var b=a.length;if(4>b&&0>F(a,U))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function u(a){for(var b=a.length;0===a[--b];);a.length=b+1}function w(a){for(var b=
Array(a),c=-1;++c<a;)b[c]=0;return b}function y(a){return 0<a?Math.floor(a):Math.ceil(a)}function v(a,b){var c=a.length,k=b.length,d=Array(c),e=0,r;for(r=0;r<k;r++){var f=a[r]+b[r]+e;e=1E7<=f?1:0;d[r]=f-1E7*e}for(;r<c;)f=a[r]+e,e=1E7===f?1:0,d[r++]=f-1E7*e;0<e&&d.push(e);return d}function q(a,b){return a.length>=b.length?v(a,b):v(b,a)}function C(a,b){var c=a.length,k=Array(c),d;for(d=0;d<c;d++){var e=a[d]-1E7+b;b=Math.floor(e/1E7);k[d]=e-1E7*b;b+=1}for(;0<b;)k[d++]=b%1E7,b=Math.floor(b/1E7);return k}
function x(a,b){var c=a.length,k=b.length,d=Array(c),e=0,r;for(r=0;r<k;r++){var f=a[r]-e-b[r];0>f?(f+=1E7,e=1):e=0;d[r]=f}for(r=k;r<c;r++){f=a[r]-e;if(0>f)f+=1E7;else{d[r++]=f;break}d[r]=f}for(;r<c;r++)d[r]=a[r];u(d);return d}function B(a,b,c){var k=a.length,d=Array(k);b=-b;var r;for(r=0;r<k;r++){var ea=a[r]+b;b=Math.floor(ea/1E7);ea%=1E7;d[r]=0>ea?ea+1E7:ea}d=n(d);return"number"===typeof d?(c&&(d=-d),new f(d)):new e(d,c)}function t(a,b){var c=a.length,k=b.length,d=w(c+k),e;for(e=0;e<c;++e){var r=
a[e];for(var f=0;f<k;++f){var g=b[f];g=r*g+d[e+f];var h=Math.floor(g/1E7);d[e+f]=g-1E7*h;d[e+f+1]+=h}}u(d);return d}function E(a,b){var c=a.length,k=Array(c),d=0,e;for(e=0;e<c;e++){var r=a[e]*b+d;d=Math.floor(r/1E7);k[e]=r-1E7*d}for(;0<d;)k[e++]=d%1E7,d=Math.floor(d/1E7);return k}function I(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function G(a,b){var c=Math.max(a.length,b.length);if(30>=c)return t(a,b);c=Math.ceil(c/2);var k=a.slice(c);a=a.slice(0,c);var d=b.slice(c),e=b.slice(0,c);b=
G(a,e);var r=G(k,d);k=G(q(a,k),q(e,d));c=q(q(b,I(x(x(k,b),r),c)),I(r,2*c));u(c);return c}function H(a,b,c){return 1E7>a?new e(E(b,a),c):new e(t(b,l(a)),c)}function J(a){var b=a.length,c=w(b+b),k;for(k=0;k<b;k++){var d=a[k];var e=-(d*d);for(var f=k;f<b;f++){var g=a[f];g=2*d*g+c[k+f]+e;e=Math.floor(g/1E7);c[k+f]=g-1E7*e}c[k+b]=e}u(c);return c}function K(a,b){var c=a.length,k=w(c);var d=0;for(--c;0<=c;--c){d=1E7*d+a[c];var e=y(d/b);d-=e*b;k[c]=e|0}return[k,d|0]}function D(a,b){b=A(b);if(R)return[new g(a.value/
b.value),new g(a.value%b.value)];var d=a.value;var k=b.value;if(0===k)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new f(y(d/k)),new f(d%k)]:[c[0],a];if(b.isSmall){if(1===k)return[a,c[0]];if(-1==k)return[a.negate(),c[0]];k=Math.abs(k);if(1E7>k)return k=K(d,k),d=n(k[0]),k=k[1],a.sign&&(k=-k),"number"===typeof d?(a.sign!==b.sign&&(d=-d),[new f(d),new f(k)]):[new e(d,a.sign!==b.sign),new f(k)];k=l(k)}var r=F(d,k);if(-1===r)return[c[0],a];if(0===r)return[c[a.sign===b.sign?1:-1],
c[0]];if(200>=d.length+k.length){var h=k,m=d.length;k=h.length;r=w(h.length);var p=h[k-1],t=Math.ceil(1E7/(2*p));d=E(d,t);h=E(h,t);var q,v,z;d.length<=m&&d.push(0);h.push(0);p=h[k-1];for(q=m-k;0<=q;q--){m=9999999;d[q+k]!==p&&(m=Math.floor((1E7*d[q+k]+d[q+k-1])/p));var B=v=0;var C=h.length;for(z=0;z<C;z++){v+=m*h[z];var D=Math.floor(v/1E7);B+=d[q+z]-(v-1E7*D);v=D;0>B?(d[q+z]=B+1E7,B=-1):(d[q+z]=B,B=0)}for(;0!==B;){--m;for(z=v=0;z<C;z++)v+=d[q+z]-1E7+h[z],0>v?(d[q+z]=v+1E7,v=0):(d[q+z]=v,v=1);B+=v}r[q]=
m}d=K(d,t)[0];k=[n(r),n(d)]}else{r=d.length;p=k.length;t=[];for(h=[];r;)if(h.unshift(d[--r]),u(h),0>F(h,k))t.push(0);else{m=h.length;q=1E7*h[m-1]+h[m-2];v=1E7*k[p-1]+k[p-2];m>p&&(q=1E7*(q+1));m=Math.ceil(q/v);do{q=E(k,m);if(0>=F(q,h))break;m--}while(m);t.push(m);h=x(h,q)}t.reverse();k=[n(t),n(h)]}d=k[0];b=a.sign!==b.sign;k=k[1];a=a.sign;"number"===typeof d?(b&&(d=-d),d=new f(d)):d=new e(d,b);"number"===typeof k?(a&&(k=-k),k=new f(k)):k=new e(k,a);return[d,k]}function F(a,b){if(a.length!==b.length)return a.length>
b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function M(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;if(a.lesser(49))return!0}function O(a,c){for(var d=a.prev(),k=d,e=0,f,r,g;k.isEven();)k=k.divide(2),e++;r=0;a:for(;r<c.length;r++)if(!a.lesser(c[r])&&(g=b(c[r]).modPow(k,a),!g.isUnit()&&!g.equals(d))){for(f=e-1;0!=f;f--){g=g.square().mod(a);if(g.isUnit())break;
if(g.equals(d))continue a}return!1}return!0}function P(a,c,d){c=A(c);var k=a.isNegative(),e=c.isNegative();a=k?a.not():a;var f=e?c.not():c;for(c=[];!a.isZero()||!f.isZero();){a=D(a,ba);var r=a[1].toJSNumber();k&&(r=ba-1-r);f=D(f,ba);var g=f[1].toJSNumber();e&&(g=ba-1-g);a=a[0];f=f[0];c.push(d(r,g))}d=0!==d(k?1:0,e?1:0)?b(-1):b(0);for(k=c.length-1;0<=k;--k)d=d.multiply(ba).add(b(c[k]));return d}function L(a){a=a.value;a="number"===typeof a?a|1073741824:"bigint"===typeof a?a|BigInt(1073741824):a[0]+
1E7*a[1]|1073758208;return a&-a}function S(a,c){if(0>=c.compareTo(a)){var d=S(a,c.square(c)),k=d.p;d=d.e;c=k.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:k,e:2*d}}return{p:b(1),e:0}}function V(a,b){a=A(a);b=A(b);return a.greater(b)?a:b}function Q(a,b){a=A(a);b=A(b);return a.lesser(b)?a:b}function W(a,b){a=A(a).abs();b=A(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d=c[1],k;a.isEven()&&b.isEven();)k=Q(L(a),L(b)),a=a.divide(k),b=b.divide(k),d=d.multiply(k);
for(;a.isEven();)a=a.divide(L(a));do{for(;b.isEven();)b=b.divide(L(b));a.greater(b)&&(k=b,b=a,a=k);b=b.subtract(a)}while(!b.isZero());return d.isUnit()?a:a.multiply(d)}function X(a,b,d){var k=c[0],e=c[1],f;for(f=a.length-1;0<=f;f--)k=k.add(a[f].times(e)),e=e.times(b);return d?k.negate():k}function N(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],
Array.apply(null,Array(-a.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};c=Array.apply(null,Array(a.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.isUnit())return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(a.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:d};for(var k=[],e;a.isNegative()||0<=a.compareAbs(c);)e=a.divmod(c),
a=e.quotient,e=e.remainder,e.isNegative()&&(e=c.minus(e).abs(),a=a.next()),k.push(e.toJSNumber());k.push(a.toJSNumber());return{value:k.reverse(),isNegative:d}}function Y(a,b,c){a=N(a,b);return(a.isNegative?"-":"")+a.value.map(function(a){var b=c;b=b||"0123456789abcdefghijklmnopqrstuvwxyz";a=a<b.length?b[a]:"<"+a+">";return a}).join("")}function Z(a){if(h(+a)){var b=+a;if(b===y(b))return R?new g(BigInt(b)):new f(b);throw Error("Invalid integer: "+a);}(b="-"===a[0])&&(a=a.slice(1));var c=a.split(/e/i);
if(2<c.length)throw Error("Invalid integer: "+c.join("e"));if(2===c.length){a=c[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==y(a)||!h(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");c=c[0];var d=c.indexOf(".");0<=d&&(a-=c.length-d-1,c=c.slice(0,d)+c.slice(d+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=c+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);if(R)return new g(BigInt(b?"-"+a:a));c=[];d=a.length;for(var k=
d-7;0<d;)c.push(+a.slice(k,d)),k-=7,0>k&&(k=0),d-=7;u(c);return new e(c,b)}function A(a){if("number"===typeof a){if(R)a=new g(BigInt(a));else if(h(a)){if(a!==y(a))throw Error(a+" is not an integer.");a=new f(a)}else a=Z(a.toString());return a}return"string"===typeof a?Z(a):"bigint"===typeof a?new g(a):a}var U=l(9007199254740992),R="function"===typeof BigInt;e.prototype=Object.create(c.prototype);f.prototype=Object.create(c.prototype);g.prototype=Object.create(c.prototype);e.prototype.add=function(a){a=
A(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,c=a.value;return a.isSmall?new e(C(b,Math.abs(c)),this.sign):new e(q(b,c),this.sign)};e.prototype.plus=e.prototype.add;f.prototype.add=function(a){a=A(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var c=a.value;if(a.isSmall){if(h(b+c))return new f(b+c);c=l(Math.abs(c))}return new e(C(c,Math.abs(b)),0>b)};f.prototype.plus=f.prototype.add;g.prototype.add=function(a){return new g(this.value+A(a).value)};
g.prototype.plus=g.prototype.add;e.prototype.subtract=function(a){var b=A(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var c=b.value;if(b.isSmall)return B(a,Math.abs(c),this.sign);b=this.sign;0<=F(a,c)?a=x(a,c):(a=x(c,a),b=!b);a=n(a);"number"===typeof a?(b&&(a=-a),a=new f(a)):a=new e(a,b);return a};e.prototype.minus=e.prototype.subtract;f.prototype.subtract=function(a){a=A(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?new f(b-c):
B(c,Math.abs(b),0<=b)};f.prototype.minus=f.prototype.subtract;g.prototype.subtract=function(a){return new g(this.value-A(a).value)};g.prototype.minus=g.prototype.subtract;e.prototype.negate=function(){return new e(this.value,!this.sign)};f.prototype.negate=function(){var a=this.sign,b=new f(-this.value);b.sign=!a;return b};g.prototype.negate=function(){return new g(-this.value)};e.prototype.abs=function(){return new e(this.value,!1)};f.prototype.abs=function(){return new f(Math.abs(this.value))};
g.prototype.abs=function(){return new g(0<=this.value?this.value:-this.value)};e.prototype.multiply=function(a){var b=A(a);a=this.value;var d=b.value,k=this.sign!==b.sign;if(b.isSmall){if(0===d)return c[0];if(1===d)return this;if(-1===d)return this.negate();d=Math.abs(d);if(1E7>d)return new e(E(a,d),k);d=l(d)}b=a.length;var f=d.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new e(G(a,d),k):new e(t(a,d),k)};e.prototype.times=e.prototype.multiply;f.prototype._multiplyBySmall=function(a){return h(a.value*
this.value)?new f(a.value*this.value):H(Math.abs(a.value),l(Math.abs(this.value)),this.sign!==a.sign)};e.prototype._multiplyBySmall=function(a){return 0===a.value?c[0]:1===a.value?this:-1===a.value?this.negate():H(Math.abs(a.value),this.value,this.sign!==a.sign)};f.prototype.multiply=function(a){return A(a)._multiplyBySmall(this)};f.prototype.times=f.prototype.multiply;g.prototype.multiply=function(a){return new g(this.value*A(a).value)};g.prototype.times=g.prototype.multiply;e.prototype.square=function(){return new e(J(this.value),
!1)};f.prototype.square=function(){var a=this.value*this.value;return h(a)?new f(a):new e(J(l(Math.abs(this.value))),!1)};g.prototype.square=function(a){return new g(this.value*this.value)};e.prototype.divmod=function(a){a=D(this,a);return{quotient:a[0],remainder:a[1]}};g.prototype.divmod=f.prototype.divmod=e.prototype.divmod;e.prototype.divide=function(a){return D(this,a)[0]};g.prototype.over=g.prototype.divide=function(a){return new g(this.value/A(a).value)};f.prototype.over=f.prototype.divide=
e.prototype.over=e.prototype.divide;e.prototype.mod=function(a){return D(this,a)[1]};g.prototype.mod=g.prototype.remainder=function(a){return new g(this.value%A(a).value)};f.prototype.remainder=f.prototype.mod=e.prototype.remainder=e.prototype.mod;e.prototype.pow=function(a){var b=A(a),d=this.value;a=b.value;var e;if(0===a)return c[1];if(0===d)return c[0];if(1===d)return c[1];if(-1===d)return b.isEven()?c[1]:c[-1];if(b.sign)return c[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");
if(this.isSmall&&h(e=Math.pow(d,a)))return new f(y(e));e=this;for(b=c[1];;){a&1&&(b=b.times(e),--a);if(0===a)break;a/=2;e=e.square()}return b};f.prototype.pow=e.prototype.pow;g.prototype.pow=function(a){var b=A(a),d=this.value;a=b.value;var e=BigInt(0),f=BigInt(1),k=BigInt(2);if(a===e)return c[1];if(d===e)return c[0];if(d===f)return c[1];if(d===BigInt(-1))return b.isEven()?c[1]:c[-1];if(b.isNegative())return new g(e);b=this;for(d=c[1];;){(a&f)===f&&(d=d.times(b),--a);if(a===e)break;a/=k;b=b.square()}return d};
e.prototype.modPow=function(a,b){a=A(a);b=A(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");var d=c[1],e=this.mod(b);a.isNegative()&&(a=a.multiply(c[-1]),e=e.modInv(b));for(;a.isPositive();){if(e.isZero())return c[0];a.isOdd()&&(d=d.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return d};g.prototype.modPow=f.prototype.modPow=e.prototype.modPow;e.prototype.compareAbs=function(a){a=A(a);return a.isSmall?1:F(this.value,a.value)};f.prototype.compareAbs=function(a){a=A(a);var b=
Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};g.prototype.compareAbs=function(a){var b=this.value;a=A(a).value;b=0<=b?b:-b;a=0<=a?a:-a;return b===a?0:b>a?1:-1};e.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=A(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:F(this.value,a.value)*(this.sign?-1:1)};e.prototype.compareTo=e.prototype.compare;f.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===
a)return 1;a=A(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==a.sign?0>b?-1:1:0>b?1:-1};f.prototype.compareTo=f.prototype.compare;g.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;var b=this.value;a=A(a).value;return b===a?0:b>a?1:-1};g.prototype.compareTo=g.prototype.compare;e.prototype.equals=function(a){return 0===this.compare(a)};g.prototype.eq=g.prototype.equals=f.prototype.eq=f.prototype.equals=e.prototype.eq=e.prototype.equals;e.prototype.notEquals=
function(a){return 0!==this.compare(a)};g.prototype.neq=g.prototype.notEquals=f.prototype.neq=f.prototype.notEquals=e.prototype.neq=e.prototype.notEquals;e.prototype.greater=function(a){return 0<this.compare(a)};g.prototype.gt=g.prototype.greater=f.prototype.gt=f.prototype.greater=e.prototype.gt=e.prototype.greater;e.prototype.lesser=function(a){return 0>this.compare(a)};g.prototype.lt=g.prototype.lesser=f.prototype.lt=f.prototype.lesser=e.prototype.lt=e.prototype.lesser;e.prototype.greaterOrEquals=
function(a){return 0<=this.compare(a)};g.prototype.geq=g.prototype.greaterOrEquals=f.prototype.geq=f.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals;e.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};g.prototype.leq=g.prototype.lesserOrEquals=f.prototype.leq=f.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals;e.prototype.isEven=function(){return 0===(this.value[0]&1)};f.prototype.isEven=function(){return 0===(this.value&1)};g.prototype.isEven=
function(){return(this.value&BigInt(1))===BigInt(0)};e.prototype.isOdd=function(){return 1===(this.value[0]&1)};f.prototype.isOdd=function(){return 1===(this.value&1)};g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};e.prototype.isPositive=function(){return!this.sign};f.prototype.isPositive=function(){return 0<this.value};g.prototype.isPositive=f.prototype.isPositive;e.prototype.isNegative=function(){return this.sign};f.prototype.isNegative=function(){return 0>this.value};g.prototype.isNegative=
f.prototype.isNegative;e.prototype.isUnit=function(){return!1};f.prototype.isUnit=function(){return 1===Math.abs(this.value)};g.prototype.isUnit=function(){return this.abs().value===BigInt(1)};e.prototype.isZero=function(){return!1};f.prototype.isZero=function(){return 0===this.value};g.prototype.isZero=function(){return this.value===BigInt(0)};e.prototype.isDivisibleBy=function(a){a=A(a);return a.isZero()?!1:a.isUnit()?!0:0===a.compareAbs(2)?this.isEven():this.mod(a).isZero()};g.prototype.isDivisibleBy=
f.prototype.isDivisibleBy=e.prototype.isDivisibleBy;e.prototype.isPrime=function(c){var d=M(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return O(d,[2,3,5,7,11,13,17,19,23,29,31,37]);e=Math.log(2)*e.toJSNumber();c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return O(d,e)};g.prototype.isPrime=f.prototype.isPrime=e.prototype.isPrime;e.prototype.isProbablePrime=function(c,d){var e=M(this);if(e!==a)return e;e=this.abs();c=c===a?5:c;for(var f=[],k=0;k<
c;k++)f.push(b.randBetween(2,e.minus(2),d));return O(e,f)};g.prototype.isProbablePrime=f.prototype.isProbablePrime=e.prototype.isProbablePrime;e.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=A(a),f=this.abs(),k,g,h;!f.isZero();)k=e.divide(f),g=c,h=e,c=d,e=f,d=g.subtract(k.multiply(d)),f=h.subtract(k.multiply(f));if(!e.isUnit())throw Error(this.toString()+" and "+a.toString()+" are not co-prime");-1===c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};g.prototype.modInv=f.prototype.modInv=
e.prototype.modInv;e.prototype.next=function(){var a=this.value;return this.sign?B(a,1,this.sign):new e(C(a,1),this.sign)};f.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new f(a+1):new e(U,!1)};g.prototype.next=function(){return new g(this.value+BigInt(1))};e.prototype.prev=function(){var a=this.value;return this.sign?new e(C(a,1),!0):B(a,1,this.sign)};f.prototype.prev=function(){var a=this.value;return-9007199254740992<a-1?new f(a-1):new e(U,!0)};g.prototype.prev=function(){return new g(this.value-
BigInt(1))};for(var T=[1];1E7>=2*T[T.length-1];)T.push(2*T[T.length-1]);var fa=T.length,ba=T[fa-1];e.prototype.shiftLeft=function(a){a=A(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=fa;)b=b.multiply(ba),a-=fa-1;return b.multiply(T[a])};g.prototype.shiftLeft=f.prototype.shiftLeft=e.prototype.shiftLeft;e.prototype.shiftRight=function(a){var b;a=A(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+
" is too large for shifting.");if(0>a)return this.shiftLeft(-a);for(b=this;a>=fa;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=D(b,ba);b=b[1].isNegative()?b[0].prev():b[0];a-=fa-1}b=D(b,T[a]);return b[1].isNegative()?b[0].prev():b[0]};g.prototype.shiftRight=f.prototype.shiftRight=e.prototype.shiftRight;e.prototype.not=function(){return this.negate().prev()};g.prototype.not=f.prototype.not=e.prototype.not;e.prototype.and=function(a){return P(this,a,function(a,b){return a&b})};g.prototype.and=
f.prototype.and=e.prototype.and;e.prototype.or=function(a){return P(this,a,function(a,b){return a|b})};g.prototype.or=f.prototype.or=e.prototype.or;e.prototype.xor=function(a){return P(this,a,function(a,b){return a^b})};g.prototype.xor=f.prototype.xor=e.prototype.xor;e.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));return 0===a.compareTo(b(0))?b(0):b(S(a,b(2)).e).add(b(1))};g.prototype.bitLength=f.prototype.bitLength=e.prototype.bitLength;e.prototype.toArray=
function(a){return N(this,a)};f.prototype.toArray=function(a){return N(this,a)};g.prototype.toArray=function(a){return N(this,a)};e.prototype.toString=function(b,c){b===a&&(b=10);if(10!==b)return Y(this,b,c);b=this.value;c=b.length;for(var d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};f.prototype.toString=function(b,c){b===a&&(b=10);return 10!=b?Y(this,b,c):String(this.value)};g.prototype.toString=f.prototype.toString;g.prototype.toJSON=e.prototype.toJSON=
f.prototype.toJSON=function(){return this.toString()};e.prototype.valueOf=function(){return parseInt(this.toString(),10)};e.prototype.toJSNumber=e.prototype.valueOf;f.prototype.valueOf=function(){return this.value};f.prototype.toJSNumber=f.prototype.valueOf;g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var ca=0;1E3>ca;ca++)c[ca]=A(ca),0<ca&&(c[-ca]=A(-ca));c.one=c[1];c.zero=c[0];c.minusOne=c[-1];c.max=V;c.min=Q;c.gcd=W;c.lcm=function(a,b){a=A(a).abs();
b=A(b).abs();return a.divide(W(a,b)).multiply(b)};c.isInstance=function(a){return a instanceof e||a instanceof f||a instanceof g};c.randBetween=function(a,b,d){a=A(a);b=A(b);d=d||Math.random;var e=Q(a,b);a=V(a,b).subtract(e).add(1);if(a.isSmall)return e.add(Math.floor(d()*a));a=N(a,1E7).value;b=[];for(var f=!0,g=0;g<a.length;g++){var h=f?a[g]:1E7,k=y(d()*h);b.push(k);k<h&&(f=!1)}return e.add(c.fromArray(b,1E7,!1))};c.fromArray=function(a,b,c){return X(a.map(A),A(b||10),c)};return c}();a.hasOwnProperty("exports")&&
(a.exports=b)});let la=void 0;const J=async(a,b)=>{if(n.worker)return a=await n.worker.postMessage({type:u.RUN_WASM_EXPORT,export:a,parameters:b}),C(a).message.response},wa=async(a,b)=>{if(n.worker)return a=await n.worker.postMessage({type:u.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=C(a),new Uint8Array(a.message.response)},va=async(a)=>{if(n.worker)return a=await n.worker.postMessage({type:u.GET_WASM_CONSTANT,constant:a}),C(a).message.response},ua={};let Da=!1;class db{constructor(){this.canvasElement=
this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.initialized=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this.speed=1;this._resetConfig();"undefined"!==typeof window&&(window.addEventListener("beforeunload",function(a){Da=!0}),window.document.addEventListener("visibilitychange",()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||setTimeout(()=>{Da||this.pause()},0)}))}config(a,b){return(async()=>{await this.pause();await this.setCanvas(b);
!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach((b)=>{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=a;await L.initialize(this.canvasElement,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}addBootROM(a,b,c,d){return v.addBootROM(a,
b,c,d)}getBootROMs(){return v.getBootROMs()}loadROM(a,b){return Ja.bind(this)(a,b)}play(){return(async()=>{if(this.ready){if(!this.loadedAndStarted){this.loadedAndStarted=!0;if(this.options.onLoadedAndStarted)this.options.onLoadedAndStarted();E.runHook({key:"loadedAndStarted"})}if(this.options.onPlay)this.options.onPlay();E.runHook({key:"play"});this.options.headless||(I.resumeAudioContext(),I.resetTimeStretch());await this.worker.postMessage({type:u.RESET_AUDIO_QUEUE});this.paused=!1;this.updateId||
await this.worker.postMessage({type:u.PLAY});this.renderId||this.options.headless||(this.renderId=F(()=>{ta.call(this)}))}})()}pause(){return(async()=>{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();E.runHook({key:"pause"});F.cancel(this.renderId);this.renderId=!1;this.options.headless||I.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:u.PAUSE});await new Promise((a)=>{F(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,this.canvasElement);if(this.loadedROM)return this.loadROM(this.loadedROM)})()}getSavedMemory(){return v.getSavedMemory()}saveLoadedCartridge(a){return v.saveLoadedCartridge(a)}deleteSavedCartridge(a){return v.deleteSavedCartridge(a)}saveState(){return(async()=>
{await this.pause();return await v.saveState()})()}getSaveStates(){return(async()=>{let a=await v.getCartridgeObject();return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await v.loadState(a)})()}deleteState(a){return(async()=>{await v.deleteState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}getSpeed(){return this.speed}setSpeed(a){0>=a&&(a=.1);(async()=>{this.worker&&(this.speed=a,I.setSpeed(a),await this.worker.postMessageIgnoreResponse({type:u.SET_SPEED,
speed:a}));await new Promise((a)=>{F(()=>{a()})})})()}isGBC(){return(async()=>{const a=await n.worker.postMessage({type:u.IS_GBC});return C(a).message.response})()}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=0;this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,enableAudioDebugging:!1,gameboyFrameRate:60,frameSkip:0,enableBootROMIfAvailable:!0,isGbcEnabled:!0,isGbcColorizationEnabled:!0,gbcColorizationPalette:null,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,
graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,maxNumberOfAutoSaveStates:10,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,breakpointCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await ab(),this.worker.addMessageListener(Ka.bind(this)))})()}}const n=new db;M={config:n.config.bind(n),getCoreType:n.getCoreType.bind(n),getConfig:n.getConfig.bind(n),
setCanvas:n.setCanvas.bind(n),getCanvas:n.getCanvas.bind(n),addBootROM:n.addBootROM.bind(n),getBootROMs:n.getBootROMs.bind(n),loadROM:n.loadROM.bind(n),play:n.play.bind(n),pause:n.pause.bind(n),reset:n.reset.bind(n),addPlugin:E.addPlugin.bind(E),isPlaying:()=>!n.paused,isPaused:()=>n.paused,isReady:()=>n.ready,isLoadedAndStarted:()=>n.loadedAndStarted,getVersion:()=>"0.5.1",getSavedMemory:n.getSavedMemory.bind(n),saveLoadedCartridge:n.saveLoadedCartridge.bind(n),deleteSavedCartridge:n.deleteSavedCartridge.bind(n),
saveState:n.saveState.bind(n),getSaveStates:n.getSaveStates.bind(n),loadState:n.loadState.bind(n),deleteState:n.deleteState.bind(n),getFPS:n.getFPS.bind(n),setSpeed:n.setSpeed.bind(n),isGBC:n.isGBC.bind(n),ResponsiveGamepad:G.ResponsiveGamepad,enableDefaultJoypad:G.enableDefaultJoypad.bind(G),disableDefaultJoypad:G.disableDefaultJoypad.bind(G),setJoypadState:G.setJoypadState.bind(G),resumeAudioContext:I.resumeAudioContext.bind(I),_getAudioChannels:I.getAudioChannels.bind(I),_getCartridgeInfo:v.getCartridgeInfo.bind(v),
_runNumberOfFrames:async(a)=>{await n.pause();const b=()=>{la=F(()=>{la&&(n.worker.postMessage({type:u.FORCE_OUTPUT_FRAME}),L.renderFrame(),b())})};b();for(let b=0;b<a;b++)await J("executeFrame",[]);la=void 0;n.worker.postMessage({type:u.FORCE_OUTPUT_FRAME});L.renderFrame()},_runWasmExport:J,_getWasmMemorySection:wa,_getWasmConstant:va,_getStepsAsString:async(a)=>{var b=await J("getStepsPerStepSet");const c=await J("getStepSets"),d=await J("getSteps");b=Ca(b).multiply(c).add(d);return a?b.toString(a):
b.toString(10)},_getCyclesAsString:async(a)=>{var b=await J("getCyclesPerCycleSet");const c=await J("getCycleSets"),d=await J("getCycles");b=Ca(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};ma.WasmBoy=M;return ma}({});
//# sourceMappingURL=wasmboy.wasm.iife.js.map
