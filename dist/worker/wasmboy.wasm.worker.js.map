{"version":3,"file":"wasmboy.wasm.worker.js","sources":["../../lib/worker/util.js","../../lib/worker/workerapi.js","../../lib/worker/constants.js","../../lib/worker/smartworker.js","../../lib/wasmboy/worker/graphics/onmessage.js","../../lib/wasmboy/worker/audio/onmessage.js","../../lib/wasmboy/worker/controller/onmessage.js","../../lib/wasmboy/worker/memory/boot.js","../../lib/wasmboy/worker/memory/rom.js","../../lib/wasmboy/worker/memory/ram.js","../../lib/wasmboy/worker/memory/header.js","../../lib/wasmboy/worker/memory/gameboymemory.js","../../lib/wasmboy/worker/memory/palettememory.js","../../lib/wasmboy/worker/memory/internalstate.js","../../lib/wasmboy/worker/memory/onmessage.js","../core/getWasmBoyWasmCore.esm.js","../../lib/common/common.js","../../lib/wasmboy/worker/timestamp.js","../../lib/wasmboy/worker/graphics/transfer.js","../../lib/wasmboy/worker/update.js","../../lib/wasmboy/worker/wasmboy.worker.js"],"sourcesContent":["export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Isomorphic worker api to be imported by web workers\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n// Initilize some of our isomorphic values\nimport { isInBrowser } from './util';\n\nlet parentPort;\nif (!isInBrowser) {\n  parentPort = require('worker_threads').parentPort;\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_postmessage_value_transferlist\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\nexport function postMessage(message, transferArray) {\n  // Can't bind parentPort.postMessage, so we need to kinda copy code here :p\n  if (isInBrowser) {\n    self.postMessage(message, transferArray);\n  } else {\n    parentPort.postMessage(message, transferArray);\n  }\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_parentport\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage\nexport function onMessage(callback, port) {\n  if (!callback) {\n    console.error('workerapi: No callback was provided to onMessage!');\n  }\n\n  // If we passed a port, use that\n  if (port) {\n    if (isInBrowser) {\n      // We are in the browser\n      port.onmessage = callback;\n    } else {\n      // We are in Node\n      port.on('message', callback);\n    }\n    return;\n  }\n\n  if (isInBrowser) {\n    // We are in the browser\n    self.onmessage = callback;\n  } else {\n    // We are in Node\n    parentPort.on('message', callback);\n  }\n}\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  BREAKPOINT: 'BREAKPOINT',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT',\n  FORCE_OUTPUT_FRAME: 'FORCE_OUTPUT_FRAME',\n  SET_SPEED: 'SET_SPEED',\n  IS_GBC: 'IS_GBC'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  BOOT_ROM: 'BOOT_ROM',\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessageIgnoreResponse(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    this.worker.postMessage(messageObject, transfer);\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise((resolve, reject) => {\n      // Set a timeout before killing the message listener\n      let messageDroppedTimeout = setTimeout(() => {\n        console.warn('Message dropped', message);\n        this.removeMessageListener(messageId);\n        reject();\n      }, 1000);\n\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          clearTimeout(messageDroppedTimeout);\n          messageDroppedTimeout = undefined;\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handle on message from graphics worker\n// to the lib worker\nexport function graphicsWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = libWorker.wasmInstance.exports.FRAME_LOCATION.valueOf();\n      libWorker.WASMBOY_CURRENT_FRAME_SIZE = libWorker.wasmInstance.exports.FRAME_SIZE.valueOf();\n      // Forward to our lib worker\n      libWorker.graphicsWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: libWorker.wasmInstance.exports.FRAME_LOCATION.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handler audio worker on message to the libWorker\nexport function audioWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_SOUND_OUTPUT_LOCATION = libWorker.wasmInstance.exports.AUDIO_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_1_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_1_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_2_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_2_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_3_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_3_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_4_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_4_BUFFER_LOCATION.valueOf();\n\n      // Forward to our lib worker\n      libWorker.audioWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_SOUND_OUTPUT_LOCATION: libWorker.wasmInstance.exports.AUDIO_BUFFER_LOCATION.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.AUDIO_LATENCY: {\n      libWorker.currentAudioLatencyInSeconds = eventData.message.latency;\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Handler for when the controller worker posts to the libWorker\nexport function controllerWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE: {\n      // Config will come in as an array, pass in values using apply\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n      const setJoypadStateParamsAsArray = eventData.message.setJoypadStateParamsAsArray;\n      libWorker.wasmInstance.exports.setJoypadState.apply(libWorker, setJoypadStateParamsAsArray);\n      return;\n    }\n  }\n}\n","// Function to get the boot ROM\nexport function getBootRom(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const bootRomLocation = libWorker.wasmInstance.exports.BOOT_ROM_LOCATION.valueOf();\n  const bootRomSize = libWorker.wasmInstance.exports.BOOT_ROM_SIZE.valueOf();\n  const bootRom = libWorker.wasmByteMemory.slice(bootRomLocation, bootRomLocation + bootRomSize);\n\n  return bootRom;\n}\n","// Private function to get the caretridge rom\nexport function getCartridgeRom(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Depening on the rom type, we will have different rom sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let romSize = undefined;\n  if (cartridgeType === 0x00) {\n    // ROM only, 32KB\n    romSize = 0x8000;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 256KB ROM\n    romSize = 0x40000;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 8MB of ROM\n    romSize = 0x800000;\n  }\n\n  if (!romSize) {\n    return new Uint8Array();\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRom = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_BYTES_LOCATION,\n    libWorker.WASMBOY_GAME_BYTES_LOCATION + romSize\n  );\n  return cartridgeRom;\n}\n","// Private function to get the cartridge ram\nexport function getCartridgeRam(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Depening on the rom type, we will have different ram sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let ramSize = undefined;\n  if (cartridgeType === 0x00) {\n    // No memory for this rom type\n    return new Uint8Array();\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 512X4 Bytes, 2KB\n    ramSize = 0x800;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 128KB of Ram\n    ramSize = 0x20000;\n  }\n\n  if (!ramSize) {\n    return new Uint8Array();\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRam = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION,\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION + ramSize\n  );\n  return cartridgeRam;\n}\n","// Function to get the cartridge header\nexport function getCartridgeHeader(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const headerLength = 0x014f - 0x0134;\n  const headerLocation = libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0134;\n  const headerArray = libWorker.wasmByteMemory.slice(headerLocation, headerLocation + headerLength);\n\n  return headerArray;\n}\n","// Returns the standard 0xFFFF gameboy memory\n// You will normally see in gameboy docs.\n// This is returned from the core, and represents\n// This wasmboy gameboy state\nexport function getGameBoyMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION,\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION + libWorker.WASMBOY_INTERNAL_MEMORY_SIZE\n  );\n}\n","// Function to get the current palette data for\n// GBC in memory. This is needed to load state with\n// The correct colors\nexport function getPaletteMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION,\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION + libWorker.WASMBOY_PALETTE_MEMORY_SIZE\n  );\n}\n","// Returns the internal savestate of the wasmboy core,\n// To save all soft values held in memory\nexport function getInternalState(libWorker) {\n  libWorker.wasmInstance.exports.saveState();\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION,\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION + libWorker.WASMBOY_INTERNAL_STATE_SIZE\n  );\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Our memory getters\nimport { getBootRom } from './boot';\nimport { getCartridgeRom } from './rom';\nimport { getCartridgeRam } from './ram';\nimport { getCartridgeHeader } from './header';\nimport { getGameBoyMemory } from './gameboymemory';\nimport { getPaletteMemory } from './palettememory';\nimport { getInternalState } from './internalstate';\n\n// On message handler for when memory worker\n// posts to lib Worker\nexport function memoryWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.CLEAR_MEMORY: {\n      // Clear Wasm memory\n      // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n      for (let i = 0; i <= libWorker.wasmByteMemory.length; i++) {\n        libWorker.wasmByteMemory[i] = 0;\n      }\n\n      const wasmByteMemory = libWorker.wasmByteMemory.slice(0);\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY_DONE,\n            wasmByteMemory: wasmByteMemory.buffer\n          },\n          eventData.messageId\n        ),\n        [wasmByteMemory.buffer]\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_BOOT_ROM_LOCATION = libWorker.wasmInstance.exports.BOOT_ROM_LOCATION.valueOf();\n      libWorker.WASMBOY_GAME_BYTES_LOCATION = libWorker.wasmInstance.exports.CARTRIDGE_ROM_LOCATION.valueOf();\n      (libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION = libWorker.wasmInstance.exports.CARTRIDGE_RAM_LOCATION.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_SIZE = libWorker.wasmInstance.exports.WASMBOY_STATE_SIZE.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_LOCATION = libWorker.wasmInstance.exports.WASMBOY_STATE_LOCATION.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_SIZE = libWorker.wasmInstance.exports.GAMEBOY_INTERNAL_MEMORY_SIZE.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION = libWorker.wasmInstance.exports.GAMEBOY_INTERNAL_MEMORY_LOCATION.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_SIZE = libWorker.wasmInstance.exports.GBC_PALETTE_SIZE.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_LOCATION = libWorker.wasmInstance.exports.GBC_PALETTE_LOCATION.valueOf());\n\n      // Forward to our lib worker\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_BOOT_ROM_LOCATION: libWorker.wasmInstance.exports.BOOT_ROM_LOCATION.valueOf(),\n            WASMBOY_GAME_BYTES_LOCATION: libWorker.wasmInstance.exports.CARTRIDGE_ROM_LOCATION.valueOf(),\n            WASMBOY_GAME_RAM_BANKS_LOCATION: libWorker.wasmInstance.exports.CARTRIDGE_RAM_LOCATION.valueOf(),\n            WASMBOY_INTERNAL_STATE_SIZE: libWorker.wasmInstance.exports.WASMBOY_STATE_SIZE.valueOf(),\n            WASMBOY_INTERNAL_STATE_LOCATION: libWorker.wasmInstance.exports.WASMBOY_STATE_LOCATION.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_SIZE: libWorker.wasmInstance.exports.GAMEBOY_INTERNAL_MEMORY_SIZE.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_LOCATION: libWorker.wasmInstance.exports.GAMEBOY_INTERNAL_MEMORY_LOCATION.valueOf(),\n            WASMBOY_PALETTE_MEMORY_SIZE: libWorker.wasmInstance.exports.GBC_PALETTE_SIZE.valueOf(),\n            WASMBOY_PALETTE_MEMORY_LOCATION: libWorker.wasmInstance.exports.GBC_PALETTE_LOCATION.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.SET_MEMORY: {\n      const memoryKeys = Object.keys(eventData.message);\n\n      if (memoryKeys.includes(MEMORY_TYPE.BOOT_ROM)) {\n        libWorker.wasmByteMemory.set(new Uint8Array(eventData.message[MEMORY_TYPE.BOOT_ROM]), libWorker.WASMBOY_BOOT_ROM_LOCATION);\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        libWorker.wasmByteMemory.set(new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]), libWorker.WASMBOY_GAME_BYTES_LOCATION);\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]),\n          libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]),\n          libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]),\n          libWorker.WASMBOY_PALETTE_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]),\n          libWorker.WASMBOY_INTERNAL_STATE_LOCATION\n        );\n        libWorker.wasmInstance.exports.loadState();\n      }\n\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.SET_MEMORY_DONE\n          },\n          eventData.messageId\n        )\n      );\n\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_MEMORY: {\n      // Construct our data object\n      const responseMemory = {\n        type: WORKER_MESSAGE_TYPE.GET_MEMORY\n      };\n      const responseTransferrables = [];\n\n      const memoryTypes = eventData.message.memoryTypes;\n\n      if (memoryTypes.includes(MEMORY_TYPE.BOOT_ROM)) {\n        const bootRom = getBootRom(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.BOOT_ROM] = bootRom;\n        responseTransferrables.push(bootRom);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        const cartridgeRom = getCartridgeRom(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_ROM] = cartridgeRom;\n        responseTransferrables.push(cartridgeRom);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        const cartridgeRam = getCartridgeRam(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeRam;\n        responseTransferrables.push(cartridgeRam);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_HEADER)) {\n        const cartridgeHeader = getCartridgeHeader(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_HEADER] = cartridgeHeader;\n        responseTransferrables.push(cartridgeHeader);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        const gameboyMemory = getGameBoyMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.GAMEBOY_MEMORY] = gameboyMemory;\n        responseTransferrables.push(gameboyMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        const paletteMemory = getPaletteMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.PALETTE_MEMORY] = paletteMemory;\n        responseTransferrables.push(paletteMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmInstance.exports.saveState();\n        const internalState = getInternalState(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.INTERNAL_STATE] = internalState;\n        responseTransferrables.push(internalState);\n      }\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(responseMemory, eventData.messageId), responseTransferrables);\n\n      return;\n    }\n  }\n}\n","var wasmModuleUrl = \"data:application/wasm;base64,\";\n\n// Import object for our core js wrapper\n// Log throttling for our core\n// The same log can't be output more than once every half second\nlet logRequest = {};\n\nconst logTimeout = (id, message, timeout) => {\n  if (!logRequest[id]) {\n    logRequest[id] = true;\n    log(id, message);\n    setTimeout(() => {\n      delete logRequest[id];\n    }, timeout);\n  }\n};\n\nconst log = (arg0, arg1) => {\n  // Grab our arguments, and log as hex\n  let logString = '[WasmBoy]';\n  if (arg0 !== -9999) logString += ` 0x${arg0.toString(16)} `;\n  if (arg1 !== -9999) logString += ` 0x${arg1.toString(16)} `;\n  console.log(logString);\n}; // https://github.com/AssemblyScript/assemblyscript/issues/384\n\n\nconst wasmImportObject = {\n  index: {\n    consoleLog: log,\n    consoleLogTimeout: logTimeout\n  },\n  env: {\n    abort: () => {\n      console.error('AssemblyScript Import Object Aborted!');\n    }\n  }\n};\n\n// JS Implementation of Instantiating the Wasm Build\n\nconst wasmBrowserInstantiate = async wasmModuleUrl$$1 => {\n  let response = undefined; // Safari does not support .instantiateStreaming()\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming\n\n  if (WebAssembly.instantiateStreaming) {\n    response = await WebAssembly.instantiateStreaming(fetch(wasmModuleUrl$$1), wasmImportObject);\n  } else {\n    const fetchAndInstantiateTask = async () => {\n      const wasmArrayBuffer = await fetch(wasmModuleUrl$$1).then(response => response.arrayBuffer());\n      return WebAssembly.instantiate(wasmArrayBuffer, wasmImportObject);\n    };\n\n    response = await fetchAndInstantiateTask();\n  }\n\n  return response;\n};\n\nconst readBase64Buffer = base64String => {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n};\n\nconst wasmNodeInstantiate = async wasmModuleUrl$$1 => {\n  const wasmBuffer = readBase64Buffer(wasmModuleUrl$$1);\n  return await WebAssembly.instantiate(wasmBuffer, wasmImportObject);\n}; // Function to instantiate our wasm and respond back\n\n\nconst getWasmBoyWasmCore = async isInBrowser => {\n  let response = undefined; // Allow forcing the browser mode, but also check manually\n\n  if (isInBrowser) {\n    response = await wasmBrowserInstantiate(wasmModuleUrl);\n  } else {\n    if (typeof window !== 'undefined' || typeof self !== 'undefined') {\n      response = await wasmBrowserInstantiate(wasmModuleUrl);\n    } else {\n      response = await wasmNodeInstantiate(wasmModuleUrl);\n    }\n  } // Set our wasmInstance and byte memory in the main thread\n\n\n  const instance = response.instance;\n  const byteMemory = new Uint8Array(instance.exports.memory.buffer);\n  return {\n    instance,\n    byteMemory,\n    type: 'Web Assembly'\n  };\n};\n\nexport default getWasmBoyWasmCore;\n//# sourceMappingURL=getWasmBoyWasmCore.esm.js.map\n","// Common Static functions\n\n// Function to get performance timestamp\n// This is to support node vs. Browser\nexport const getPerformanceTimestamp = () => {\n  if (typeof window !== 'undefined') {\n    return performance.now();\n  }\n  return Date.now();\n};\n","import { getPerformanceTimestamp } from '../../common/common';\n\n// Function to add a timestamp to keep track\n// of how fast we are running\nexport function addTimeStamp(libWorker) {\n  // Track our Fps\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  const currentHighResTime = getPerformanceTimestamp();\n  while (libWorker.fpsTimeStamps[0] < currentHighResTime - 1000) {\n    libWorker.fpsTimeStamps.shift();\n  }\n  libWorker.fpsTimeStamps.push(currentHighResTime);\n\n  libWorker.timeStampsUntilReady--;\n  if (libWorker.timeStampsUntilReady < 0) {\n    libWorker.timeStampsUntilReady = 0;\n  }\n\n  return currentHighResTime;\n}\n\n// Function to wait for a specified number,\n// of timestamps before setting the framerate\nexport function waitForTimeStampsForFrameRate(libWorker) {\n  if (libWorker.options.gameboyFrameRate <= 90) {\n    libWorker.timeStampsUntilReady = Math.floor(libWorker.options.gameboyFrameRate) * 1.25;\n  } else {\n    // Fast stretching should be hardcoded, that way it doesn't just say a large number for a long time\n    libWorker.timeStampsUntilReady = 120;\n  }\n}\n","// Imports\nimport { postMessage } from '../../../worker/workerapi';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../../worker/constants';\n\nexport function transferGraphics(libWorker) {\n  const graphicsFrameEndIndex = libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION + libWorker.WASMBOY_CURRENT_FRAME_SIZE;\n  const graphicsFrameBuffer = libWorker.wasmByteMemory.slice(libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION, graphicsFrameEndIndex).buffer;\n  //libWorker.graphicsWorkerPort.postMessage(graphicsFrameBuffer, [graphicsFrameBuffer]);\n  libWorker.graphicsWorkerPort.postMessage(\n    getSmartWorkerMessage({\n      type: WORKER_MESSAGE_TYPE.UPDATED,\n      graphicsFrameBuffer\n    }),\n    [graphicsFrameBuffer]\n  );\n}\n","// Start our update and render process\n// Can't time by raf, as raf is not garunteed to be 60fps\n// Need to run like a web game, where updates to the state of the core are done a 60 fps\n// but we can render whenever the user would actually see the changes browser side in a raf\n// https://developer.mozilla.org/en-US/docs/Games/Anatomy\n\n// Imports\nimport { postMessage } from '../../worker/workerapi';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../worker/constants';\n\n// Memory\nimport { getCartridgeRam } from './memory/ram.js';\nimport { getGameBoyMemory } from './memory/gameboymemory.js';\nimport { getPaletteMemory } from './memory/palettememory.js';\nimport { getInternalState } from './memory/internalstate.js';\n\n// Timestamps\nimport { getPerformanceTimestamp } from '../../common/common';\nimport { addTimeStamp, waitForTimeStampsForFrameRate } from './timestamp';\n\n// Transferring\nimport { transferGraphics } from './graphics/transfer';\n\n// Some variables to help with Audio Latency\n// 0.25 (quarter of a second), just felt right from testing :)\nconst MAX_AUDIO_LATENCY = 0.25;\n// Pass over samples once we have enough worth playing:\n// https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/\nconst AUDIO_BUFFER_SIZE = 1024;\n\n// FPS measuring\nlet currentHighResTime;\nlet currentFps;\nlet gameboyFrameRateWithSpeed;\n\n// interval to set timeout\nlet intervalRate;\n\nfunction scheduleNextUpdate(libWorker) {\n  // Get our high res time\n  const highResTime = getPerformanceTimestamp();\n\n  // Find how long it has been since the last timestamp\n  const timeSinceLastTimestamp = highResTime - libWorker.fpsTimeStamps[libWorker.fpsTimeStamps.length - 1];\n\n  // Get the next time we should update using our interval rate\n  let nextUpdateTime = intervalRate - timeSinceLastTimestamp;\n  if (nextUpdateTime < 0) {\n    nextUpdateTime = 0;\n  }\n\n  // Lastly, increase by our lib worker speed\n  if (libWorker.speed && libWorker.speed > 0) {\n    nextUpdateTime = nextUpdateTime / libWorker.speed;\n  }\n\n  libWorker.updateId = setTimeout(() => {\n    update(libWorker);\n  }, Math.floor(nextUpdateTime));\n}\n\n// Function to run an update on the emulator itself\nexport function update(libWorker, passedIntervalRate) {\n  // Don't run if paused\n  if (libWorker.paused) {\n    return true;\n  }\n\n  // Set the intervalRate if it was passed\n  if (passedIntervalRate !== undefined) {\n    intervalRate = passedIntervalRate;\n  }\n\n  // Set a timestamp for this moment\n  // And make sure we are on track for FPS\n  currentFps = libWorker.getFPS();\n  gameboyFrameRateWithSpeed = libWorker.options.gameboyFrameRate + 1;\n\n  if (libWorker.speed && libWorker.speed > 0) {\n    gameboyFrameRateWithSpeed = gameboyFrameRateWithSpeed * libWorker.speed;\n  }\n\n  if (currentFps > gameboyFrameRateWithSpeed) {\n    // Pop a timestamp off of the front\n    // This is to avoid infinite loop here on loadstate\n    libWorker.fpsTimeStamps.shift();\n    scheduleNextUpdate(libWorker);\n    return true;\n  } else {\n    currentHighResTime = addTimeStamp(libWorker);\n  }\n\n  // Check if we are outputting audio\n  const shouldCheckAudio = !libWorker.options.headless && !libWorker.pauseFpsThrottle && libWorker.options.isAudioEnabled;\n\n  // Execute\n  // Wrapped in promise to better handle audio slowdowns and things of that sort\n  const executePromise = new Promise(resolve => {\n    // Update (Execute a frame)\n    let response;\n    if (shouldCheckAudio) {\n      executeAndCheckAudio(libWorker, resolve);\n    } else {\n      response = libWorker.wasmInstance.exports.executeFrame();\n      resolve(response);\n    }\n  });\n\n  executePromise.then(response => {\n    // Handle our update() response\n    if (response >= 0) {\n      // Pass messages to everyone\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.UPDATED,\n          fps: currentFps\n        })\n      );\n\n      // Check if we have frameskip\n      let shouldSkipRenderingFrame = false;\n      if (libWorker.options.frameSkip && libWorker.options.frameSkip > 0) {\n        libWorker.frameSkipCounter++;\n\n        if (libWorker.frameSkipCounter <= libWorker.options.frameSkip) {\n          shouldSkipRenderingFrame = true;\n        } else {\n          libWorker.frameSkipCounter = 0;\n        }\n      }\n\n      // Transfer Graphics\n      if (!shouldSkipRenderingFrame) {\n        transferGraphics(libWorker);\n      }\n\n      // Transfer Memory for things like save states\n      const memoryObject = {\n        type: WORKER_MESSAGE_TYPE.UPDATED\n      };\n      memoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = getCartridgeRam(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = getGameBoyMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.PALETTE_MEMORY] = getPaletteMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.INTERNAL_STATE] = getInternalState(libWorker).buffer;\n\n      // Check for any undefined values\n      Object.keys(memoryObject).forEach(key => {\n        if (memoryObject[key] === undefined) {\n          memoryObject[key] = new Uint8Array().buffer;\n        }\n      });\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(memoryObject), [\n        memoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n        memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n        memoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n        memoryObject[MEMORY_TYPE.INTERNAL_STATE]\n      ]);\n\n      // Check if we hit a breakpoint\n      if (response === 2) {\n        postMessage(\n          getSmartWorkerMessage({\n            type: WORKER_MESSAGE_TYPE.BREAKPOINT\n          })\n        );\n      } else {\n        scheduleNextUpdate(libWorker);\n      }\n    } else {\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.CRASHED\n        })\n      );\n      libWorker.paused = true;\n    }\n  });\n}\n\n// If audio is enabled, sync by audio\n// Audio will pass us its forward latency, and if it is too far ahead,\n// Then we can wait a little bit to let audio catch up\n// 0.25 (quarter of a second), just felt right from testing :)\nfunction executeAndCheckAudio(libWorker, resolve) {\n  // Get our response\n  let response = -1;\n  response = libWorker.wasmInstance.exports.executeFrameAndCheckAudio(AUDIO_BUFFER_SIZE);\n\n  // If our response is not 1, simply resolve\n  if (response !== 1) {\n    resolve(response);\n  }\n\n  // Do some audio magic\n  if (response === 1) {\n    // Get our audioQueueIndex\n    const audioQueueIndex = libWorker.wasmInstance.exports.getNumberOfSamplesInAudioBuffer();\n\n    // Check if we are sending too much audio\n    const isTooMuchLatency = libWorker.currentAudioLatencyInSeconds > MAX_AUDIO_LATENCY;\n    const isRunningFullSpeed = currentFps >= gameboyFrameRateWithSpeed;\n\n    if (isTooMuchLatency && isRunningFullSpeed) {\n      sendAudio(libWorker, audioQueueIndex);\n      // Wait, Set a timeout for when we would like to\n      // Continue executing. * 1000 for seconds -> milli\n      // Wait for half the difference, since it may take time to execute, and things\n      const latencyDifferenceInSeconds = libWorker.currentAudioLatencyInSeconds - MAX_AUDIO_LATENCY;\n      const latencyDifferenceInMilli = Math.floor(latencyDifferenceInSeconds * 1000);\n      setTimeout(() => {\n        waitForTimeStampsForFrameRate(libWorker);\n        executeAndCheckAudio(libWorker, resolve);\n      }, Math.floor(latencyDifferenceInMilli / 10));\n    } else {\n      sendAudio(libWorker, audioQueueIndex);\n      executeAndCheckAudio(libWorker, resolve);\n    }\n  }\n}\n\nfunction sendAudio(libWorker, audioQueueIndex) {\n  // Send out our audio\n  // audioQueueIndex * 2, because audio Queue index represents 1 sample,\n  // for left AND right channel. Therefore the end index is, twice\n  // of the audioQueueIndex\n\n  // Build our message bits\n  const audioBuffer = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION,\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION + audioQueueIndex * 2\n  ).buffer;\n  const message = {\n    type: WORKER_MESSAGE_TYPE.UPDATED,\n    audioBuffer,\n    numberOfSamples: audioQueueIndex,\n    fps: currentFps,\n    allowFastSpeedStretching: libWorker.options.gameboyFrameRate > 60\n  };\n  const messageTransferrables = [audioBuffer];\n\n  // If audio debugging is enabled, we gotta send a lot more\n  if (libWorker.options && libWorker.options.enableAudioDebugging) {\n    // Channel 1\n    const channel1Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_1_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_1_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel1Buffer = channel1Buffer;\n    messageTransferrables.push(channel1Buffer);\n\n    // Channel 2\n    const channel2Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_2_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_2_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel2Buffer = channel2Buffer;\n    messageTransferrables.push(channel2Buffer);\n\n    // Channel 3\n    const channel3Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_3_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_3_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel3Buffer = channel3Buffer;\n    messageTransferrables.push(channel3Buffer);\n\n    // Channel 4\n    const channel4Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_4_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_4_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel4Buffer = channel4Buffer;\n    messageTransferrables.push(channel4Buffer);\n  }\n\n  libWorker.audioWorkerPort.postMessage(getSmartWorkerMessage(message), messageTransferrables);\n  libWorker.wasmInstance.exports.clearAudioBuffer();\n}\n","// Web worker for wasmboy lib\n// Will be used for running wasm, and controlling child workers.\n\n// Using transferables: https://stackoverflow.com/questions/16071211/using-transferable-objects-from-a-web-worker\n\nimport { postMessage, onMessage } from '../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from '../../worker/constants';\nimport { getEventData, isInBrowser } from '../../worker/util';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\n\n// Post message handlers\nimport { graphicsWorkerOnMessage } from './graphics/onmessage';\nimport { audioWorkerOnMessage } from './audio/onmessage';\nimport { controllerWorkerOnMessage } from './controller/onmessage';\nimport { memoryWorkerOnMessage } from './memory/onmessage';\n\n// Only One response will be used on build time\n// Using Babel plugin to filter imports\nimport getWasmBoyWasmCore from '../../../dist/core/getWasmBoyWasmCore.esm';\nimport getWasmBoyTsCore from '../../../dist/core/getWasmBoyTsCore.esm';\n\n// Update to run the core emulator\nimport { update } from './update';\n\n// Timestamps\nimport { waitForTimeStampsForFrameRate } from './timestamp';\n\n// Transfer\nimport { transferGraphics } from './graphics/transfer';\n\n// Our stateful object\n// Representing our lib worker as a singleton\n// Not using normal classes because:\n// Class functions weren't working for some odd reason, and 'this' was getting wonky\nlet libWorker;\nlibWorker = {\n  // Wasmboy Module Ports\n  graphicsWorkerPort: undefined,\n  memoryWorkerPort: undefined,\n  controllerWorkerPort: undefined,\n  audioWorkerPort: undefined,\n\n  // Wasm Module Properties\n  wasmInstance: undefined,\n  wasmByteMemory: undefined,\n\n  // Lib options\n  options: undefined,\n\n  // Some Constants from the wasm module\n  WASMBOY_BOOT_ROM_LOCATION: 0,\n  WASMBOY_GAME_BYTES_LOCATION: 0,\n  WASMBOY_GAME_RAM_BANKS_LOCATION: 0,\n  WASMBOY_INTERNAL_STATE_SIZE: 0,\n  WASMBOY_INTERNAL_STATE_LOCATION: 0,\n  WASMBOY_INTERNAL_MEMORY_SIZE: 0,\n  WASMBOY_INTERNAL_MEMORY_LOCATION: 0,\n  WASMBOY_PALETTE_MEMORY_SIZE: 0,\n  WASMBOY_PALETTE_MEMORY_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_SIZE: 0,\n  WASMBOY_SOUND_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_1_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_2_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_3_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_4_OUTPUT_LOCATION: 0,\n\n  // Playing state\n  paused: true,\n\n  // Our update setTimeout ref\n  updateId: undefined,\n\n  // Our fps timestamps\n  timeStampsUntilReady: 0,\n  fpsTimeStamps: [],\n\n  // Our current speed\n  speed: 0,\n\n  // Frame Skipping\n  frameSkipCounter: 0,\n\n  // Audio latency\n  currentAudioLatencyInSeconds: 0,\n\n  // Message Handler from the main thread\n  messageHandler: event => {\n    // Handle our messages from the main thread\n    const eventData = getEventData(event);\n\n    switch (eventData.message.type) {\n      case WORKER_MESSAGE_TYPE.CONNECT: {\n        // Assign our worker ports on connect\n        if (eventData.message.workerId === WORKER_ID.GRAPHICS) {\n          libWorker.graphicsWorkerPort = eventData.message.ports[0];\n          onMessage(graphicsWorkerOnMessage.bind(undefined, libWorker), libWorker.graphicsWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.MEMORY) {\n          libWorker.memoryWorkerPort = eventData.message.ports[0];\n          onMessage(memoryWorkerOnMessage.bind(undefined, libWorker), libWorker.memoryWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.CONTROLLER) {\n          libWorker.controllerWorkerPort = eventData.message.ports[0];\n          onMessage(controllerWorkerOnMessage.bind(undefined, libWorker), libWorker.controllerWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.AUDIO) {\n          libWorker.audioWorkerPort = eventData.message.ports[0];\n          onMessage(audioWorkerOnMessage.bind(undefined, libWorker), libWorker.audioWorkerPort);\n        }\n\n        // Simply post back that we are ready\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.INSTANTIATE_WASM: {\n        const instantiateTask = async () => {\n          let response;\n          // Only One response will be used on build time\n          // Using Babel plugin to filter imports\n          response = await getWasmBoyWasmCore(isInBrowser);\n          response = await getWasmBoyTsCore();\n\n          libWorker.wasmInstance = response.instance;\n          libWorker.wasmByteMemory = response.byteMemory;\n          postMessage(\n            getSmartWorkerMessage(\n              {\n                type: response.type\n              },\n              eventData.messageId\n            )\n          );\n          return;\n        };\n        instantiateTask();\n        return;\n      }\n      case WORKER_MESSAGE_TYPE.CONFIG: {\n        // Config will come in as an array, pass in values using apply\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n        const config = eventData.message.config;\n        libWorker.wasmInstance.exports.config.apply(libWorker, config);\n        libWorker.options = eventData.message.options;\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE: {\n        // Reset the audio queue index to stop weird pauses when trying to load a game\n        libWorker.wasmInstance.exports.clearAudioBuffer();\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PLAY: {\n        if (!libWorker.paused || !libWorker.wasmInstance || !libWorker.wasmByteMemory) {\n          postMessage(getSmartWorkerMessage({ error: true }, eventData.messageId));\n          return;\n        }\n\n        // Re-initialize some of our values\n        libWorker.paused = false;\n        libWorker.fpsTimeStamps = [];\n        waitForTimeStampsForFrameRate(libWorker);\n        libWorker.frameSkipCounter = 0;\n        libWorker.currentAudioLatencyInSeconds = 0;\n\n        // Apply any GBC colorization\n        if (!libWorker.options.isGbcColorizationEnabled) {\n          libWorker.wasmInstance.exports.setManualColorizationPalette(0);\n        } else if (libWorker.options.gbcColorizationPalette) {\n          const colorizationPalettes = [\n            'wasmboygb',\n            'brown',\n            'red',\n            'darkbrown',\n            'green',\n            'darkgreen',\n            'inverted',\n            'pastelmix',\n            'orange',\n            'yellow',\n            'blue',\n            'darkblue',\n            'grayscale'\n          ];\n\n          libWorker.wasmInstance.exports.setManualColorizationPalette(\n            colorizationPalettes.indexOf(libWorker.options.gbcColorizationPalette.toLowerCase())\n          );\n        }\n\n        // 1000 / 60 = 60fps\n        // Add one to the framerate, as we would rather be slightly faster,\n        // than slightly slower\n        const intervalRate = 1000 / libWorker.options.gameboyFrameRate;\n\n        update(libWorker, intervalRate);\n\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PAUSE: {\n        // Call our update\n        libWorker.paused = true;\n        if (libWorker.updateId) {\n          clearTimeout(libWorker.updateId);\n          libWorker.updateId = undefined;\n        }\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      // Debugging Messages\n      case WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT: {\n        let response;\n        if (eventData.message.parameters) {\n          response = libWorker.wasmInstance.exports[eventData.message.export].apply(undefined, eventData.message.parameters);\n        } else {\n          response = libWorker.wasmInstance.exports[eventData.message.export]();\n        }\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION: {\n        let start = 0;\n        let end = libWorker.wasmByteMemory.length;\n        if (eventData.message.start) {\n          start = eventData.message.start;\n        }\n        if (eventData.message.end) {\n          end = eventData.message.end;\n        }\n\n        const response = libWorker.wasmByteMemory.slice(start, end).buffer;\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          ),\n          [response]\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT: {\n        const response = libWorker.wasmInstance.exports[eventData.message.constant].valueOf();\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.FORCE_OUTPUT_FRAME: {\n        transferGraphics(libWorker);\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.SET_SPEED: {\n        libWorker.speed = eventData.message.speed;\n\n        // Reset all of our fps tracking\n        libWorker.fpsTimeStamps = [];\n        libWorker.timeStampsUntilReady = 60;\n        waitForTimeStampsForFrameRate(libWorker);\n        libWorker.frameSkipCounter = 0;\n        libWorker.currentAudioLatencyInSeconds = 0;\n\n        libWorker.wasmInstance.exports.clearAudioBuffer();\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.IS_GBC: {\n        const response = libWorker.wasmInstance.exports.isGBC() > 0;\n\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.IS_GBC,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      default: {\n        //handle other messages from main\n        console.log('Unknown WasmBoy Worker message:', eventData);\n      }\n    }\n  },\n\n  // Function to return the current FPS\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  getFPS: () => {\n    if (libWorker.timeStampsUntilReady > 0) {\n      if (libWorker.speed && libWorker.speed > 0) {\n        return libWorker.options.gameboyFrameRate * libWorker.speed;\n      }\n      return libWorker.options.gameboyFrameRate;\n    } else if (libWorker.fpsTimeStamps) {\n      return libWorker.fpsTimeStamps.length;\n    }\n\n    return 0;\n  }\n};\n\n// Assign the worker a message handler\nonMessage(libWorker.messageHandler);\n"],"names":["getEventData","event","data","isInBrowser","self","parentPort","require","postMessage","message","transferArray","onMessage","callback","port","console","error","onmessage","on","WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","BREAKPOINT","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","FORCE_OUTPUT_FRAME","SET_SPEED","IS_GBC","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","BOOT_ROM","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","idCounter","generateId","randomId","Math","random","toString","replace","substr","id","getSmartWorkerMessage","messageId","workerId","graphicsWorkerOnMessage","libWorker","eventData","type","WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION","wasmInstance","exports","FRAME_LOCATION","valueOf","WASMBOY_CURRENT_FRAME_SIZE","FRAME_SIZE","graphicsWorkerPort","audioWorkerOnMessage","WASMBOY_SOUND_OUTPUT_LOCATION","AUDIO_BUFFER_LOCATION","WASMBOY_CHANNEL_1_OUTPUT_LOCATION","CHANNEL_1_BUFFER_LOCATION","WASMBOY_CHANNEL_2_OUTPUT_LOCATION","CHANNEL_2_BUFFER_LOCATION","WASMBOY_CHANNEL_3_OUTPUT_LOCATION","CHANNEL_3_BUFFER_LOCATION","WASMBOY_CHANNEL_4_OUTPUT_LOCATION","CHANNEL_4_BUFFER_LOCATION","audioWorkerPort","currentAudioLatencyInSeconds","latency","controllerWorkerOnMessage","setJoypadStateParamsAsArray","setJoypadState","apply","getBootRom","wasmByteMemory","Uint8Array","bootRomLocation","BOOT_ROM_LOCATION","bootRomSize","BOOT_ROM_SIZE","bootRom","slice","getCartridgeRom","cartridgeType","WASMBOY_GAME_BYTES_LOCATION","romSize","undefined","cartridgeRom","getCartridgeRam","ramSize","cartridgeRam","WASMBOY_GAME_RAM_BANKS_LOCATION","getCartridgeHeader","headerLength","headerLocation","headerArray","getGameBoyMemory","WASMBOY_INTERNAL_MEMORY_LOCATION","WASMBOY_INTERNAL_MEMORY_SIZE","getPaletteMemory","WASMBOY_PALETTE_MEMORY_LOCATION","WASMBOY_PALETTE_MEMORY_SIZE","getInternalState","saveState","WASMBOY_INTERNAL_STATE_LOCATION","WASMBOY_INTERNAL_STATE_SIZE","memoryWorkerOnMessage","i","length","memoryWorkerPort","buffer","WASMBOY_BOOT_ROM_LOCATION","CARTRIDGE_ROM_LOCATION","CARTRIDGE_RAM_LOCATION","WASMBOY_STATE_SIZE","WASMBOY_STATE_LOCATION","GAMEBOY_INTERNAL_MEMORY_SIZE","GAMEBOY_INTERNAL_MEMORY_LOCATION","GBC_PALETTE_SIZE","GBC_PALETTE_LOCATION","memoryKeys","Object","keys","includes","set","loadState","responseMemory","responseTransferrables","memoryTypes","push","cartridgeHeader","gameboyMemory","paletteMemory","internalState","getPerformanceTimestamp","window","performance","now","Date","addTimeStamp","currentHighResTime","fpsTimeStamps","shift","timeStampsUntilReady","waitForTimeStampsForFrameRate","options","gameboyFrameRate","floor","transferGraphics","graphicsFrameEndIndex","graphicsFrameBuffer","MAX_AUDIO_LATENCY","AUDIO_BUFFER_SIZE","currentFps","gameboyFrameRateWithSpeed","intervalRate","scheduleNextUpdate","highResTime","timeSinceLastTimestamp","nextUpdateTime","speed","updateId","setTimeout","update","passedIntervalRate","paused","getFPS","shouldCheckAudio","headless","pauseFpsThrottle","isAudioEnabled","executePromise","Promise","resolve","response","executeAndCheckAudio","executeFrame","then","fps","shouldSkipRenderingFrame","frameSkip","frameSkipCounter","memoryObject","forEach","key","executeFrameAndCheckAudio","audioQueueIndex","getNumberOfSamplesInAudioBuffer","isTooMuchLatency","isRunningFullSpeed","sendAudio","latencyDifferenceInSeconds","latencyDifferenceInMilli","audioBuffer","numberOfSamples","allowFastSpeedStretching","messageTransferrables","enableAudioDebugging","channel1Buffer","channel2Buffer","channel3Buffer","channel4Buffer","clearAudioBuffer","controllerWorkerPort","messageHandler","ports","bind","instantiateTask","getWasmBoyWasmCore","instance","byteMemory","config","isGbcColorizationEnabled","setManualColorizationPalette","gbcColorizationPalette","colorizationPalettes","indexOf","toLowerCase","clearTimeout","parameters","export","start","end","constant","isGBC","log"],"mappings":"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"}